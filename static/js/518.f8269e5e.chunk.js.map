{"version":3,"file":"static/js/518.f8269e5e.chunk.js","mappings":"oHAGO,SAASA,EAAKC,GACnB,OAAQ,GAAKA,GAAMC,cAAcC,QAAQ,cAAe,GAC1D,CAEO,SAASC,EAAMC,EAAcC,GAClC,GAAID,EACF,MAAM,IAAIE,MAAMD,GAEhBE,QAAQC,IAAIH,EAEhB,CAEO,SAASI,EACdC,EAAyBC,EAAyBC,GAElD,IAAK,IAAMC,KAAOF,EACZG,OAAOC,UAAUC,eAAeC,KAAKN,EAAGE,KAASD,EAAQM,IAAIL,KAC/DH,EAAEG,GAAOF,EAAEE,GAGjB,CAmCA,I,EAAMM,EAAoC,CACxC,mBAAoB,UACpB,kBAAmB,SACnB,kBAAmB,SACnB,oBAAqB,WACrB,iBAAkB,QAClB,gBAAiB,OACjB,kBAAmB,SACnB,kBAAmB,SACnB,iBAAkB,SAGdC,EAAeD,EAAWE,SAC1BC,EAAaH,EAAWH,eAU9B,SAASO,EAAQC,GACf,OAAW,MAAPA,EACKC,OAAOD,GAEM,kBAARA,GAAmC,oBAARA,EACrCL,EAAWC,EAAaH,KAAKO,KAAS,gBAC/BA,CACb,CAEA,SAASE,EAAcF,GACrB,GAAqB,WAAjBD,EAAQC,IAAqBA,EAAIG,UAdvC,SAAkBH,GAChB,OAAc,MAAPA,GAAeA,IAAQA,EAAII,MACpC,CAYmDC,CAASL,GACxD,OAAO,EAGT,IACE,GAAIA,EAAIM,cAAgBR,EAAWL,KAAKO,EAAIM,YAAYf,UAAW,iBACjE,OAAO,CAEX,CAAE,MAAOgB,GACP,OAAO,CACT,CAEA,OAAO,CACT,CAEO,SAASC,IACd,IAAIC,EAASC,EAAMC,EAAKC,EAAMC,EAAaC,EACvCC,GAASC,UAAAC,QAAA,OAAAC,EAAAF,UAAA,KAAW,CAAC,EACrBG,EAAI,EACJC,GAAO,EACLH,EAASD,UAAKC,OAkBpB,IAhBsB,mBAAXF,IACTK,EAAOL,EACPA,GAASC,UAAAC,QAAA,OAAAC,EAAAF,UAAA,KAAW,CAAC,EACrBG,EAAI,GAGgB,kBAAXJ,GA7Ca,aAAjBhB,EA6CuCgB,KAC5CA,EAAS,CAAC,GAGRE,IAAWE,IAEbJ,EAASM,OACPF,GAGGA,EAAIF,EAAQE,IACjB,GAA2B,OAAtBV,EAAeU,EAAC,GAAAH,UAAAC,QAADE,OAACD,EAAAF,UAADG,IAElB,IAAKT,KAAQD,EACXE,EAAMI,EAAOL,GAGTK,KAFJH,EAAOH,EAAQC,MAMXU,GAAQR,IAASV,EAAcU,KAAUC,EAAcS,MAAMC,QAAQX,MACnEC,GACFA,GAAc,EACdC,EAAQH,GAAOW,MAAMC,QAAQZ,GAAOA,EAAM,IAE1CG,EAAQH,GAAOT,EAAcS,GAAOA,EAAM,CAAC,EAG7CI,EAAOL,GAAQF,EAAOY,EAAMN,EAAOF,SACjBM,IAATN,IACTG,EAAOL,GAAQE,IAMvB,OAAOG,CACT,CC1JA,IAIMS,EAAM,CACV,WACA,aACA,eACA,QACA,cACA,aACA,aACA,eACA,gBACA,aACA,UACA,OACA,UACA,aACA,eACA,aACA,aACA,WACA,OACA,aACA,SACA,eACA,aACA,WACA,cACA,WACA,aACA,WACA,WACA,gBACA,SACA,cACA,cACA,cACA,eACA,QACA,eACA,YACA,WACA,YACA,SACA,OACA,eACA,WACA,aACA,YACA,YACA,aACA,WACA,cACA,YACA,eACA,aACA,YACA,cACA,cACA,aACA,cACA,SACA,SACA,cACA,SACA,eACA,QACA,aACA,cACA,YACA,UACA,QACA,SACA,eACA,cACA,eACA,aACA,cACA,gBAGIC,EAAMD,EAAIE,OAAO,CACrB,eACA,YACA,cACA,eACA,aACA,WACA,WACA,SACA,cACA,WACA,QACA,WACA,YACA,eACA,YACA,WACA,YACA,QACA,aACA,cACA,eACA,cACA,cACA,YACA,WACA,YACA,aACA,cACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,aACA,SACA,aACA,eACA,cACA,aACA,QACA,YACA,cACA,aACA,eACA,aACA,cACA,UACA,aAGIC,EAAKF,EAAIC,OAAO,CACpB,WACA,YACA,WACA,cACA,YACA,UACA,cACA,eACA,UACA,SACA,cACA,WACA,WACA,cACA,aACA,cACA,YACA,eACA,QACA,QACA,aACA,QACA,WACA,aACA,eACA,YACA,UACA,cACA,aACA,YACA,aACA,cACA,YACA,WACA,cACA,aACA,UACA,eACA,aACA,cACA,aAGIE,EAAKD,EAAGD,OAAO,CACnB,WACA,aACA,aACA,cACA,cACA,cACA,YACA,eACA,gBACA,aACA,cACA,WACA,aACA,QACA,aACA,WACA,gBACA,gBACA,WACA,iBACA,UACA,cACA,gBACA,aACA,aACA,YACA,gBAGIG,EAAKD,EAAGF,OAAO,CACnB,UACA,cACA,cACA,UACA,WACA,YACA,SACA,WACA,WACA,iBACA,iBACA,SACA,kBACA,YACA,eACA,cACA,eACA,aACA,YACA,cACA,aACA,kBACA,mBACA,cACA,gBACA,kBACA,aACA,WACA,YACA,gBACA,eACA,aACA,UACA,WACA,cACA,aACA,eACA,gBACA,SACA,eACA,mBACA,aAGII,EAAKD,EAAGH,OAAO,CACnB,qBACA,qBACA,aACA,iBACA,cACA,mBACA,mBACA,eACA,kBACA,aACA,eACA,gBACA,WACA,aACA,iBACA,SACA,UACA,eACA,mBACA,cACA,cACA,aACA,iBACA,YACA,aACA,QACA,YACA,iBACA,WACA,eACA,gBACA,aACA,cACA,qBAGIK,EAAKD,EAAGJ,OAAO,CACnB,cACA,aACA,gBACA,YACA,SACA,WACA,cACA,mBACA,eACA,YACA,gBACA,kBACA,iBACA,cACA,mBACA,iBACA,iBACA,cACA,gBACA,aACA,YACA,mBACA,gBACA,kBACA,mBACA,eACA,iBACA,kBACA,aACA,aACA,iBAGWM,EAAY,CAAC,GAtUJ,GAEA,GAoUkBR,EAAKC,EAAKE,EAAIC,EAAIC,EAAIC,EAAIC,GAAIE,EAalEC,OAAOC,SAqBX,IAhCO,I,EAAMC,EAAS,WAGpB,SAAAA,EAAYC,IAAsBC,EAAAA,EAAAA,GAAA,KAAAF,GAAA,KAFjBC,SAAG,EAGlBhB,KAAKgB,IAAMA,CACb,CAUC,OAVAE,EAAAA,EAAAA,GAAAH,EAAA,EAAA/C,IAAA,MAAAmD,MAED,SAAIC,GACF,OAAOC,EAAgBrB,KAAKgB,KAAKI,EACnC,GAAC,CAAApD,IAAA4C,EAAAO,OAAAG,EAAAA,EAAAA,KAAAC,MAED,SAAAJ,IAAA,IAAAK,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmBT,EAAgBrB,KAAKgB,MAAI,WAAAU,EAAAK,GAAAL,EAAAG,MAAAG,KAAC,CAADN,EAAAE,KAAA,QACxC,OADSR,EAAEM,EAAAK,GAAAZ,MAAAO,EAAAE,KAAA,EACL5B,KAAKiC,IAAIb,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAQ,OAAA,GAAAf,EAAA,YAE9BJ,CAAA,CAfmB,GAkBhBoB,GAAOjB,EAAAA,EAAAA,IAKX,SAAAiB,EAAY9C,IAAc4B,EAAAA,EAAAA,GAAA,KAAAkB,GAAA,KAJjBC,UAAI,OACJhB,QAAE,OACF/B,UAAI,EAGXW,KAAKoC,KAAO,UACZpC,KAAKoB,GAAKlE,EAAKmC,GACfW,KAAKX,KAAOA,CACd,IAGIgC,EAAkD,GAExDgB,EAAA,EAAAC,EAAwB3B,EAAS0B,EAAAC,EAAA1C,OAAAyC,IAAE,CAA9B,IAE4BE,EAFtBC,EAASF,EAAAD,GACZI,EAA+B,CAAC,EAAEC,GAAAC,EAAAA,EAAAA,GAClBH,GAAS,IAA/B,IAAAE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAAiC,CAAC,IAC1BnE,EAAI,IAAIsE,EADEI,EAAApB,OAEhBsB,EAAI5E,EAAEuD,IAAMvD,CACd,CAAC,OAAAN,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CACDzB,EAAgB0B,KAAKN,EACvB,CC/WA,IAEMO,EAAM,CAKV,aACA,gBACA,gBAEA,WACA,cAEA,YACA,aACA,aACA,cAEA,aACA,aACA,aAEA,cACA,aACA,YACA,aACA,aACA,YAEA,YACA,SAEA,cACA,aAIA,eACA,YACA,aAEA,eACA,iBAEA,cAEA,WAIA,aACA,cACA,aACA,aACA,gBACA,YACA,YACA,aAEA,YAEA,gBACA,gBACA,aAEA,eAoBI7C,EAAM6C,EAAI3C,OAAO,CACrB,cACA,eACA,eACA,cACA,aACA,cACA,eACA,cAEA,cAGA,YAEA,cACA,eACA,aACA,eACA,cAEA,eACA,eACA,eACA,eACA,cACA,cACA,eACA,YACA,cAEA,aACA,eACA,cACA,cACA,YACA,WACA,cAEA,aACA,eACA,cACA,eACA,eAEA,cACA,eACA,eAEA,cACA,aACA,cAEA,cACA,cACA,aACA,aACA,eAEA,eACA,cACA,eAEA,eACA,eACA,aACA,eAGID,EAAMD,EAAIE,OAAO,CACrB,cAEA,eACA,WACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,aACA,eACA,eACA,YACA,aACA,eACA,cACA,cAEA,YACA,aACA,cAEA,cACA,aACA,YACA,cACA,aACA,eACA,YACA,eACA,cACA,YACA,YACA,eACA,WACA,eACA,YACA,aACA,eACA,cACA,cACA,eACA,WACA,aACA,eAEA,eACA,YACA,cACA,aACA,cACA,aACA,cACA,aACA,YACA,eACA,eACA,eACA,aACA,aACA,eACA,aACA,aACA,eAEA,aAEA,YACA,aAGA,cACA,eACA,eACA,cACA,aACA,cACA,cAEA,YACA,cACA,eACA,eACA,cACA,cACA,cACA,YACA,cACA,cACA,eACA,YACA,eACA,cACA,YACA,cAGIC,EAAKF,EAAIC,OAAO,CACpB,cACA,cACA,eAGA,eAMA,aACA,eAEA,WAGA,cAMA,aAKA,WACA,cAEA,iBAMW4C,EAA2C,CACtDC,SAAU,QACVC,UAAW,YACXC,cAAe,aACfC,UAAW,SACXC,UAAW,WACXC,YAAa,UACbC,YAAa,WACbC,SAAU,SACVC,UAAW,UACXC,YAAa,WACbC,cAAe,YACfC,YAAa,WACbC,YAAa,WACb,iBAAkB,YAClB,iBAAkB,YAClBC,aAAc,aACdC,SAAU,UACVC,UAAW,UACXC,YAAa,WACbC,aAAc,YACdC,UAAW,SACXC,UAAW,SACXC,YAAa,WACbC,YAAa,YACbC,cAAe,WACfC,cAAe,aACfC,UAAW,SACXC,UAAW,SACXC,UAAW,UACXC,YAAa,UACbC,UAAW,YACXC,SAAU,SACVC,YAAa,WACbC,aAAc,YACd,eAAgB,SAChB,eAAgB,SAChBC,WAAY,UACZC,U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IAAK,eACL,IAAK,eACH,MAAO,QACT,IAAK,aACL,IAAK,cACL,IAAK,gBACH,MAAO,UACT,IAAK,cACH,MAAO,QACT,IAAK,YACL,IAAK,aACH,MAAO,SACT,IAAK,eACL,IAAK,cACL,IAAK,eACL,IAAK,eACH,MAAO,QACT,IAAK,eACL,IAAK,YACH,MAAO,QACT,IAAK,cACL,IAAK,eACL,IAAK,aACH,MAAO,OACT,IAAK,cACL,IAAK,cACH,MAAO,SACT,IAAK,YACL,IAAK,SACH,MAAO,WACT,IAAK,aACL,IAAK,WACL,IAAK,eACH,MAAO,SACT,QACE,OAEJ,CAEO,SAASC,GAAmBr/B,GACjC,OAAQA,GACR,IAAK,eACH,MAAO,SACT,IAAK,aACH,MAAO,OACT,IAAK,eACH,MAAO,QACT,IAAK,cACH,MAAO,WACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,MACT,IAAK,eACH,MAAO,WACT,IAAK,cACH,MAAO,SACT,IAAK,cACH,MAAO,SACT,IAAK,aACH,MAAO,SACT,IAAK,eACH,MAAO,UACT,IAAK,cACH,MAAO,MACT,IAAK,eACH,MAAO,OACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,SACT,IAAK,eACH,MAAO,OACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,QACT,QACE,OAEJ,CAEA,IAAMs/B,GAAY,IAAIltB,IAAI,CACxB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGImtB,GAAY,IAAIntB,IAAI,CACxB,aACA,eACA,cACA,cACA,eACA,YACA,cACA,eACA,YACA,kBACA,kBACA,mBACA,kBACA,eACA,aACA,eACA,cACA,YACA,eACA,OACA,OACA,SAGIotB,GAAW,IAAIptB,IAAI,CACvB,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGIqtB,GAAW,IAAIrtB,IAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAE5DstB,GAAW,IAAIttB,IAAI,CACvB,eACA,iBACA,cACA,cACA,mBACA,kBACA,aACA,aACA,aACA,cACA,aACA,aACA,YACA,SACA,gBACA,aACA,cACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGIutB,GAAW,IAAIvtB,IAAI,CACvB,cACA,cACA,eACA,aACA,aACA,eACA,aACA,iBAGIwtB,GAAW,IAAIxtB,IAAI,CACvB,cACA,YACA,YACA,OACA,eACA,cACA,eACA,QACA,mBACA,qBAEIytB,GAAW,IAAIztB,IAAI,CACvB,cACA,aACA,eACA,gBACA,eACA,WACA,iBACA,YACA,cACA,WACA,aACA,aACA,SACA,aACA,eACA,eACA,iBACA,aACA,aACA,WACA,YACA,cACA,aACA,eACA,YACA,gBACA,eACA,gBACA,aACA,aACA,aACA,YACA,gBACA,WACA,cACA,cACA,eACA,cACA,YACA,kBACA,gBACA,eACA,WACA,eAEI0tB,GAAW,IAAI1tB,IAAI,CACvB,cACA,cACA,cACA,eACA,eACA,eACA,eACA,gBACA,cACA,eACA,aACA,aACA,eACA,cACA,eACA,cACA,YACA,aACA,cACA,eACA,aACA,gBACA,aACA,cACA,aACA,eACA,cACA,eACA,eACA,WACA,eACA,cACA,eACA,eACA,cACA,aACA,aACA,gBACA,cACA,YACA,cACA,aACA,mBACA,eACA,aACA,YACA,eACA,YACA,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAIK,SAAS2tB,GAAcX,GAC5B,OAAKA,EACD,CAAC,YAAa,OAAQ,QAAQtI,SAASsI,GAAc,IACrDE,GAAU5nC,IAAI0nC,GAAc,GAC5B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQtI,SAASsI,GAAc,IAChEG,GAAU7nC,IAAI0nC,GAAc,IAC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","sources":["calc/util.ts","calc/data/abilities.ts","calc/data/items.ts","calc/data/moves.ts","calc/data/species.ts","calc/data/types.ts","calc/data/natures.ts","calc/data/index.ts","calc/field.ts","calc/items.ts","calc/stats.ts","calc/mechanics/util.ts","calc/desc.ts","calc/result.ts","calc/mechanics/gen12.ts","calc/mechanics/gen4.ts","calc/mechanics/gen56.ts","calc/mechanics/gen789.ts","calc/calc.ts","calc/mechanics/gen3.ts","calc/pokemon.ts","calc/move.ts","calc/state.ts","calc/index.ts","raidcalc/util.ts","raidcalc/RaidMove.ts","raidcalc/RaidTurn.ts","raidcalc/RaidBattle.ts","raidcalc/Raider.ts","raidcalc/RaidState.ts","workers/raidcalc.worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/* eslint-disable eqeqeq, @typescript-eslint/unbound-method, @typescript-eslint/ban-types */\nimport {ID} from './data/interface';\n\nexport function toID(text: any): ID {\n  return ('' + text).toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\n}\n\nexport function error(err: boolean, msg: string) {\n  if (err) {\n    throw new Error(msg);\n  } else {\n    console.log(msg);\n  }\n}\n\nexport function assignWithout(\n  a: {[key: string]: any}, b: {[key: string]: any}, exclude: Set<string>\n) {\n  for (const key in b) {\n    if (Object.prototype.hasOwnProperty.call(b, key) && !exclude.has(key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n// https://github.com/krzkaczor/ts-essentials v6.0.5\n// MIT License Copyright 2018-2019 Chris Kaczor\nexport type Primitive = string | number | boolean | bigint | symbol | undefined | null;\nexport type Builtin = Primitive | Function | Date | Error | RegExp;\n\nexport type IsTuple<T> =\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  T extends [infer A] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B, infer C] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B, infer C, infer D] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B, infer C, infer D, infer E] ? T\n  : never;\n\nexport type DeepPartial<T> =\n  T extends Builtin ? T\n  : T extends Map<infer K, infer V> ? Map<DeepPartial<K>, DeepPartial<V>>\n  : T extends ReadonlyMap<infer K, infer V> ? ReadonlyMap<DeepPartial<K>, DeepPartial<V>>\n  : T extends Set<infer U> ? Set<DeepPartial<U>>\n  : T extends ReadonlySet<infer U> ? ReadonlySet<DeepPartial<U>>\n  : T extends Array<infer U> ? T extends IsTuple<T>\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Array<DeepPartial<U>>\n  : T extends Promise<infer U> ? Promise<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\n// jQuery JavaScript Library v2.0.3\n// Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\nconst class2Type: {[c: string]: string} = {\n  '[object Boolean]': 'boolean',\n  '[object Number]': 'number',\n  '[object String]': 'string',\n  '[object Function]': 'function',\n  '[object Array]': 'array',\n  '[object Date]': 'date',\n  '[object RegExp]': 'regexp',\n  '[object Object]': 'object',\n  '[object Error]': 'error',\n};\n\nconst coreToString = class2Type.toString;\nconst coreHasOwn = class2Type.hasOwnProperty;\n\nfunction isFunction(obj: any) {\n  return getType(obj) === 'function';\n}\n\nfunction isWindow(obj: any) {\n  return obj != null && obj === obj.window;\n}\n\nfunction getType(obj: any) {\n  if (obj == null) {\n    return String(obj);\n  }\n  return typeof obj === 'object' || typeof obj === 'function'\n    ? class2Type[coreToString.call(obj)] || 'object'\n    : typeof obj;\n}\n\nfunction isPlainObject(obj: any) {\n  if (getType(obj) !== 'object' || obj.nodeType || isWindow(obj)) {\n    return false;\n  }\n\n  try {\n    if (obj.constructor && !coreHasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function extend(this: any, ...args: any[]) {\n  let options, name, src, copy, copyIsArray, clone;\n  let target = args[0] || {};\n  let i = 1;\n  let deep = false;\n  const length = args.length;\n\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = args[1] || {};\n    i = 2;\n  }\n\n  if (typeof target !== 'object' && !isFunction(target)) {\n    target = {};\n  }\n\n  if (length === i) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    target = this;\n    --i;\n  }\n\n  for (; i < length; i++) {\n    if ((options = args[i]) != null) {\n      // tslint:disable-next-line: forin\n      for (name in options) {\n        src = target[name];\n        copy = options[name];\n\n        if (target === copy) {\n          continue;\n        }\n\n        if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n          if (copyIsArray) {\n            copyIsArray = false;\n            clone = src && Array.isArray(src) ? src : [];\n          } else {\n            clone = src && isPlainObject(src) ? src : {};\n          }\n\n          target[name] = extend(deep, clone, copy);\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nconst RBY: string[] = [];\n\nconst GSC: string[] = [];\n\nconst ADV = [\n  'Air Lock',\n  'Arena Trap',\n  'Battle Armor',\n  'Blaze',\n  'Chlorophyll',\n  'Clear Body',\n  'Cloud Nine',\n  'Color Change',\n  'Compound Eyes',\n  'Cute Charm',\n  'Drizzle',\n  'Damp',\n  'Drought',\n  'Early Bird',\n  'Effect Spore',\n  'Flame Body',\n  'Flash Fire',\n  'Forecast',\n  'Guts',\n  'Huge Power',\n  'Hustle',\n  'Hyper Cutter',\n  'Illuminate',\n  'Immunity',\n  'Inner Focus',\n  'Insomnia',\n  'Intimidate',\n  'Keen Eye',\n  'Levitate',\n  'Lightning Rod',\n  'Limber',\n  'Liquid Ooze',\n  'Magma Armor',\n  'Magnet Pull',\n  'Marvel Scale',\n  'Minus',\n  'Natural Cure',\n  'Oblivious',\n  'Overgrow',\n  'Own Tempo',\n  'Pickup',\n  'Plus',\n  'Poison Point',\n  'Pressure',\n  'Pure Power',\n  'Rain Dish',\n  'Rock Head',\n  'Rough Skin',\n  'Run Away',\n  'Sand Stream',\n  'Sand Veil',\n  'Serene Grace',\n  'Shadow Tag',\n  'Shed Skin',\n  'Shell Armor',\n  'Shield Dust',\n  'Soundproof',\n  'Speed Boost',\n  'Static',\n  'Stench',\n  'Sticky Hold',\n  'Sturdy',\n  'Suction Cups',\n  'Swarm',\n  'Swift Swim',\n  'Synchronize',\n  'Thick Fat',\n  'Torrent',\n  'Trace',\n  'Truant',\n  'Vital Spirit',\n  'Volt Absorb',\n  'Water Absorb',\n  'Water Veil',\n  'White Smoke',\n  'Wonder Guard',\n];\n\nconst DPP = ADV.concat([\n  'Adaptability',\n  'Aftermath',\n  'Anger Point',\n  'Anticipation',\n  'Bad Dreams',\n  'Download',\n  'Dry Skin',\n  'Filter',\n  'Flower Gift',\n  'Forewarn',\n  'Frisk',\n  'Gluttony',\n  'Heatproof',\n  'Honey Gather',\n  'Hydration',\n  'Ice Body',\n  'Iron Fist',\n  'Klutz',\n  'Leaf Guard',\n  'Magic Guard',\n  'Mold Breaker',\n  'Motor Drive',\n  'Mountaineer',\n  'Multitype',\n  'No Guard',\n  'Normalize',\n  'Persistent',\n  'Poison Heal',\n  'Quick Feet',\n  'Rebound',\n  'Reckless',\n  'Rivalry',\n  'Scrappy',\n  'Simple',\n  'Skill Link',\n  'Slow Start',\n  'Sniper',\n  'Snow Cloak',\n  'Snow Warning',\n  'Solar Power',\n  'Solid Rock',\n  'Stall',\n  'Steadfast',\n  'Storm Drain',\n  'Super Luck',\n  'Tangled Feet',\n  'Technician',\n  'Tinted Lens',\n  'Unaware',\n  'Unburden',\n]);\n\nconst BW = DPP.concat([\n  'Analytic',\n  'Big Pecks',\n  'Contrary',\n  'Cursed Body',\n  'Defeatist',\n  'Defiant',\n  'Flare Boost',\n  'Friend Guard',\n  'Harvest',\n  'Healer',\n  'Heavy Metal',\n  'Illusion',\n  'Imposter',\n  'Infiltrator',\n  'Iron Barbs',\n  'Light Metal',\n  'Justified',\n  'Magic Bounce',\n  'Moody',\n  'Moxie',\n  'Multiscale',\n  'Mummy',\n  'Overcoat',\n  'Pickpocket',\n  'Poison Touch',\n  'Prankster',\n  'Rattled',\n  'Regenerator',\n  'Sand Force',\n  'Sand Rush',\n  'Sap Sipper',\n  'Sheer Force',\n  'Telepathy',\n  'Teravolt',\n  'Toxic Boost',\n  'Turboblaze',\n  'Unnerve',\n  'Victory Star',\n  'Weak Armor',\n  'Wonder Skin',\n  'Zen Mode',\n]);\n\nconst XY = BW.concat([\n  'Aerilate',\n  'Aura Break',\n  'Aroma Veil',\n  'Bulletproof',\n  'Cheek Pouch',\n  'Competitive',\n  'Dark Aura',\n  'Delta Stream',\n  'Desolate Land',\n  'Fairy Aura',\n  'Flower Veil',\n  'Fur Coat',\n  'Gale Wings',\n  'Gooey',\n  'Grass Pelt',\n  'Magician',\n  'Mega Launcher',\n  'Parental Bond',\n  'Pixilate',\n  'Primordial Sea',\n  'Protean',\n  'Refrigerate',\n  'Stance Change',\n  'Strong Jaw',\n  'Sweet Veil',\n  'Symbiosis',\n  'Tough Claws',\n]);\n\nconst SM = XY.concat([\n  'Battery',\n  'Battle Bond',\n  'Beast Boost',\n  'Berserk',\n  'Comatose',\n  'Corrosion',\n  'Dancer',\n  'Dazzling',\n  'Disguise',\n  'Electric Surge',\n  'Emergency Exit',\n  'Fluffy',\n  'Full Metal Body',\n  'Galvanize',\n  'Grassy Surge',\n  'Innards Out',\n  'Liquid Voice',\n  'Long Reach',\n  'Merciless',\n  'Misty Surge',\n  'Neuroforce',\n  'Power Construct',\n  'Power of Alchemy',\n  'Prism Armor',\n  'Psychic Surge',\n  'Queenly Majesty',\n  'RKS System',\n  'Receiver',\n  'Schooling',\n  'Shadow Shield',\n  'Shields Down',\n  'Slush Rush',\n  'Stamina',\n  'Stakeout',\n  'Steelworker',\n  'Soul-Heart',\n  'Surge Surfer',\n  'Tangling Hair',\n  'Triage',\n  'Water Bubble',\n  'Water Compaction',\n  'Wimp Out',\n]);\n\nconst SS = SM.concat([\n  'As One (Glastrier)',\n  'As One (Spectrier)',\n  'Ball Fetch',\n  'Chilling Neigh',\n  'Cotton Down',\n  'Curious Medicine',\n  'Dauntless Shield',\n  'Dragon\\'s Maw',\n  'Gorilla Tactics',\n  'Grim Neigh',\n  'Gulp Missile',\n  'Hunger Switch',\n  'Ice Face',\n  'Ice Scales',\n  'Intrepid Sword',\n  'Libero',\n  'Mimicry',\n  'Mirror Armor',\n  'Neutralizing Gas',\n  'Pastel Veil',\n  'Perish Body',\n  'Power Spot',\n  'Propeller Tail',\n  'Punk Rock',\n  'Quick Draw',\n  'Ripen',\n  'Sand Spit',\n  'Screen Cleaner',\n  'Stalwart',\n  'Steam Engine',\n  'Steely Spirit',\n  'Transistor',\n  'Unseen Fist',\n  'Wandering Spirit',\n]);\n\nconst SV = SS.concat([\n  'Anger Shell',\n  'Armor Tail',\n  'Beads of Ruin',\n  'Commander',\n  'Costar',\n  'Cud Chew',\n  'Earth Eater',\n  'Electromorphosis',\n  'Good as Gold',\n  'Guard Dog',\n  'Hadron Engine',\n  'Lingering Aroma',\n  'Mycelium Might',\n  'Opportunist',\n  'Orichalcum Pulse',\n  'Protosynthesis',\n  'Purifying Salt',\n  'Quark Drive',\n  'Rocky Payload',\n  'Seed Sower',\n  'Sharpness',\n  'Supreme Overlord',\n  'Sword of Ruin',\n  'Tablets of Ruin',\n  'Thermal Exchange',\n  'Toxic Debris',\n  'Vessel of Ruin',\n  'Well-Baked Body',\n  'Wind Power',\n  'Wind Rider',\n  'Zero to Hero',\n]);\n\nexport const ABILITIES = [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Abilities implements I.Abilities {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return ABILITIES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in ABILITIES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Ability implements I.Ability {\n  readonly kind: 'Ability';\n  readonly id: I.ID;\n  readonly name: I.AbilityName;\n\n  constructor(name: string) {\n    this.kind = 'Ability';\n    this.id = toID(name);\n    this.name = name as I.AbilityName;\n  }\n}\n\nconst ABILITIES_BY_ID: Array<{[id: string]: Ability}> = [];\n\nfor (const abilities of ABILITIES) {\n  const map: {[id: string]: Ability} = {};\n  for (const ability of abilities) {\n    const a = new Ability(ability);\n    map[a.id] = a;\n  }\n  ABILITIES_BY_ID.push(map);\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nconst RBY: string[] = [];\n\nconst GSC = [\n  // 'Berry Juice',\n  // 'Berry',\n  // 'Berserk Gene',\n  // 'Bitter Berry',\n  'Black Belt',\n  'Black Glasses',\n  'Bright Powder',\n  // 'Burnt Berry',\n  'Charcoal',\n  'Dragon Fang',\n  // 'Dragon Scale',\n  'Fast Ball',\n  'Fire Stone',\n  'Focus Band',\n  'Friend Ball',\n  // 'Gold Berry',\n  'Great Ball',\n  'Hard Stone',\n  'Heavy Ball',\n  // 'Ice Berry',\n  'King\\'s Rock',\n  'Leaf Stone',\n  'Leftovers',\n  'Level Ball',\n  'Light Ball',\n  'Love Ball',\n  // 'Lucky Punch',\n  'Lure Ball',\n  'Magnet',\n  // 'Mail',\n  'Master Ball',\n  'Metal Coat',\n  // 'Metal Powder',\n  // 'Mint Berry',\n  // 'Miracle Berry',\n  'Miracle Seed',\n  'Moon Ball',\n  'Moon Stone',\n  // 'Mystery Berry',\n  'Mystic Water',\n  'Never-Melt Ice',\n  // 'Pink Bow',\n  'Poison Barb',\n  // 'Poke Ball',\n  'Pokeball',\n  // 'Polkadot Bow',\n  // 'PRZ Cure Berry',\n  // 'PSN Cure Berry',\n  'Quick Claw',\n  'Safari Ball',\n  'Scope Lens',\n  'Sharp Beak',\n  'Silver Powder',\n  'Soft Sand',\n  'Spell Tag',\n  'Sport Ball',\n  // 'Stick',\n  'Sun Stone',\n  // 'Thick Club',\n  'Thunder Stone',\n  'Twisted Spoon',\n  'Ultra Ball',\n  // 'Up-Grade',\n  'Water Stone',\n];\n\n// const GSC_ONLY = [\n  // 'Berry',\n  // 'Berserk Gene',\n  // 'Bitter Berry',\n  // 'Burnt Berry',\n  // 'Ice Berry',\n  // 'Mint Berry',\n  // 'Miracle Berry',\n  // 'Mystery Berry',\n  // 'PRZ Cure Berry',\n  // 'Gold Berry',\n  // 'Pink Bow',\n  // 'Polkadot Bow',\n  // 'PSN Cure Berry',\n  // 'Enigma Berry',\n// ];\n\nconst ADV = GSC.concat([  //GSC.filter(i => !GSC_ONLY.includes(i)).concat([\n  'Aguav Berry',\n  'Apicot Berry',\n  'Aspear Berry',\n  'Belue Berry',\n  'Bluk Berry',\n  'Cheri Berry',\n  'Chesto Berry',\n  'Choice Band',\n  // 'Claw Fossil',\n  'Cornn Berry',\n  // 'Deep Sea Scale',\n  // 'Deep Sea Tooth',\n  'Dive Ball',\n  // 'Dome Fossil',\n  'Durin Berry',\n  'Enigma Berry',\n  'Figy Berry',\n  'Ganlon Berry',\n  'Grepa Berry',\n  // 'Helix Fossil',\n  'Hondew Berry',\n  'Iapapa Berry',\n  'Kelpsy Berry',\n  'Lansat Berry',\n  'Lax Incense',\n  'Leppa Berry',\n  'Liechi Berry',\n  'Lum Berry',\n  'Luxury Ball',\n  // 'Macho Brace',\n  'Mago Berry',\n  'Magost Berry',\n  'Mental Herb',\n  'Nanab Berry',\n  'Nest Ball',\n  'Net Ball',\n  'Nomel Berry',\n  // 'Old Amber',\n  'Oran Berry',\n  'Pamtre Berry',\n  'Pecha Berry',\n  'Persim Berry',\n  'Petaya Berry',\n  // 'Pinap Berry',\n  'Pomeg Berry',\n  'Premier Ball',\n  'Qualot Berry',\n  // 'Rabuta Berry',\n  'Rawst Berry',\n  'Razz Berry',\n  'Repeat Ball',\n  // 'Root Fossil',\n  'Salac Berry',\n  'Sea Incense',\n  'Shell Bell',\n  'Silk Scarf',\n  'Sitrus Berry',\n  // 'Soul Dew',\n  'Spelon Berry',\n  'Starf Berry',\n  'Tamato Berry',\n  // 'Timer Ball',\n  'Watmel Berry',\n  'Wepear Berry',\n  'White Herb',\n  'Wiki Berry',\n]);\n\nconst DPP = ADV.concat([\n  'Adamant Orb',\n  // 'Armor Fossil',\n  'Babiri Berry',\n  'Big Root',\n  'Black Sludge',\n  'Charti Berry',\n  'Cherish Ball',\n  'Chilan Berry',\n  'Choice Scarf',\n  'Choice Specs',\n  'Chople Berry',\n  'Coba Berry',\n  'Colbur Berry',\n  'Custap Berry',\n  'Damp Rock',\n  'Dawn Stone',\n  'Destiny Knot',\n  'Draco Plate',\n  'Dread Plate',\n  // 'Dubious Disc',\n  'Dusk Ball',\n  'Dusk Stone',\n  'Earth Plate',\n  // 'Electirizer',\n  'Expert Belt',\n  'Fist Plate',\n  'Flame Orb',\n  'Flame Plate',\n  'Focus Sash',\n  'Full Incense',\n  'Grip Claw',\n  'Griseous Orb',\n  'Haban Berry',\n  'Heal Ball',\n  'Heat Rock',\n  'Icicle Plate',\n  'Icy Rock',\n  'Insect Plate',\n  'Iron Ball',\n  'Iron Plate',\n  'Jaboca Berry',\n  'Kasib Berry',\n  'Kebia Berry',\n  'Lagging Tail',\n  'Life Orb',\n  'Light Clay',\n  'Lustrous Orb',\n  // 'Magmarizer',\n  'Meadow Plate',\n  'Metronome',\n  'Micle Berry',\n  'Mind Plate',\n  'Muscle Band',\n  'Occa Berry',\n  'Odd Incense',\n  'Oval Stone',\n  'Park Ball',\n  'Passho Berry',\n  'Payapa Berry',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Herb',\n  'Power Lens',\n  'Power Weight',\n  // 'Protector',\n  'Quick Ball',\n  // 'Quick Powder',\n  'Rare Bone',\n  'Razor Claw',\n  // 'Razor Fang',\n  // 'Reaper Cloth',\n  'Rindo Berry',\n  'Rock Incense',\n  'Rose Incense',\n  'Rowap Berry',\n  'Shed Shell',\n  'Shiny Stone',\n  'Shuca Berry',\n  // 'Skull Fossil',\n  'Sky Plate',\n  'Smooth Rock',\n  'Splash Plate',\n  'Spooky Plate',\n  'Sticky Barb',\n  'Stone Plate',\n  'Tanga Berry',\n  'Toxic Orb',\n  'Toxic Plate',\n  'Wacan Berry',\n  'Wave Incense',\n  'Wide Lens',\n  'Wise Glasses',\n  'Yache Berry',\n  'Zap Plate',\n  'Zoom Lens',\n]);\n\nconst BW = DPP.concat([\n  'Absorb Bulb',\n  'Air Balloon',\n  'Binding Band',\n  // 'Bug Gem',\n  // 'Burn Drive',\n  'Cell Battery',\n  // 'Chill Drive',\n  // 'Cover Fossil',\n  // 'Dark Gem',\n  // 'Douse Drive',\n  // 'Dragon Gem',\n  'Dream Ball',\n  'Eject Button',\n  // 'Electric Gem',\n  'Eviolite',\n  // 'Fighting Gem',\n  // 'Fire Gem',\n  'Float Stone',\n  // 'Flying Gem',\n  // 'Ghost Gem',\n  // 'Grass Gem',\n  // 'Ground Gem',\n  // 'Ice Gem',\n  'Normal Gem',\n  // 'Plume Fossil',\n  // 'Poison Gem',\n  // 'Prism Scale',\n  // 'Psychic Gem',\n  'Red Card',\n  'Ring Target',\n  // 'Rock Gem',\n  'Rocky Helmet',\n  // 'Shock Drive',\n  // 'Steel Gem',\n  // 'Water Gem',\n]);\n\nexport const MEGA_STONES: {[species: string]: string} = {\n  Absolite: 'Absol',\n  Abomasite: 'Abomasnow',\n  Aerodactylite: 'Aerodactyl',\n  Aggronite: 'Aggron',\n  Alakazite: 'Alakazam',\n  Altarianite: 'Altaria',\n  Ampharosite: 'Ampharos',\n  Audinite: 'Audino',\n  Banettite: 'Banette',\n  Beedrillite: 'Beedrill',\n  Blastoisinite: 'Blastoise',\n  Blazikenite: 'Blaziken',\n  Cameruptite: 'Camerupt',\n  'Charizardite X': 'Charizard',\n  'Charizardite Y': 'Charizard',\n  Crucibellite: 'Crucibelle',\n  Diancite: 'Diancie',\n  Galladite: 'Gallade',\n  Garchompite: 'Garchomp',\n  Gardevoirite: 'Gardevoir',\n  Gengarite: 'Gengar',\n  Glalitite: 'Glalie',\n  Gyaradosite: 'Gyarados',\n  Heracronite: 'Heracross',\n  Houndoominite: 'Houndoom',\n  Kangaskhanite: 'Kangaskhan',\n  Latiasite: 'Latias',\n  Latiosite: 'Latios',\n  Lopunnite: 'Lopunny',\n  Lucarionite: 'Lucario',\n  Manectite: 'Manectric',\n  Mawilite: 'Mawile',\n  Medichamite: 'Medicham',\n  Metagrossite: 'Metagross',\n  'Mewtwonite X': 'Mewtwo',\n  'Mewtwonite Y': 'Mewtwo',\n  Pidgeotite: 'Pidgeot',\n  Pinsirite: 'Pinsir',\n  Sablenite: 'Sableye',\n  Salamencite: 'Salamence',\n  Sceptilite: 'Sceptile',\n  Scizorite: 'Scizor',\n  Sharpedonite: 'Sharpedo',\n  Slowbronite: 'Slowbro',\n  Steelixite: 'Steelix',\n  Swampertite: 'Swampert',\n  Tyranitarite: 'Tyranitar',\n  Venusaurite: 'Venusaur',\n};\n\nconst XY = BW.concat(\n  [\n    // ...Object.keys(MEGA_STONES),\n    'Assault Vest',\n    // 'Blue Orb',\n    // 'Fairy Gem',\n    // 'Jaw Fossil',\n    'Kee Berry',\n    'Luminous Moss',\n    'Maranga Berry',\n    'Pixie Plate',\n    // 'Red Orb',\n    'Roseli Berry',\n    // 'Sachet',\n    'Safety Goggles',\n    // 'Sail Fossil',\n    'Snowball',\n    'Weakness Policy',\n    // 'Whipped Dream',\n  ].sort()\n);\n\nconst SM = XY.filter(i => i !== 'Old Amber').concat([\n  'Adrenaline Orb',\n  // 'Aloraichium Z',\n  'Beast Ball',\n  'Bottle Cap',\n  // 'Bug Memory',\n  // 'Buginium Z',\n  // 'Dark Memory',\n  // 'Darkinium Z',\n  // 'Decidium Z',\n  // 'Dragon Memory',\n  // 'Dragonium Z',\n  // 'Eevium Z',\n  // 'Electric Memory',\n  'Electric Seed',\n  // 'Electrium Z',\n  // 'Fairium Z',\n  // 'Fairy Memory',\n  // 'Fighting Memory',\n  // 'Fightinium Z',\n  // 'Fire Memory',\n  // 'Firium Z',\n  // 'Flying Memory',\n  // 'Flyinium Z',\n  // 'Ghost Memory',\n  // 'Ghostium Z',\n  // 'Gold Bottle Cap',\n  // 'Grass Memory',\n  // 'Grassium Z',\n  'Grassy Seed',\n  // 'Ground Memory',\n  // 'Groundium Z',\n  // 'Ice Memory',\n  'Ice Stone',\n  // 'Icium Z',\n  // 'Incinium Z',\n  // 'Kommonium Z',\n  // 'Lunalium Z',\n  // 'Lycanium Z',\n  // 'Marshadium Z',\n  // 'Mewnium Z',\n  // 'Mimikium Z',\n  'Misty Seed',\n  // 'Normalium Z',\n  // 'Pikanium Z',\n  // 'Pikashunium Z',\n  // 'Poison Memory',\n  // 'Poisonium Z',\n  // 'Primarium Z',\n  'Protective Pads',\n  // 'Psychic Memory',\n  'Psychic Seed',\n  // 'Psychium Z',\n  // 'Rock Memory',\n  // 'Rockium Z',\n  // 'Snorlium Z',\n  // 'Solganium Z',\n  // 'Steel Memory',\n  // 'Steelium Z',\n  // 'Tapunium Z',\n  'Terrain Extender',\n  // 'Ultranecrozium Z',\n  // 'Water Memory',\n  // 'Waterium Z',\n]);\n\nconst SS = SM.concat([\n  // 'Berry Sweet',\n  'Blunder Policy',\n  'Chipped Pot',\n  // 'Clover Sweet',\n  'Cracked Pot',\n  'Eject Pack',\n  // 'Flower Sweet',\n  // 'Fossilized Bird',\n  // 'Fossilized Dino',\n  // 'Fossilized Drake',\n  // 'Fossilized Fish',\n  // 'Galarica Cuff',\n  // 'Galarica Wreath',\n  'Heavy-Duty Boots',\n  // 'Leek',\n  // 'Love Sweet',\n  // 'Ribbon Sweet',\n  'Room Service',\n  'Rusted Shield',\n  'Rusted Sword',\n  // 'Star Sweet',\n  // 'Strawberry Sweet',\n  'Sweet Apple',\n  'Tart Apple',\n  'Throat Spray',\n]);\n\n// for (let i = 0; i < 100; i++) {\n//   SS.push(`TR${i < 10 ? `0${i}` : i}`);\n// }\n\n// Added after the TRs to maintain sort order\n// SS.push('Utility Umbrella', 'Vile Vial');\nSS.push('Utility Umbrella');\n\n\n// Because we support National Dex all Past items are added back in\n// SS.push(...GSC_ONLY, 'Old Amber');\n\nconst SV = SS.concat([\n  'Adamant Crystal',\n  'Auspicious Armor',\n  'Ability Shield',\n  'Booster Energy',\n  'Clear Amulet',\n  'Covert Cloak',\n  'Loaded Dice',\n  'Malicious Armor',\n  'Mirror Herb',\n  'Punching Glove',\n  'Lustrous Globe',\n  'Griseous Core',\n  'Strange Ball',\n]);\n\nconst BERRIES: {[berry: string]: {t: I.TypeName; p: number}} = {\n  'Aguav Berry': {t: 'Dragon', p: 80},\n  'Apicot Berry': {t: 'Ground', p: 100},\n  'Aspear Berry': {t: 'Ice', p: 80},\n  'Babiri Berry': {t: 'Steel', p: 80},\n  'Belue Berry': {t: 'Electric', p: 100},\n  Berry: {t: 'Poison', p: 80},\n  'Bitter Berry': {t: 'Ground', p: 80},\n  'Bluk Berry': {t: 'Fire', p: 90},\n  'Burnt Berry': {t: 'Ice', p: 80},\n  'Charti Berry': {t: 'Rock', p: 80},\n  'Cheri Berry': {t: 'Fire', p: 80},\n  'Chesto Berry': {t: 'Water', p: 80},\n  'Chilan Berry': {t: 'Normal', p: 80},\n  'Chople Berry': {t: 'Fighting', p: 80},\n  'Coba Berry': {t: 'Flying', p: 80},\n  'Colbur Berry': {t: 'Dark', p: 80},\n  'Cornn Berry': {t: 'Bug', p: 90},\n  'Custap Berry': {t: 'Ghost', p: 100},\n  'Durin Berry': {t: 'Water', p: 100},\n  'Enigma Berry': {t: 'Bug', p: 100},\n  'Figy Berry': {t: 'Bug', p: 80},\n  'Ganlon Berry': {t: 'Ice', p: 100},\n  'Gold Berry': {t: 'Psychic', p: 80},\n  'Grepa Berry': {t: 'Flying', p: 90},\n  'Haban Berry': {t: 'Dragon', p: 80},\n  'Hondew Berry': {t: 'Ground', p: 90},\n  'Iapapa Berry': {t: 'Dark', p: 80},\n  'Ice Berry': {t: 'Grass', p: 80},\n  'Jaboca Berry': {t: 'Dragon', p: 100},\n  'Kasib Berry': {t: 'Ghost', p: 80},\n  'Kebia Berry': {t: 'Poison', p: 80},\n  'Kee Berry': {t: 'Fairy', p: 100},\n  'Kelpsy Berry': {t: 'Fighting', p: 90},\n  'Lansat Berry': {t: 'Flying', p: 100},\n  'Leppa Berry': {t: 'Fighting', p: 80},\n  'Liechi Berry': {t: 'Grass', p: 100},\n  'Lum Berry': {t: 'Flying', p: 80},\n  'Mago Berry': {t: 'Ghost', p: 80},\n  'Magost Berry': {t: 'Rock', p: 90},\n  'Maranga Berry': {t: 'Dark', p: 100},\n  'Micle Berry': {t: 'Rock', p: 100},\n  'Mint Berry': {t: 'Water', p: 80},\n  'Miracle Berry': {t: 'Flying', p: 80},\n  'Mystery Berry': {t: 'Fighting', p: 80},\n  'Nanab Berry': {t: 'Water', p: 90},\n  'Nomel Berry': {t: 'Dragon', p: 90},\n  'Occa Berry': {t: 'Fire', p: 80},\n  'Oran Berry': {t: 'Poison', p: 80},\n  'Pamtre Berry': {t: 'Steel', p: 90},\n  'Passho Berry': {t: 'Water', p: 80},\n  'Payapa Berry': {t: 'Psychic', p: 80},\n  'Pecha Berry': {t: 'Electric', p: 80},\n  'Persim Berry': {t: 'Ground', p: 80},\n  'Petaya Berry': {t: 'Poison', p: 100},\n  'Pinap Berry': {t: 'Grass', p: 90},\n  'Pomeg Berry': {t: 'Ice', p: 90},\n  'PRZ Cure Berry': {t: 'Fire', p: 80},\n  'PSN Cure Berry': {t: 'Electric', p: 80},\n  'Qualot Berry': {t: 'Poison', p: 90},\n  'Rabuta Berry': {t: 'Ghost', p: 90},\n  'Rawst Berry': {t: 'Grass', p: 80},\n  'Razz Berry': {t: 'Steel', p: 80},\n  'Rindo Berry': {t: 'Grass', p: 80},\n  'Roseli Berry': {t: 'Fairy', p: 80},\n  'Rowap Berry': {t: 'Dark', p: 100},\n  'Salac Berry': {t: 'Fighting', p: 100},\n  'Shuca Berry': {t: 'Ground', p: 80},\n  'Sitrus Berry': {t: 'Psychic', p: 80},\n  'Spelon Berry': {t: 'Dark', p: 90},\n  'Starf Berry': {t: 'Psychic', p: 100},\n  'Tamato Berry': {t: 'Psychic', p: 90},\n  'Tanga Berry': {t: 'Bug', p: 80},\n  'Wacan Berry': {t: 'Electric', p: 80},\n  'Watmel Berry': {t: 'Fire', p: 100},\n  'Wepear Berry': {t: 'Electric', p: 90},\n  'Wiki Berry': {t: 'Rock', p: 80},\n  'Yache Berry': {t: 'Ice', p: 80},\n};\n\nexport const ITEMS = [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Items implements I.Items {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return ITEMS_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in ITEMS_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Item implements I.Item {\n  readonly kind: 'Item';\n  readonly id: I.ID;\n  readonly name: I.ItemName;\n  readonly megaEvolves?: I.SpeciesName;\n  readonly isBerry?: boolean;\n  readonly naturalGift?: Readonly<{basePower: number; type: I.TypeName}>;\n\n  constructor(name: string, gen: number) {\n    this.kind = 'Item';\n    this.id = toID(name);\n    this.name = name as I.ItemName;\n    this.megaEvolves = MEGA_STONES[name] as I.SpeciesName;\n    const berry = BERRIES[name];\n    if (berry) {\n      this.isBerry = true;\n      this.naturalGift = {\n        basePower: gen < 6 ? berry.p - 20 : berry.p,\n        type: berry.t,\n      };\n    }\n  }\n}\n\nconst ITEMS_BY_ID: Array<{[id: string]: Item}> = [];\n\nlet gen = 0;\nfor (const items of ITEMS) {\n  const map: {[id: string]: Item} = {};\n  for (const item of items) {\n    const i = new Item(item, gen);\n    map[i.id] = i;\n  }\n  ITEMS_BY_ID.push(map);\n  gen++;\n}\n","import * as I from '../data/interface';\nimport {toID, DeepPartial, assignWithout, extend} from '../util';\n\nexport interface MoveData {\n  readonly name?: string;\n\n  readonly type: I.TypeName;\n  readonly category?: I.MoveCategory;\n  // readonly flags?: I.MoveFlags;\n  readonly secondaries?: boolean;\n  readonly target?: I.MoveTarget;\n  readonly recoil?: [number, number];\n  readonly hasCrashDamage?: boolean;\n  readonly mindBlownRecoil?: boolean;\n  readonly struggleRecoil?: boolean;\n  readonly willCrit?: boolean;\n  readonly drain?: [number, number];\n  readonly priority?: number;\n  readonly self?: I.SelfOrSecondaryEffect | null;\n  readonly ignoreDefensive?: boolean;\n  readonly overrideOffensiveStat?: I.StatIDExceptHP;\n  readonly overrideDefensiveStat?: I.StatIDExceptHP;\n  readonly overrideOffensivePokemon?: 'target' | 'source';\n  readonly overrideDefensivePokemon?: 'target' | 'source';\n  readonly breaksProtect?: boolean;\n  readonly isZ?: boolean;\n  readonly isMax?: boolean;\n  readonly multihit?: number | number[];\n\n  readonly bp: number;\n  readonly zp?: number;\n  readonly maxPower?: number;\n\n  // FIXME: migrate these to flags (above) instead\n  readonly makesContact?: boolean;\n  readonly isPunch?: boolean;\n  readonly isBite?: boolean;\n  readonly isBullet?: boolean;\n  readonly isSound?: boolean;\n  readonly isPulse?: boolean;\n  readonly isSlicing?: boolean;\n  readonly isWind?: boolean;\n}\n\nconst RBY: {[name: string]: MoveData} = {\n  '(No Move)': {bp: 0, category: 'Status', type: 'Normal'},\n  Absorb: {bp: 20, type: 'Grass', drain: [1, 2]},\n  Acid: {bp: 40, type: 'Poison'},\n  Amnesia: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Aurora Beam': {bp: 65, type: 'Ice'},\n  Barrage: {bp: 15, type: 'Normal', multihit: [2, 5]},\n  Bide: {bp: 0, type: '???'},\n  Bind: {bp: 15, type: 'Normal'},\n  Bite: {bp: 60, type: 'Normal'},\n  Blizzard: {bp: 120, type: 'Ice'},\n  Bonemerang: {bp: 50, type: 'Ground', multihit: 2},\n  Bubble: {bp: 20, type: 'Water'},\n  'Bubble Beam': {bp: 65, type: 'Water'},\n  Clamp: {bp: 35, type: 'Water'},\n  'Comet Punch': {bp: 18, type: 'Normal', multihit: [2, 5]},\n  Constrict: {bp: 10, type: 'Normal'},\n  Conversion: {bp: 0, category: 'Status', type: 'Normal'},\n  Counter: {bp: 1, type: 'Fighting'},\n  Crabhammer: {bp: 90, type: 'Water'},\n  'Defense Curl': {bp: 0, category: 'Status', type: 'Normal'},\n  Dig: {bp: 100, type: 'Ground'},\n  Disable: {bp: 0, category: 'Status', type: 'Normal'},\n  'Dizzy Punch': {bp: 70, type: 'Normal'},\n  'Double-Edge': {bp: 100, type: 'Normal', recoil: [25, 100]},\n  'Double Kick': {bp: 30, type: 'Fighting', multihit: 2},\n  'Double Slap': {bp: 15, type: 'Normal', multihit: [2, 5]},\n  'Dragon Rage': {bp: 1, type: 'Dragon'},\n  'Dream Eater': {bp: 100, type: 'Psychic', drain: [1, 2]},\n  Earthquake: {bp: 100, type: 'Ground'},\n  Explosion: {bp: 170, type: 'Normal'},\n  'Fire Blast': {bp: 120, type: 'Fire'},\n  'Fire Spin': {bp: 15, type: 'Fire'},\n  Fissure: {bp: 0, type: 'Ground'},\n  Fly: {bp: 70, type: 'Flying'},\n  'Focus Energy': {bp: 0, category: 'Status', type: 'Normal'},\n  'Fury Attack': {bp: 15, type: 'Normal', multihit: [2, 5]},\n  'Fury Swipes': {bp: 18, type: 'Normal', multihit: [2, 5]},\n  Glare: {bp: 0, category: 'Status', type: 'Normal'},\n  Growth: {bp: 0, category: 'Status', type: 'Normal'},\n  Guillotine: {bp: 0, type: 'Normal'},\n  Gust: {bp: 40, type: 'Normal'},\n  Haze: {bp: 0, category: 'Status', type: 'Ice'},\n  'High Jump Kick': {bp: 85, type: 'Fighting', hasCrashDamage: true},\n  'Horn Drill': {bp: 0, type: 'Normal'},\n  'Hyper Beam': {bp: 150, type: 'Normal'},\n  'Jump Kick': {bp: 70, type: 'Fighting', hasCrashDamage: true},\n  'Karate Chop': {bp: 50, type: 'Normal'},\n  'Leech Seed': {bp: 0, category: 'Status', type: 'Grass'},\n  'Light Screen': {bp: 0, category: 'Status', type: 'Psychic'},\n  Metronome: {bp: 0, category: 'Status', type: 'Normal'},\n  Mimic: {bp: 0, category: 'Status', type: 'Normal'},\n  Minimize: {bp: 0, category: 'Status', type: 'Normal'},\n  'Mirror Move': {bp: 0, category: 'Status', type: 'Flying'},\n  Mist: {bp: 0, category: 'Status', type: 'Ice'},\n  'Night Shade': {bp: 1, type: 'Ghost'},\n  'Petal Dance': {bp: 70, type: 'Grass'},\n  'Pin Missile': {bp: 14, type: 'Bug', multihit: [2, 5]},\n  'Poison Sting': {bp: 15, type: 'Poison'},\n  Psychic: {bp: 90, type: 'Psychic'},\n  Psywave: {bp: 1, type: 'Psychic'},\n  Rage: {bp: 20, type: 'Normal'},\n  'Razor Leaf': {bp: 55, type: 'Grass'},\n  'Razor Wind': {bp: 80, type: 'Normal'},\n  Recover: {bp: 0, category: 'Status', type: 'Normal'},\n  Reflect: {bp: 0, category: 'Status', type: 'Psychic'},\n  Rest: {bp: 0, category: 'Status', type: 'Psychic'},\n  Roar: {bp: 0, category: 'Status', type: 'Normal'},\n  'Rock Slide': {bp: 75, type: 'Rock'},\n  'Rock Throw': {bp: 50, type: 'Rock'},\n  'Sand Attack': {bp: 0, category: 'Status', type: 'Normal'},\n  'Seismic Toss': {bp: 1, type: 'Fighting'},\n  'Self-Destruct': {bp: 130, type: 'Normal'},\n  'Skull Bash': {bp: 100, type: 'Normal'},\n  Slash: {bp: 70, type: 'Normal'},\n  Sludge: {bp: 65, type: 'Poison'},\n  'Soft-Boiled': {bp: 0, category: 'Status', type: 'Normal'},\n  'Solar Beam': {bp: 120, type: 'Grass'},\n  'Sonic Boom': {bp: 1, type: 'Normal'},\n  'Spike Cannon': {bp: 20, type: 'Normal', multihit: [2, 5]},\n  Stomp: {bp: 65, type: 'Normal'},\n  Struggle: {bp: 50, type: 'Normal', recoil: [1, 2]},\n  'Stun Spore': {bp: 0, category: 'Status', type: 'Grass'},\n  Submission: {bp: 80, type: 'Fighting', recoil: [1, 4]},\n  Substitute: {bp: 0, category: 'Status', type: 'Normal'},\n  'Super Fang': {bp: 1, type: 'Normal'},\n  Swift: {bp: 60, type: 'Normal'},\n  'Take Down': {bp: 90, type: 'Normal', recoil: [1, 4]},\n  Thrash: {bp: 90, type: 'Normal'},\n  Thunder: {bp: 120, type: 'Electric'},\n  'Thunder Wave': {bp: 0, category: 'Status', type: 'Electric'},\n  Transform: {bp: 0, category: 'Status', type: 'Normal'},\n  'Tri Attack': {bp: 80, type: 'Normal'},\n  Twineedle: {bp: 25, type: 'Bug', multihit: 2},\n  Whirlwind: {bp: 0, category: 'Status', type: 'Normal'},\n  'Wing Attack': {bp: 35, type: 'Flying'},\n  Wrap: {bp: 15, type: 'Normal'},\n  Growl: {bp: 0, category: 'Status', type: 'Normal'},\n  Leer: {bp: 0, category: 'Status', type: 'Normal'},\n  'Low Kick': {bp: 50, type: 'Fighting'},\n  'Poison Gas': {bp: 0, category: 'Status', type: 'Poison'},\n  'Poison Powder': {bp: 0, category: 'Status', type: 'Poison'},\n  'Sky Attack': {bp: 140, type: 'Flying'},\n  'String Shot': {bp: 0, category: 'Status', type: 'Bug'},\n  Surf: {bp: 95, type: 'Water'},\n  'Tail Whip': {bp: 0, category: 'Status', type: 'Normal'},\n  Toxic: {bp: 0, category: 'Status', type: 'Poison'},\n  Flash: {bp: 0, category: 'Status', type: 'Normal'},\n  Hypnosis: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Leech Life': {bp: 20, type: 'Bug', drain: [1, 2]},\n  'Mega Drain': {bp: 40, type: 'Grass', drain: [1, 2]},\n  'Vine Whip': {bp: 35, type: 'Grass'},\n  Waterfall: {bp: 80, type: 'Water'},\n  Tackle: {bp: 35, type: 'Normal'},\n  'Acid Armor': {bp: 0, category: 'Status', type: 'Poison'},\n  Barrier: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Body Slam': {bp: 85, type: 'Normal'},\n  Flamethrower: {bp: 95, type: 'Fire'},\n  'Hydro Pump': {bp: 120, type: 'Water'},\n  'Ice Beam': {bp: 95, type: 'Ice'},\n  Lick: {bp: 20, type: 'Ghost'},\n  Screech: {bp: 0, category: 'Status', type: 'Normal'},\n  Sing: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sleep Powder': {bp: 0, category: 'Status', type: 'Grass'},\n  Smog: {bp: 20, type: 'Poison'},\n  Spore: {bp: 0, category: 'Status', type: 'Grass'},\n  Supersonic: {bp: 0, category: 'Status', type: 'Normal'},\n  'Swords Dance': {bp: 0, category: 'Status', type: 'Normal'},\n  Thunderbolt: {bp: 95, type: 'Electric'},\n  'Bone Club': {bp: 65, type: 'Ground'},\n  'Egg Bomb': {bp: 100, type: 'Normal'},\n  'Hyper Fang': {bp: 80, type: 'Normal'},\n  Kinesis: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Lovely Kiss': {bp: 0, category: 'Status', type: 'Normal'},\n  Meditate: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Rolling Kick': {bp: 60, type: 'Fighting'},\n  Sharpen: {bp: 0, category: 'Status', type: 'Normal'},\n  Teleport: {bp: 0, category: 'Status', type: 'Psychic'},\n  Agility: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Confuse Ray': {bp: 0, category: 'Status', type: 'Ghost'},\n  Confusion: {bp: 50, type: 'Psychic'},\n  Cut: {bp: 50, type: 'Normal'},\n  'Double Team': {bp: 0, category: 'Status', type: 'Normal'},\n  'Drill Peck': {bp: 80, type: 'Flying'},\n  Ember: {bp: 40, type: 'Fire'},\n  'Fire Punch': {bp: 75, type: 'Fire'},\n  Harden: {bp: 0, category: 'Status', type: 'Normal'},\n  Headbutt: {bp: 70, type: 'Normal'},\n  'Horn Attack': {bp: 65, type: 'Normal'},\n  'Ice Punch': {bp: 75, type: 'Ice'},\n  'Mega Kick': {bp: 120, type: 'Normal'},\n  'Mega Punch': {bp: 80, type: 'Normal'},\n  'Paleo Wave': {bp: 85, type: 'Rock'},\n  'Pay Day': {bp: 40, type: 'Normal'},\n  Peck: {bp: 35, type: 'Flying'},\n  Pound: {bp: 40, type: 'Normal'},\n  Psybeam: {bp: 65, type: 'Psychic'},\n  'Quick Attack': {bp: 40, type: 'Normal', priority: 1},\n  Scratch: {bp: 40, type: 'Normal'},\n  'Shadow Strike': {bp: 80, type: 'Ghost'},\n  Slam: {bp: 80, type: 'Normal'},\n  Smokescreen: {bp: 0, category: 'Status', type: 'Normal'},\n  Splash: {bp: 0, category: 'Status', type: 'Normal'},\n  Strength: {bp: 80, type: 'Normal'},\n  'Thunder Punch': {bp: 75, type: 'Electric'},\n  'Thunder Shock': {bp: 40, type: 'Electric'},\n  'Vise Grip': {bp: 55, type: 'Normal'},\n  'Water Gun': {bp: 40, type: 'Water'},\n  Withdraw: {bp: 0, category: 'Status', type: 'Water'},\n};\n\nconst GSC_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Bide: {type: 'Normal'},\n  Counter: {bp: 0},\n  Dig: {bp: 60},\n  'Double-Edge': {bp: 120},\n  Explosion: {bp: 250},\n  Gust: {type: 'Flying'},\n  'Karate Chop': {type: 'Fighting'},\n  Psywave: {bp: 0},\n  'Self-Destruct': {bp: 200},\n  Struggle: {recoil: [1, 4]},\n  'Dragon Rage': {bp: 0},\n  Bite: {type: 'Dark'},\n  'Night Shade': {bp: 0},\n  'Sand Attack': {type: 'Ground'},\n  'Seismic Toss': {bp: 0},\n  'Sonic Boom': {bp: 0},\n  'Super Fang': {bp: 0},\n  'Wing Attack': {bp: 60},\n  Aeroblast: {bp: 100, type: 'Flying'},\n  Attract: {bp: 0, category: 'Status', type: 'Normal'},\n  'Beat Up': {bp: 10, type: 'Dark'},\n  'Belly Drum': {bp: 0, category: 'Status', type: 'Normal'},\n  'Conversion 2': {bp: 0, category: 'Status', type: 'Normal'},\n  'Cross Chop': {bp: 100, type: 'Fighting'},\n  Curse: {bp: 0, category: 'Status', type: '???'},\n  'Destiny Bond': {bp: 0, category: 'Status', type: 'Ghost'},\n  Detect: {bp: 0, category: 'Status', type: 'Fighting', priority: 2},\n  Encore: {bp: 0, category: 'Status', type: 'Normal'},\n  Endure: {bp: 0, category: 'Status', type: 'Normal', priority: 2},\n  Flail: {bp: 0, type: 'Normal'},\n  Foresight: {bp: 0, category: 'Status', type: 'Normal'},\n  'Future Sight': {bp: 80, type: 'Psychic'},\n  'Heal Bell': {bp: 0, category: 'Status', type: 'Normal'},\n  'Icy Wind': {bp: 55, type: 'Ice'},\n  'Lock-On': {bp: 0, category: 'Status', type: 'Normal'},\n  'Mind Reader': {bp: 0, category: 'Status', type: 'Normal'},\n  'Mirror Coat': {bp: 0, type: 'Psychic'},\n  Moonlight: {bp: 0, category: 'Status', type: 'Normal'},\n  'Morning Sun': {bp: 0, category: 'Status', type: 'Normal'},\n  Nightmare: {bp: 0, category: 'Status', type: 'Ghost'},\n  Outrage: {bp: 90, type: 'Dragon'},\n  'Powder Snow': {bp: 40, type: 'Ice'},\n  Present: {bp: 0, type: 'Normal'},\n  Protect: {bp: 0, category: 'Status', type: 'Normal', priority: 2},\n  'Psych Up': {bp: 0, category: 'Status', type: 'Normal'},\n  Pursuit: {bp: 40, type: 'Dark'},\n  'Rain Dance': {bp: 0, category: 'Status', type: 'Water'},\n  Reversal: {bp: 0, type: 'Fighting'},\n  Safeguard: {bp: 0, category: 'Status', type: 'Normal'},\n  Sandstorm: {bp: 0, category: 'Status', type: 'Rock'},\n  Sketch: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sleep Talk': {bp: 0, category: 'Status', type: 'Normal'},\n  Spikes: {bp: 0, category: 'Status', type: 'Ground'},\n  Spite: {bp: 0, category: 'Status', type: 'Ghost'},\n  'Sunny Day': {bp: 0, category: 'Status', type: 'Fire'},\n  Swagger: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sweet Scent': {bp: 0, category: 'Status', type: 'Normal'},\n  Synthesis: {bp: 0, category: 'Status', type: 'Grass'},\n  Thief: {bp: 40, type: 'Dark'},\n  'Triple Kick': {bp: 10, type: 'Fighting', multihit: [1, 3]},\n  Twister: {bp: 40, type: 'Dragon'},\n  'Ancient Power': {bp: 60, type: 'Rock'},\n  'Bone Rush': {bp: 25, type: 'Ground', multihit: [2, 5]},\n  Crunch: {bp: 80, type: 'Dark'},\n  'Feint Attack': {bp: 60, type: 'Dark'},\n  'Giga Drain': {bp: 60, type: 'Grass', drain: [1, 2]},\n  'Hidden Power': {bp: 0, type: 'Normal'},\n  'Mean Look': {bp: 0, category: 'Status', type: 'Normal'},\n  'Rapid Spin': {bp: 20, type: 'Normal'},\n  'Rock Smash': {bp: 20, type: 'Fighting'},\n  'Spider Web': {bp: 0, category: 'Status', type: 'Bug'},\n  Whirlpool: {bp: 15, type: 'Water'},\n  'Zap Cannon': {bp: 100, type: 'Electric'},\n  'Cotton Spore': {bp: 0, category: 'Status', type: 'Grass'},\n  'Extreme Speed': {bp: 80, type: 'Normal', priority: 1},\n  'Fury Cutter': {bp: 10, type: 'Bug'},\n  Magnitude: {bp: 0, type: 'Ground'},\n  'Milk Drink': {bp: 0, category: 'Status', type: 'Normal'},\n  'Scary Face': {bp: 0, category: 'Status', type: 'Normal'},\n  Charm: {bp: 0, category: 'Status', type: 'Normal'},\n  'Hidden Power Bug': {bp: 70, type: 'Bug'},\n  'Hidden Power Dark': {bp: 70, type: 'Dark'},\n  'Hidden Power Dragon': {bp: 70, type: 'Dragon'},\n  'Hidden Power Electric': {bp: 70, type: 'Electric'},\n  'Hidden Power Fighting': {bp: 70, type: 'Fighting'},\n  'Hidden Power Fire': {bp: 70, type: 'Fire'},\n  'Hidden Power Flying': {bp: 70, type: 'Flying'},\n  'Hidden Power Ghost': {bp: 70, type: 'Ghost'},\n  'Hidden Power Grass': {bp: 70, type: 'Grass'},\n  'Hidden Power Ground': {bp: 70, type: 'Ground'},\n  'Hidden Power Ice': {bp: 70, type: 'Ice'},\n  'Hidden Power Poison': {bp: 70, type: 'Poison'},\n  'Hidden Power Psychic': {bp: 70, type: 'Psychic'},\n  'Hidden Power Rock': {bp: 70, type: 'Rock'},\n  'Hidden Power Steel': {bp: 70, type: 'Steel'},\n  'Hidden Power Water': {bp: 70, type: 'Water'},\n  'Perish Song': {bp: 0, category: 'Status', type: 'Normal'},\n  Snore: {bp: 40, type: 'Normal'},\n  'Sweet Kiss': {bp: 0, category: 'Status', type: 'Normal'},\n  Rollout: {bp: 30, type: 'Rock'},\n  Frustration: {bp: 0, type: 'Normal'},\n  Return: {bp: 0, type: 'Normal'},\n  'Sacred Fire': {bp: 100, type: 'Fire'},\n  'Baton Pass': {bp: 0, category: 'Status', type: 'Normal'},\n  'Dragon Breath': {bp: 60, type: 'Dragon'},\n  'Dynamic Punch': {bp: 100, type: 'Fighting'},\n  'False Swipe': {bp: 40, type: 'Normal'},\n  'Flame Wheel': {bp: 60, type: 'Fire'},\n  'Iron Tail': {bp: 100, type: 'Steel'},\n  'Mach Punch': {bp: 40, type: 'Fighting', priority: 1},\n  Megahorn: {bp: 120, type: 'Bug'},\n  'Metal Claw': {bp: 50, type: 'Steel'},\n  'Mud-Slap': {bp: 20, type: 'Ground'},\n  Octazooka: {bp: 65, type: 'Water'},\n  'Pain Split': {bp: 0, category: 'Status', type: 'Normal'},\n  'Shadow Ball': {bp: 80, type: 'Ghost'},\n  'Sludge Bomb': {bp: 90, type: 'Poison'},\n  Spark: {bp: 65, type: 'Electric'},\n  'Steel Wing': {bp: 70, type: 'Steel'},\n  'Vital Throw': {bp: 70, type: 'Fighting'},\n};\n\nconst GSC: {[name: string]: MoveData} = extend(true, {}, RBY, GSC_PATCH);\n\nconst ADV_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Acid: {target: 'allAdjacentFoes'},\n  'Ancient Power': {makesContact: true},\n  Bide: {makesContact: true},\n  Bind: {makesContact: true},\n  Blizzard: {target: 'allAdjacentFoes'},\n  Clamp: {makesContact: true},\n  'Comet Punch': {makesContact: true},\n  Counter: {makesContact: true},\n  Crunch: {makesContact: true},\n  Detect: {priority: 3},\n  Endure: {priority: 4},\n  Protect: {priority: 3},\n  Dig: {makesContact: true},\n  'Double Kick': {makesContact: true},\n  'Double Slap': {makesContact: true},\n  Explosion: {target: 'allAdjacent'},\n  Flail: {makesContact: true},\n  Fly: {makesContact: true},\n  'Fury Attack': {makesContact: true},\n  'Fury Swipes': {makesContact: true},\n  'High Jump Kick': {makesContact: true},\n  'Jump Kick': {makesContact: true},\n  'Leech Life': {makesContact: true},\n  Outrage: {makesContact: true},\n  'Petal Dance': {makesContact: true},\n  Pursuit: {makesContact: true},\n  Rage: {makesContact: true},\n  'Rapid Spin': {makesContact: true},\n  'Razor Wind': {target: 'allAdjacentFoes'},\n  Reversal: {makesContact: true},\n  'Rock Smash': {makesContact: true},\n  'Self-Destruct': {target: 'allAdjacent'},\n  'Skull Bash': {makesContact: true},\n  Stomp: {makesContact: true},\n  Struggle: {makesContact: true},\n  Surf: {target: 'allAdjacentFoes'},\n  Thief: {makesContact: true},\n  Thrash: {makesContact: true},\n  'Triple Kick': {makesContact: true, multihit: 3},\n  'Vine Whip': {makesContact: true},\n  Waterfall: {makesContact: true},\n  Wrap: {makesContact: true},\n  Crabhammer: {makesContact: true},\n  'Double-Edge': {recoil: [1, 3], makesContact: true},\n  Earthquake: {target: 'allAdjacent'},\n  'Extreme Speed': {makesContact: true},\n  'Fury Cutter': {makesContact: true},\n  'Heal Bell': {isSound: true},\n  Magnitude: {target: 'allAdjacent'},\n  Roar: {isSound: true},\n  Submission: {makesContact: true},\n  Tackle: {makesContact: true},\n  'Take Down': {makesContact: true},\n  Twister: {target: 'allAdjacentFoes'},\n  'Body Slam': {makesContact: true},\n  Bubble: {target: 'allAdjacentFoes'},\n  Growl: {isSound: true, target: 'allAdjacentFoes'},\n  Lick: {makesContact: true},\n  'Perish Song': {isSound: true},\n  Screech: {isSound: true},\n  Sing: {isSound: true},\n  Snore: {isSound: true},\n  'String Shot': {target: 'allAdjacentFoes'},\n  Supersonic: {isSound: true},\n  'Sweet Scent': {target: 'allAdjacentFoes'},\n  Rollout: {makesContact: true},\n  Constrict: {makesContact: true},\n  'Dizzy Punch': {makesContact: true},\n  Frustration: {makesContact: true},\n  'Hyper Fang': {makesContact: true},\n  'Karate Chop': {makesContact: true},\n  'Low Kick': {bp: 0, makesContact: true},\n  Return: {makesContact: true},\n  'Rolling Kick': {makesContact: true},\n  Bite: {makesContact: true},\n  'Cross Chop': {makesContact: true},\n  Cut: {makesContact: true},\n  'Drill Peck': {makesContact: true},\n  'Dynamic Punch': {makesContact: true},\n  'False Swipe': {makesContact: true},\n  'Fire Punch': {makesContact: true},\n  'Flame Wheel': {makesContact: true},\n  Guillotine: {makesContact: true},\n  Headbutt: {makesContact: true},\n  'Horn Attack': {makesContact: true},\n  'Horn Drill': {makesContact: true},\n  'Ice Punch': {makesContact: true},\n  'Icy Wind': {target: 'allAdjacentFoes'},\n  'Iron Tail': {makesContact: true},\n  Leer: {target: 'allAdjacentFoes'},\n  'Mach Punch': {makesContact: true},\n  Megahorn: {makesContact: true},\n  'Mega Kick': {makesContact: true},\n  'Mega Punch': {makesContact: true},\n  'Metal Claw': {makesContact: true},\n  Peck: {makesContact: true},\n  Pound: {makesContact: true},\n  'Powder Snow': {target: 'allAdjacentFoes'},\n  'Quick Attack': {makesContact: true},\n  'Razor Leaf': {target: 'allAdjacentFoes'},\n  'Rock Slide': {target: 'allAdjacentFoes'},\n  Scratch: {makesContact: true},\n  'Seismic Toss': {makesContact: true},\n  'Shadow Strike': {makesContact: true},\n  Slam: {makesContact: true},\n  Slash: {makesContact: true},\n  Spark: {makesContact: true},\n  'Steel Wing': {makesContact: true},\n  Strength: {makesContact: true},\n  'Super Fang': {makesContact: true},\n  Swift: {target: 'allAdjacentFoes'},\n  'Tail Whip': {target: 'allAdjacentFoes'},\n  'Thunder Punch': {makesContact: true},\n  'Vise Grip': {makesContact: true},\n  'Vital Throw': {makesContact: true},\n  'Wing Attack': {makesContact: true},\n  'Arm Thrust': {\n    bp: 15,\n    type: 'Fighting',\n    multihit: [2, 5],\n    makesContact: true,\n  },\n  Assist: {bp: 0, category: 'Status', type: 'Normal'},\n  Astonish: {bp: 30, type: 'Ghost', makesContact: true},\n  Block: {bp: 0, category: 'Status', type: 'Normal'},\n  Bounce: {bp: 85, type: 'Flying', makesContact: true},\n  'Bullet Seed': {bp: 10, type: 'Grass', multihit: [2, 5]},\n  Camouflage: {bp: 0, category: 'Status', type: 'Normal'},\n  Charge: {bp: 0, category: 'Status', type: 'Electric'},\n  Covet: {bp: 40, type: 'Normal'},\n  Dive: {bp: 60, type: 'Water', makesContact: true},\n  'Doom Desire': {bp: 120, type: 'Steel'},\n  Extrasensory: {bp: 80, type: 'Psychic'},\n  'Fake Out': {bp: 40, type: 'Normal', priority: 1},\n  'Follow Me': {bp: 0, category: 'Status', type: 'Normal', priority: 3},\n  Hail: {bp: 0, category: 'Status', type: 'Ice'},\n  'Icicle Spear': {bp: 10, type: 'Ice', multihit: [2, 5]},\n  Ingrain: {bp: 0, category: 'Status', type: 'Grass'},\n  'Knock Off': {bp: 20, type: 'Dark', makesContact: true},\n  'Leaf Blade': {bp: 70, type: 'Grass', makesContact: true},\n  'Magic Coat': {bp: 0, category: 'Status', type: 'Psychic', priority: 4},\n  Memento: {bp: 0, category: 'Status', type: 'Dark'},\n  'Nature Power': {bp: 0, category: 'Status', type: 'Normal'},\n  'Needle Arm': {bp: 60, type: 'Grass', makesContact: true},\n  'Odor Sleuth': {bp: 0, category: 'Status', type: 'Normal'},\n  Overheat: {bp: 140, type: 'Fire', self: {boosts: {spa: -2}}, makesContact: true},\n  Revenge: {bp: 60, type: 'Fighting', makesContact: true},\n  'Rock Blast': {bp: 25, type: 'Rock', multihit: [2, 5]},\n  'Role Play': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Sand Tomb': {bp: 15, type: 'Ground'},\n  'Skill Swap': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Smelling Salts': {bp: 60, type: 'Normal', makesContact: true},\n  'Spit Up': {bp: 0, type: 'Normal'},\n  Stockpile: {bp: 0, category: 'Status', type: 'Normal'},\n  Swallow: {bp: 0, category: 'Status', type: 'Normal'},\n  Taunt: {bp: 0, category: 'Status', type: 'Dark'},\n  'Teeter Dance': {bp: 0, category: 'Status', type: 'Normal', target: 'allAdjacent'},\n  Tickle: {bp: 0, category: 'Status', type: 'Normal'},\n  Trick: {bp: 0, category: 'Status', type: 'Psychic'},\n  Uproar: {bp: 50, type: 'Normal', isSound: true},\n  'Volt Tackle': {bp: 120, type: 'Electric', recoil: [1, 3], makesContact: true},\n  'Weather Ball': {bp: 50, type: 'Normal'},\n  Aromatherapy: {bp: 0, category: 'Status', type: 'Grass'},\n  'Brick Break': {bp: 75, type: 'Fighting', makesContact: true},\n  Endeavor: {bp: 0, type: 'Normal', makesContact: true},\n  'Focus Punch': {bp: 150, type: 'Fighting', makesContact: true},\n  Imprison: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Mud Sport': {bp: 0, category: 'Status', type: 'Ground'},\n  Recycle: {bp: 0, category: 'Status', type: 'Normal'},\n  'Secret Power': {bp: 70, type: 'Normal'},\n  'Sky Uppercut': {bp: 85, type: 'Fighting', makesContact: true},\n  'Slack Off': {bp: 0, category: 'Status', type: 'Normal'},\n  Snatch: {bp: 0, category: 'Status', type: 'Dark', priority: 4},\n  'Tail Glow': {bp: 0, category: 'Status', type: 'Bug'},\n  Torment: {bp: 0, category: 'Status', type: 'Dark'},\n  'Water Sport': {bp: 0, category: 'Status', type: 'Water'},\n  Wish: {bp: 0, category: 'Status', type: 'Normal'},\n  'Air Cutter': {bp: 55, type: 'Flying', target: 'allAdjacentFoes'},\n  Facade: {bp: 70, type: 'Normal', makesContact: true},\n  'Grass Whistle': {bp: 0, category: 'Status', type: 'Grass', isSound: true},\n  'Heat Wave': {bp: 100, type: 'Fire', target: 'allAdjacentFoes'},\n  'Hyper Voice': {bp: 90, type: 'Normal', isSound: true, target: 'allAdjacentFoes'},\n  'Metal Sound': {bp: 0, category: 'Status', type: 'Steel', isSound: true},\n  'Meteor Mash': {bp: 100, type: 'Steel', makesContact: true},\n  'Muddy Water': {bp: 95, type: 'Water', target: 'allAdjacentFoes'},\n  'Poison Fang': {bp: 50, type: 'Poison', makesContact: true},\n  'Rock Tomb': {bp: 50, type: 'Rock'},\n  'Will-O-Wisp': {bp: 0, category: 'Status', type: 'Fire'},\n  'Ice Ball': {bp: 30, type: 'Ice', makesContact: true},\n  'Sheer Cold': {bp: 0, type: 'Ice'},\n  Howl: {bp: 0, category: 'Status', type: 'Normal'},\n  'Luster Purge': {bp: 70, type: 'Psychic'},\n  'Mist Ball': {bp: 70, type: 'Psychic'},\n  'Psycho Boost': {bp: 140, type: 'Psychic', self: {boosts: {spa: -2}}},\n  Refresh: {bp: 0, category: 'Status', type: 'Normal'},\n  'Signal Beam': {bp: 75, type: 'Bug'},\n  'Silver Wind': {bp: 60, type: 'Bug'},\n  'Aerial Ace': {bp: 60, type: 'Flying', makesContact: true},\n  'Blast Burn': {bp: 150, type: 'Fire'},\n  'Blaze Kick': {bp: 85, type: 'Fire', makesContact: true},\n  'Bulk Up': {bp: 0, category: 'Status', type: 'Fighting'},\n  'Calm Mind': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Cosmic Power': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Crush Claw': {bp: 75, type: 'Normal', makesContact: true},\n  'Dragon Claw': {bp: 80, type: 'Dragon', makesContact: true},\n  'Dragon Dance': {bp: 0, category: 'Status', type: 'Dragon'},\n  Eruption: {bp: 150, type: 'Fire', target: 'allAdjacentFoes'},\n  'Fake Tears': {bp: 0, category: 'Status', type: 'Dark'},\n  'Feather Dance': {bp: 0, category: 'Status', type: 'Flying'},\n  Flatter: {bp: 0, category: 'Status', type: 'Dark'},\n  'Frenzy Plant': {bp: 150, type: 'Grass'},\n  Grudge: {bp: 0, category: 'Status', type: 'Ghost'},\n  'Helping Hand': {bp: 0, category: 'Status', type: 'Normal', priority: 5},\n  'Hydro Cannon': {bp: 150, type: 'Water'},\n  'Iron Defense': {bp: 0, category: 'Status', type: 'Steel'},\n  'Magical Leaf': {bp: 60, type: 'Grass'},\n  'Mud Shot': {bp: 55, type: 'Ground'},\n  'Poison Tail': {bp: 50, type: 'Poison', makesContact: true},\n  'Shadow Punch': {bp: 60, type: 'Ghost', makesContact: true},\n  'Shock Wave': {bp: 60, type: 'Electric'},\n  Superpower: {bp: 120, type: 'Fighting', self: {boosts: {atk: -1, def: -1}}, makesContact: true},\n  'Water Pulse': {bp: 60, type: 'Water'},\n  'Water Spout': {bp: 150, type: 'Water', target: 'allAdjacentFoes'},\n  Yawn: {bp: 0, category: 'Status', type: 'Normal'},\n};\n\nconst ADV: {[name: string]: MoveData} = extend(true, {}, GSC, ADV_PATCH);\n\nconst DPP_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Absorb: {category: 'Special'},\n  'Arm Thrust': {category: 'Physical'},\n  Barrage: {category: 'Physical'},\n  'Beat Up': {category: 'Physical'},\n  Bide: {priority: 1, category: 'Physical'},\n  Bind: {category: 'Physical'},\n  'Bone Rush': {category: 'Physical'},\n  Bonemerang: {category: 'Physical'},\n  Bounce: {category: 'Physical'},\n  'Brick Break': {category: 'Physical'},\n  'Bullet Seed': {category: 'Physical'},\n  Clamp: {category: 'Physical'},\n  'Comet Punch': {isPunch: true, category: 'Physical'},\n  Counter: {category: 'Physical'},\n  Covet: {makesContact: true, category: 'Physical'},\n  Crabhammer: {category: 'Physical'},\n  Dig: {bp: 80, category: 'Physical'},\n  Dive: {bp: 80, category: 'Physical'},\n  'Doom Desire': {category: 'Special'},\n  'Double-Edge': {category: 'Physical'},\n  'Double Kick': {category: 'Physical'},\n  'Double Slap': {category: 'Physical'},\n  'Dream Eater': {category: 'Special'},\n  Earthquake: {category: 'Physical'},\n  Endeavor: {category: 'Physical'},\n  Explosion: {category: 'Physical'},\n  'Extreme Speed': {category: 'Physical'},\n  'Fake Out': {makesContact: true, category: 'Physical'},\n  'Fire Spin': {category: 'Special'},\n  Flail: {category: 'Physical'},\n  Fly: {bp: 90, category: 'Physical'},\n  'Focus Punch': {isPunch: true, category: 'Physical'},\n  'Fury Attack': {category: 'Physical'},\n  'Fury Cutter': {category: 'Physical'},\n  'Fury Swipes': {category: 'Physical'},\n  'Future Sight': {category: 'Special'},\n  'Giga Drain': {category: 'Special'},\n  Gust: {category: 'Special'},\n  'High Jump Kick': {bp: 100, category: 'Physical'},\n  'Icicle Spear': {category: 'Physical'},\n  'Jump Kick': {bp: 85, category: 'Physical'},\n  'Knock Off': {category: 'Physical'},\n  'Leech Life': {category: 'Physical'},\n  Magnitude: {category: 'Physical'},\n  'Mega Drain': {category: 'Special'},\n  'Mirror Coat': {category: 'Special'},\n  Outrage: {bp: 120, category: 'Physical'},\n  'Petal Dance': {bp: 90, category: 'Special'},\n  'Pin Missile': {category: 'Physical'},\n  Psywave: {category: 'Special'},\n  Pursuit: {category: 'Physical'},\n  'Rapid Spin': {category: 'Physical'},\n  'Razor Wind': {category: 'Special'},\n  Revenge: {category: 'Physical'},\n  Reversal: {category: 'Physical'},\n  'Rock Blast': {category: 'Physical'},\n  'Sand Tomb': {category: 'Physical'},\n  'Secret Power': {category: 'Physical'},\n  'Self-Destruct': {category: 'Physical'},\n  'Sky Uppercut': {isPunch: true, category: 'Physical'},\n  'Smelling Salts': {category: 'Physical'},\n  'Solar Beam': {category: 'Special'},\n  'Spike Cannon': {category: 'Physical'},\n  'Spit Up': {category: 'Special'},\n  Stomp: {category: 'Physical'},\n  Struggle: {category: 'Physical', struggleRecoil: true},\n  Submission: {category: 'Physical'},\n  Surf: {target: 'allAdjacent', category: 'Special'},\n  Tackle: {category: 'Physical'},\n  'Take Down': {category: 'Physical'},\n  Thief: {category: 'Physical'},\n  Thrash: {category: 'Physical'},\n  Thunder: {category: 'Special'},\n  'Triple Kick': {category: 'Physical'},\n  Twineedle: {category: 'Physical'},\n  Twister: {category: 'Special'},\n  Uproar: {category: 'Special'},\n  'Volt Tackle': {category: 'Physical'},\n  Whirlpool: {category: 'Special'},\n  Wrap: {category: 'Physical'},\n  'Air Cutter': {category: 'Special'},\n  Blizzard: {category: 'Special'},\n  'Body Slam': {category: 'Physical'},\n  Bubble: {category: 'Special'},\n  Extrasensory: {category: 'Special'},\n  Facade: {category: 'Physical'},\n  'Fire Blast': {category: 'Special'},\n  Flamethrower: {category: 'Special'},\n  'Heat Wave': {category: 'Special'},\n  'Hidden Power': {category: 'Special'},\n  'Hidden Power Bug': {category: 'Special'},\n  'Hidden Power Dark': {category: 'Special'},\n  'Hidden Power Dragon': {category: 'Special'},\n  'Hidden Power Electric': {category: 'Special'},\n  'Hidden Power Fighting': {category: 'Special'},\n  'Hidden Power Fire': {category: 'Special'},\n  'Hidden Power Flying': {category: 'Special'},\n  'Hidden Power Ghost': {category: 'Special'},\n  'Hidden Power Grass': {category: 'Special'},\n  'Hidden Power Ground': {category: 'Special'},\n  'Hidden Power Ice': {category: 'Special'},\n  'Hidden Power Poison': {category: 'Special'},\n  'Hidden Power Psychic': {category: 'Special'},\n  'Hidden Power Rock': {category: 'Special'},\n  'Hidden Power Steel': {category: 'Special'},\n  'Hidden Power Water': {category: 'Special'},\n  'Hydro Pump': {category: 'Special'},\n  'Hyper Voice': {category: 'Special'},\n  'Ice Beam': {category: 'Special'},\n  Lick: {category: 'Physical'},\n  'Meteor Mash': {isPunch: true, category: 'Physical'},\n  'Muddy Water': {category: 'Special'},\n  Overheat: {category: 'Special', makesContact: false},\n  'Poison Fang': {isBite: true, category: 'Physical'},\n  'Rock Tomb': {category: 'Physical'},\n  'Skull Bash': {category: 'Physical'},\n  Smog: {category: 'Special'},\n  Snore: {category: 'Special'},\n  Thunderbolt: {category: 'Special'},\n  'Vine Whip': {category: 'Physical'},\n  'Weather Ball': {category: 'Special'},\n  'Ice Ball': {category: 'Physical'},\n  Rollout: {category: 'Physical'},\n  'Sheer Cold': {category: 'Special'},\n  Aeroblast: {category: 'Special'},\n  'Bone Club': {category: 'Physical'},\n  Constrict: {category: 'Physical'},\n  'Dizzy Punch': {isPunch: true, category: 'Physical'},\n  'Dragon Rage': {category: 'Special'},\n  'Egg Bomb': {category: 'Physical'},\n  'Feint Attack': {makesContact: true, category: 'Physical'},\n  Frustration: {category: 'Physical'},\n  'Hyper Fang': {isBite: true, category: 'Physical'},\n  'Karate Chop': {category: 'Physical'},\n  'Low Kick': {category: 'Physical'},\n  'Luster Purge': {category: 'Special'},\n  'Mist Ball': {category: 'Special'},\n  'Needle Arm': {category: 'Physical'},\n  'Psycho Boost': {category: 'Special'},\n  Rage: {category: 'Physical'},\n  Return: {category: 'Physical'},\n  'Rolling Kick': {category: 'Physical'},\n  'Sacred Fire': {category: 'Physical'},\n  'Signal Beam': {category: 'Special'},\n  'Silver Wind': {category: 'Special'},\n  'Sonic Boom': {category: 'Special'},\n  Acid: {category: 'Special'},\n  'Aerial Ace': {category: 'Physical'},\n  'Ancient Power': {category: 'Special', makesContact: false},\n  Astonish: {category: 'Physical'},\n  'Aurora Beam': {category: 'Special'},\n  Bite: {isBite: true, category: 'Physical'},\n  'Blast Burn': {category: 'Special'},\n  'Blaze Kick': {category: 'Physical'},\n  'Bubble Beam': {category: 'Special'},\n  Confusion: {category: 'Special'},\n  'Cross Chop': {category: 'Physical'},\n  Crunch: {isBite: true, category: 'Physical'},\n  'Crush Claw': {category: 'Physical'},\n  Cut: {category: 'Physical'},\n  'Dragon Breath': {category: 'Special'},\n  'Dragon Claw': {category: 'Physical'},\n  'Drill Peck': {category: 'Physical'},\n  'Dynamic Punch': {isPunch: true, category: 'Physical'},\n  Ember: {category: 'Special'},\n  Eruption: {category: 'Special'},\n  'False Swipe': {category: 'Physical'},\n  'Fire Punch': {isPunch: true, category: 'Physical'},\n  Fissure: {category: 'Physical'},\n  'Flame Wheel': {category: 'Physical'},\n  'Frenzy Plant': {category: 'Special'},\n  Guillotine: {category: 'Physical'},\n  Headbutt: {category: 'Physical'},\n  'Horn Attack': {category: 'Physical'},\n  'Horn Drill': {category: 'Physical'},\n  'Hydro Cannon': {category: 'Special'},\n  'Hyper Beam': {category: 'Special'},\n  'Ice Punch': {isPunch: true, category: 'Physical'},\n  'Icy Wind': {category: 'Special'},\n  'Iron Tail': {category: 'Physical'},\n  'Leaf Blade': {bp: 90, category: 'Physical'},\n  'Mach Punch': {isPunch: true, category: 'Physical'},\n  'Magical Leaf': {category: 'Special'},\n  Megahorn: {category: 'Physical'},\n  'Mega Kick': {category: 'Physical'},\n  'Mega Punch': {isPunch: true, category: 'Physical'},\n  'Metal Claw': {category: 'Physical'},\n  'Mud Shot': {category: 'Special'},\n  'Mud-Slap': {category: 'Special'},\n  'Night Shade': {category: 'Special'},\n  Octazooka: {category: 'Special'},\n  'Paleo Wave': {category: 'Special'},\n  'Pay Day': {category: 'Physical'},\n  Peck: {category: 'Physical'},\n  'Poison Sting': {category: 'Physical'},\n  'Poison Tail': {category: 'Physical'},\n  Pound: {category: 'Physical'},\n  'Powder Snow': {category: 'Special'},\n  Present: {category: 'Physical'},\n  Psybeam: {category: 'Special'},\n  Psychic: {category: 'Special'},\n  'Quick Attack': {category: 'Physical'},\n  'Razor Leaf': {category: 'Physical'},\n  'Rock Slide': {category: 'Physical'},\n  'Rock Smash': {bp: 40, category: 'Physical'},\n  'Rock Throw': {category: 'Physical'},\n  Scratch: {category: 'Physical'},\n  'Seismic Toss': {category: 'Physical'},\n  'Shadow Ball': {category: 'Special'},\n  'Shadow Punch': {isPunch: true, category: 'Physical'},\n  'Shadow Strike': {category: 'Physical'},\n  'Shock Wave': {category: 'Special'},\n  'Sky Attack': {category: 'Physical'},\n  Slam: {category: 'Physical'},\n  Slash: {category: 'Physical'},\n  Sludge: {category: 'Special'},\n  'Sludge Bomb': {category: 'Special'},\n  Spark: {category: 'Physical'},\n  'Steel Wing': {category: 'Physical'},\n  Strength: {category: 'Physical'},\n  'Super Fang': {category: 'Physical'},\n  Superpower: {category: 'Physical'},\n  Swift: {category: 'Special'},\n  'Thunder Punch': {isPunch: true, category: 'Physical'},\n  'Thunder Shock': {category: 'Special'},\n  'Tri Attack': {category: 'Special'},\n  'Vise Grip': {category: 'Physical'},\n  'Vital Throw': {category: 'Physical'},\n  Waterfall: {category: 'Physical'},\n  'Water Gun': {category: 'Special'},\n  'Water Pulse': {category: 'Special'},\n  'Water Spout': {category: 'Special'},\n  'Wing Attack': {category: 'Physical'},\n  'Zap Cannon': {bp: 120, category: 'Special'},\n  Acupressure: {bp: 0, type: 'Normal'},\n  'Aqua Ring': {bp: 0, type: 'Water'},\n  Assurance: {\n    bp: 50,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Avalanche: {\n    bp: 60,\n    type: 'Ice',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Brave Bird': {\n    bp: 120,\n    type: 'Flying',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Bug Bite': {\n    bp: 60,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Chatter: {bp: 60, type: 'Flying', isSound: true, category: 'Special'},\n  Copycat: {bp: 0, type: 'Normal'},\n  'Crush Grip': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Defog: {bp: 0, type: 'Flying'},\n  'Double Hit': {\n    bp: 35,\n    type: 'Normal',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Drain Punch': {\n    bp: 60,\n    type: 'Fighting',\n    drain: [1, 2],\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  Embargo: {bp: 0, type: 'Dark'},\n  Feint: {\n    bp: 50,\n    type: 'Normal',\n    priority: 2,\n    breaksProtect: true,\n    category: 'Physical',\n  },\n  'Fire Fang': {\n    bp: 65,\n    type: 'Fire',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Flare Blitz': {\n    bp: 120,\n    type: 'Fire',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  Fling: {bp: 0, type: 'Dark', category: 'Physical'},\n  Gravity: {bp: 0, type: 'Psychic'},\n  'Head Smash': {\n    bp: 150,\n    type: 'Rock',\n    recoil: [1, 2],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Heal Block': {bp: 0, type: 'Psychic', target: 'allAdjacentFoes'},\n  'Healing Wish': {bp: 0, type: 'Psychic'},\n  'Heal Order': {bp: 0, type: 'Bug'},\n  'Last Resort': {\n    bp: 130,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Lucky Chant': {bp: 0, type: 'Normal'},\n  'Lunar Dance': {bp: 0, type: 'Psychic'},\n  'Magma Storm': {bp: 120, type: 'Fire', category: 'Special'},\n  'Magnet Rise': {bp: 0, type: 'Electric'},\n  'Me First': {bp: 0, type: 'Normal'},\n  'Metal Burst': {bp: 0, type: 'Steel', category: 'Physical'},\n  'Miracle Eye': {bp: 0, type: 'Psychic'},\n  'Natural Gift': {bp: 0, type: 'Normal', category: 'Physical'},\n  Payback: {\n    bp: 50,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Pluck: {\n    bp: 60,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Power Trick': {bp: 0, type: 'Psychic'},\n  Roost: {bp: 0, type: 'Flying'},\n  'Stealth Rock': {bp: 0, type: 'Rock'},\n  'Sucker Punch': {\n    bp: 80,\n    type: 'Dark',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Switcheroo: {bp: 0, type: 'Dark'},\n  Tailwind: {bp: 0, type: 'Flying'},\n  'Toxic Spikes': {bp: 0, type: 'Poison'},\n  'Trick Room': {bp: 0, type: 'Psychic'},\n  'U-turn': {\n    bp: 70,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Wake-Up Slap': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Wood Hammer': {\n    bp: 120,\n    type: 'Grass',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Worry Seed': {bp: 0, type: 'Grass'},\n  'Wring Out': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Air Slash': {bp: 75, type: 'Flying', category: 'Special'},\n  'Aura Sphere': {bp: 90, type: 'Fighting', category: 'Special'},\n  'Bug Buzz': {bp: 90, type: 'Bug', isSound: true, category: 'Special'},\n  'Draco Meteor': {bp: 140, type: 'Dragon', self: {boosts: {spa: -2}}, category: 'Special'},\n  'Dragon Pulse': {bp: 90, type: 'Dragon', category: 'Special'},\n  'Dragon Rush': {\n    bp: 100,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Energy Ball': {bp: 80, type: 'Grass', category: 'Special'},\n  'Gunk Shot': {bp: 120, type: 'Poison', category: 'Physical'},\n  'Gyro Ball': {\n    bp: 0,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Leaf Storm': {bp: 140, type: 'Grass', self: {boosts: {spa: -2}}, category: 'Special'},\n  'Power Gem': {bp: 70, type: 'Rock', category: 'Special'},\n  'Psycho Shift': {bp: 0, type: 'Psychic'},\n  'Shadow Force': {\n    bp: 120,\n    type: 'Ghost',\n    breaksProtect: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Dark Void': {bp: 0, type: 'Dark', target: 'allAdjacentFoes'},\n  'Gastro Acid': {bp: 0, type: 'Poison'},\n  Captivate: {bp: 0, type: 'Normal', target: 'allAdjacentFoes'},\n  'Grass Knot': {\n    bp: 0,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Heart Swap': {bp: 0, type: 'Psychic'},\n  Judgment: {bp: 100, type: 'Normal', category: 'Special'},\n  'Magnet Bomb': {bp: 60, type: 'Steel', category: 'Physical'},\n  'Mirror Shot': {bp: 65, type: 'Steel', category: 'Special'},\n  'Mud Bomb': {bp: 65, type: 'Ground', category: 'Special'},\n  'Ominous Wind': {bp: 60, type: 'Ghost', category: 'Special'},\n  Punishment: {\n    bp: 0,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Roar of Time': {bp: 150, type: 'Dragon', category: 'Special'},\n  'Rock Climb': {\n    bp: 90,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Seed Flare': {bp: 120, type: 'Grass', category: 'Special'},\n  'Spacial Rend': {bp: 100, type: 'Dragon', category: 'Special'},\n  'Trump Card': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Aqua Jet': {\n    bp: 40,\n    type: 'Water',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Aqua Tail': {\n    bp: 90,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Attack Order': {bp: 90, type: 'Bug', category: 'Physical'},\n  Brine: {bp: 65, type: 'Water', category: 'Special'},\n  'Bullet Punch': {\n    bp: 40,\n    type: 'Steel',\n    priority: 1,\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  'Charge Beam': {bp: 50, type: 'Electric', category: 'Special'},\n  'Close Combat': {\n    bp: 120,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Cross Poison': {\n    bp: 70,\n    type: 'Poison',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Dark Pulse': {bp: 80, type: 'Dark', category: 'Special'},\n  'Defend Order': {bp: 0, type: 'Bug'},\n  Discharge: {\n    bp: 80,\n    type: 'Electric',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Earth Power': {bp: 90, type: 'Ground', category: 'Special'},\n  'Flash Cannon': {bp: 80, type: 'Steel', category: 'Special'},\n  'Focus Blast': {bp: 120, type: 'Fighting', category: 'Special'},\n  'Force Palm': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Giga Impact': {\n    bp: 150,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Guard Swap': {bp: 0, type: 'Psychic'},\n  'Hammer Arm': {\n    bp: 100,\n    type: 'Fighting',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  'Ice Fang': {\n    bp: 65,\n    type: 'Ice',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Ice Shard': {bp: 40, type: 'Ice', priority: 1, category: 'Physical'},\n  'Iron Head': {\n    bp: 80,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Lava Plume': {\n    bp: 80,\n    type: 'Fire',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Nasty Plot': {bp: 0, type: 'Dark'},\n  'Night Slash': {\n    bp: 70,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Poison Jab': {\n    bp: 80,\n    type: 'Poison',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Power Swap': {bp: 0, type: 'Psychic'},\n  'Power Whip': {\n    bp: 120,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Psycho Cut': {bp: 70, type: 'Psychic', category: 'Physical'},\n  'Rock Polish': {bp: 0, type: 'Rock'},\n  'Rock Wrecker': {bp: 150, type: 'Rock', category: 'Physical'},\n  'Seed Bomb': {bp: 80, type: 'Grass', category: 'Physical'},\n  'Shadow Claw': {\n    bp: 70,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Shadow Sneak': {\n    bp: 40,\n    type: 'Ghost',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Stone Edge': {bp: 100, type: 'Rock', category: 'Physical'},\n  'Thunder Fang': {\n    bp: 65,\n    type: 'Electric',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Vacuum Wave': {\n    bp: 40,\n    type: 'Fighting',\n    priority: 1,\n    category: 'Special',\n  },\n  'X-Scissor': {\n    bp: 80,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Zen Headbutt': {\n    bp: 80,\n    type: 'Psychic',\n    makesContact: true,\n    category: 'Physical',\n  },\n};\n\nconst DPP: {[name: string]: MoveData} = extend(true, {}, ADV, DPP_PATCH);\n\nconst BW_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Air Slash': {secondaries: true},\n  Blizzard: {secondaries: true},\n  'Body Slam': {secondaries: true},\n  Bounce: {secondaries: true},\n  Bubble: {secondaries: true},\n  'Brave Bird': {recoil: [33, 100]},\n  'Bug Buzz': {secondaries: true},\n  Chatter: {secondaries: true},\n  Covet: {bp: 60},\n  'Dragon Rush': {secondaries: true},\n  'Drain Punch': {bp: 75},\n  'Energy Ball': {secondaries: true},\n  Extrasensory: {secondaries: true},\n  Feint: {bp: 30},\n  Detect: {priority: 4},\n  'Double-Edge': {recoil: [33, 100]},\n  Protect: {priority: 4},\n  'Fire Blast': {secondaries: true},\n  'Fire Spin': {bp: 35},\n  Flamethrower: {secondaries: true},\n  'Fury Cutter': {bp: 20},\n  'Future Sight': {bp: 100, type: 'Psychic'},\n  'Giga Drain': {bp: 75},\n  'Gunk Shot': {secondaries: true},\n  'Heat Wave': {secondaries: true},\n  'Ice Beam': {secondaries: true},\n  Lick: {secondaries: true},\n  'Meteor Mash': {secondaries: true},\n  'Muddy Water': {secondaries: true},\n  Overheat: {},\n  'Poison Fang': {secondaries: true},\n  'Poison Gas': {target: 'allAdjacentFoes'},\n  'Rock Tomb': {secondaries: true},\n  'Sand Tomb': {bp: 35},\n  'Secret Power': {secondaries: true},\n  Smog: {secondaries: true},\n  Snore: {secondaries: true},\n  Stomp: {secondaries: true},\n  Thunder: {secondaries: true},\n  Thunderbolt: {secondaries: true},\n  Uproar: {bp: 90},\n  Whirlpool: {bp: 35},\n  'Petal Dance': {bp: 120},\n  Tackle: {bp: 50},\n  Thrash: {bp: 120},\n  'Bone Club': {secondaries: true},\n  Constrict: {secondaries: true},\n  'Dizzy Punch': {secondaries: true},\n  'Hyper Fang': {secondaries: true},\n  'Jump Kick': {bp: 100},\n  'Luster Purge': {secondaries: true},\n  'Mirror Shot': {secondaries: true},\n  'Mist Ball': {secondaries: true},\n  'Mud Bomb': {secondaries: true},\n  'Needle Arm': {secondaries: true},\n  'Ominous Wind': {secondaries: true},\n  'Rock Climb': {secondaries: true},\n  'Rolling Kick': {secondaries: true},\n  'Sacred Fire': {secondaries: true},\n  'Seed Flare': {secondaries: true},\n  'Signal Beam': {secondaries: true},\n  'Silver Wind': {secondaries: true},\n  Twineedle: {secondaries: true},\n  Acid: {secondaries: true},\n  'Ancient Power': {secondaries: true},\n  Astonish: {secondaries: true},\n  'Aurora Beam': {secondaries: true},\n  'Beat Up': {bp: 0},\n  Bite: {secondaries: true},\n  'Blaze Kick': {secondaries: true},\n  'Bubble Beam': {secondaries: true},\n  'Bullet Seed': {bp: 25},\n  'Charge Beam': {secondaries: true},\n  Confusion: {secondaries: true},\n  'Cross Poison': {secondaries: true},\n  Crunch: {secondaries: true},\n  'Crush Claw': {secondaries: true},\n  Curse: {type: 'Ghost'},\n  'Dark Pulse': {secondaries: true},\n  Discharge: {secondaries: true},\n  'Doom Desire': {bp: 140},\n  'Dragon Breath': {secondaries: true},\n  'Dynamic Punch': {secondaries: true},\n  'Earth Power': {secondaries: true},\n  'Extreme Speed': {priority: 2},\n  Ember: {secondaries: true},\n  'Fake Out': {secondaries: true, priority: 3},\n  'Fire Fang': {secondaries: true},\n  'Fire Punch': {secondaries: true},\n  'Flame Wheel': {secondaries: true},\n  'Flare Blitz': {secondaries: true, recoil: [33, 100]},\n  'Flash Cannon': {secondaries: true},\n  'Focus Blast': {secondaries: true},\n  'Force Palm': {secondaries: true},\n  Headbutt: {secondaries: true},\n  'High Jump Kick': {bp: 130},\n  'Ice Fang': {secondaries: true},\n  'Ice Punch': {secondaries: true},\n  'Icicle Spear': {bp: 25},\n  'Icy Wind': {secondaries: true},\n  'Iron Head': {secondaries: true},\n  'Iron Tail': {secondaries: true},\n  'Last Resort': {bp: 140},\n  'Lava Plume': {secondaries: true},\n  'Metal Claw': {secondaries: true},\n  'Mud Shot': {secondaries: true},\n  'Mud-Slap': {secondaries: true},\n  Octazooka: {secondaries: true},\n  'Paleo Wave': {secondaries: true},\n  'Poison Jab': {secondaries: true},\n  'Poison Sting': {secondaries: true},\n  'Poison Tail': {secondaries: true},\n  'Powder Snow': {secondaries: true},\n  Psybeam: {secondaries: true},\n  Psychic: {secondaries: true},\n  'Rock Slide': {secondaries: true},\n  'Rock Smash': {secondaries: true},\n  'Shadow Ball': {secondaries: true},\n  'Shadow Strike': {secondaries: true},\n  'Sky Attack': {secondaries: true},\n  Sludge: {secondaries: true},\n  'Sludge Bomb': {secondaries: true},\n  Spark: {secondaries: true},\n  'Steel Wing': {secondaries: true},\n  'Thunder Fang': {secondaries: true},\n  'Thunder Punch': {secondaries: true},\n  'Thunder Shock': {secondaries: true},\n  'Tri Attack': {secondaries: true},\n  Twister: {secondaries: true},\n  'Volt Tackle': {secondaries: true, recoil: [33, 100]},\n  'Wood Hammer': {recoil: [33, 100]},\n  Waterfall: {secondaries: true},\n  'Water Pulse': {secondaries: true},\n  'Zap Cannon': {secondaries: true},\n  'Zen Headbutt': {secondaries: true},\n  Autotomize: {bp: 0, type: 'Steel'},\n  Bestow: {bp: 0, type: 'Normal'},\n  'Echoed Voice': {bp: 40, type: 'Normal', isSound: true, category: 'Special'},\n  'Electro Ball': {bp: 0, type: 'Electric', category: 'Special'},\n  Entrainment: {bp: 0, type: 'Normal'},\n  'Final Gambit': {\n    bp: 0,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Fire Pledge': {bp: 50, type: 'Fire', category: 'Special'},\n  'Frost Breath': {bp: 40, type: 'Ice', willCrit: true, category: 'Special'},\n  'Grass Pledge': {bp: 50, type: 'Grass', category: 'Special'},\n  'Heal Pulse': {bp: 0, type: 'Psychic'},\n  'Heat Crash': {\n    bp: 0,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Hex: {bp: 50, type: 'Ghost', category: 'Special'},\n  'Horn Leech': {\n    bp: 75,\n    type: 'Grass',\n    drain: [1, 2],\n    makesContact: true,\n    category: 'Physical',\n  },\n  Hurricane: {\n    bp: 120,\n    type: 'Flying',\n    category: 'Special',\n    secondaries: true,\n  },\n  Incinerate: {bp: 30, type: 'Fire', target: 'allAdjacentFoes', category: 'Special'},\n  'Low Sweep': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Magic Room': {bp: 0, type: 'Psychic'},\n  'Quick Guard': {bp: 0, type: 'Fighting', priority: 3},\n  'Rage Powder': {bp: 0, type: 'Bug', priority: 3},\n  'Relic Song': {\n    bp: 75,\n    type: 'Normal',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Round: {bp: 60, type: 'Normal', isSound: true, category: 'Special'},\n  'Sacred Sword': {\n    bp: 90,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n  },\n  Scald: {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Simple Beam': {bp: 0, type: 'Normal'},\n  'Sky Drop': {\n    bp: 60,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Snarl: {\n    bp: 55,\n    type: 'Dark',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Soak: {bp: 0, type: 'Water'},\n  Steamroller: {\n    bp: 65,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Storm Throw': {\n    bp: 40,\n    type: 'Fighting',\n    willCrit: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Struggle Bug': {\n    bp: 30,\n    type: 'Bug',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Synchronoise: {\n    bp: 70,\n    type: 'Psychic',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Techno Blast': {bp: 85, type: 'Normal', category: 'Special'},\n  Telekinesis: {bp: 0, type: 'Psychic'},\n  'Water Pledge': {bp: 50, type: 'Water', category: 'Special'},\n  'Wide Guard': {bp: 0, type: 'Rock', priority: 3},\n  'Wonder Room': {bp: 0, type: 'Psychic'},\n  'Ally Switch': {bp: 0, type: 'Psychic', priority: 1},\n  'Flame Burst': {bp: 70, type: 'Fire', category: 'Special'},\n  'Heavy Slam': {\n    bp: 0,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Reflect Type': {bp: 0, type: 'Normal'},\n  'Volt Switch': {bp: 70, type: 'Electric', category: 'Special'},\n  'Chip Away': {\n    bp: 70,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n  },\n  'Fiery Dance': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Head Charge': {\n    bp: 120,\n    type: 'Normal',\n    recoil: [1, 4],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Heart Stamp': {\n    bp: 60,\n    type: 'Psychic',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Quash: {bp: 0, type: 'Dark'},\n  'Searing Shot': {\n    bp: 100,\n    type: 'Fire',\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Acid Spray': {\n    bp: 40,\n    type: 'Poison',\n    category: 'Special',\n    secondaries: true,\n  },\n  Acrobatics: {\n    bp: 55,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'After You': {bp: 0, type: 'Normal'},\n  'Blue Flare': {\n    bp: 130,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Bolt Strike': {\n    bp: 130,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Bulldoze: {\n    bp: 60,\n    type: 'Ground',\n    target: 'allAdjacent',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Circle Throw': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Clear Smog': {bp: 50, type: 'Poison', category: 'Special'},\n  Coil: {bp: 0, type: 'Poison'},\n  'Cotton Guard': {bp: 0, type: 'Grass'},\n  'Dragon Tail': {\n    bp: 60,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Drill Run': {\n    bp: 80,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Dual Chop': {\n    bp: 40,\n    type: 'Dragon',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Electroweb: {\n    bp: 55,\n    type: 'Electric',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Flame Charge': {\n    bp: 50,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Foul Play': {\n    bp: 95,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    overrideOffensivePokemon: 'target',\n  },\n  'Freeze Shock': {\n    bp: 140,\n    type: 'Ice',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Fusion Bolt': {bp: 100, type: 'Electric', category: 'Physical'},\n  'Fusion Flare': {bp: 100, type: 'Fire', category: 'Special'},\n  'Gear Grind': {\n    bp: 50,\n    type: 'Steel',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Glaciate: {\n    bp: 65,\n    type: 'Ice',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Guard Split': {bp: 0, type: 'Psychic'},\n  'Hone Claws': {bp: 0, type: 'Dark'},\n  'Ice Burn': {\n    bp: 140,\n    type: 'Ice',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Icicle Crash': {\n    bp: 85,\n    type: 'Ice',\n    category: 'Physical',\n    secondaries: true,\n  },\n  Inferno: {\n    bp: 100,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Leaf Tornado': {\n    bp: 65,\n    type: 'Grass',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Night Daze': {\n    bp: 85,\n    type: 'Dark',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Power Split': {bp: 0, type: 'Psychic'},\n  Psyshock: {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  Psystrike: {\n    bp: 100,\n    type: 'Psychic',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  'Quiver Dance': {bp: 0, type: 'Bug'},\n  'Razor Shell': {\n    bp: 75,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Retaliate: {\n    bp: 70,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Secret Sword': {\n    bp: 85,\n    type: 'Fighting',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  'Shell Smash': {bp: 0, type: 'Normal'},\n  'Shift Gear': {bp: 0, type: 'Steel'},\n  'Sludge Wave': {\n    bp: 95,\n    type: 'Poison',\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Smack Down': {bp: 50, type: 'Rock', category: 'Physical'},\n  'Stored Power': {bp: 20, type: 'Psychic', category: 'Special'},\n  'Tail Slap': {\n    bp: 25,\n    type: 'Normal',\n    multihit: [2, 5],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'V-create': {\n    bp: 180,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Venoshock: {bp: 65, type: 'Poison', category: 'Special'},\n  'Wild Charge': {\n    bp: 90,\n    type: 'Electric',\n    recoil: [1, 4],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Work Up': {bp: 0, type: 'Normal'},\n};\n\nconst BW: {[name: string]: MoveData} = extend(true, {}, DPP, BW_PATCH);\n\ndelete BW['Faint Attack'];\n\nconst XY_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Ice Ball': {isBullet: true},\n  'Knock Off': {bp: 65},\n  Thief: {bp: 60},\n  Barrage: {isBullet: true},\n  Bubble: {bp: 40},\n  Chatter: {bp: 65},\n  'Egg Bomb': {isBullet: true},\n  'Follow Me': {priority: 2},\n  Hurricane: {bp: 110},\n  'Hidden Power': {bp: 60},\n  'Hidden Power Bug': {bp: 60},\n  'Hidden Power Dark': {bp: 60},\n  'Hidden Power Dragon': {bp: 60},\n  'Hidden Power Electric': {bp: 60},\n  'Hidden Power Fighting': {bp: 60},\n  'Hidden Power Fire': {bp: 60},\n  'Hidden Power Flying': {bp: 60},\n  'Hidden Power Ghost': {bp: 60},\n  'Hidden Power Grass': {bp: 60},\n  'Hidden Power Ground': {bp: 60},\n  'Hidden Power Ice': {bp: 60},\n  'Hidden Power Poison': {bp: 60},\n  'Hidden Power Psychic': {bp: 60},\n  'Hidden Power Rock': {bp: 60},\n  'Hidden Power Steel': {bp: 60},\n  'Hidden Power Water': {bp: 60},\n  'Magma Storm': {bp: 100},\n  'Magnet Bomb': {isBullet: true},\n  'Mist Ball': {isBullet: true},\n  Moonlight: {type: 'Fairy'},\n  'Mud Bomb': {isBullet: true},\n  'Searing Shot': {isBullet: true},\n  'Smelling Salts': {bp: 70},\n  Synchronoise: {bp: 120},\n  'Techno Blast': {bp: 120},\n  Thunder: {bp: 110},\n  'Wake-Up Slap': {bp: 70},\n  'Acid Spray': {isBullet: true},\n  'Air Cutter': {bp: 60},\n  'Ancient Power': {},\n  Assurance: {bp: 60},\n  'Aura Sphere': {bp: 80, isBullet: true, isPulse: true},\n  Blizzard: {bp: 110},\n  'Bullet Seed': {isBullet: true},\n  Charm: {type: 'Fairy'},\n  'Cotton Spore': {target: 'allAdjacentFoes'},\n  Crabhammer: {bp: 100},\n  'Dark Pulse': {isPulse: true},\n  'Draco Meteor': {bp: 130},\n  'Dragon Pulse': {bp: 85, isPulse: true},\n  'Electro Ball': {isBullet: true},\n  'Energy Ball': {bp: 90, isBullet: true},\n  'Final Gambit': {makesContact: false},\n  'Fire Blast': {bp: 110},\n  'Fire Pledge': {bp: 80},\n  Flamethrower: {bp: 90},\n  'Focus Blast': {isBullet: true},\n  'Frost Breath': {bp: 60},\n  'Fury Cutter': {bp: 40},\n  'Future Sight': {bp: 120},\n  'Grass Pledge': {bp: 80},\n  'Gyro Ball': {isBullet: true},\n  'Heal Pulse': {isPulse: true},\n  'Heat Wave': {bp: 95},\n  Hex: {bp: 65},\n  'Hydro Pump': {bp: 110},\n  'Ice Beam': {bp: 90},\n  Incinerate: {bp: 60},\n  'Leaf Storm': {bp: 130},\n  Lick: {bp: 30},\n  'Low Sweep': {bp: 65},\n  'Meteor Mash': {bp: 90},\n  'Muddy Water': {bp: 90},\n  Octazooka: {isBullet: true},\n  Overheat: {bp: 130},\n  'Pin Missile': {bp: 25},\n  'Power Gem': {bp: 80},\n  'Rage Powder': {priority: 2},\n  'Rock Tomb': {bp: 60},\n  'Rock Wrecker': {isBullet: true},\n  'Seed Bomb': {isBullet: true},\n  'Shadow Ball': {isBullet: true},\n  'Skull Bash': {bp: 130},\n  'Sludge Bomb': {isBullet: true},\n  Smog: {bp: 30},\n  Snore: {bp: 50},\n  'Storm Throw': {bp: 60},\n  'Struggle Bug': {bp: 50},\n  Surf: {bp: 90},\n  'Sweet Kiss': {type: 'Fairy'},\n  Thunderbolt: {bp: 90},\n  'Vine Whip': {bp: 45},\n  'Water Pledge': {bp: 80},\n  'Water Pulse': {isPulse: true},\n  'Weather Ball': {isBullet: true},\n  'Zap Cannon': {isBullet: true},\n  'Diamond Storm': {\n    bp: 100,\n    type: 'Rock',\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Fell Stinger': {\n    bp: 30,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Flying Press': {\n    bp: 80,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Hyperspace Fury': {\n    bp: 100,\n    type: 'Dark',\n    breaksProtect: true,\n    category: 'Physical',\n  },\n  'Hyperspace Hole': {\n    bp: 80,\n    type: 'Psychic',\n    breaksProtect: true,\n    category: 'Special',\n  },\n  'King\\'s Shield': {bp: 0, type: 'Steel', priority: 4},\n  'Misty Terrain': {bp: 0, type: 'Fairy'},\n  'Mystical Fire': {\n    bp: 65,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Parabolic Charge': {\n    bp: 50,\n    type: 'Electric',\n    drain: [1, 2],\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Parting Shot': {bp: 0, type: 'Dark', isSound: true},\n  'Phantom Force': {\n    bp: 90,\n    type: 'Ghost',\n    breaksProtect: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Powder: {bp: 0, type: 'Bug', priority: 1},\n  'Spiky Shield': {bp: 0, type: 'Grass', priority: 4},\n  'Thousand Arrows': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Thousand Waves': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Water Shuriken': {\n    bp: 15,\n    type: 'Water',\n    multihit: [2, 5],\n    priority: 1,\n    category: 'Physical',\n  },\n  'Dragon Ascent': {\n    bp: 120,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Electric Terrain': {bp: 0, type: 'Electric'},\n  Geomancy: {bp: 0, type: 'Fairy'},\n  'Grassy Terrain': {bp: 0, type: 'Grass'},\n  'Ion Deluge': {bp: 0, type: 'Electric', priority: 1},\n  'Land\\'s Wrath': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Light of Ruin': {bp: 140, type: 'Fairy', recoil: [1, 2], category: 'Special'},\n  'Oblivion Wing': {\n    bp: 80,\n    type: 'Flying',\n    drain: [3, 4],\n    category: 'Special',\n  },\n  'Origin Pulse': {\n    bp: 110,\n    type: 'Water',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    isPulse: true,\n  },\n  'Precipice Blades': {\n    bp: 120,\n    type: 'Ground',\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n  },\n  Rototiller: {bp: 0, type: 'Ground'},\n  'Steam Eruption': {\n    bp: 110,\n    type: 'Water',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Aromatic Mist': {bp: 0, type: 'Fairy'},\n  'Baby-Doll Eyes': {bp: 0, type: 'Fairy', priority: 1},\n  Belch: {bp: 120, type: 'Poison', category: 'Special'},\n  Boomburst: {\n    bp: 140,\n    type: 'Normal',\n    isSound: true,\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  Celebrate: {bp: 0, type: 'Normal'},\n  Confide: {bp: 0, type: 'Normal', isSound: true},\n  'Crafty Shield': {bp: 0, type: 'Fairy', priority: 3},\n  'Dazzling Gleam': {bp: 80, type: 'Fairy', target: 'allAdjacentFoes', category: 'Special'},\n  'Disarming Voice': {\n    bp: 40,\n    type: 'Fairy',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n  },\n  'Draining Kiss': {\n    bp: 50,\n    type: 'Fairy',\n    drain: [3, 4],\n    makesContact: true,\n    category: 'Special',\n  },\n  'Eerie Impulse': {bp: 0, type: 'Electric'},\n  Electrify: {bp: 0, type: 'Electric'},\n  'Fairy Lock': {bp: 0, type: 'Fairy'},\n  'Fairy Wind': {bp: 40, type: 'Fairy', category: 'Special'},\n  'Flower Shield': {bp: 0, type: 'Fairy'},\n  'Forest\\'s Curse': {bp: 0, type: 'Grass'},\n  'Freeze-Dry': {\n    bp: 70,\n    type: 'Ice',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Happy Hour': {bp: 0, type: 'Normal'},\n  'Hold Back': {\n    bp: 40,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Hold Hands': {bp: 0, type: 'Normal'},\n  Infestation: {bp: 20, type: 'Bug', makesContact: true, category: 'Special'},\n  'Magnetic Flux': {bp: 0, type: 'Electric'},\n  'Mat Block': {bp: 0, type: 'Fighting'},\n  Moonblast: {\n    bp: 95,\n    type: 'Fairy',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Noble Roar': {bp: 0, type: 'Normal', isSound: true},\n  Nuzzle: {\n    bp: 20,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Petal Blizzard': {\n    bp: 90,\n    type: 'Grass',\n    target: 'allAdjacent',\n    category: 'Physical',\n  },\n  'Play Nice': {bp: 0, type: 'Normal'},\n  'Play Rough': {\n    bp: 90,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Power-Up Punch': {\n    bp: 40,\n    type: 'Fighting',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Sticky Web': {bp: 0, type: 'Bug'},\n  'Topsy-Turvy': {bp: 0, type: 'Dark'},\n  'Trick-or-Treat': {bp: 0, type: 'Ghost'},\n  'Venom Drench': {bp: 0, type: 'Poison', target: 'allAdjacentFoes'},\n};\n\nconst XY: {[name: string]: MoveData} = extend(true, {}, BW, XY_PATCH);\n\nconst SM_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Ally Switch': {priority: 2},\n  Aeroblast: {zp: 180},\n  Barrage: {zp: 100},\n  Bide: {zp: 100},\n  'Bone Club': {zp: 120},\n  Bonemerang: {zp: 100},\n  Bubble: {zp: 100},\n  Chatter: {zp: 120},\n  'Chip Away': {zp: 140},\n  Clamp: {zp: 100},\n  'Comet Punch': {zp: 100},\n  Constrict: {zp: 100},\n  'Crush Grip': {zp: 190},\n  'Diamond Storm': {zp: 180},\n  'Dizzy Punch': {zp: 140},\n  'Double Slap': {zp: 100},\n  'Dragon Ascent': {zp: 190},\n  'Dragon Rage': {zp: 100},\n  'Egg Bomb': {zp: 180},\n  'Feint Attack': {zp: 120},\n  'Fiery Dance': {zp: 160},\n  'Flame Burst': {zp: 140},\n  Frustration: {zp: 160},\n  'Grass Knot': {zp: 160},\n  'Head Charge': {zp: 190},\n  'Heart Stamp': {zp: 120},\n  'Heat Crash': {zp: 160},\n  'Heavy Slam': {zp: 160},\n  Hurricane: {zp: 185},\n  'Hidden Power': {zp: 120},\n  'Hidden Power Bug': {zp: 120},\n  'Hidden Power Dark': {zp: 120},\n  'Hidden Power Dragon': {zp: 120},\n  'Hidden Power Electric': {zp: 120},\n  'Hidden Power Fighting': {zp: 120},\n  'Hidden Power Fire': {zp: 120},\n  'Hidden Power Flying': {zp: 120},\n  'Hidden Power Ghost': {zp: 120},\n  'Hidden Power Grass': {zp: 120},\n  'Hidden Power Ground': {zp: 120},\n  'Hidden Power Ice': {zp: 120},\n  'Hidden Power Poison': {zp: 120},\n  'Hidden Power Psychic': {zp: 120},\n  'Hidden Power Rock': {zp: 120},\n  'Hidden Power Steel': {zp: 120},\n  'Hidden Power Water': {zp: 120},\n  'Hyper Fang': {zp: 160},\n  'Hyperspace Fury': {zp: 180},\n  'Hyperspace Hole': {zp: 160},\n  'Ice Ball': {zp: 100},\n  Judgment: {zp: 180},\n  'Jump Kick': {zp: 180},\n  'Karate Chop': {zp: 100},\n  'Knock Off': {zp: 120},\n  'Land\\'s Wrath': {zp: 185},\n  'Light of Ruin': {zp: 200},\n  'Low Kick': {zp: 160},\n  'Luster Purge': {zp: 140},\n  'Magma Storm': {zp: 180},\n  'Magnet Bomb': {zp: 120},\n  Magnitude: {zp: 140},\n  'Mirror Shot': {zp: 120},\n  'Mist Ball': {zp: 140},\n  'Mud Bomb': {zp: 120},\n  'Natural Gift': {zp: 160},\n  'Needle Arm': {zp: 120},\n  'Oblivion Wing': {zp: 160},\n  'Ominous Wind': {zp: 120},\n  'Origin Pulse': {zp: 185},\n  'Precipice Blades': {zp: 190},\n  'Psycho Boost': {zp: 200},\n  Psywave: {zp: 100},\n  Punishment: {zp: 160},\n  Pursuit: {zp: 100},\n  Rage: {zp: 100},\n  'Rapid Spin': {zp: 100},\n  'Razor Wind': {zp: 160},\n  'Relic Song': {zp: 140},\n  Return: {zp: 160},\n  'Roar of Time': {zp: 200},\n  'Rock Climb': {zp: 175},\n  'Rolling Kick': {zp: 120},\n  'Sacred Fire': {zp: 180},\n  'Searing Shot': {zp: 180},\n  'Secret Power': {zp: 140},\n  'Seed Flare': {zp: 190},\n  'Shadow Force': {zp: 190},\n  'Signal Beam': {zp: 140},\n  'Silver Wind': {zp: 120},\n  'Sky Drop': {zp: 120},\n  'Sky Uppercut': {zp: 160},\n  'Smelling Salts': {zp: 140},\n  'Solar Beam': {zp: 190},\n  'Sonic Boom': {zp: 100},\n  'Spacial Rend': {zp: 180},\n  'Spike Cannon': {zp: 120},\n  'Steam Eruption': {zp: 185},\n  Steamroller: {zp: 120},\n  Synchronoise: {zp: 190},\n  'Techno Blast': {zp: 190},\n  'Thousand Arrows': {zp: 180},\n  'Thousand Waves': {zp: 175},\n  'Trump Card': {zp: 160},\n  Thunder: {zp: 185},\n  Twineedle: {zp: 100},\n  'Wake-Up Slap': {zp: 140},\n  'Wring Out': {zp: 190},\n  Absorb: {zp: 100},\n  Acid: {zp: 100},\n  'Acid Spray': {zp: 100},\n  Acrobatics: {zp: 100},\n  'Aerial Ace': {zp: 120},\n  'Air Cutter': {zp: 120},\n  'Air Slash': {zp: 140},\n  'Ancient Power': {zp: 120},\n  'Aqua Jet': {zp: 100},\n  'Aqua Tail': {zp: 175},\n  'Arm Thrust': {zp: 100},\n  Assurance: {zp: 120},\n  Astonish: {zp: 100},\n  'Attack Order': {zp: 175},\n  'Aura Sphere': {zp: 160},\n  'Aurora Beam': {zp: 120},\n  Avalanche: {zp: 120},\n  'Beat Up': {zp: 100},\n  Belch: {zp: 190},\n  Bind: {zp: 100},\n  Bite: {zp: 120},\n  'Blast Burn': {zp: 200},\n  'Blaze Kick': {zp: 160},\n  Blizzard: {zp: 185},\n  'Blue Flare': {zp: 195},\n  'Body Slam': {zp: 160},\n  'Bolt Strike': {zp: 195},\n  'Bone Rush': {zp: 140},\n  Boomburst: {zp: 200},\n  Bounce: {zp: 160},\n  'Brave Bird': {zp: 190},\n  'Brick Break': {zp: 140},\n  Brine: {zp: 120},\n  'Bubble Beam': {zp: 120},\n  'Bug Bite': {zp: 120},\n  'Bug Buzz': {zp: 175},\n  Bulldoze: {zp: 120},\n  'Bullet Punch': {zp: 100},\n  'Bullet Seed': {zp: 140},\n  'Charge Beam': {zp: 100},\n  'Circle Throw': {zp: 120},\n  'Clear Smog': {zp: 100},\n  'Close Combat': {zp: 190},\n  Confusion: {zp: 100},\n  Counter: {zp: 100},\n  Covet: {zp: 120},\n  Crabhammer: {zp: 180},\n  'Cross Chop': {zp: 180},\n  'Cross Poison': {zp: 140},\n  Crunch: {zp: 160},\n  'Crush Claw': {zp: 140},\n  Cut: {zp: 100},\n  'Dark Pulse': {zp: 160},\n  'Dazzling Gleam': {zp: 160},\n  Dig: {zp: 160},\n  'Disarming Voice': {zp: 100},\n  Discharge: {zp: 160},\n  Dive: {zp: 160},\n  'Doom Desire': {zp: 200},\n  'Double-Edge': {zp: 190},\n  'Double Hit': {zp: 140},\n  'Double Kick': {zp: 100},\n  'Draco Meteor': {zp: 195},\n  'Dragon Breath': {zp: 120},\n  'Dragon Claw': {zp: 160},\n  'Dragon Pulse': {zp: 160},\n  'Dragon Rush': {zp: 180},\n  'Dragon Tail': {zp: 120},\n  'Draining Kiss': {zp: 100},\n  'Drain Punch': {zp: 140},\n  'Dream Eater': {zp: 180},\n  'Drill Peck': {zp: 160},\n  'Drill Run': {zp: 160},\n  'Dual Chop': {zp: 100},\n  'Dynamic Punch': {zp: 180},\n  'Earth Power': {zp: 175},\n  Earthquake: {zp: 180},\n  'Echoed Voice': {zp: 100},\n  'Electro Ball': {zp: 160},\n  Electroweb: {zp: 100},\n  Ember: {zp: 100},\n  Endeavor: {zp: 160},\n  'Energy Ball': {zp: 175},\n  Eruption: {zp: 200},\n  Explosion: {zp: 200},\n  Extrasensory: {zp: 160},\n  'Extreme Speed': {zp: 160},\n  Facade: {zp: 140},\n  'Fairy Wind': {zp: 100},\n  'Fake Out': {zp: 100},\n  'False Swipe': {zp: 100},\n  Feint: {zp: 100},\n  'Fell Stinger': {bp: 50, zp: 100},\n  'Final Gambit': {zp: 180},\n  'Fire Blast': {zp: 185},\n  'Fire Fang': {zp: 120},\n  'Fire Pledge': {zp: 160},\n  'Fire Punch': {zp: 140},\n  'Fire Spin': {zp: 100},\n  Fissure: {zp: 180},\n  Flail: {zp: 160},\n  'Flame Charge': {zp: 100},\n  'Flame Wheel': {zp: 120},\n  Flamethrower: {zp: 175},\n  'Flare Blitz': {zp: 190},\n  'Flash Cannon': {zp: 160},\n  Fling: {zp: 100},\n  Fly: {zp: 175},\n  'Flying Press': {bp: 100, zp: 170},\n  'Focus Blast': {zp: 190},\n  'Focus Punch': {zp: 200},\n  'Force Palm': {zp: 120},\n  'Foul Play': {zp: 175},\n  'Freeze-Dry': {zp: 140},\n  'Freeze Shock': {zp: 200},\n  'Frenzy Plant': {zp: 200},\n  'Frost Breath': {zp: 120},\n  'Fury Attack': {zp: 100},\n  'Fury Cutter': {zp: 100},\n  'Fury Swipes': {zp: 100},\n  'Fusion Bolt': {zp: 180},\n  'Fusion Flare': {zp: 180},\n  'Future Sight': {zp: 190},\n  'Gear Grind': {zp: 180},\n  'Giga Drain': {zp: 140},\n  'Giga Impact': {zp: 200},\n  Glaciate: {zp: 120},\n  'Grass Pledge': {zp: 160},\n  Guillotine: {zp: 180},\n  'Gunk Shot': {zp: 190},\n  Gust: {zp: 100},\n  'Gyro Ball': {zp: 160},\n  'Hammer Arm': {zp: 180},\n  Headbutt: {zp: 140},\n  'Head Smash': {zp: 200},\n  'Heat Wave': {zp: 175},\n  Hex: {zp: 160},\n  'High Jump Kick': {zp: 195},\n  'Hold Back': {zp: 100},\n  'Horn Attack': {zp: 120},\n  'Horn Drill': {zp: 180},\n  'Horn Leech': {zp: 140},\n  'Hydro Cannon': {zp: 200},\n  'Hydro Pump': {zp: 185},\n  'Hyper Beam': {zp: 200},\n  'Hyper Voice': {zp: 175},\n  'Ice Beam': {zp: 175},\n  'Ice Burn': {zp: 200},\n  'Ice Fang': {zp: 120},\n  'Ice Punch': {zp: 140},\n  'Ice Shard': {zp: 100},\n  'Icicle Crash': {zp: 160},\n  'Icicle Spear': {zp: 140},\n  'Icy Wind': {zp: 100},\n  Incinerate: {zp: 120},\n  Inferno: {zp: 180},\n  Infestation: {zp: 100},\n  'Iron Head': {zp: 160},\n  'Iron Tail': {zp: 180},\n  'Last Resort': {zp: 200},\n  'Lava Plume': {zp: 160},\n  'Leaf Blade': {zp: 175},\n  'Leaf Storm': {zp: 195},\n  'Leaf Tornado': {zp: 120},\n  'Leech Life': {bp: 80, zp: 160},\n  Lick: {zp: 100},\n  'Low Sweep': {zp: 120},\n  'Mach Punch': {zp: 100},\n  'Magical Leaf': {zp: 120},\n  'Mega Drain': {zp: 120},\n  Megahorn: {zp: 190},\n  'Mega Kick': {zp: 190},\n  'Mega Punch': {zp: 160},\n  'Metal Burst': {zp: 100},\n  'Metal Claw': {zp: 100},\n  'Meteor Mash': {zp: 175},\n  'Mirror Coat': {zp: 100},\n  Moonblast: {zp: 175},\n  'Mud Shot': {zp: 100},\n  'Mud-Slap': {zp: 100},\n  'Muddy Water': {zp: 175},\n  'Mystical Fire': {bp: 75, zp: 140},\n  'Night Daze': {zp: 160},\n  'Night Shade': {zp: 100},\n  'Night Slash': {zp: 140},\n  Nuzzle: {zp: 100},\n  Octazooka: {zp: 120},\n  Outrage: {zp: 190},\n  Overheat: {zp: 195},\n  'Paleo Wave': {zp: 160},\n  'Parabolic Charge': {bp: 65, zp: 120},\n  Payback: {zp: 100},\n  'Pay Day': {zp: 100},\n  Peck: {zp: 100},\n  'Petal Blizzard': {zp: 175},\n  'Petal Dance': {zp: 190},\n  'Phantom Force': {zp: 175},\n  'Pin Missile': {zp: 140},\n  'Play Rough': {zp: 175},\n  Pluck: {zp: 120},\n  'Poison Fang': {zp: 100},\n  'Poison Jab': {zp: 160},\n  'Poison Sting': {zp: 100},\n  'Poison Tail': {zp: 100},\n  Pound: {zp: 100},\n  'Powder Snow': {zp: 100},\n  'Power Gem': {zp: 160},\n  'Power-Up Punch': {zp: 100},\n  'Power Whip': {zp: 190},\n  Present: {zp: 100},\n  Psybeam: {zp: 120},\n  Psychic: {zp: 175},\n  'Psycho Cut': {zp: 140},\n  Psyshock: {zp: 160},\n  Psystrike: {zp: 180},\n  'Quick Attack': {zp: 100},\n  'Razor Leaf': {zp: 100},\n  'Razor Shell': {zp: 140},\n  Retaliate: {zp: 140},\n  Revenge: {zp: 120},\n  Reversal: {zp: 160},\n  'Rock Blast': {isBullet: true, zp: 140},\n  'Rock Slide': {zp: 140},\n  'Rock Smash': {zp: 100},\n  'Rock Throw': {zp: 100},\n  'Rock Tomb': {zp: 120},\n  'Rock Wrecker': {zp: 200},\n  Rollout: {zp: 100},\n  Round: {zp: 120},\n  'Sacred Sword': {zp: 175},\n  'Sand Tomb': {zp: 100},\n  Scald: {zp: 160},\n  Scratch: {zp: 100},\n  'Secret Sword': {zp: 160},\n  'Seed Bomb': {zp: 160},\n  'Seismic Toss': {zp: 100},\n  'Self-Destruct': {zp: 200},\n  'Shadow Ball': {zp: 160},\n  'Shadow Claw': {zp: 140},\n  'Shadow Punch': {zp: 120},\n  'Shadow Sneak': {zp: 100},\n  'Shadow Strike': {zp: 160},\n  'Sheer Cold': {zp: 180},\n  'Shock Wave': {zp: 120},\n  'Skull Bash': {zp: 195},\n  'Sky Attack': {zp: 200},\n  Slam: {zp: 160},\n  Slash: {zp: 140},\n  Sludge: {zp: 120},\n  'Sludge Bomb': {zp: 175},\n  'Sludge Wave': {zp: 175},\n  'Smack Down': {zp: 100},\n  Smog: {zp: 100},\n  Snarl: {zp: 100},\n  Snore: {zp: 100},\n  Spark: {zp: 120},\n  'Spit Up': {zp: 100},\n  'Steel Wing': {zp: 140},\n  Stomp: {zp: 120},\n  'Stone Edge': {zp: 180},\n  'Stored Power': {zp: 160},\n  'Storm Throw': {zp: 120},\n  Strength: {zp: 160},\n  'Struggle Bug': {zp: 100},\n  Submission: {zp: 160},\n  'Sucker Punch': {bp: 70, zp: 140},\n  'Super Fang': {zp: 100},\n  Superpower: {zp: 190},\n  Surf: {zp: 175},\n  Swift: {zp: 120},\n  Tackle: {bp: 40, zp: 100},\n  'Tail Slap': {zp: 140},\n  'Take Down': {zp: 175},\n  Thief: {zp: 120},\n  Thrash: {zp: 190},\n  Thunderbolt: {zp: 175},\n  'Thunder Fang': {zp: 120},\n  'Thunder Punch': {zp: 140},\n  'Thunder Shock': {zp: 100},\n  'Tri Attack': {zp: 160},\n  'Triple Kick': {zp: 120},\n  Twister: {zp: 100},\n  'U-turn': {zp: 140},\n  Uproar: {zp: 175},\n  'Vacuum Wave': {zp: 100},\n  'V-create': {zp: 220},\n  Venoshock: {zp: 120},\n  'Vine Whip': {zp: 100},\n  'Vise Grip': {zp: 100},\n  'Vital Throw': {zp: 140},\n  'Volt Switch': {zp: 140},\n  'Volt Tackle': {zp: 190},\n  Waterfall: {zp: 160},\n  'Water Gun': {zp: 100},\n  'Water Pledge': {zp: 160},\n  'Water Pulse': {zp: 120},\n  'Water Shuriken': {category: 'Special', zp: 100},\n  'Water Spout': {zp: 200},\n  'Weather Ball': {zp: 160},\n  Whirlpool: {zp: 100},\n  'Wild Charge': {zp: 175},\n  'Wing Attack': {zp: 120},\n  'Wood Hammer': {zp: 190},\n  Wrap: {zp: 100},\n  'X-Scissor': {zp: 160},\n  'Zap Cannon': {zp: 190},\n  'Zen Headbutt': {zp: 160},\n  '10,000,000 Volt Thunderbolt': {bp: 195, type: 'Electric', category: 'Special', isZ: true},\n  'Acid Downpour': {bp: 1, type: 'Poison', category: 'Physical', isZ: true},\n  'All-Out Pummeling': {bp: 1, type: 'Fighting', category: 'Physical', isZ: true},\n  'Baddy Bad': {bp: 90, type: 'Dark', category: 'Special', zp: 175},\n  'Baneful Bunker': {bp: 0, type: 'Poison', priority: 4},\n  'Beak Blast': {\n    bp: 100,\n    type: 'Flying',\n    category: 'Physical',\n    isBullet: true,\n    zp: 180,\n  },\n  'Black Hole Eclipse': {bp: 1, type: 'Dark', category: 'Physical', isZ: true},\n  'Bloom Doom': {bp: 1, type: 'Grass', category: 'Physical', isZ: true},\n  'Bouncy Bubble': {\n    bp: 90,\n    type: 'Water',\n    drain: [1, 2],\n    category: 'Special',\n    zp: 175,\n  },\n  'Breakneck Blitz': {bp: 1, type: 'Normal', category: 'Physical', isZ: true},\n  'Buzzy Buzz': {\n    bp: 90,\n    type: 'Electric',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  Catastropika: {\n    bp: 210,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Clangorous Soulblaze': {\n    bp: 185,\n    type: 'Dragon',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Continental Crush': {bp: 1, type: 'Rock', category: 'Physical', isZ: true},\n  'Core Enforcer': {\n    bp: 100,\n    type: 'Dragon',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 140,\n  },\n  'Corkscrew Crash': {bp: 1, type: 'Steel', category: 'Physical', isZ: true},\n  'Devastating Drake': {bp: 1, type: 'Dragon', category: 'Physical', isZ: true},\n  'Double Iron Bash': {\n    bp: 60,\n    type: 'Steel',\n    multihit: 2,\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 180,\n  },\n  'Dragon Hammer': {\n    bp: 90,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Extreme Evoboost': {bp: 0, type: 'Normal', isZ: true},\n  'Fleur Cannon': {\n    bp: 130,\n    type: 'Fairy',\n    self: {boosts: {spa: -2}},\n    category: 'Special',\n    zp: 195,\n  },\n  'Floral Healing': {bp: 0, type: 'Fairy'},\n  'Freezy Frost': {bp: 90, type: 'Ice', category: 'Special', zp: 175},\n  'Genesis Supernova': {\n    bp: 185,\n    type: 'Psychic',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Gigavolt Havoc': {bp: 1, type: 'Electric', category: 'Physical', isZ: true},\n  'Glitzy Glow': {bp: 90, type: 'Psychic', category: 'Special', zp: 175},\n  'Guardian of Alola': {bp: 0, type: 'Fairy', category: 'Special', isZ: true},\n  'Hydro Vortex': {bp: 1, type: 'Water', category: 'Physical', isZ: true},\n  'Ice Hammer': {\n    bp: 100,\n    type: 'Ice',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Inferno Overdrive': {bp: 1, type: 'Fire', category: 'Physical', isZ: true},\n  Instruct: {bp: 0, type: 'Psychic'},\n  'Let\\'s Snuggle Forever': {\n    bp: 190,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Light That Burns the Sky': {\n    bp: 200,\n    type: 'Psychic',\n    category: 'Special',\n    isZ: true,\n  },\n  'Malicious Moonsault': {\n    bp: 180,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Menacing Moonraze Maelstrom': {bp: 200, type: 'Ghost', category: 'Special', isZ: true},\n  'Mind Blown': {\n    bp: 150,\n    type: 'Fire',\n    mindBlownRecoil: true,\n    target: 'allAdjacent',\n    category: 'Special',\n    zp: 200,\n  },\n  'Multi-Attack': {\n    bp: 90,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    zp: 185,\n  },\n  'Nature\\'s Madness': {bp: 0, type: 'Fairy', category: 'Special', zp: 100},\n  'Never-Ending Nightmare': {bp: 1, type: 'Ghost', category: 'Physical', isZ: true},\n  'Oceanic Operetta': {bp: 195, type: 'Water', category: 'Special', isZ: true},\n  'Psychic Terrain': {bp: 0, type: 'Psychic'},\n  'Pulverizing Pancake': {\n    bp: 210,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Revelation Dance': {bp: 90, type: 'Normal', category: 'Special', zp: 175},\n  'Sappy Seed': {bp: 90, type: 'Grass', category: 'Physical', zp: 175},\n  'Savage Spin-Out': {bp: 1, type: 'Bug', category: 'Physical', isZ: true},\n  'Searing Sunraze Smash': {\n    bp: 200,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Shadow Bone': {\n    bp: 85,\n    type: 'Ghost',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Shattered Psyche': {bp: 1, type: 'Psychic', category: 'Physical', isZ: true},\n  'Shore Up': {bp: 0, type: 'Ground'},\n  'Sinister Arrow Raid': {bp: 180, type: 'Ghost', category: 'Physical', isZ: true},\n  'Sizzly Slide': {\n    bp: 90,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 175,\n  },\n  'Solar Blade': {\n    bp: 125,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 190,\n  },\n  'Soul-Stealing 7-Star Strike': {\n    bp: 195,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Sparkly Swirl': {bp: 90, type: 'Fairy', category: 'Special', zp: 175},\n  'Splintered Stormshards': {bp: 190, type: 'Rock', category: 'Physical', isZ: true},\n  Spotlight: {bp: 0, type: 'Normal', priority: 3},\n  'Stoked Sparksurfer': {\n    bp: 175,\n    type: 'Electric',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Subzero Slammer': {bp: 1, type: 'Ice', category: 'Physical', isZ: true},\n  'Supersonic Skystrike': {bp: 1, type: 'Flying', category: 'Physical', isZ: true},\n  'Tectonic Rage': {bp: 1, type: 'Ground', category: 'Physical', isZ: true},\n  'Throat Chop': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Toxic Thread': {bp: 0, type: 'Poison'},\n  'Twinkle Tackle': {bp: 1, type: 'Fairy', category: 'Physical', isZ: true},\n  'Zippy Zap': {\n    bp: 50,\n    type: 'Electric',\n    willCrit: true,\n    priority: 2,\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  Accelerock: {\n    bp: 40,\n    type: 'Rock',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  'Anchor Shot': {\n    bp: 80,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Aurora Veil': {bp: 0, type: 'Ice'},\n  'Brutal Swing': {\n    bp: 60,\n    type: 'Dark',\n    makesContact: true,\n    target: 'allAdjacent',\n    category: 'Physical',\n    zp: 120,\n  },\n  'Burn Up': {bp: 130, type: 'Fire', category: 'Special', zp: 195},\n  'Clanging Scales': {\n    bp: 110,\n    type: 'Dragon',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 185,\n  },\n  'Darkest Lariat': {\n    bp: 85,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n    zp: 160,\n  },\n  'Fire Lash': {\n    bp: 80,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'First Impression': {\n    bp: 90,\n    type: 'Bug',\n    priority: 2,\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Floaty Fall': {\n    bp: 90,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 175,\n  },\n  'Gear Up': {bp: 0, type: 'Steel'},\n  'High Horsepower': {\n    bp: 95,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Laser Focus': {bp: 0, type: 'Normal'},\n  Leafage: {bp: 40, type: 'Grass', category: 'Physical', zp: 100},\n  Liquidation: {\n    bp: 85,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  Lunge: {\n    bp: 80,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Moongeist Beam': {bp: 100, type: 'Ghost', category: 'Special', zp: 180},\n  'Photon Geyser': {\n    bp: 100,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 180,\n  },\n  'Pika Papow': {bp: 0, type: 'Electric', category: 'Special', zp: 100},\n  'Plasma Fists': {\n    bp: 100,\n    type: 'Electric',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Pollen Puff': {\n    bp: 90,\n    type: 'Bug',\n    category: 'Special',\n    isBullet: true,\n    zp: 175,\n  },\n  'Power Trip': {\n    bp: 20,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n  },\n  'Prismatic Laser': {bp: 160, type: 'Psychic', category: 'Special', zp: 200},\n  'Psychic Fangs': {\n    bp: 85,\n    type: 'Psychic',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n  },\n  Purify: {bp: 0, type: 'Poison'},\n  'Shell Trap': {\n    bp: 150,\n    type: 'Fire',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 200,\n  },\n  'Smart Strike': {\n    bp: 70,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n  },\n  'Sparkling Aria': {\n    bp: 90,\n    type: 'Water',\n    isSound: true,\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  'Spectral Thief': {\n    bp: 90,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Speed Swap': {bp: 0, type: 'Psychic'},\n  'Spirit Shackle': {\n    bp: 80,\n    type: 'Ghost',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Splishy Splash': {\n    bp: 90,\n    type: 'Water',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  'Stomping Tantrum': {\n    bp: 75,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n  },\n  'Strength Sap': {bp: 0, type: 'Grass'},\n  'Sunsteel Strike': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Tearful Look': {bp: 0, type: 'Normal'},\n  'Trop Kick': {\n    bp: 70,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 140,\n  },\n  'Veevee Volley': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  'Zing Zap': {\n    bp: 80,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n};\n\nconst SM: {[name: string]: MoveData} = extend(true, {}, XY, SM_PATCH);\n\nconst SS_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Apple Acid': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Special',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Astral Barrage': {\n    bp: 120,\n    type: 'Ghost',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Aura Wheel': {\n    bp: 110,\n    type: 'Electric',\n    category: 'Physical',\n    secondaries: true,\n    zp: 185,\n    maxPower: 140,\n  },\n  'Behemoth Bash': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Behemoth Blade': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Body Press': {\n    bp: 80,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    overrideOffensiveStat: 'def',\n    zp: 160,\n    maxPower: 90,\n  },\n  'Bolt Beak': {\n    bp: 85,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Branch Poke': {\n    bp: 40,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n  },\n  'Breaking Swipe': {\n    bp: 60,\n    type: 'Dragon',\n    makesContact: true,\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n    secondaries: true,\n    zp: 120,\n    maxPower: 110,\n  },\n  'Burning Jealousy': {\n    bp: 70,\n    type: 'Fire',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Clangorous Soul': {bp: 0, type: 'Dragon', isSound: true},\n  'Coaching': {\n    bp: 0,\n    type: 'Fighting',\n    category: 'Status',\n  },\n  'Corrosive Gas': {\n    bp: 0,\n    type: 'Poison',\n    category: 'Status',\n    target: 'allAdjacent',\n  },\n  'Court Change': {bp: 0, type: 'Normal'},\n  Decorate: {bp: 0, type: 'Fairy'},\n  'Dragon Darts': {\n    bp: 50,\n    type: 'Dragon',\n    multihit: 2,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 130,\n  },\n  'Dragon Energy': {\n    bp: 150,\n    type: 'Dragon',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Drum Beating': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Dual Wingbeat': {\n    bp: 40,\n    type: 'Flying',\n    category: 'Physical',\n    makesContact: true,\n    multihit: 2,\n    zp: 100,\n    maxPower: 130,\n  },\n  'Dynamax Cannon': {\n    bp: 100,\n    type: 'Dragon',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Eerie Spell': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    isSound: true,\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  Eternabeam: {\n    bp: 160,\n    type: 'Dragon',\n    category: 'Special',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Expanding Force': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'False Surrender': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Fiery Wrath': {\n    bp: 90,\n    type: 'Dark',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Fishious Rend': {\n    bp: 85,\n    type: 'Water',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Flip Turn': {\n    bp: 60,\n    type: 'Water',\n    category: 'Physical',\n    makesContact: true,\n    zp: 120,\n    maxPower: 110,\n  },\n  'Freezing Glare': {\n    bp: 90,\n    type: 'Psychic',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Glacial Lance': {\n    bp: 130,\n    type: 'Ice',\n    category: 'Physical',\n    target: 'allAdjacentFoes',\n    zp: 195,\n    maxPower: 140,\n  },\n  'G-Max Befuddle': {\n    bp: 10,\n    type: 'Bug',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Centiferno': {\n    bp: 10,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Cannonade': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Chi Strike': {\n    bp: 10,\n    type: 'Fighting',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Cuddle': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Depletion': {\n    bp: 10,\n    type: 'Dragon',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Drum Solo': {\n    bp: 160,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Fireball': {\n    bp: 160,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Finale': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Foam Burst': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Gold Rush': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Gravitas': {\n    bp: 10,\n    type: 'Psychic',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Hydrosnipe': {\n    bp: 160,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Malodor': {\n    bp: 10,\n    type: 'Poison',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Meltdown': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max One Blow': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Rapid Flow': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Replenish': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Resonance': {\n    bp: 10,\n    type: 'Ice',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Sandblast': {\n    bp: 10,\n    type: 'Ground',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Smite': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Snooze': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Steelsurge': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Stonesurge': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Stun Shock': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Sweetness': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Tartness': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Terror': {\n    bp: 10,\n    type: 'Ghost',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Vine Lash': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Volcalith': {\n    bp: 10,\n    type: 'Rock',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Volt Crash': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Wildfire': {\n    bp: 10,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Wind Rage': {\n    bp: 10,\n    type: 'Flying',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Grassy Glide': {\n    bp: 70,\n    type: 'Grass',\n    category: 'Physical',\n    makesContact: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Grav Apple': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Jaw Lock': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Jungle Healing': {\n    bp: 0,\n    type: 'Grass',\n    category: 'Status',\n  },\n  'Lash Out': {\n    bp: 75,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n    maxPower: 130,\n  },\n  'Life Dew': {bp: 0, type: 'Water'},\n  'Magic Powder': {bp: 0, type: 'Psychic'},\n  'Max Airstream': {\n    bp: 10,\n    type: 'Flying',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Darkness': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Flare': {\n    bp: 100,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Flutterby': {\n    bp: 10,\n    type: 'Bug',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Geyser': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Guard': {bp: 0, type: 'Normal', priority: 4, isMax: true},\n  'Max Hailstorm': {\n    bp: 10,\n    type: 'Ice',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Knuckle': {\n    bp: 10,\n    type: 'Fighting',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Lightning': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Mindstorm': {\n    bp: 10,\n    type: 'Psychic',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Ooze': {\n    bp: 10,\n    type: 'Poison',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Overgrowth': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Phantasm': {\n    bp: 10,\n    type: 'Ghost',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Quake': {\n    bp: 10,\n    type: 'Ground',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Rockfall': {\n    bp: 10,\n    type: 'Rock',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Starfall': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Steelspike': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Strike': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Wyrmwind': {\n    bp: 10,\n    type: 'Dragon',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Meteor Assault': {\n    bp: 150,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 200,\n    maxPower: 100,\n  },\n  'Meteor Beam': {\n    bp: 120,\n    type: 'Rock',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Misty Explosion': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Special',\n    target: 'allAdjacent',\n    zp: 180,\n    maxPower: 130,\n  },\n  'No Retreat': {bp: 0, type: 'Fighting'},\n  Obstruct: {bp: 0, type: 'Dark', priority: 4},\n  Octolock: {bp: 0, type: 'Fighting'},\n  Overdrive: {\n    bp: 80,\n    type: 'Electric',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  Poltergeist: {\n    bp: 110,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 185,\n    maxPower: 140,\n  },\n  'Pyro Ball': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Physical',\n    secondaries: true,\n    isBullet: true,\n    zp: 190,\n    maxPower: 140,\n  },\n  'Rising Voltage': {\n    bp: 70,\n    type: 'Electric',\n    category: 'Special',\n    zp: 140,\n    maxPower: 140,\n  },\n  'Scale Shot': {\n    bp: 25,\n    type: 'Dragon',\n    category: 'Physical',\n    multihit: [2, 5],\n    zp: 140,\n    maxPower: 130,\n  },\n  'Shell Side Arm': {\n    bp: 90,\n    type: 'Poison',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 90,\n  },\n  'Snap Trap': {\n    bp: 35,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n  },\n  'Snipe Shot': {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Scorching Sands': {\n    bp: 70,\n    type: 'Ground',\n    category: 'Special',\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Skitter Smack': {\n    bp: 70,\n    type: 'Bug',\n    category: 'Physical',\n    makesContact: true,\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Spirit Break': {\n    bp: 75,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 140,\n    maxPower: 130,\n  },\n  'Steel Beam': {\n    bp: 140,\n    type: 'Steel',\n    mindBlownRecoil: true,\n    category: 'Special',\n    zp: 200,\n    maxPower: 140,\n  },\n  'Steel Roller': {\n    bp: 130,\n    type: 'Steel',\n    category: 'Physical',\n    makesContact: true,\n    zp: 195,\n    maxPower: 140,\n  },\n  'Strange Steam': {\n    bp: 90,\n    type: 'Fairy',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Surging Strikes': {\n    bp: 25,\n    type: 'Water',\n    category: 'Physical',\n    makesContact: true,\n    willCrit: true,\n    isPunch: true,\n    multihit: 3,\n    zp: 140,\n    maxPower: 130,\n  },\n  'Terrain Pulse': {\n    bp: 50,\n    type: 'Normal',\n    category: 'Special',\n    isPulse: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Triple Axel': {\n    bp: 20,\n    type: 'Ice',\n    category: 'Physical',\n    makesContact: true,\n    multihit: 3,\n    zp: 120,\n    maxPower: 140,\n  },\n  'Wicked Blow': {\n    bp: 80,\n    type: 'Dark',\n    category: 'Physical',\n    makesContact: true,\n    willCrit: true,\n    isPunch: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Stuff Cheeks': {bp: 0, type: 'Normal'},\n  'Tar Shot': {bp: 0, type: 'Rock'},\n  Teatime: {bp: 0, type: 'Normal'},\n  'Thunder Cage': {\n    bp: 80,\n    type: 'Electric',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Thunderous Kick': {\n    bp: 90,\n    type: 'Fighting',\n    category: 'Physical',\n    secondaries: true,\n    makesContact: true,\n    zp: 175,\n    maxPower: 90,\n  },\n  '10,000,000 Volt Thunderbolt': {maxPower: 1},\n  Absorb: {maxPower: 90},\n  Accelerock: {maxPower: 90},\n  Acid: {maxPower: 70},\n  'Acid Downpour': {maxPower: 1},\n  'Acid Spray': {maxPower: 70},\n  Acrobatics: {maxPower: 110},\n  'Aerial Ace': {maxPower: 110},\n  Aeroblast: {maxPower: 130},\n  'Air Cutter': {maxPower: 110},\n  'Air Slash': {maxPower: 130},\n  'All-Out Pummeling': {maxPower: 1},\n  'Anchor Shot': {maxPower: 130},\n  'Ancient Power': {maxPower: 110},\n  'Aqua Jet': {maxPower: 90},\n  'Aqua Tail': {maxPower: 130},\n  'Arm Thrust': {maxPower: 70},\n  Assurance: {maxPower: 110},\n  Astonish: {maxPower: 90},\n  'Attack Order': {maxPower: 130},\n  'Aura Sphere': {maxPower: 90},\n  'Aurora Beam': {maxPower: 120},\n  Avalanche: {maxPower: 110},\n  Barrage: {maxPower: 90},\n  'Beak Blast': {maxPower: 130},\n  'Beat Up': {maxPower: 100},\n  Belch: {maxPower: 95},\n  Bide: {maxPower: 100},\n  Bind: {maxPower: 90},\n  Bite: {maxPower: 110},\n  'Black Hole Eclipse': {maxPower: 1},\n  'Blast Burn': {maxPower: 150},\n  'Blaze Kick': {maxPower: 130},\n  Blizzard: {maxPower: 140},\n  'Bloom Doom': {maxPower: 1},\n  'Blue Flare': {maxPower: 140},\n  'Body Slam': {maxPower: 130},\n  'Bolt Strike': {maxPower: 140},\n  'Bone Club': {maxPower: 120},\n  Bonemerang: {maxPower: 130},\n  'Bone Rush': {maxPower: 130},\n  Boomburst: {maxPower: 140},\n  Bounce: {maxPower: 130},\n  'Brave Bird': {maxPower: 140},\n  'Breakneck Blitz': {maxPower: 1},\n  'Brick Break': {maxPower: 90},\n  Brine: {maxPower: 120},\n  'Brutal Swing': {maxPower: 110},\n  Bubble: {maxPower: 90},\n  'Bubble Beam': {maxPower: 120},\n  'Bug Bite': {maxPower: 110},\n  'Bug Buzz': {maxPower: 130},\n  Bulldoze: {maxPower: 110},\n  'Bullet Punch': {maxPower: 90},\n  'Bullet Seed': {maxPower: 130},\n  'Burn Up': {maxPower: 140},\n  Catastropika: {maxPower: 1},\n  'Charge Beam': {maxPower: 100},\n  Chatter: {maxPower: 120},\n  'Chip Away': {maxPower: 120},\n  'Circle Throw': {maxPower: 80},\n  Clamp: {maxPower: 90},\n  'Clanging Scales': {maxPower: 140},\n  'Clangorous Soulblaze': {maxPower: 1},\n  'Clear Smog': {maxPower: 75},\n  'Close Combat': {maxPower: 95},\n  'Comet Punch': {maxPower: 100},\n  Confusion: {maxPower: 100},\n  Constrict: {maxPower: 90},\n  'Continental Crush': {maxPower: 1},\n  'Core Enforcer': {maxPower: 130},\n  'Corkscrew Crash': {maxPower: 1},\n  Counter: {maxPower: 75},\n  Covet: {maxPower: 110},\n  Crabhammer: {maxPower: 130},\n  'Cross Chop': {maxPower: 90},\n  'Cross Poison': {maxPower: 85},\n  Crunch: {maxPower: 130},\n  'Crush Claw': {maxPower: 130},\n  'Crush Grip': {maxPower: 140},\n  Cut: {maxPower: 100},\n  'Darkest Lariat': {maxPower: 130},\n  'Dark Pulse': {maxPower: 130},\n  'Dazzling Gleam': {maxPower: 130},\n  'Devastating Drake': {maxPower: 1},\n  'Diamond Storm': {maxPower: 130},\n  Dig: {maxPower: 130},\n  'Disarming Voice': {maxPower: 90},\n  Discharge: {maxPower: 130},\n  Dive: {maxPower: 130},\n  'Dizzy Punch': {maxPower: 120},\n  'Doom Desire': {maxPower: 140},\n  'Double-Edge': {maxPower: 140},\n  'Double Hit': {maxPower: 120},\n  'Double Iron Bash': {maxPower: 140},\n  'Double Kick': {maxPower: 80},\n  'Double Slap': {maxPower: 90},\n  'Draco Meteor': {maxPower: 140},\n  'Dragon Ascent': {maxPower: 140},\n  'Dragon Breath': {maxPower: 110},\n  'Dragon Claw': {maxPower: 130},\n  'Dragon Hammer': {maxPower: 130},\n  'Dragon Pulse': {maxPower: 130},\n  'Dragon Rage': {maxPower: 100},\n  'Dragon Rush': {maxPower: 130},\n  'Dragon Tail': {maxPower: 110},\n  'Draining Kiss': {maxPower: 100},\n  'Drain Punch': {maxPower: 90},\n  'Dream Eater': {maxPower: 130},\n  'Drill Peck': {maxPower: 130},\n  'Drill Run': {maxPower: 130},\n  'Dual Chop': {maxPower: 130},\n  'Dynamic Punch': {maxPower: 90},\n  'Earth Power': {maxPower: 130},\n  Earthquake: {maxPower: 130},\n  'Echoed Voice': {maxPower: 90},\n  'Egg Bomb': {maxPower: 130},\n  'Electro Ball': {maxPower: 130},\n  Electroweb: {maxPower: 110},\n  Ember: {maxPower: 90},\n  Endeavor: {maxPower: 130},\n  'Energy Ball': {maxPower: 130},\n  Eruption: {maxPower: 150},\n  Explosion: {maxPower: 150},\n  Extrasensory: {maxPower: 130},\n  'Extreme Speed': {maxPower: 130},\n  Facade: {maxPower: 120},\n  'Fairy Wind': {maxPower: 90},\n  'Fake Out': {maxPower: 90},\n  'False Swipe': {maxPower: 90},\n  Feint: {maxPower: 90},\n  'Feint Attack': {maxPower: 110},\n  'Fell Stinger': {maxPower: 100},\n  'Fiery Dance': {maxPower: 130},\n  'Final Gambit': {maxPower: 100},\n  'Fire Blast': {maxPower: 140},\n  'Fire Fang': {maxPower: 120},\n  'Fire Lash': {maxPower: 130},\n  'Fire Pledge': {maxPower: 130},\n  'Fire Punch': {maxPower: 130},\n  'Fire Spin': {maxPower: 90},\n  'First Impression': {maxPower: 130},\n  Fissure: {maxPower: 130},\n  Flail: {maxPower: 130},\n  'Flame Burst': {maxPower: 120},\n  'Flame Charge': {maxPower: 100},\n  'Flame Wheel': {maxPower: 110},\n  Flamethrower: {maxPower: 130},\n  'Flare Blitz': {maxPower: 140},\n  'Flash Cannon': {maxPower: 130},\n  'Fleur Cannon': {maxPower: 140},\n  Fling: {maxPower: 100},\n  Fly: {maxPower: 130},\n  'Flying Press': {maxPower: 90},\n  'Focus Blast': {maxPower: 95},\n  'Focus Punch': {maxPower: 100},\n  'Force Palm': {maxPower: 80},\n  'Foul Play': {maxPower: 130},\n  'Freeze-Dry': {maxPower: 120},\n  'Freeze Shock': {maxPower: 140},\n  'Frenzy Plant': {maxPower: 150},\n  'Frost Breath': {maxPower: 110},\n  Frustration: {maxPower: 130},\n  'Fury Attack': {maxPower: 90},\n  'Fury Cutter': {maxPower: 90},\n  'Fury Swipes': {maxPower: 100},\n  'Fusion Bolt': {maxPower: 130},\n  'Fusion Flare': {maxPower: 130},\n  'Future Sight': {maxPower: 140},\n  'Gear Grind': {maxPower: 130},\n  'Genesis Supernova': {maxPower: 1},\n  'Giga Drain': {maxPower: 130},\n  'Giga Impact': {maxPower: 150},\n  'Gigavolt Havoc': {maxPower: 1},\n  Glaciate: {maxPower: 120},\n  'Grass Knot': {maxPower: 130},\n  'Grass Pledge': {maxPower: 130},\n  'Guardian of Alola': {maxPower: 1},\n  Guillotine: {maxPower: 130},\n  'Gunk Shot': {maxPower: 95},\n  Gust: {maxPower: 90},\n  'Gyro Ball': {maxPower: 130},\n  'Hammer Arm': {maxPower: 90},\n  Headbutt: {maxPower: 120},\n  'Head Charge': {maxPower: 140},\n  'Head Smash': {maxPower: 150},\n  'Heart Stamp': {maxPower: 110},\n  'Heat Crash': {maxPower: 130},\n  'Heat Wave': {maxPower: 130},\n  'Heavy Slam': {maxPower: 130},\n  Hex: {maxPower: 120},\n  'Hidden Power': {maxPower: 110},\n  'Hidden Power Bug': {maxPower: 110},\n  'Hidden Power Dark': {maxPower: 110},\n  'Hidden Power Dragon': {maxPower: 110},\n  'Hidden Power Electric': {maxPower: 110},\n  'Hidden Power Fighting': {maxPower: 80},\n  'Hidden Power Fire': {maxPower: 110},\n  'Hidden Power Flying': {maxPower: 110},\n  'Hidden Power Ghost': {maxPower: 110},\n  'Hidden Power Grass': {maxPower: 110},\n  'Hidden Power Ground': {maxPower: 110},\n  'Hidden Power Ice': {maxPower: 110},\n  'Hidden Power Poison': {maxPower: 80},\n  'Hidden Power Psychic': {maxPower: 110},\n  'Hidden Power Rock': {maxPower: 110},\n  'Hidden Power Steel': {maxPower: 110},\n  'Hidden Power Water': {maxPower: 110},\n  'High Horsepower': {maxPower: 130},\n  'High Jump Kick': {maxPower: 95},\n  'Hold Back': {maxPower: 90},\n  'Horn Attack': {maxPower: 120},\n  'Horn Drill': {maxPower: 130},\n  'Horn Leech': {maxPower: 130},\n  Howl: {isSound: true},\n  Hurricane: {maxPower: 140},\n  'Hydro Cannon': {maxPower: 150},\n  'Hydro Pump': {maxPower: 140},\n  'Hydro Vortex': {maxPower: 1},\n  'Hyper Beam': {maxPower: 150},\n  'Hyper Fang': {maxPower: 130},\n  'Hyperspace Fury': {maxPower: 130},\n  'Hyperspace Hole': {maxPower: 130},\n  'Hyper Voice': {maxPower: 130},\n  'Ice Ball': {maxPower: 90},\n  'Ice Beam': {maxPower: 130},\n  'Ice Burn': {maxPower: 140},\n  'Ice Fang': {maxPower: 120},\n  'Ice Hammer': {maxPower: 130},\n  'Ice Punch': {maxPower: 130},\n  'Ice Shard': {maxPower: 90},\n  'Icicle Crash': {maxPower: 130},\n  'Icicle Spear': {maxPower: 130},\n  'Icy Wind': {maxPower: 110},\n  Incinerate: {maxPower: 110},\n  Inferno: {maxPower: 130},\n  'Inferno Overdrive': {maxPower: 1},\n  Infestation: {maxPower: 90},\n  'Iron Head': {maxPower: 130},\n  'Iron Tail': {maxPower: 130},\n  Judgment: {maxPower: 130},\n  'Jump Kick': {maxPower: 90},\n  'Karate Chop': {maxPower: 75},\n  'Knock Off': {maxPower: 120},\n  'Land\\'s Wrath': {maxPower: 130},\n  'Last Resort': {maxPower: 140},\n  'Lava Plume': {maxPower: 130},\n  Leafage: {maxPower: 90},\n  'Leaf Blade': {maxPower: 130},\n  'Leaf Storm': {maxPower: 140},\n  'Leaf Tornado': {maxPower: 120},\n  'Leech Life': {maxPower: 130},\n  'Let\\'s Snuggle Forever': {maxPower: 1},\n  Lick: {maxPower: 90},\n  'Light of Ruin': {maxPower: 140},\n  'Light That Burns the Sky': {maxPower: 1},\n  Liquidation: {maxPower: 130},\n  'Low Kick': {maxPower: 100},\n  'Low Sweep': {maxPower: 85},\n  Lunge: {maxPower: 130},\n  'Luster Purge': {maxPower: 120},\n  'Mach Punch': {maxPower: 70},\n  'Magical Leaf': {maxPower: 110},\n  'Magma Storm': {maxPower: 130},\n  'Magnet Bomb': {maxPower: 110},\n  Magnitude: {maxPower: 140},\n  'Malicious Moonsault': {maxPower: 1},\n  'Mega Drain': {maxPower: 90},\n  Megahorn: {maxPower: 140},\n  'Mega Kick': {maxPower: 140},\n  'Mega Punch': {maxPower: 130},\n  'Menacing Moonraze Maelstrom': {maxPower: 1},\n  'Metal Burst': {maxPower: 100},\n  'Metal Claw': {maxPower: 100},\n  'Meteor Mash': {maxPower: 130},\n  'Mind Blown': {maxPower: 150},\n  'Mirror Coat': {maxPower: 100},\n  'Mirror Shot': {maxPower: 120},\n  'Mist Ball': {maxPower: 120},\n  Moonblast: {maxPower: 130},\n  'Moongeist Beam': {maxPower: 130},\n  'Mud Bomb': {maxPower: 120},\n  'Mud Shot': {maxPower: 110},\n  'Mud-Slap': {maxPower: 90},\n  'Muddy Water': {maxPower: 130},\n  'Multi-Attack': {bp: 120, maxPower: 95},\n  'Mystical Fire': {maxPower: 130},\n  'Natural Gift': {maxPower: 130},\n  'Nature\\'s Madness': {maxPower: 100},\n  'Needle Arm': {maxPower: 110},\n  'Never-Ending Nightmare': {maxPower: 1},\n  'Night Daze': {maxPower: 130},\n  'Night Shade': {maxPower: 100},\n  'Night Slash': {maxPower: 120},\n  Nuzzle: {maxPower: 90},\n  'Oblivion Wing': {maxPower: 130},\n  'Oceanic Operetta': {maxPower: 1},\n  Octazooka: {maxPower: 120},\n  'Ominous Wind': {maxPower: 110},\n  'Origin Pulse': {maxPower: 140},\n  Outrage: {maxPower: 140},\n  Overheat: {maxPower: 140},\n  'Paleo Wave': {maxPower: 130},\n  'Parabolic Charge': {maxPower: 120},\n  Payback: {maxPower: 100},\n  'Pay Day': {maxPower: 90},\n  Peck: {maxPower: 90},\n  'Petal Blizzard': {maxPower: 130},\n  'Petal Dance': {maxPower: 140},\n  'Phantom Force': {maxPower: 130},\n  'Photon Geyser': {maxPower: 130},\n  'Pin Missile': {maxPower: 130},\n  'Plasma Fists': {maxPower: 130},\n  'Play Rough': {maxPower: 130},\n  Pluck: {maxPower: 110},\n  'Poison Fang': {maxPower: 75},\n  'Poison Jab': {maxPower: 90},\n  'Poison Sting': {maxPower: 70},\n  'Poison Tail': {maxPower: 75},\n  'Pollen Puff': {maxPower: 130},\n  Pound: {maxPower: 90},\n  'Powder Snow': {maxPower: 90},\n  'Power Gem': {maxPower: 130},\n  'Power Trip': {maxPower: 130},\n  'Power-Up Punch': {maxPower: 70},\n  'Power Whip': {maxPower: 140},\n  'Precipice Blades': {maxPower: 140},\n  Present: {maxPower: 100},\n  'Prismatic Laser': {maxPower: 150},\n  Psybeam: {maxPower: 120},\n  Psychic: {maxPower: 130},\n  'Psychic Fangs': {maxPower: 130},\n  'Psycho Boost': {maxPower: 140},\n  'Psycho Cut': {maxPower: 120},\n  Psyshock: {maxPower: 130},\n  Psystrike: {maxPower: 130},\n  Psywave: {maxPower: 100},\n  'Pulverizing Pancake': {maxPower: 1},\n  Punishment: {maxPower: 130},\n  Pursuit: {maxPower: 90},\n  'Quick Attack': {maxPower: 90},\n  Rage: {maxPower: 90},\n  'Rapid Spin': {bp: 50, secondaries: true, maxPower: 100},\n  'Razor Leaf': {maxPower: 110},\n  'Razor Shell': {maxPower: 130},\n  'Razor Wind': {maxPower: 130},\n  'Relic Song': {maxPower: 130},\n  Retaliate: {maxPower: 120},\n  Return: {maxPower: 130},\n  'Revelation Dance': {maxPower: 130},\n  Revenge: {maxPower: 80},\n  Reversal: {maxPower: 100},\n  'Roar of Time': {maxPower: 150},\n  'Rock Blast': {maxPower: 130},\n  'Rock Climb': {maxPower: 130},\n  'Rock Slide': {maxPower: 130},\n  'Rock Smash': {maxPower: 70},\n  'Rock Throw': {maxPower: 100},\n  'Rock Tomb': {maxPower: 110},\n  'Rock Wrecker': {maxPower: 150},\n  'Rolling Kick': {maxPower: 80},\n  Rollout: {maxPower: 90},\n  Round: {maxPower: 110},\n  'Sacred Fire': {maxPower: 130},\n  'Sacred Sword': {maxPower: 90},\n  'Sand Tomb': {maxPower: 90},\n  'Savage Spin-Out': {maxPower: 1},\n  Scald: {maxPower: 130},\n  Scratch: {maxPower: 90},\n  'Searing Shot': {maxPower: 130},\n  'Searing Sunraze Smash': {maxPower: 1},\n  'Secret Power': {maxPower: 120},\n  'Secret Sword': {maxPower: 90},\n  'Seed Bomb': {maxPower: 130},\n  'Seed Flare': {maxPower: 140},\n  'Seismic Toss': {maxPower: 75},\n  'Self-Destruct': {maxPower: 150},\n  'Shadow Ball': {maxPower: 130},\n  'Shadow Bone': {maxPower: 130},\n  'Shadow Claw': {maxPower: 120},\n  'Shadow Force': {maxPower: 140},\n  'Shadow Punch': {maxPower: 110},\n  'Shadow Sneak': {maxPower: 90},\n  'Shadow Strike': {maxPower: 130},\n  'Shattered Psyche': {maxPower: 1},\n  'Sheer Cold': {maxPower: 130},\n  'Shell Trap': {maxPower: 150},\n  'Shock Wave': {maxPower: 110},\n  'Signal Beam': {maxPower: 130},\n  'Silver Wind': {maxPower: 110},\n  'Sinister Arrow Raid': {maxPower: 1},\n  'Skull Bash': {maxPower: 140},\n  'Sky Attack': {maxPower: 140},\n  'Sky Drop': {maxPower: 110},\n  'Sky Uppercut': {maxPower: 90},\n  Slam: {maxPower: 130},\n  Slash: {maxPower: 120},\n  Sludge: {maxPower: 85},\n  'Sludge Bomb': {maxPower: 90},\n  'Sludge Wave': {maxPower: 90},\n  'Smack Down': {maxPower: 100},\n  'Smart Strike': {maxPower: 120},\n  'Smelling Salts': {maxPower: 120},\n  Smog: {maxPower: 70},\n  Snarl: {maxPower: 110},\n  Snore: {maxPower: 100},\n  'Solar Beam': {maxPower: 140},\n  'Solar Blade': {maxPower: 140},\n  'Sonic Boom': {maxPower: 100},\n  'Soul-Stealing 7-Star Strike': {maxPower: 1},\n  'Spacial Rend': {maxPower: 130},\n  Spark: {maxPower: 120},\n  'Sparkling Aria': {maxPower: 130},\n  'Spectral Thief': {maxPower: 130},\n  'Spike Cannon': {maxPower: 120},\n  'Spirit Shackle': {maxPower: 130},\n  'Spit Up': {maxPower: 100},\n  'Splintered Stormshards': {maxPower: 1},\n  'Steam Eruption': {maxPower: 140},\n  Steamroller: {maxPower: 120},\n  'Steel Wing': {maxPower: 120},\n  'Stoked Sparksurfer': {maxPower: 1},\n  Stomp: {maxPower: 120},\n  'Stomping Tantrum': {maxPower: 130},\n  'Stone Edge': {maxPower: 130},\n  'Stored Power': {maxPower: 130},\n  'Storm Throw': {maxPower: 80},\n  Strength: {maxPower: 130},\n  'Struggle Bug': {maxPower: 100},\n  Submission: {maxPower: 90},\n  'Subzero Slammer': {maxPower: 1},\n  'Sucker Punch': {maxPower: 120},\n  'Sunsteel Strike': {maxPower: 130},\n  'Super Fang': {maxPower: 100},\n  Superpower: {maxPower: 95},\n  'Supersonic Skystrike': {maxPower: 1},\n  Surf: {maxPower: 130},\n  Swift: {maxPower: 110},\n  Synchronoise: {maxPower: 140},\n  Tackle: {maxPower: 90},\n  'Tail Slap': {maxPower: 130},\n  'Take Down': {maxPower: 130},\n  'Techno Blast': {maxPower: 140},\n  'Tectonic Rage': {maxPower: 1},\n  Thief: {maxPower: 110},\n  'Thousand Arrows': {maxPower: 130},\n  'Thousand Waves': {maxPower: 130},\n  Thrash: {maxPower: 140},\n  'Throat Chop': {maxPower: 130},\n  Thunder: {maxPower: 140},\n  Thunderbolt: {maxPower: 130},\n  'Thunder Fang': {maxPower: 120},\n  'Thunder Punch': {maxPower: 130},\n  'Thunder Shock': {maxPower: 90},\n  'Tri Attack': {maxPower: 130},\n  'Triple Kick': {maxPower: 80},\n  'Trop Kick': {maxPower: 120},\n  'Trump Card': {maxPower: 130},\n  Twineedle: {maxPower: 100},\n  'Twinkle Tackle': {maxPower: 1},\n  Twister: {maxPower: 90},\n  'U-turn': {maxPower: 120},\n  Uproar: {maxPower: 130},\n  'Vacuum Wave': {maxPower: 70},\n  'V-create': {maxPower: 150},\n  Venoshock: {maxPower: 85},\n  'Vine Whip': {maxPower: 100},\n  'Vise Grip': {maxPower: 110},\n  'Vital Throw': {maxPower: 85},\n  'Volt Switch': {maxPower: 120},\n  'Volt Tackle': {maxPower: 140},\n  'Wake-Up Slap': {maxPower: 85},\n  Waterfall: {maxPower: 130},\n  'Water Gun': {maxPower: 90},\n  'Water Pledge': {maxPower: 130},\n  'Water Pulse': {maxPower: 110},\n  'Water Shuriken': {maxPower: 90},\n  'Water Spout': {maxPower: 150},\n  'Weather Ball': {maxPower: 130},\n  Whirlpool: {maxPower: 90},\n  'Wild Charge': {maxPower: 130},\n  'Wing Attack': {maxPower: 110},\n  'Wood Hammer': {maxPower: 140},\n  Wrap: {maxPower: 90},\n  'Wring Out': {maxPower: 140},\n  'X-Scissor': {maxPower: 130},\n  'Zap Cannon': {maxPower: 140},\n  'Zen Headbutt': {maxPower: 130},\n  'Zing Zap': {maxPower: 130},\n};\n\nconst SS: {[name: string]: MoveData} = extend(true, {}, SM, SS_PATCH);\n\nconst LGPE_MOVES = [\n  'Baddy Bad',\n  'Bouncy Bubble',\n  'Buzzy Buzz',\n  'Freezy Frost',\n  'Glitzy Glow',\n  'Sappy Seed',\n  'Sizzly Slide',\n  'Sparkly Swirl',\n  'Zippy Zap',\n  'Floaty Fall',\n  'Pika Papow',\n  'Splishy Splash',\n  'Veevee Volley',\n];\nfor (const m of LGPE_MOVES) {\n  delete SS[m];\n}\n\nconst SV_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Aerial Ace': {isSlicing: true},\n  'Air Cutter': {isSlicing: true, isWind: true},\n  'Air Slash': {isSlicing: true},\n  'Behemoth Blade': {isSlicing: true},\n  Blizzard: {isWind: true},\n  'Cross Poison': {isSlicing: true},\n  Cut: {isSlicing: true},\n  'Fairy Wind': {isWind: true},\n  'Fury Cutter': {isSlicing: true},\n  'Glacial Lance': {bp: 120, zp: 190},\n  'Grassy Glide': {bp: 60, zp: 120, maxPower: 110},\n  Gust: {isWind: true},\n  'Heat Wave': {isWind: true},\n  Hurricane: {isWind: true},\n  'Icy Wind': {isWind: true},\n  'Leaf Blade': {isSlicing: true},\n  'Night Slash': {isSlicing: true},\n  'Petal Blizzard': {isWind: true},\n  'Psycho Cut': {isSlicing: true},\n  'Razor Leaf': {isSlicing: true},\n  'Razor Shell': {isSlicing: true},\n  'Sacred Sword': {isSlicing: true},\n  Sandstorm: {isWind: true},\n  Slash: {isSlicing: true},\n  'Solar Blade': {isSlicing: true},\n  Tailwind: {isWind: true},\n  Twister: {isWind: true},\n  Whirlwind: {isWind: true},\n  'Wicked Blow': {bp: 75, zp: 140},\n  'X-Scissor': {isSlicing: true},\n  'Aqua Cutter': {\n    bp: 70,\n    type: 'Water',\n    category: 'Physical',\n    zp: 140,\n    maxPower: 120,\n    isSlicing: true,\n  },\n  'Aqua Step': {\n    bp: 80,\n    type: 'Water',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    makesContact: true,\n  },\n  'Armor Cannon': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Axe Kick': {\n    bp: 120,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 95,\n    secondaries: true,\n    hasCrashDamage: true,\n    makesContact: true,\n  },\n  'Barb Barrage': {\n    bp: 60,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 80,\n    secondaries: true,\n  },\n  'Bitter Blade': {\n    bp: 90,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n    drain: [1, 2],\n  },\n  'Bitter Malice': {\n    bp: 75,\n    type: 'Ghost',\n    category: 'Special',\n    zp: 140,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Blazing Torque': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Bleakwind Storm': {\n    bp: 100,\n    type: 'Flying',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Blood Moon': {\n    bp: 140,\n    type: 'Normal',\n    category: 'Special',\n  },\n  'Ceaseless Edge': {\n    bp: 65,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 120,\n    makesContact: true,\n    isSlicing: true,\n    secondaries: true,\n  },\n  'Chilling Water': {\n    bp: 50,\n    type: 'Water',\n    category: 'Special',\n    zp: 100,\n    maxPower: 100,\n    secondaries: true,\n  },\n  'Chilly Reception': {\n    bp: 0,\n    type: 'Ice',\n    category: 'Status',\n  },\n  'Chloroblast': {\n    bp: 150,\n    type: 'Grass',\n    mindBlownRecoil: true,\n    category: 'Special',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Collision Course': {\n    bp: 100,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    makesContact: true, // Deals 1.3x on super effective\n  },\n  'Combat Torque': {\n    bp: 100,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    secondaries: true,\n  },\n  Comeuppance: {\n    bp: 0,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n  },\n  Doodle: {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Double Shock': {\n    bp: 120,\n    type: 'Electric',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n  },\n  'Dire Claw': {\n    bp: 80,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 90,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Electro Drift': {\n    bp: 100,\n    type: 'Electric',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true, // deals 1.3x on super effective\n  },\n  'Esper Wing': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Fillet Away': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Flower Trick': {\n    bp: 70,\n    type: 'Grass',\n    category: 'Physical',\n    willCrit: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Gigaton Hammer': {\n    bp: 160,\n    type: 'Steel',\n    category: 'Physical',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Glaive Rush': {\n    bp: 120,\n    type: 'Dragon',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n  },\n  'Headlong Rush': {\n    bp: 120,\n    type: 'Ground',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n    isPunch: true,\n  },\n  'Hydro Steam': {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Hyper Drill': {\n    bp: 100,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true,\n    breaksProtect: true,\n  },\n  'Ice Spinner': {\n    bp: 80,\n    type: 'Ice',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Infernal Parade': {\n    bp: 60,\n    type: 'Ghost',\n    category: 'Special',\n    zp: 120,\n    maxPower: 110,\n    secondaries: true,\n  },\n  'Jet Punch': {\n    bp: 60,\n    type: 'Water',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 110,\n    makesContact: true,\n    isPunch: true,\n    priority: 1,\n    // Sheer Force boost implemented in gen789.ts\n  },\n  'Kowtow Cleave': {\n    bp: 85,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n  },\n  'Last Respects': {\n    bp: 50,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n  },\n  'Lumina Crash': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Lunar Blessing': {\n    bp: 0,\n    type: 'Psychic',\n    category: 'Status',\n  },\n  'Magical Torque': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Make It Rain': {\n    bp: 120,\n    type: 'Steel',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n    target: 'allAdjacentFoes',\n    self: {boosts: {spa: -1}},\n  },\n  'Mortal Spin': {\n    bp: 30,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 70,\n    makesContact: true,\n    secondaries: true,\n    target: 'allAdjacentFoes',\n  },\n  'Mountain Gale': {\n    bp: 100,\n    type: 'Ice',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Mystical Power': {\n    bp: 70,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 140,\n    maxPower: 120,\n    secondaries: true,\n  },\n  'Noxious Torque': {\n    bp: 100,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Order Up': {\n    bp: 80,\n    type: 'Dragon',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    isPulse: true,\n    // Sheer Force boost implemented in gen789.ts\n  },\n  'Population Bomb': {\n    bp: 20,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    makesContact: true,\n    isSlicing: true,\n    multihit: [2, 10],\n  },\n  Pounce: {\n    bp: 50,\n    type: 'Bug',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Power Shift': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Psyblade: {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n  },\n  'Psyshield Bash': {\n    bp: 70,\n    type: 'Psychic',\n    category: 'Physical',\n    zp: 140,\n    maxPower: 120,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Rage Fist': {\n    bp: 50,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n    isPunch: true,\n  },\n  'Raging Bull': {\n    bp: 90,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Raging Fury': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Revival Blessing': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Ruination: {\n    bp: 0,\n    type: 'Dark',\n    category: 'Special',\n    zp: 100,\n    maxPower: 100,\n  },\n  'Salt Cure': {\n    bp: 40,\n    type: 'Rock',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Sandsear Storm': {\n    bp: 100,\n    type: 'Ground',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Shed Tail': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Shelter: {\n    bp: 0,\n    type: 'Steel',\n    category: 'Status',\n  },\n  'Silk Trap': {\n    bp: 0,\n    type: 'Bug',\n    category: 'Status',\n    priority: 4,\n  },\n  Snowscape: {\n    bp: 0,\n    type: 'Ice',\n    category: 'Status',\n  },\n  'Spicy Extract': {\n    bp: 0,\n    type: 'Grass',\n    category: 'Status',\n  },\n  'Spin Out': {\n    bp: 100,\n    type: 'Steel',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Springtide Storm': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Stone Axe': {\n    bp: 65,\n    type: 'Rock',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 120,\n    makesContact: true,\n    isSlicing: true,\n    secondaries: true,\n  },\n  'Syrup Bomb': {\n    bp: 60,\n    type: 'Grass',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Take Heart': {\n    bp: 0,\n    type: 'Psychic',\n    category: 'Status',\n  },\n  'Tera Blast': {\n    bp: 80,\n    type: 'Normal',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Tidy Up': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Torch Song': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    isSound: true,\n  },\n  Trailblaze: {\n    bp: 50,\n    type: 'Grass',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    secondaries: true,\n    makesContact: true,\n  },\n  'Triple Arrows': {\n    bp: 90,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Triple Dive': {\n    bp: 30,\n    type: 'Water',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    makesContact: true,\n    multihit: 3,\n  },\n  'Twin Beam': {\n    bp: 40,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 100,\n    maxPower: 90,\n    multihit: 2,\n  },\n  'Victory Dance': {\n    bp: 0,\n    type: 'Fighting',\n    category: 'Status',\n  },\n  'Wave Crash': {\n    bp: 120,\n    type: 'Water',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n    recoil: [33, 100],\n  },\n  'Wicked Torque': {\n    bp: 80,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Wildbolt Storm': {\n    bp: 100,\n    type: 'Electric',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n};\n\nconst SV: {[name: string]: MoveData} = extend(true, {}, SS, SV_PATCH);\n\nconst RAID_CHEERS_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Attack Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n  },\n  'Defense Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n  },\n  'Heal Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n  }\n}\n\nconst RAID: {[name: string]: MoveData} = extend(true, {}, SV, RAID_CHEERS_PATCH);\n\nexport const MOVES = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV, RAID];\n\nexport class Moves implements I.Moves {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return MOVES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in MOVES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Move implements I.Move {\n  readonly kind: 'Move';\n  readonly id: I.ID;\n  readonly name: I.MoveName;\n  readonly basePower!: number;\n  readonly type!: I.TypeName;\n  readonly category?: I.MoveCategory;\n  readonly flags: I.MoveFlags;\n  readonly secondaries?: boolean;\n  readonly target?: I.MoveTarget;\n  readonly recoil?: [number, number];\n  readonly hasCrashDamage?: boolean;\n  readonly mindBlownRecoil?: boolean;\n  readonly struggleRecoil?: boolean;\n  readonly willCrit?: boolean;\n  readonly drain?: [number, number];\n  readonly priority?: number;\n  readonly self?: I.SelfOrSecondaryEffect | null;\n  readonly ignoreDefensive?: boolean;\n  readonly overrideOffensiveStat?: I.StatIDExceptHP;\n  readonly overrideDefensiveStat?: I.StatIDExceptHP;\n  readonly overrideOffensivePokemon?: 'target' | 'source';\n  readonly overrideDefensivePokemon?: 'target' | 'source';\n  readonly breaksProtect?: boolean;\n  readonly isZ?: boolean;\n  readonly zMove?: {\n    basePower?: number;\n  };\n  readonly isMax?: boolean;\n  readonly maxMove?: {\n    basePower: number;\n  };\n  readonly zp?: number;\n  readonly maxPower?: number;\n  readonly multihit?: number | number[];\n\n  private static readonly FLAGS = new Set([\n    'bp',\n    'makesContact',\n    'isPunch',\n    'isBite',\n    'isBullet',\n    'isSound',\n    'isPulse',\n    'zp',\n    'maxPower',\n    'isSlicing',\n    'isWind',\n  ]);\n\n  constructor(name: string, data: MoveData, gen: number) {\n    this.kind = 'Move';\n    this.id = toID(name);\n    this.name = name as I.MoveName;\n\n    // TODO: remove this once MoveData is migrated to flags and Object.assign just handles this\n    this.flags = {};\n    if (data.makesContact) this.flags.contact = 1;\n    if (data.isPunch) this.flags.punch = 1;\n    if (data.isBite) this.flags.bite = 1;\n    if (data.isBullet) this.flags.bullet = 1;\n    if (data.isSound) this.flags.sound = 1;\n    if (data.isPulse) this.flags.pulse = 1;\n    if (data.isSlicing) this.flags.slicing = 1;\n    if (data.isWind) this.flags.wind = 1;\n\n    assignWithout(this, data, Move.FLAGS);\n\n    this.basePower = data.bp;\n    if (data.zp) this.zMove = {basePower: data.zp};\n    if (data.maxPower) this.maxMove = {basePower: data.maxPower};\n\n    if (!this.category && gen >= 4) this.category = 'Status';\n    if (this.struggleRecoil) delete (this as any).recoil;\n  }\n}\n\nconst MOVES_BY_ID: Array<{[id: string]: Move}> = [];\n\nlet gen = 0;\nfor (const moves of MOVES) {\n  const map: {[id: string]: Move} = {};\n  for (const move in moves) {\n    const data = moves[move];\n    const m = new Move(move, data, gen);\n    map[m.id] = m;\n  }\n  MOVES_BY_ID.push(map);\n  gen++;\n}\n","import * as I from './interface';\nimport {toID, extend, DeepPartial, assignWithout} from '../util';\n\nexport interface SpeciesData {\n  readonly types: [I.TypeName] | [I.TypeName, I.TypeName];\n  // TODO: replace with baseStats\n  readonly bs: {\n    hp: number;\n    at: number;\n    df: number;\n    sa?: number;\n    sd?: number;\n    sp: number;\n    sl?: number;\n  };\n  readonly weightkg: number; // weight\n  readonly nfe?: boolean;\n  readonly gender?: I.GenderName;\n  readonly otherFormes?: string[];\n  readonly baseSpecies?: string;\n  readonly abilities?: {0: string}; // ability\n}\n\nconst RBY: {[name: string]: SpeciesData} = {\n  // Abra: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 25, at: 20, df: 15, sp: 90, sl: 105},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  // Aerodactyl: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 80, at: 105, df: 65, sp: 130, sl: 60},\n  //   weightkg: 59,\n  // },\n  // Alakazam: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 50, df: 45, sp: 120, sl: 135},\n  //   weightkg: 48,\n  // },\n  Arbok: {types: ['Poison'], bs: {hp: 60, at: 85, df: 69, sp: 80, sl: 65}, weightkg: 65},\n  Arcanine: {\n    types: ['Fire'],\n    bs: {hp: 90, at: 110, df: 80, sp: 95, sl: 80},\n    weightkg: 155,\n  },\n  Articuno: {\n    types: ['Ice', 'Flying'],\n    bs: {hp: 90, at: 85, df: 100, sp: 85, sl: 125},\n    weightkg: 55.4,\n  },\n  // Beedrill: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 65, at: 80, df: 40, sp: 75, sl: 45},\n  //   weightkg: 29.5,\n  // },\n  Bellsprout: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 50, at: 75, df: 35, sp: 40, sl: 70},\n    weightkg: 4,\n    nfe: true,\n  },\n  // Blastoise: {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 83, df: 100, sp: 78, sl: 85},\n  //   weightkg: 85.5,\n  // },\n  // Bulbasaur: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 45, at: 49, df: 49, sp: 45, sl: 65},\n  //   weightkg: 6.9,\n  //   nfe: true,\n  // },\n  // Butterfree: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 45, df: 50, sp: 70, sl: 80},\n  //   weightkg: 32,\n  // },\n  // Caterpie: {\n  //   types: ['Bug'],\n  //   bs: {hp: 45, at: 30, df: 35, sp: 45, sl: 20},\n  //   weightkg: 2.9,\n  //   nfe: true,\n  // },\n  Chansey: {\n    types: ['Normal'],\n    bs: {hp: 250, at: 5, df: 5, sp: 50, sl: 105},\n    weightkg: 34.6,\n  },\n  Charizard: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 78, at: 84, df: 78, sp: 100, sl: 85},\n    weightkg: 90.5,\n  },\n  Charmander: {\n    types: ['Fire'],\n    bs: {hp: 39, at: 52, df: 43, sp: 65, sl: 50},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  Charmeleon: {\n    types: ['Fire'],\n    bs: {hp: 58, at: 64, df: 58, sp: 80, sl: 65},\n    weightkg: 19,\n    nfe: true,\n  },\n  Clefable: {types: ['Normal'], bs: {hp: 95, at: 70, df: 73, sp: 60, sl: 85}, weightkg: 40},\n  Clefairy: {\n    types: ['Normal'],\n    bs: {hp: 70, at: 45, df: 48, sp: 35, sl: 60},\n    weightkg: 7.5,\n    nfe: true,\n  },\n  Cloyster: {\n    types: ['Water', 'Ice'],\n    bs: {hp: 50, at: 95, df: 180, sp: 70, sl: 85},\n    weightkg: 132.5,\n  },\n  // Cubone: {\n  //   types: ['Ground'],\n  //   bs: {hp: 50, at: 50, df: 95, sp: 35, sl: 40},\n  //   weightkg: 6.5,\n  //   nfe: true,\n  // },\n  // Dewgong: {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 90, at: 70, df: 80, sp: 70, sl: 95},\n  //   weightkg: 120,\n  // },\n  Diglett: {\n    types: ['Ground'],\n    bs: {hp: 10, at: 55, df: 25, sp: 95, sl: 45},\n    weightkg: 0.8,\n    nfe: true,\n  },\n  Ditto: {types: ['Normal'], bs: {hp: 48, at: 48, df: 48, sp: 48, sl: 48}, weightkg: 4},\n  // Dodrio: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 60, at: 110, df: 70, sp: 100, sl: 60},\n  //   weightkg: 85.2,\n  // },\n  // Doduo: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 35, at: 85, df: 45, sp: 75, sl: 35},\n  //   weightkg: 39.2,\n  //   nfe: true,\n  // },\n  Dragonair: {\n    types: ['Dragon'],\n    bs: {hp: 61, at: 84, df: 65, sp: 70, sl: 70},\n    weightkg: 16.5,\n    nfe: true,\n  },\n  Dragonite: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 91, at: 134, df: 95, sp: 80, sl: 100},\n    weightkg: 210,\n  },\n  Dratini: {\n    types: ['Dragon'],\n    bs: {hp: 41, at: 64, df: 45, sp: 50, sl: 50},\n    weightkg: 3.3,\n    nfe: true,\n  },\n  Drowzee: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 48, df: 45, sp: 42, sl: 90},\n    weightkg: 32.4,\n    nfe: true,\n  },\n  Dugtrio: {\n    types: ['Ground'],\n    bs: {hp: 35, at: 80, df: 50, sp: 120, sl: 70},\n    weightkg: 33.3,\n  },\n  Eevee: {\n    types: ['Normal'],\n    bs: {hp: 55, at: 55, df: 50, sp: 55, sl: 65},\n    weightkg: 6.5,\n    nfe: true,\n  },\n  Ekans: {\n    types: ['Poison'],\n    bs: {hp: 35, at: 60, df: 44, sp: 55, sl: 40},\n    weightkg: 6.9,\n    nfe: true,\n  },\n  // Electabuzz: {\n  //   types: ['Electric'],\n  //   bs: {hp: 65, at: 83, df: 57, sp: 105, sl: 85},\n  //   weightkg: 30,\n  // },\n  Electrode: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 50, df: 70, sp: 140, sl: 80},\n    weightkg: 66.6,\n  },\n  // Exeggcute: {\n  //   types: ['Grass', 'Psychic'],\n  //   bs: {hp: 60, at: 40, df: 80, sp: 40, sl: 60},\n  //   weightkg: 2.5,\n  //   nfe: true,\n  // },\n  // Exeggutor: {\n  //   types: ['Grass', 'Psychic'],\n  //   bs: {hp: 95, at: 95, df: 85, sp: 55, sl: 125},\n  //   weightkg: 120,\n  // },\n  // 'Farfetch\\u2019d': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 52, at: 65, df: 55, sp: 60, sl: 58},\n  //   weightkg: 15,\n  // },\n  // Fearow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 65, at: 90, df: 65, sp: 100, sl: 61},\n  //   weightkg: 38,\n  // },\n  Flareon: {types: ['Fire'], bs: {hp: 65, at: 130, df: 60, sp: 65, sl: 110}, weightkg: 25},\n  Gastly: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 30, at: 35, df: 30, sp: 80, sl: 100},\n    weightkg: 0.1,\n    nfe: true,\n  },\n  Gengar: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 60, at: 65, df: 60, sp: 110, sl: 130},\n    weightkg: 40.5,\n  },\n  Geodude: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 40, at: 80, df: 100, sp: 20, sl: 30},\n    weightkg: 20,\n    nfe: true,\n  },\n  // Gloom: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 70, sp: 40, sl: 85},\n  //   weightkg: 8.6,\n  //   nfe: true,\n  // },\n  // Golbat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 75, at: 80, df: 70, sp: 90, sl: 75},\n  //   weightkg: 55,\n  // },\n  // Goldeen: {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 67, df: 60, sp: 63, sl: 50},\n  //   weightkg: 15,\n  //   nfe: true,\n  // },\n  Golduck: {types: ['Water'], bs: {hp: 80, at: 82, df: 78, sp: 85, sl: 80}, weightkg: 76.6},\n  Golem: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 80, at: 110, df: 130, sp: 45, sl: 55},\n    weightkg: 300,\n  },\n  Graveler: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 55, at: 95, df: 115, sp: 35, sl: 45},\n    weightkg: 105,\n    nfe: true,\n  },\n  Grimer: {\n    types: ['Poison'],\n    bs: {hp: 80, at: 80, df: 50, sp: 25, sl: 40},\n    weightkg: 30,\n    nfe: true,\n  },\n  Growlithe: {\n    types: ['Fire'],\n    bs: {hp: 55, at: 70, df: 45, sp: 60, sl: 50},\n    weightkg: 19,\n    nfe: true,\n  },\n  Gyarados: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 95, at: 125, df: 79, sp: 81, sl: 100},\n    weightkg: 235,\n  },\n  Haunter: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 45, at: 50, df: 45, sp: 95, sl: 115},\n    weightkg: 0.1,\n    nfe: true,\n  },\n  // Hitmonchan: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 105, df: 79, sp: 76, sl: 35},\n  //   weightkg: 50.2,\n  // },\n  // Hitmonlee: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 120, df: 53, sp: 87, sl: 35},\n  //   weightkg: 49.8,\n  // },\n  // Horsea: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 40, df: 70, sp: 60, sl: 70},\n  //   weightkg: 8,\n  //   nfe: true,\n  // },\n  Hypno: {\n    types: ['Psychic'],\n    bs: {hp: 85, at: 73, df: 70, sp: 67, sl: 115},\n    weightkg: 75.6,\n  },\n  // Ivysaur: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 60, at: 62, df: 63, sp: 60, sl: 80},\n  //   weightkg: 13,\n  //   nfe: true,\n  // },\n  Jigglypuff: {\n    types: ['Normal'],\n    bs: {hp: 115, at: 45, df: 20, sp: 20, sl: 25},\n    weightkg: 5.5,\n    nfe: true,\n  },\n  Jolteon: {\n    types: ['Electric'],\n    bs: {hp: 65, at: 65, df: 60, sp: 130, sl: 110},\n    weightkg: 24.5,\n  },\n  // Jynx: {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 65, at: 50, df: 35, sp: 95, sl: 95},\n  //   weightkg: 40.6,\n  // },\n  // Kabuto: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 30, at: 80, df: 90, sp: 55, sl: 45},\n  //   weightkg: 11.5,\n  //   nfe: true,\n  // },\n  // Kabutops: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 60, at: 115, df: 105, sp: 80, sl: 70},\n  //   weightkg: 40.5,\n  // },\n  // Kadabra: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 40, at: 35, df: 30, sp: 105, sl: 120},\n  //   weightkg: 56.5,\n  //   nfe: true,\n  // },\n  // Kakuna: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 45, at: 25, df: 50, sp: 35, sl: 25},\n  //   weightkg: 10,\n  //   nfe: true,\n  // },\n  // Kangaskhan: {\n  //   types: ['Normal'],\n  //   bs: {hp: 105, at: 95, df: 80, sp: 90, sl: 40},\n  //   weightkg: 80,\n  // },\n  // Kingler: {types: ['Water'], bs: {hp: 55, at: 130, df: 115, sp: 75, sl: 50}, weightkg: 60},\n  Koffing: {\n    types: ['Poison'],\n    bs: {hp: 40, at: 65, df: 95, sp: 35, sl: 60},\n    weightkg: 1,\n    nfe: true,\n  },\n  // Krabby: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 105, df: 90, sp: 50, sl: 25},\n  //   weightkg: 6.5,\n  //   nfe: true,\n  // },\n  // Lapras: {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 130, at: 85, df: 80, sp: 60, sl: 95},\n  //   weightkg: 220,\n  // },\n  // Lickitung: {\n  //   types: ['Normal'],\n  //   bs: {hp: 90, at: 55, df: 75, sp: 30, sl: 60},\n  //   weightkg: 65.5,\n  // },\n  // Machamp: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 90, at: 130, df: 80, sp: 55, sl: 65},\n  //   weightkg: 130,\n  // },\n  // Machoke: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 80, at: 100, df: 70, sp: 45, sl: 50},\n  //   weightkg: 70.5,\n  //   nfe: true,\n  // },\n  // Machop: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 70, at: 80, df: 50, sp: 35, sl: 35},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  Magikarp: {\n    types: ['Water'],\n    bs: {hp: 20, at: 10, df: 55, sp: 80, sl: 20},\n    weightkg: 10,\n    nfe: true,\n  },\n  // Magmar: {\n  //   types: ['Fire'],\n  //   bs: {hp: 65, at: 95, df: 57, sp: 93, sl: 85},\n  //   weightkg: 44.5,\n  // },\n  Magnemite: {\n    types: ['Electric'],\n    bs: {hp: 25, at: 35, df: 70, sp: 45, sl: 95},\n    weightkg: 6,\n    nfe: true,\n  },\n  Magneton: {\n    types: ['Electric'],\n    bs: {hp: 50, at: 60, df: 95, sp: 70, sl: 120},\n    weightkg: 60,\n  },\n  Mankey: {\n    types: ['Fighting'],\n    bs: {hp: 40, at: 80, df: 35, sp: 70, sl: 35},\n    weightkg: 28,\n    nfe: true,\n  },\n  // Marowak: {types: ['Ground'], bs: {hp: 60, at: 80, df: 110, sp: 45, sl: 50}, weightkg: 45},\n  Meowth: {\n    types: ['Normal'],\n    bs: {hp: 40, at: 45, df: 35, sp: 90, sl: 40},\n    weightkg: 4.2,\n    nfe: true,\n  },\n  // Metapod: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 20, df: 55, sp: 30, sl: 25},\n  //   weightkg: 9.9,\n  //   nfe: true,\n  // },\n  Mew: {\n    types: ['Psychic'],\n    bs: {hp: 100, at: 100, df: 100, sp: 100, sl: 100},\n    weightkg: 4,\n  },\n  Mewtwo: {\n    types: ['Psychic'],\n    bs: {hp: 106, at: 110, df: 90, sp: 130, sl: 154},\n    weightkg: 122,\n  },\n  Moltres: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 90, at: 100, df: 90, sp: 90, sl: 125},\n    weightkg: 60,\n  },\n  // 'Mr. Mime': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 40, at: 45, df: 65, sp: 90, sl: 100},\n  //   weightkg: 54.5,\n  // },\n  Muk: {types: ['Poison'], bs: {hp: 105, at: 105, df: 75, sp: 50, sl: 65}, weightkg: 30},\n  // Nidoking: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 81, at: 92, df: 77, sp: 85, sl: 75},\n  //   weightkg: 62,\n  // },\n  // Nidoqueen: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 90, at: 82, df: 87, sp: 76, sl: 75},\n  //   weightkg: 60,\n  // },\n  // 'Nidoran-F': {\n  //   types: ['Poison'],\n  //   bs: {hp: 55, at: 47, df: 52, sp: 41, sl: 40},\n  //   weightkg: 7,\n  //   nfe: true,\n  // },\n  // 'Nidoran-M': {\n  //   types: ['Poison'],\n  //   bs: {hp: 46, at: 57, df: 40, sp: 50, sl: 40},\n  //   weightkg: 9,\n  //   nfe: true,\n  // },\n  // Nidorina: {\n  //   types: ['Poison'],\n  //   bs: {hp: 70, at: 62, df: 67, sp: 56, sl: 55},\n  //   weightkg: 20,\n  //   nfe: true,\n  // },\n  // Nidorino: {\n  //   types: ['Poison'],\n  //   bs: {hp: 61, at: 72, df: 57, sp: 65, sl: 55},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  Ninetales: {\n    types: ['Fire'],\n    bs: {hp: 73, at: 76, df: 75, sp: 100, sl: 100},\n    weightkg: 19.9,\n  },\n  // Oddish: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 45, at: 50, df: 55, sp: 30, sl: 75},\n  //   weightkg: 5.4,\n  //   nfe: true,\n  // },\n  // Omanyte: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 35, at: 40, df: 100, sp: 35, sl: 90},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  // },\n  // Omastar: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 70, at: 60, df: 125, sp: 55, sl: 115},\n  //   weightkg: 35,\n  // },\n  // Onix: {\n  //   types: ['Rock', 'Ground'],\n  //   bs: {hp: 35, at: 45, df: 160, sp: 70, sl: 30},\n  //   weightkg: 210,\n  // },\n  // Paras: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 35, at: 70, df: 55, sp: 25, sl: 55},\n  //   weightkg: 5.4,\n  //   nfe: true,\n  // },\n  // Parasect: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 60, at: 95, df: 80, sp: 30, sl: 80},\n  //   weightkg: 29.5,\n  // },\n  Persian: {types: ['Normal'], bs: {hp: 65, at: 70, df: 60, sp: 115, sl: 65}, weightkg: 32},\n  // Pidgeot: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 83, at: 80, df: 75, sp: 91, sl: 70},\n  //   weightkg: 39.5,\n  // },\n  // Pidgeotto: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 63, at: 60, df: 55, sp: 71, sl: 50},\n  //   weightkg: 30,\n  //   nfe: true,\n  // },\n  // Pidgey: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 45, df: 40, sp: 56, sl: 35},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  // },\n  Pikachu: {\n    types: ['Electric'],\n    bs: {hp: 35, at: 55, df: 30, sp: 90, sl: 50},\n    weightkg: 6,\n    nfe: true,\n  },\n  // Pinsir: {types: ['Bug'], bs: {hp: 65, at: 125, df: 100, sp: 85, sl: 55}, weightkg: 55},\n  Poliwag: {\n    types: ['Water'],\n    bs: {hp: 40, at: 50, df: 40, sp: 90, sl: 40},\n    weightkg: 12.4,\n    nfe: true,\n  },\n  Poliwhirl: {\n    types: ['Water'],\n    bs: {hp: 65, at: 65, df: 65, sp: 90, sl: 50},\n    weightkg: 20,\n    nfe: true,\n  },\n  Poliwrath: {\n    types: ['Water', 'Fighting'],\n    bs: {hp: 90, at: 85, df: 95, sp: 70, sl: 70},\n    weightkg: 54,\n  },\n  // Ponyta: {\n  //   types: ['Fire'],\n  //   bs: {hp: 50, at: 85, df: 55, sp: 90, sl: 65},\n  //   weightkg: 30,\n  //   nfe: true,\n  // },\n  // Porygon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 60, df: 70, sp: 40, sl: 75},\n  //   weightkg: 36.5,\n  // },\n  Primeape: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 105, df: 60, sp: 95, sl: 60},\n    weightkg: 32,\n  },\n  Psyduck: {\n    types: ['Water'],\n    bs: {hp: 50, at: 52, df: 48, sp: 55, sl: 50},\n    weightkg: 19.6,\n    nfe: true,\n  },\n  Raichu: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 90, df: 55, sp: 100, sl: 90},\n    weightkg: 30,\n  },\n  // Rapidash: {types: ['Fire'], bs: {hp: 65, at: 100, df: 70, sp: 105, sl: 80}, weightkg: 95},\n  // Raticate: {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 81, df: 60, sp: 97, sl: 50},\n  //   weightkg: 18.5,\n  // },\n  // Rattata: {\n  //   types: ['Normal'],\n  //   bs: {hp: 30, at: 56, df: 35, sp: 72, sl: 25},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  // },\n  // Rhydon: {\n  //   types: ['Ground', 'Rock'],\n  //   bs: {hp: 105, at: 130, df: 120, sp: 40, sl: 45},\n  //   weightkg: 120,\n  // },\n  // Rhyhorn: {\n  //   types: ['Ground', 'Rock'],\n  //   bs: {hp: 80, at: 85, df: 95, sp: 25, sl: 30},\n  //   weightkg: 115,\n  //   nfe: true,\n  // },\n  Sandshrew: {\n    types: ['Ground'],\n    bs: {hp: 50, at: 75, df: 85, sp: 40, sl: 30},\n    weightkg: 12,\n    nfe: true,\n  },\n  Sandslash: {\n    types: ['Ground'],\n    bs: {hp: 75, at: 100, df: 110, sp: 65, sl: 55},\n    weightkg: 29.5,\n  },\n  Scyther: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 110, df: 80, sp: 105, sl: 55},\n    weightkg: 56,\n  },\n  // Seadra: {types: ['Water'], bs: {hp: 55, at: 65, df: 95, sp: 85, sl: 95}, weightkg: 25},\n  // Seaking: {types: ['Water'], bs: {hp: 80, at: 92, df: 65, sp: 68, sl: 80}, weightkg: 39},\n  // Seel: {\n  //   types: ['Water'],\n  //   bs: {hp: 65, at: 45, df: 55, sp: 45, sl: 70},\n  //   weightkg: 90,\n  //   nfe: true,\n  // },\n  Shellder: {\n    types: ['Water'],\n    bs: {hp: 30, at: 65, df: 100, sp: 40, sl: 45},\n    weightkg: 4,\n    nfe: true,\n  },\n  Slowbro: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 95, at: 75, df: 110, sp: 30, sl: 80},\n    weightkg: 78.5,\n  },\n  Slowpoke: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 90, at: 65, df: 65, sp: 15, sl: 40},\n    weightkg: 36,\n    nfe: true,\n  },\n  Snorlax: {\n    types: ['Normal'],\n    bs: {hp: 160, at: 110, df: 65, sp: 30, sl: 65},\n    weightkg: 460,\n  },\n  // Spearow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 60, df: 30, sp: 70, sl: 31},\n  //   weightkg: 2,\n  //   nfe: true,\n  // },\n  // Squirtle: {\n  //   types: ['Water'],\n  //   bs: {hp: 44, at: 48, df: 65, sp: 43, sl: 50},\n  //   weightkg: 9,\n  //   nfe: true,\n  // },\n  // Starmie: {\n  //   types: ['Water', 'Psychic'],\n  //   bs: {hp: 60, at: 75, df: 85, sp: 115, sl: 100},\n  //   weightkg: 80,\n  // },\n  // Staryu: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 45, df: 55, sp: 85, sl: 70},\n  //   weightkg: 34.5,\n  //   nfe: true,\n  // },\n  // Tangela: {\n  //   types: ['Grass'],\n  //   bs: {hp: 65, at: 55, df: 115, sp: 60, sl: 100},\n  //   weightkg: 35,\n  // },\n  Tauros: {\n    types: ['Normal'],\n    bs: {hp: 75, at: 100, df: 95, sp: 110, sl: 70},\n    weightkg: 88.4,\n  },\n  // Tentacool: {\n  //   types: ['Water', 'Poison'],\n  //   bs: {hp: 40, at: 40, df: 35, sp: 70, sl: 100},\n  //   weightkg: 45.5,\n  //   nfe: true,\n  // },\n  // Tentacruel: {\n  //   types: ['Water', 'Poison'],\n  //   bs: {hp: 80, at: 70, df: 65, sp: 100, sl: 120},\n  //   weightkg: 55,\n  // },\n  Vaporeon: {\n    types: ['Water'],\n    bs: {hp: 130, at: 65, df: 60, sp: 65, sl: 110},\n    weightkg: 29,\n  },\n  Venomoth: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 70, at: 65, df: 60, sp: 90, sl: 90},\n    weightkg: 12.5,\n  },\n  Venonat: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 60, at: 55, df: 50, sp: 45, sl: 40},\n    weightkg: 30,\n    nfe: true,\n  },\n  // Venusaur: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 82, df: 83, sp: 80, sl: 100},\n  //   weightkg: 100,\n  // },\n  Victreebel: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 80, at: 105, df: 65, sp: 70, sl: 100},\n    weightkg: 15.5,\n  },\n  // Vileplume: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 75, at: 80, df: 85, sp: 50, sl: 100},\n  //   weightkg: 18.6,\n  // },\n  Voltorb: {\n    types: ['Electric'],\n    bs: {hp: 40, at: 30, df: 50, sp: 100, sl: 55},\n    weightkg: 10.4,\n    nfe: true,\n  },\n  Vulpix: {\n    types: ['Fire'],\n    bs: {hp: 38, at: 41, df: 40, sp: 65, sl: 65},\n    weightkg: 9.9,\n    nfe: true,\n  },\n  // Wartortle: {\n  //   types: ['Water'],\n  //   bs: {hp: 59, at: 63, df: 80, sp: 58, sl: 65},\n  //   weightkg: 22.5,\n  //   nfe: true,\n  // },\n  // Weedle: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 40, at: 35, df: 30, sp: 50, sl: 20},\n  //   weightkg: 3.2,\n  //   nfe: true,\n  // },\n  Weepinbell: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 65, at: 90, df: 50, sp: 55, sl: 85},\n    weightkg: 6.4,\n    nfe: true,\n  },\n  Weezing: {\n    types: ['Poison'],\n    bs: {hp: 65, at: 90, df: 120, sp: 60, sl: 85},\n    weightkg: 9.5,\n  },\n  Wigglytuff: {\n    types: ['Normal'],\n    bs: {hp: 140, at: 70, df: 45, sp: 45, sl: 50},\n    weightkg: 12,\n  },\n  Zapdos: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 90, at: 90, df: 85, sp: 100, sl: 125},\n    weightkg: 52.6,\n  },\n  // Zubat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 40, at: 45, df: 35, sp: 55, sl: 40},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  // },\n};\n\nconst GSC_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // gen 1 pokemon changes\n  // Abra: {bs: {sa: 105, sd: 55}},\n  // Aerodactyl: {bs: {sa: 60, sd: 75}},\n  // Alakazam: {bs: {sa: 135, sd: 85}},\n  Arbok: {bs: {sa: 65, sd: 79}},\n  Arcanine: {bs: {sa: 100, sd: 80}},\n  Articuno: {bs: {sa: 95, sd: 125}, gender: 'N'},\n  // Beedrill: {bs: {sa: 45, sd: 80}},\n  Bellsprout: {bs: {sa: 70, sd: 30}},\n  // Blastoise: {bs: {sa: 85, sd: 105}},\n  // Bulbasaur: {bs: {sa: 65, sd: 65}},\n  // Butterfree: {bs: {sa: 80, sd: 80}},\n  // Caterpie: {bs: {sa: 20, sd: 20}},\n  Chansey: {bs: {sa: 35, sd: 105}, nfe: true},\n  Charizard: {bs: {sa: 109, sd: 85}},\n  Charmander: {bs: {sa: 60, sd: 50}},\n  Charmeleon: {bs: {sa: 80, sd: 65}},\n  Clefable: {bs: {sa: 85, sd: 90}},\n  Clefairy: {bs: {sa: 60, sd: 65}},\n  Cloyster: {bs: {sa: 85, sd: 45}},\n  // Cubone: {bs: {sa: 40, sd: 50}},\n  // Dewgong: {bs: {sa: 70, sd: 95}},\n  Diglett: {bs: {sa: 35, sd: 45}},\n  Ditto: {bs: {sa: 48, sd: 48}, gender: 'N'},\n  // Dodrio: {bs: {sa: 60, sd: 60}},\n  // Doduo: {bs: {sa: 35, sd: 35}},\n  Dragonair: {bs: {sa: 70, sd: 70}},\n  Dragonite: {bs: {sa: 100, sd: 100}},\n  Dratini: {bs: {sa: 50, sd: 50}},\n  Drowzee: {bs: {sa: 43, sd: 90}},\n  Dugtrio: {bs: {sa: 50, sd: 70}},\n  Eevee: {bs: {sa: 45, sd: 65}},\n  Ekans: {bs: {sa: 40, sd: 54}},\n  // Electabuzz: {bs: {sa: 95, sd: 85}},\n  Electrode: {bs: {sa: 80, sd: 80}, gender: 'N'},\n  // Exeggcute: {bs: {sa: 60, sd: 45}},\n  // Exeggutor: {bs: {sa: 125, sd: 65}},\n  // 'Farfetch\\u2019d': {bs: {sa: 58, sd: 62}},\n  // Fearow: {bs: {sa: 61, sd: 61}},\n  Flareon: {bs: {sa: 95, sd: 110}},\n  Gastly: {bs: {sa: 100, sd: 35}},\n  Gengar: {bs: {sa: 130, sd: 75}},\n  Geodude: {bs: {sa: 30, sd: 30}},\n  // Gloom: {bs: {sa: 85, sd: 75}},\n  // Golbat: {bs: {sa: 65, sd: 75}, nfe: true},\n  // Goldeen: {bs: {sa: 35, sd: 50}},\n  Golduck: {bs: {sa: 95, sd: 80}},\n  Golem: {bs: {sa: 55, sd: 65}},\n  Graveler: {bs: {sa: 45, sd: 45}},\n  Grimer: {bs: {sa: 40, sd: 50}},\n  Growlithe: {bs: {sa: 70, sd: 50}},\n  Gyarados: {bs: {sa: 60, sd: 100}},\n  Haunter: {bs: {sa: 115, sd: 55}},\n  // Hitmonchan: {bs: {sa: 35, sd: 110}},\n  // Hitmonlee: {bs: {sa: 35, sd: 110}},\n  // Horsea: {bs: {sa: 70, sd: 25}},\n  Hypno: {bs: {sa: 73, sd: 115}},\n  // Ivysaur: {bs: {sa: 80, sd: 80}},\n  Jigglypuff: {bs: {sa: 45, sd: 25}},\n  Jolteon: {bs: {sa: 110, sd: 95}},\n  // Jynx: {bs: {sa: 115, sd: 95}},\n  // Kabuto: {bs: {sa: 55, sd: 45}},\n  // Kabutops: {bs: {sa: 65, sd: 70}},\n  // Kadabra: {bs: {sa: 120, sd: 70}},\n  // Kakuna: {bs: {sa: 25, sd: 25}},\n  // Kangaskhan: {bs: {sa: 40, sd: 80}},\n  // Kingler: {bs: {sa: 50, sd: 50}},\n  Koffing: {bs: {sa: 60, sd: 45}},\n  // Krabby: {bs: {sa: 25, sd: 25}},\n  // Lapras: {bs: {sa: 85, sd: 95}},\n  // Lickitung: {bs: {sa: 60, sd: 75}},\n  // Machamp: {bs: {sa: 65, sd: 85}},\n  // Machoke: {bs: {sa: 50, sd: 60}},\n  // Machop: {bs: {sa: 35, sd: 35}},\n  Magikarp: {bs: {sa: 15, sd: 20}},\n  // Magmar: {bs: {sa: 100, sd: 85}},\n  Magnemite: {types: ['Electric', 'Steel'], bs: {sa: 95, sd: 55}, gender: 'N'},\n  Magneton: {types: ['Electric', 'Steel'], bs: {sa: 120, sd: 70}, gender: 'N'},\n  Mankey: {bs: {sa: 35, sd: 45}},\n  // Marowak: {bs: {sa: 50, sd: 80}},\n  Meowth: {bs: {sa: 40, sd: 40}},\n  // Metapod: {bs: {sa: 25, sd: 25}},\n  Mew: {bs: {sa: 100, sd: 100}, gender: 'N'},\n  Mewtwo: {bs: {sa: 154, sd: 90}, gender: 'N'},\n  Moltres: {bs: {sa: 125, sd: 85}, gender: 'N'},\n  // 'Mr. Mime': {bs: {sa: 100, sd: 120}},\n  Muk: {bs: {sa: 65, sd: 100}},\n  // Nidoking: {bs: {sa: 85, sd: 75}},\n  // Nidoqueen: {bs: {sa: 75, sd: 85}},\n  // 'Nidoran-F': {bs: {sa: 40, sd: 40}},\n  // 'Nidoran-M': {bs: {sa: 40, sd: 40}},\n  // Nidorina: {bs: {sa: 55, sd: 55}},\n  // Nidorino: {bs: {sa: 55, sd: 55}},\n  Ninetales: {bs: {sa: 81, sd: 100}},\n  // Oddish: {bs: {sa: 75, sd: 65}},\n  // Omanyte: {bs: {sa: 90, sd: 55}},\n  // Omastar: {bs: {sa: 115, sd: 70}},\n  // Onix: {bs: {sa: 30, sd: 45}, nfe: true},\n  // Paras: {bs: {sa: 45, sd: 55}},\n  // Parasect: {bs: {sa: 60, sd: 80}},\n  Persian: {bs: {sa: 65, sd: 65}},\n  // Pidgeot: {bs: {sa: 70, sd: 70}},\n  // Pidgeotto: {bs: {sa: 50, sd: 50}},\n  // Pidgey: {bs: {sa: 35, sd: 35}},\n  Pikachu: {bs: {sa: 50, sd: 40}},\n  // Pinsir: {bs: {sa: 55, sd: 70}},\n  Poliwag: {bs: {sa: 40, sd: 40}},\n  Poliwhirl: {bs: {sa: 50, sd: 50}},\n  Poliwrath: {bs: {sa: 70, sd: 90}},\n  // Ponyta: {bs: {sa: 65, sd: 65}},\n  // Porygon: {bs: {sa: 85, sd: 75}, nfe: true, gender: 'N'},\n  Primeape: {bs: {sa: 60, sd: 70}},\n  Psyduck: {bs: {sa: 65, sd: 50}},\n  Raichu: {bs: {sa: 90, sd: 80}},\n  // Rapidash: {bs: {sa: 80, sd: 80}},\n  // Raticate: {bs: {sa: 50, sd: 70}},\n  // Rattata: {bs: {sa: 25, sd: 35}},\n  // Rhydon: {bs: {sa: 45, sd: 45}},\n  // Rhyhorn: {bs: {sa: 30, sd: 30}},\n  Sandshrew: {bs: {sa: 20, sd: 30}},\n  Sandslash: {bs: {sa: 45, sd: 55}},\n  Scyther: {bs: {sa: 55, sd: 80}, nfe: true},\n  // Seadra: {bs: {sa: 95, sd: 45}, nfe: true},\n  // Seaking: {bs: {sa: 65, sd: 80}},\n  // Seel: {bs: {sa: 45, sd: 70}},\n  Shellder: {bs: {sa: 45, sd: 25}},\n  Slowbro: {bs: {sa: 100, sd: 80}},\n  Slowpoke: {bs: {sa: 40, sd: 40}},\n  Snorlax: {bs: {sa: 65, sd: 110}},\n  // Spearow: {bs: {sa: 31, sd: 31}},\n  // Squirtle: {bs: {sa: 50, sd: 64}},\n  // Starmie: {bs: {sa: 100, sd: 85}, gender: 'N'},\n  // Staryu: {bs: {sa: 70, sd: 55}, gender: 'N'},\n  // Tangela: {bs: {sa: 100, sd: 40}},\n  Tauros: {bs: {sa: 40, sd: 70}},\n  // Tentacool: {bs: {sa: 50, sd: 100}},\n  // Tentacruel: {bs: {sa: 80, sd: 120}},\n  Vaporeon: {bs: {sa: 110, sd: 95}},\n  Venomoth: {bs: {sa: 90, sd: 75}},\n  Venonat: {bs: {sa: 40, sd: 55}},\n  // Venusaur: {bs: {sa: 100, sd: 100}},\n  Victreebel: {bs: {sa: 100, sd: 60}},\n  // Vileplume: {bs: {sa: 100, sd: 90}},\n  Voltorb: {bs: {sa: 55, sd: 55}, gender: 'N'},\n  Vulpix: {bs: {sa: 50, sd: 65}},\n  // Wartortle: {bs: {sa: 65, sd: 80}},\n  // Weedle: {bs: {sa: 20, sd: 20}},\n  Weepinbell: {bs: {sa: 85, sd: 45}},\n  Weezing: {bs: {sa: 85, sd: 70}},\n  Wigglytuff: {bs: {sa: 75, sd: 50}},\n  Zapdos: {bs: {sa: 125, sd: 90}, gender: 'N'},\n  // Zubat: {bs: {sa: 30, sd: 40}},\n  // gen 2 pokemon\n  Aipom: {types: ['Normal'], bs: {hp: 55, at: 70, df: 55, sa: 40, sd: 55, sp: 85}, weightkg: 11.5},\n  Ampharos: {\n    types: ['Electric'],\n    bs: {hp: 90, at: 75, df: 75, sa: 115, sd: 90, sp: 55},\n    weightkg: 61.5,\n  },\n  Ariados: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 70, at: 90, df: 70, sa: 60, sd: 60, sp: 40},\n    weightkg: 33.5,\n  },\n  Azumarill: {\n    types: ['Water'],\n    bs: {hp: 100, at: 50, df: 80, sa: 50, sd: 80, sp: 50},\n    weightkg: 28.5,\n  },\n  // Bayleef: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 62, df: 80, sa: 63, sd: 80, sp: 60},\n  //   weightkg: 15.8,\n  //   nfe: true,\n  // },\n  // Bellossom: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 80, df: 85, sa: 90, sd: 100, sp: 50},\n  //   weightkg: 5.8,\n  // },\n  Blissey: {\n    types: ['Normal'],\n    bs: {hp: 255, at: 10, df: 10, sa: 75, sd: 135, sp: 55},\n    weightkg: 46.8,\n  },\n  // Celebi: {\n  //   types: ['Psychic', 'Grass'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 5,\n  //   gender: 'N',\n  // },\n  // Chikorita: {\n  //   types: ['Grass'],\n  //   bs: {hp: 45, at: 49, df: 65, sa: 49, sd: 65, sp: 45},\n  //   weightkg: 6.4,\n  //   nfe: true,\n  // },\n  // Chinchou: {\n  //   types: ['Water', 'Electric'],\n  //   bs: {hp: 75, at: 38, df: 38, sa: 56, sd: 56, sp: 67},\n  //   weightkg: 12,\n  //   nfe: true,\n  // },\n  Cleffa: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 25, df: 28, sa: 45, sd: 55, sp: 15},\n    weightkg: 3,\n    nfe: true,\n  },\n  // Corsola: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 55, at: 55, df: 85, sa: 65, sd: 85, sp: 35},\n  //   weightkg: 5,\n  // },\n  // Crobat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 90, df: 80, sa: 70, sd: 80, sp: 130},\n  //   weightkg: 75,\n  // },\n  // Croconaw: {\n  //   types: ['Water'],\n  //   bs: {hp: 65, at: 80, df: 80, sa: 59, sd: 63, sp: 58},\n  //   weightkg: 25,\n  //   nfe: true,\n  // },\n  Cyndaquil: {\n    types: ['Fire'],\n    bs: {hp: 39, at: 52, df: 43, sa: 60, sd: 50, sp: 65},\n    weightkg: 7.9,\n    nfe: true,\n  },\n  Delibird: {\n    types: ['Ice', 'Flying'],\n    bs: {hp: 45, at: 55, df: 45, sa: 65, sd: 45, sp: 75},\n    weightkg: 16,\n  },\n  Donphan: {\n    types: ['Ground'],\n    bs: {hp: 90, at: 120, df: 120, sa: 60, sd: 60, sp: 50},\n    weightkg: 120,\n  },\n  Dunsparce: {\n    types: ['Normal'],\n    bs: {hp: 100, at: 70, df: 70, sa: 65, sd: 65, sp: 45},\n    weightkg: 14,\n  },\n  // Elekid: {\n  //   types: ['Electric'],\n  //   bs: {hp: 45, at: 63, df: 37, sa: 65, sd: 55, sp: 95},\n  //   weightkg: 23.5,\n  //   nfe: true,\n  // },\n  // Entei: {\n  //   types: ['Fire'],\n  //   bs: {hp: 115, at: 115, df: 85, sa: 90, sd: 75, sp: 100},\n  //   weightkg: 198,\n  //   gender: 'N',\n  // },\n  Espeon: {\n    types: ['Psychic'],\n    bs: {hp: 65, at: 65, df: 60, sa: 130, sd: 95, sp: 110},\n    weightkg: 26.5,\n  },\n  // Feraligatr: {\n  //   types: ['Water'],\n  //   bs: {hp: 85, at: 105, df: 100, sa: 79, sd: 83, sp: 78},\n  //   weightkg: 88.8,\n  // },\n  Flaaffy: {\n    types: ['Electric'],\n    bs: {hp: 70, at: 55, df: 55, sa: 80, sd: 60, sp: 45},\n    weightkg: 13.3,\n    nfe: true,\n  },\n  Forretress: {\n    types: ['Bug', 'Steel'],\n    bs: {hp: 75, at: 90, df: 140, sa: 60, sd: 60, sp: 40},\n    weightkg: 125.8,\n  },\n  Furret: {types: ['Normal'], bs: {hp: 85, at: 76, df: 64, sa: 45, sd: 55, sp: 90}, weightkg: 32.5},\n  Girafarig: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 70, at: 80, df: 65, sa: 90, sd: 65, sp: 85},\n    weightkg: 41.5,\n  },\n  Gligar: {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 65, at: 75, df: 105, sa: 35, sd: 65, sp: 85},\n    weightkg: 64.8,\n  },\n  // Granbull: {\n  //   types: ['Normal'],\n  //   bs: {hp: 90, at: 120, df: 75, sa: 60, sd: 60, sp: 45},\n  //   weightkg: 48.7,\n  // },\n  Heracross: {\n    types: ['Bug', 'Fighting'],\n    bs: {hp: 80, at: 125, df: 75, sa: 40, sd: 95, sp: 85},\n    weightkg: 54,\n  },\n  // Hitmontop: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 95, df: 95, sa: 35, sd: 110, sp: 70},\n  //   weightkg: 48,\n  // },\n  // 'Ho-Oh': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 106, at: 130, df: 90, sa: 110, sd: 154, sp: 90},\n  //   weightkg: 199,\n  //   gender: 'N',\n  // },\n  Hoothoot: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 60, at: 30, df: 30, sa: 36, sd: 56, sp: 50},\n    weightkg: 21.2,\n    nfe: true,\n  },\n  Hoppip: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 35, at: 35, df: 40, sa: 35, sd: 55, sp: 50},\n    weightkg: 0.5,\n    nfe: true,\n  },\n  Houndoom: {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 75, at: 90, df: 50, sa: 110, sd: 80, sp: 95},\n    weightkg: 35,\n  },\n  Houndour: {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 45, at: 60, df: 30, sa: 80, sd: 50, sp: 65},\n    weightkg: 10.8,\n    nfe: true,\n  },\n  Igglybuff: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 30, df: 15, sa: 40, sd: 20, sp: 15},\n    weightkg: 1,\n    nfe: true,\n  },\n  Jumpluff: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 75, at: 55, df: 70, sa: 55, sd: 85, sp: 110},\n    weightkg: 3,\n  },\n  // Kingdra: {\n  //   types: ['Water', 'Dragon'],\n  //   bs: {hp: 75, at: 95, df: 95, sa: 95, sd: 95, sp: 85},\n  //   weightkg: 152,\n  // },\n  // Lanturn: {\n  //   types: ['Water', 'Electric'],\n  //   bs: {hp: 125, at: 58, df: 58, sa: 76, sd: 76, sp: 67},\n  //   weightkg: 22.5,\n  // },\n  Larvitar: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 50, at: 64, df: 50, sa: 45, sd: 50, sp: 41},\n    weightkg: 72,\n    nfe: true,\n  },\n  // Ledian: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 55, at: 35, df: 50, sa: 55, sd: 110, sp: 85},\n  //   weightkg: 35.6,\n  // },\n  // Ledyba: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 40, at: 20, df: 30, sa: 40, sd: 80, sp: 55},\n  //   weightkg: 10.8,\n  //   nfe: true,\n  // },\n  // Lugia: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 106, at: 90, df: 130, sa: 90, sd: 154, sp: 110},\n  //   weightkg: 216,\n  //   gender: 'N',\n  // },\n  // Magby: {\n  //   types: ['Fire'],\n  //   bs: {hp: 45, at: 75, df: 37, sa: 70, sd: 55, sp: 83},\n  //   weightkg: 21.4,\n  //   nfe: true,\n  // },\n  Magcargo: {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 50, at: 50, df: 120, sa: 80, sd: 80, sp: 30},\n    weightkg: 55,\n  },\n  // Mantine: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 65, at: 40, df: 70, sa: 80, sd: 140, sp: 70},\n  //   weightkg: 220,\n  // },\n  Mareep: {\n    types: ['Electric'],\n    bs: {hp: 55, at: 40, df: 40, sa: 65, sd: 45, sp: 35},\n    weightkg: 7.8,\n    nfe: true,\n  },\n  Marill: {\n    types: ['Water'],\n    bs: {hp: 70, at: 20, df: 50, sa: 20, sd: 50, sp: 40},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  // Meganium: {\n  //   types: ['Grass'],\n  //   bs: {hp: 80, at: 82, df: 100, sa: 83, sd: 100, sp: 80},\n  //   weightkg: 100.5,\n  // },\n  // Miltank: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 80, df: 105, sa: 40, sd: 70, sp: 100},\n  //   weightkg: 75.5,\n  // },\n  Misdreavus: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 60, df: 60, sa: 85, sd: 85, sp: 85},\n    weightkg: 1,\n  },\n  Murkrow: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 60, at: 85, df: 42, sa: 85, sd: 42, sp: 91},\n    weightkg: 2.1,\n  },\n  // Natu: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 40, at: 50, df: 45, sa: 70, sd: 45, sp: 70},\n  //   weightkg: 2,\n  //   nfe: true,\n  // },\n  Noctowl: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 100, at: 50, df: 50, sa: 76, sd: 96, sp: 70},\n    weightkg: 40.8,\n  },\n  // Octillery: {\n  //   types: ['Water'],\n  //   bs: {hp: 75, at: 105, df: 75, sa: 105, sd: 75, sp: 45},\n  //   weightkg: 28.5,\n  // },\n  Phanpy: {\n    types: ['Ground'],\n    bs: {hp: 90, at: 60, df: 60, sa: 40, sd: 40, sp: 40},\n    weightkg: 33.5,\n    nfe: true,\n  },\n  Pichu: {\n    types: ['Electric'],\n    bs: {hp: 20, at: 40, df: 15, sa: 35, sd: 35, sp: 60},\n    weightkg: 2,\n    nfe: true,\n  },\n  Piloswine: {\n    types: ['Ice', 'Ground'],\n    bs: {hp: 100, at: 100, df: 80, sa: 60, sd: 60, sp: 50},\n    weightkg: 55.8,\n  },\n  Pineco: {\n    types: ['Bug'],\n    bs: {hp: 50, at: 65, df: 90, sa: 35, sd: 35, sp: 15},\n    weightkg: 7.2,\n    nfe: true,\n  },\n  Politoed: {\n    types: ['Water'],\n    bs: {hp: 90, at: 75, df: 75, sa: 90, sd: 100, sp: 70},\n    weightkg: 33.9,\n  },\n  // Porygon2: {\n  //   types: ['Normal'],\n  //   bs: {hp: 85, at: 80, df: 90, sa: 105, sd: 95, sp: 60},\n  //   weightkg: 32.5,\n  //   gender: 'N',\n  // },\n  Pupitar: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 70, at: 84, df: 70, sa: 65, sd: 70, sp: 51},\n    weightkg: 152,\n    nfe: true,\n  },\n  Quagsire: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 95, at: 85, df: 85, sa: 65, sd: 65, sp: 35},\n    weightkg: 75,\n  },\n  Quilava: {\n    types: ['Fire'],\n    bs: {hp: 58, at: 64, df: 58, sa: 80, sd: 65, sp: 80},\n    weightkg: 19,\n    nfe: true,\n  },\n  Qwilfish: {\n    types: ['Water', 'Poison'],\n    bs: {hp: 65, at: 95, df: 75, sa: 55, sd: 55, sp: 85},\n    weightkg: 3.9,\n  },\n  // Raikou: {\n  //   types: ['Electric'],\n  //   bs: {hp: 90, at: 85, df: 75, sa: 115, sd: 100, sp: 115},\n  //   weightkg: 178,\n  //   gender: 'N',\n  // },\n  // Remoraid: {\n  //   types: ['Water'],\n  //   bs: {hp: 35, at: 65, df: 35, sa: 65, sd: 35, sp: 65},\n  //   weightkg: 12,\n  //   nfe: true,\n  // },\n  Scizor: {\n    types: ['Bug', 'Steel'],\n    bs: {hp: 70, at: 130, df: 100, sa: 55, sd: 80, sp: 65},\n    weightkg: 118,\n  },\n  Sentret: {\n    types: ['Normal'],\n    bs: {hp: 35, at: 46, df: 34, sa: 35, sd: 45, sp: 20},\n    weightkg: 6,\n    nfe: true,\n  },\n  // Shuckle: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 20, at: 10, df: 230, sa: 10, sd: 230, sp: 5},\n  //   weightkg: 20.5,\n  // },\n  // Skarmory: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 65, at: 80, df: 140, sa: 40, sd: 70, sp: 70},\n  //   weightkg: 50.5,\n  // },\n  Skiploom: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 55, at: 45, df: 50, sa: 45, sd: 65, sp: 80},\n    weightkg: 1,\n    nfe: true,\n  },\n  Slowking: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 95, at: 75, df: 80, sa: 100, sd: 110, sp: 30},\n    weightkg: 79.5,\n  },\n  Slugma: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 40, df: 40, sa: 70, sd: 40, sp: 20},\n    weightkg: 35,\n    nfe: true,\n  },\n  // Smeargle: {types: ['Normal'], bs: {hp: 55, at: 20, df: 35, sa: 20, sd: 45, sp: 75}, weightkg: 58},\n  // Smoochum: {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 45, at: 30, df: 15, sa: 85, sd: 65, sp: 65},\n  //   weightkg: 6,\n  //   nfe: true,\n  // },\n  Sneasel: {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 55, at: 95, df: 55, sa: 35, sd: 75, sp: 115},\n    weightkg: 28,\n  },\n  // Snubbull: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 80, df: 50, sa: 40, sd: 40, sp: 30},\n  //   weightkg: 7.8,\n  //   nfe: true,\n  // },\n  Spinarak: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 40, at: 60, df: 40, sa: 40, sd: 40, sp: 30},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  Stantler: {\n    types: ['Normal'],\n    bs: {hp: 73, at: 95, df: 62, sa: 85, sd: 65, sp: 85},\n    weightkg: 71.2,\n  },\n  // Steelix: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 75, at: 85, df: 200, sa: 55, sd: 65, sp: 30},\n  //   weightkg: 400,\n  // },\n  Sudowoodo: {\n    types: ['Rock'],\n    bs: {hp: 70, at: 100, df: 115, sa: 30, sd: 65, sp: 30},\n    weightkg: 38,\n  },\n  // Suicune: {\n  //   types: ['Water'],\n  //   bs: {hp: 100, at: 75, df: 115, sa: 90, sd: 115, sp: 85},\n  //   weightkg: 187,\n  //   gender: 'N',\n  // },\n  Sunflora: {\n    types: ['Grass'],\n    bs: {hp: 75, at: 75, df: 55, sa: 105, sd: 85, sp: 30},\n    weightkg: 8.5,\n  },\n  Sunkern: {\n    types: ['Grass'],\n    bs: {hp: 30, at: 30, df: 30, sa: 30, sd: 30, sp: 30},\n    weightkg: 1.8,\n    nfe: true,\n  },\n  Swinub: {\n    types: ['Ice', 'Ground'],\n    bs: {hp: 50, at: 50, df: 40, sa: 30, sd: 30, sp: 50},\n    weightkg: 6.5,\n    nfe: true,\n  },\n  Teddiursa: {\n    types: ['Normal'],\n    bs: {hp: 60, at: 80, df: 50, sa: 50, sd: 50, sp: 40},\n    weightkg: 8.8,\n    nfe: true,\n  },\n  // Togepi: {\n  //   types: ['Normal'],\n  //   bs: {hp: 35, at: 20, df: 65, sa: 40, sd: 65, sp: 20},\n  //   weightkg: 1.5,\n  //   nfe: true,\n  // },\n  // Togetic: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 55, at: 40, df: 85, sa: 80, sd: 105, sp: 40},\n  //   weightkg: 3.2,\n  // },\n  // Totodile: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 65, df: 64, sa: 44, sd: 48, sp: 43},\n  //   weightkg: 9.5,\n  //   nfe: true,\n  // },\n  Typhlosion: {\n    types: ['Fire'],\n    bs: {hp: 78, at: 84, df: 78, sa: 109, sd: 85, sp: 100},\n    weightkg: 79.5,\n  },\n  Tyranitar: {\n    types: ['Rock', 'Dark'],\n    bs: {hp: 100, at: 134, df: 110, sa: 95, sd: 100, sp: 61},\n    weightkg: 202,\n  },\n  // Tyrogue: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 35, at: 35, df: 35, sa: 35, sd: 35, sp: 35},\n  //   weightkg: 21,\n  //   nfe: true,\n  // },\n  Umbreon: {types: ['Dark'], bs: {hp: 95, at: 65, df: 110, sa: 60, sd: 130, sp: 65}, weightkg: 27},\n  // Unown: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 48, at: 72, df: 48, sa: 72, sd: 48, sp: 48},\n  //   weightkg: 5,\n  //   gender: 'N',\n  // },\n  Ursaring: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 130, df: 75, sa: 75, sd: 75, sp: 55},\n    weightkg: 125.8,\n  },\n  // Wobbuffet: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 190, at: 33, df: 58, sa: 33, sd: 58, sp: 33},\n  //   weightkg: 28.5,\n  // },\n  Wooper: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 55, at: 45, df: 45, sa: 25, sd: 25, sp: 15},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  // Xatu: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 65, at: 75, df: 70, sa: 95, sd: 70, sp: 95},\n  //   weightkg: 15,\n  // },\n  Yanma: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 65, at: 65, df: 45, sa: 75, sd: 45, sp: 95},\n    weightkg: 38,\n  },\n};\nconst GSC: {[name: string]: SpeciesData} = extend(true, {}, RBY, GSC_PATCH);\n\nconst ADV_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // gen 1 pokemon changes\n  // Abra: {abilities: {0: 'Synchronize'}},\n  // Aerodactyl: {abilities: {0: 'Rock Head'}},\n  // Alakazam: {abilities: {0: 'Synchronize'}},\n  Arbok: {abilities: {0: 'Intimidate'}},\n  Arcanine: {abilities: {0: 'Intimidate'}},\n  Articuno: {abilities: {0: 'Pressure'}},\n  // Beedrill: {abilities: {0: 'Swarm'}},\n  Bellsprout: {abilities: {0: 'Chlorophyll'}},\n  // Blastoise: {abilities: {0: 'Torrent'}},\n  // Bulbasaur: {abilities: {0: 'Overgrow'}},\n  // Butterfree: {abilities: {0: 'Compound Eyes'}},\n  // Caterpie: {abilities: {0: 'Shield Dust'}},\n  Chansey: {abilities: {0: 'Natural Cure'}},\n  Charizard: {abilities: {0: 'Blaze'}},\n  Charmander: {abilities: {0: 'Blaze'}},\n  Charmeleon: {abilities: {0: 'Blaze'}},\n  Clefable: {abilities: {0: 'Cute Charm'}},\n  Clefairy: {abilities: {0: 'Cute Charm'}},\n  Cloyster: {abilities: {0: 'Shell Armor'}},\n  // Cubone: {abilities: {0: 'Rock Head'}},\n  // Dewgong: {abilities: {0: 'Thick Fat'}},\n  Diglett: {abilities: {0: 'Sand Veil'}},\n  Ditto: {abilities: {0: 'Limber'}},\n  // Dodrio: {abilities: {0: 'Run Away'}},\n  // Doduo: {abilities: {0: 'Run Away'}},\n  Dragonair: {abilities: {0: 'Shed Skin'}},\n  Dragonite: {abilities: {0: 'Inner Focus'}},\n  Dratini: {abilities: {0: 'Shed Skin'}},\n  Drowzee: {abilities: {0: 'Insomnia'}},\n  Dugtrio: {abilities: {0: 'Sand Veil'}},\n  Eevee: {abilities: {0: 'Run Away'}},\n  Ekans: {abilities: {0: 'Intimidate'}},\n  // Electabuzz: {abilities: {0: 'Static'}},\n  Electrode: {abilities: {0: 'Soundproof'}},\n  // Exeggcute: {abilities: {0: 'Chlorophyll'}},\n  // Exeggutor: {abilities: {0: 'Chlorophyll'}},\n  // 'Farfetch\\u2019d': {abilities: {0: 'Keen Eye'}},\n  // Fearow: {abilities: {0: 'Keen Eye'}},\n  Flareon: {abilities: {0: 'Flash Fire'}},\n  Gastly: {abilities: {0: 'Levitate'}},\n  Gengar: {abilities: {0: 'Levitate'}},\n  Geodude: {abilities: {0: 'Rock Head'}},\n  // Gloom: {abilities: {0: 'Chlorophyll'}},\n  // Golbat: {abilities: {0: 'Inner Focus'}},\n  // Goldeen: {abilities: {0: 'Swift Swim'}},\n  Golduck: {abilities: {0: 'Damp'}},\n  Golem: {abilities: {0: 'Rock Head'}},\n  Graveler: {abilities: {0: 'Rock Head'}},\n  Grimer: {abilities: {0: 'Stench'}},\n  Growlithe: {abilities: {0: 'Intimidate'}},\n  Gyarados: {abilities: {0: 'Intimidate'}},\n  Haunter: {abilities: {0: 'Levitate'}},\n  // Hitmonchan: {abilities: {0: 'Keen Eye'}},\n  // Hitmonlee: {abilities: {0: 'Limber'}},\n  // Horsea: {abilities: {0: 'Swift Swim'}},\n  Hypno: {abilities: {0: 'Insomnia'}},\n  // Ivysaur: {abilities: {0: 'Overgrow'}},\n  Jigglypuff: {abilities: {0: 'Cute Charm'}},\n  Jolteon: {abilities: {0: 'Volt Absorb'}},\n  // Jynx: {abilities: {0: 'Oblivious'}},\n  // Kabuto: {abilities: {0: 'Swift Swim'}},\n  // Kabutops: {abilities: {0: 'Swift Swim'}},\n  // Kadabra: {abilities: {0: 'Synchronize'}},\n  // Kakuna: {abilities: {0: 'Shed Skin'}},\n  // Kangaskhan: {abilities: {0: 'Early Bird'}},\n  // Kingler: {abilities: {0: 'Hyper Cutter'}},\n  Koffing: {abilities: {0: 'Levitate'}},\n  // Krabby: {abilities: {0: 'Hyper Cutter'}},\n  // Lapras: {abilities: {0: 'Water Absorb'}},\n  // Lickitung: {abilities: {0: 'Own Tempo'}},\n  // Machamp: {abilities: {0: 'Guts'}},\n  // Machoke: {abilities: {0: 'Guts'}},\n  // Machop: {abilities: {0: 'Guts'}},\n  Magikarp: {abilities: {0: 'Swift Swim'}},\n  // Magmar: {abilities: {0: 'Flame Body'}},\n  Magnemite: {abilities: {0: 'Magnet Pull'}},\n  Magneton: {abilities: {0: 'Magnet Pull'}},\n  Mankey: {abilities: {0: 'Vital Spirit'}},\n  // Marowak: {abilities: {0: 'Rock Head'}},\n  Meowth: {abilities: {0: 'Pickup'}},\n  // Metapod: {abilities: {0: 'Shed Skin'}},\n  Mew: {abilities: {0: 'Synchronize'}},\n  Mewtwo: {abilities: {0: 'Pressure'}},\n  Moltres: {abilities: {0: 'Pressure'}},\n  // 'Mr. Mime': {abilities: {0: 'Soundproof'}},\n  Muk: {abilities: {0: 'Stench'}},\n  // Nidoking: {abilities: {0: 'Poison Point'}},\n  // Nidoqueen: {abilities: {0: 'Poison Point'}},\n  // 'Nidoran-F': {abilities: {0: 'Poison Point'}},\n  // 'Nidoran-M': {abilities: {0: 'Poison Point'}},\n  // Nidorina: {abilities: {0: 'Poison Point'}},\n  // Nidorino: {abilities: {0: 'Poison Point'}},\n  Ninetales: {abilities: {0: 'Flash Fire'}},\n  // Oddish: {abilities: {0: 'Chlorophyll'}},\n  // Omanyte: {abilities: {0: 'Swift Swim'}},\n  // Omastar: {abilities: {0: 'Swift Swim'}},\n  // Onix: {abilities: {0: 'Rock Head'}},\n  // Paras: {abilities: {0: 'Effect Spore'}},\n  // Parasect: {abilities: {0: 'Effect Spore'}},\n  Persian: {abilities: {0: 'Limber'}},\n  // Pidgeot: {abilities: {0: 'Keen Eye'}},\n  // Pidgeotto: {abilities: {0: 'Keen Eye'}},\n  // Pidgey: {abilities: {0: 'Keen Eye'}},\n  Pikachu: {abilities: {0: 'Static'}},\n  // Pinsir: {abilities: {0: 'Hyper Cutter'}},\n  Poliwag: {abilities: {0: 'Water Absorb'}},\n  Poliwhirl: {abilities: {0: 'Water Absorb'}},\n  Poliwrath: {abilities: {0: 'Water Absorb'}},\n  // Ponyta: {abilities: {0: 'Run Away'}},\n  // Porygon: {abilities: {0: 'Trace'}},\n  Primeape: {abilities: {0: 'Vital Spirit'}},\n  Psyduck: {abilities: {0: 'Damp'}},\n  Raichu: {abilities: {0: 'Static'}},\n  // Rapidash: {abilities: {0: 'Run Away'}},\n  // Raticate: {abilities: {0: 'Run Away'}},\n  // Rattata: {abilities: {0: 'Run Away'}},\n  // Rhydon: {abilities: {0: 'Lightning Rod'}},\n  // Rhyhorn: {abilities: {0: 'Lightning Rod'}},\n  Sandshrew: {abilities: {0: 'Sand Veil'}},\n  Sandslash: {abilities: {0: 'Sand Veil'}},\n  Scyther: {abilities: {0: 'Swarm'}},\n  // Seadra: {abilities: {0: 'Poison Point'}},\n  // Seaking: {abilities: {0: 'Swift Swim'}},\n  // Seel: {abilities: {0: 'Thick Fat'}},\n  Shellder: {abilities: {0: 'Shell Armor'}},\n  Slowbro: {abilities: {0: 'Oblivious'}},\n  Slowpoke: {abilities: {0: 'Oblivious'}},\n  Snorlax: {abilities: {0: 'Immunity'}},\n  // Spearow: {abilities: {0: 'Keen Eye'}},\n  // Squirtle: {abilities: {0: 'Torrent'}},\n  // Starmie: {abilities: {0: 'Illuminate'}},\n  // Staryu: {abilities: {0: 'Illuminate'}},\n  // Tangela: {abilities: {0: 'Chlorophyll'}},\n  Tauros: {abilities: {0: 'Intimidate'}},\n  // Tentacool: {abilities: {0: 'Clear Body'}},\n  // Tentacruel: {abilities: {0: 'Clear Body'}},\n  Vaporeon: {abilities: {0: 'Water Absorb'}},\n  Venomoth: {abilities: {0: 'Shield Dust'}},\n  Venonat: {abilities: {0: 'Compound Eyes'}},\n  // Venusaur: {abilities: {0: 'Overgrow'}},\n  Victreebel: {abilities: {0: 'Chlorophyll'}},\n  // Vileplume: {abilities: {0: 'Chlorophyll'}},\n  Voltorb: {abilities: {0: 'Soundproof'}},\n  Vulpix: {abilities: {0: 'Flash Fire'}},\n  // Wartortle: {abilities: {0: 'Torrent'}},\n  // Weedle: {abilities: {0: 'Shield Dust'}},\n  Weepinbell: {abilities: {0: 'Chlorophyll'}},\n  Weezing: {abilities: {0: 'Levitate'}},\n  Wigglytuff: {abilities: {0: 'Cute Charm'}},\n  Zapdos: {abilities: {0: 'Pressure'}},\n  // Zubat: {abilities: {0: 'Inner Focus'}},\n  // gen 2 pokemon changes\n  Aipom: {abilities: {0: 'Run Away'}},\n  Ampharos: {abilities: {0: 'Static'}},\n  Ariados: {abilities: {0: 'Swarm'}},\n  Azumarill: {abilities: {0: 'Thick Fat'}},\n  // Bayleef: {abilities: {0: 'Overgrow'}},\n  // Bellossom: {abilities: {0: 'Chlorophyll'}},\n  Blissey: {abilities: {0: 'Natural Cure'}},\n  // Celebi: {abilities: {0: 'Natural Cure'}},\n  // Chikorita: {abilities: {0: 'Overgrow'}},\n  // Chinchou: {abilities: {0: 'Volt Absorb'}},\n  Cleffa: {abilities: {0: 'Cute Charm'}},\n  // Corsola: {abilities: {0: 'Hustle'}},\n  // Crobat: {abilities: {0: 'Inner Focus'}},\n  // Croconaw: {abilities: {0: 'Torrent'}},\n  Cyndaquil: {abilities: {0: 'Blaze'}},\n  Delibird: {abilities: {0: 'Vital Spirit'}},\n  Donphan: {abilities: {0: 'Sturdy'}},\n  Dunsparce: {abilities: {0: 'Serene Grace'}},\n  // Elekid: {abilities: {0: 'Static'}},\n  // Entei: {abilities: {0: 'Pressure'}},\n  Espeon: {abilities: {0: 'Synchronize'}},\n  // Feraligatr: {abilities: {0: 'Torrent'}},\n  Flaaffy: {abilities: {0: 'Static'}},\n  Forretress: {abilities: {0: 'Sturdy'}},\n  Furret: {abilities: {0: 'Run Away'}},\n  Girafarig: {abilities: {0: 'Inner Focus'}},\n  Gligar: {abilities: {0: 'Hyper Cutter'}},\n  // Granbull: {abilities: {0: 'Intimidate'}},\n  Heracross: {abilities: {0: 'Swarm'}},\n  // Hitmontop: {abilities: {0: 'Intimidate'}},\n  // 'Ho-Oh': {abilities: {0: 'Pressure'}},\n  Hoothoot: {abilities: {0: 'Insomnia'}},\n  Hoppip: {abilities: {0: 'Chlorophyll'}},\n  Houndoom: {abilities: {0: 'Early Bird'}},\n  Houndour: {abilities: {0: 'Early Bird'}},\n  Igglybuff: {abilities: {0: 'Cute Charm'}},\n  Jumpluff: {abilities: {0: 'Chlorophyll'}},\n  // Kingdra: {abilities: {0: 'Swift Swim'}},\n  // Lanturn: {abilities: {0: 'Volt Absorb'}},\n  Larvitar: {abilities: {0: 'Guts'}},\n  // Ledian: {abilities: {0: 'Swarm'}},\n  // Ledyba: {abilities: {0: 'Swarm'}},\n  // Lugia: {abilities: {0: 'Pressure'}},\n  // Magby: {abilities: {0: 'Flame Body'}},\n  Magcargo: {abilities: {0: 'Magma Armor'}},\n  // Mantine: {abilities: {0: 'Swift Swim'}},\n  Mareep: {abilities: {0: 'Static'}},\n  Marill: {abilities: {0: 'Thick Fat'}},\n  // Meganium: {abilities: {0: 'Overgrow'}},\n  // Miltank: {abilities: {0: 'Thick Fat'}},\n  Misdreavus: {abilities: {0: 'Levitate'}},\n  Murkrow: {abilities: {0: 'Insomnia'}},\n  // Natu: {abilities: {0: 'Synchronize'}},\n  Noctowl: {abilities: {0: 'Insomnia'}},\n  // Octillery: {abilities: {0: 'Suction Cups'}},\n  Phanpy: {abilities: {0: 'Pickup'}},\n  Pichu: {abilities: {0: 'Static'}},\n  Piloswine: {abilities: {0: 'Oblivious'}},\n  Pineco: {abilities: {0: 'Sturdy'}},\n  Politoed: {abilities: {0: 'Water Absorb'}},\n  // Porygon2: {abilities: {0: 'Trace'}},\n  Pupitar: {abilities: {0: 'Shed Skin'}},\n  Quagsire: {abilities: {0: 'Damp'}},\n  Quilava: {abilities: {0: 'Blaze'}},\n  Qwilfish: {abilities: {0: 'Poison Point'}},\n  // Raikou: {abilities: {0: 'Pressure'}},\n  // Remoraid: {abilities: {0: 'Hustle'}},\n  Scizor: {abilities: {0: 'Swarm'}},\n  Sentret: {abilities: {0: 'Run Away'}},\n  // Shuckle: {abilities: {0: 'Sturdy'}},\n  // Skarmory: {abilities: {0: 'Keen Eye'}},\n  Skiploom: {abilities: {0: 'Chlorophyll'}},\n  Slowking: {abilities: {0: 'Oblivious'}},\n  Slugma: {abilities: {0: 'Magma Armor'}},\n  // Smeargle: {abilities: {0: 'Own Tempo'}},\n  // Smoochum: {abilities: {0: 'Oblivious'}},\n  Sneasel: {abilities: {0: 'Inner Focus'}},\n  // Snubbull: {abilities: {0: 'Intimidate'}},\n  // Spinarak: {abilities: {0: 'Swarm'}},\n  Stantler: {abilities: {0: 'Intimidate'}},\n  // Steelix: {abilities: {0: 'Rock Head'}},\n  Sudowoodo: {abilities: {0: 'Sturdy'}},\n  // Suicune: {abilities: {0: 'Pressure'}},\n  Sunflora: {abilities: {0: 'Chlorophyll'}},\n  Sunkern: {abilities: {0: 'Chlorophyll'}},\n  Swinub: {abilities: {0: 'Oblivious'}},\n  Teddiursa: {abilities: {0: 'Pickup'}},\n  // Togepi: {abilities: {0: 'Hustle'}},\n  // Togetic: {abilities: {0: 'Hustle'}},\n  // Totodile: {abilities: {0: 'Torrent'}},\n  Typhlosion: {abilities: {0: 'Blaze'}},\n  Tyranitar: {abilities: {0: 'Sand Stream'}},\n  // Tyrogue: {abilities: {0: 'Guts'}},\n  Umbreon: {abilities: {0: 'Synchronize'}},\n  // Unown: {abilities: {0: 'Levitate'}},\n  Ursaring: {abilities: {0: 'Guts'}},\n  // Wobbuffet: {abilities: {0: 'Shadow Tag'}},\n  Wooper: {abilities: {0: 'Damp'}},\n  // Xatu: {abilities: {0: 'Synchronize'}},\n  Yanma: {abilities: {0: 'Speed Boost'}},\n  // gen 3 pokemon\n  // Absol: {\n  //   types: ['Dark'],\n  //   bs: {hp: 65, at: 130, df: 60, sa: 75, sd: 60, sp: 75},\n  //   weightkg: 47,\n  //   abilities: {0: 'Pressure'},\n  // },\n  // Aggron: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 70, at: 110, df: 180, sa: 60, sd: 60, sp: 50},\n  //   weightkg: 360,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Altaria: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 75, at: 70, df: 90, sa: 70, sd: 105, sp: 80},\n    weightkg: 20.6,\n    abilities: {0: 'Natural Cure'},\n  },\n  // Anorith: {\n  //   types: ['Rock', 'Bug'],\n  //   bs: {hp: 45, at: 95, df: 50, sa: 40, sd: 50, sp: 75},\n  //   weightkg: 12.5,\n  //   nfe: true,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  // Armaldo: {\n  //   types: ['Rock', 'Bug'],\n  //   bs: {hp: 75, at: 125, df: 100, sa: 70, sd: 80, sp: 45},\n  //   weightkg: 68.2,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  // Aron: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 50, at: 70, df: 100, sa: 40, sd: 40, sp: 30},\n  //   weightkg: 60,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Azurill: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 20, df: 40, sa: 20, sd: 40, sp: 20},\n    weightkg: 2,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  Bagon: {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 75, df: 60, sa: 40, sd: 30, sp: 50},\n    weightkg: 42.1,\n    nfe: true,\n    abilities: {0: 'Rock Head'},\n  },\n  // Baltoy: {\n  //   types: ['Ground', 'Psychic'],\n  //   bs: {hp: 40, at: 40, df: 55, sa: 40, sd: 70, sp: 55},\n  //   weightkg: 21.5,\n  //   abilities: {0: 'Levitate'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  Banette: {\n    types: ['Ghost'],\n    bs: {hp: 64, at: 115, df: 65, sa: 83, sd: 63, sp: 65},\n    weightkg: 12.5,\n    abilities: {0: 'Insomnia'},\n  },\n  Barboach: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 50, at: 48, df: 43, sa: 46, sd: 41, sp: 60},\n    weightkg: 1.9,\n    nfe: true,\n    abilities: {0: 'Oblivious'},\n  },\n  // Beautifly: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 70, df: 50, sa: 90, sd: 50, sp: 65},\n  //   weightkg: 28.4,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Beldum: {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 40, at: 55, df: 80, sa: 35, sd: 60, sp: 30},\n  //   weightkg: 95.2,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Blaziken: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 80, at: 120, df: 70, sa: 110, sd: 70, sp: 80},\n  //   weightkg: 52,\n  //   abilities: {0: 'Blaze'},\n  // },\n  Breloom: {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 60, at: 130, df: 80, sa: 60, sd: 60, sp: 70},\n    weightkg: 39.2,\n    abilities: {0: 'Effect Spore'},\n  },\n  Cacnea: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 85, df: 40, sa: 85, sd: 40, sp: 35},\n    weightkg: 51.3,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Cacturne: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 70, at: 115, df: 60, sa: 115, sd: 60, sp: 55},\n    weightkg: 77.4,\n    abilities: {0: 'Sand Veil'},\n  },\n  Camerupt: {\n    types: ['Fire', 'Ground'],\n    bs: {hp: 70, at: 100, df: 70, sa: 105, sd: 75, sp: 40},\n    weightkg: 220,\n    abilities: {0: 'Magma Armor'},\n  },\n  // Carvanha: {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 45, at: 90, df: 20, sa: 65, sd: 20, sp: 65},\n  //   weightkg: 20.8,\n  //   nfe: true,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  // Cascoon: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 35, df: 55, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Shed Skin'},\n  //   nfe: true,\n  // },\n  // Castform: {\n  //   types: ['Normal'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   otherFormes: ['Castform-Rainy', 'Castform-Snowy', 'Castform-Sunny'],\n  // },\n  // 'Castform-Rainy': {\n  //   types: ['Water'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  // 'Castform-Snowy': {\n  //   types: ['Ice'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  // 'Castform-Sunny': {\n  //   types: ['Fire'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  Chimecho: {\n    types: ['Psychic'],\n    bs: {hp: 65, at: 50, df: 70, sa: 95, sd: 80, sp: 65},\n    weightkg: 1,\n    abilities: {0: 'Levitate'},\n  },\n  // Clamperl: {\n  //   types: ['Water'],\n  //   bs: {hp: 35, at: 64, df: 85, sa: 74, sd: 55, sp: 32},\n  //   weightkg: 52.5,\n  //   nfe: true,\n  //   abilities: {0: 'Shell Armor'},\n  // },\n  // Claydol: {\n  //   types: ['Ground', 'Psychic'],\n  //   bs: {hp: 60, at: 70, df: 105, sa: 70, sd: 120, sp: 75},\n  //   weightkg: 108,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Combusken: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 60, at: 85, df: 60, sa: 85, sd: 60, sp: 55},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  Corphish: {\n    types: ['Water'],\n    bs: {hp: 43, at: 80, df: 65, sa: 50, sd: 35, sp: 35},\n    weightkg: 11.5,\n    nfe: true,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  // Cradily: {\n  //   types: ['Rock', 'Grass'],\n  //   bs: {hp: 86, at: 81, df: 97, sa: 81, sd: 107, sp: 43},\n  //   weightkg: 60.4,\n  //   abilities: {0: 'Suction Cups'},\n  // },\n  Crawdaunt: {\n    types: ['Water', 'Dark'],\n    bs: {hp: 63, at: 120, df: 85, sa: 90, sd: 55, sp: 55},\n    weightkg: 32.8,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  // Delcatty: {\n  //   types: ['Normal'],\n  //   bs: {hp: 70, at: 65, df: 65, sa: 55, sd: 55, sp: 70},\n  //   weightkg: 32.6,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  // Deoxys: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 150, df: 50, sa: 150, sd: 50, sp: 150},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   otherFormes: ['Deoxys-Attack', 'Deoxys-Defense', 'Deoxys-Speed'],\n  // },\n  // 'Deoxys-Attack': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 180, df: 20, sa: 180, sd: 20, sp: 150},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Deoxys',\n  // },\n  // 'Deoxys-Defense': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 70, df: 160, sa: 70, sd: 160, sp: 90},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Deoxys',\n  // },\n  // 'Deoxys-Speed': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 95, df: 90, sa: 95, sd: 90, sp: 180},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Deoxys',\n  // },\n  Dusclops: {\n    types: ['Ghost'],\n    bs: {hp: 40, at: 70, df: 130, sa: 60, sd: 130, sp: 25},\n    weightkg: 30.6,\n    abilities: {0: 'Pressure'},\n  },\n  Duskull: {\n    types: ['Ghost'],\n    bs: {hp: 20, at: 40, df: 90, sa: 30, sd: 90, sp: 25},\n    weightkg: 15,\n    nfe: true,\n    abilities: {0: 'Levitate'},\n  },\n  // Dustox: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 60, at: 50, df: 70, sa: 50, sd: 90, sp: 65},\n  //   weightkg: 31.6,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Electrike: {\n  //   types: ['Electric'],\n  //   bs: {hp: 40, at: 45, df: 40, sa: 65, sd: 40, sp: 65},\n  //   weightkg: 15.2,\n  //   nfe: true,\n  //   abilities: {0: 'Static'},\n  // },\n  // Exploud: {\n  //   types: ['Normal'],\n  //   bs: {hp: 104, at: 91, df: 63, sa: 91, sd: 63, sp: 68},\n  //   weightkg: 84,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Feebas: {\n    types: ['Water'],\n    bs: {hp: 20, at: 15, df: 20, sa: 10, sd: 55, sp: 80},\n    weightkg: 7.4,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Flygon: {\n  //   types: ['Ground', 'Dragon'],\n  //   bs: {hp: 80, at: 100, df: 80, sa: 80, sd: 80, sp: 100},\n  //   weightkg: 82,\n  //   abilities: {0: 'Levitate'},\n  // },\n  Gardevoir: {\n    types: ['Psychic'],\n    bs: {hp: 68, at: 65, df: 65, sa: 125, sd: 115, sp: 80},\n    weightkg: 48.4,\n    abilities: {0: 'Synchronize'},\n  },\n  Glalie: {\n    types: ['Ice'],\n    bs: {hp: 80, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 256.5,\n    abilities: {0: 'Inner Focus'},\n  },\n  // Gorebyss: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 84, df: 105, sa: 114, sd: 75, sp: 52},\n  //   weightkg: 22.6,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Groudon: {\n    types: ['Ground'],\n    bs: {hp: 100, at: 150, df: 140, sa: 100, sd: 90, sp: 90},\n    weightkg: 950,\n    abilities: {0: 'Drought'},\n    gender: 'N',\n  },\n  // Grovyle: {\n  //   types: ['Grass'],\n  //   bs: {hp: 50, at: 65, df: 45, sa: 85, sd: 65, sp: 95},\n  //   weightkg: 21.6,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Grumpig: {\n    types: ['Psychic'],\n    bs: {hp: 80, at: 45, df: 65, sa: 90, sd: 110, sp: 80},\n    weightkg: 71.5,\n    abilities: {0: 'Thick Fat'},\n  },\n  Gulpin: {\n    types: ['Poison'],\n    bs: {hp: 70, at: 43, df: 53, sa: 43, sd: 53, sp: 40},\n    weightkg: 10.3,\n    nfe: true,\n    abilities: {0: 'Liquid Ooze'},\n  },\n  Hariyama: {\n    types: ['Fighting'],\n    bs: {hp: 144, at: 120, df: 60, sa: 40, sd: 60, sp: 50},\n    weightkg: 253.8,\n    abilities: {0: 'Thick Fat'},\n  },\n  // Huntail: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 104, df: 105, sa: 94, sd: 75, sp: 52},\n  //   weightkg: 27,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Illumise: {\n    types: ['Bug'],\n    bs: {hp: 65, at: 47, df: 55, sa: 73, sd: 75, sp: 85},\n    abilities: {0: 'Oblivious'},\n    weightkg: 17.7,\n  },\n  Jirachi: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n    weightkg: 1.1,\n    abilities: {0: 'Serene Grace'},\n    gender: 'N',\n  },\n  // Kecleon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 90, df: 70, sa: 60, sd: 120, sp: 40},\n  //   weightkg: 22,\n  //   abilities: {0: 'Color Change'},\n  // },\n  Kirlia: {\n    types: ['Psychic'],\n    bs: {hp: 38, at: 35, df: 35, sa: 65, sd: 55, sp: 50},\n    weightkg: 20.2,\n    nfe: true,\n    abilities: {0: 'Synchronize'},\n  },\n  Kyogre: {\n    types: ['Water'],\n    bs: {hp: 100, at: 100, df: 90, sa: 150, sd: 140, sp: 90},\n    weightkg: 352,\n    abilities: {0: 'Drizzle'},\n    gender: 'N',\n  },\n  // Lairon: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 60, at: 90, df: 140, sa: 50, sd: 50, sp: 40},\n  //   weightkg: 120,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Latias: {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 80, df: 90, sa: 110, sd: 130, sp: 110},\n  //   weightkg: 40,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Latios: {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 90, df: 80, sa: 130, sd: 110, sp: 110},\n  //   weightkg: 60,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Lileep: {\n  //   types: ['Rock', 'Grass'],\n  //   bs: {hp: 66, at: 41, df: 77, sa: 61, sd: 87, sp: 23},\n  //   weightkg: 23.8,\n  //   nfe: true,\n  //   abilities: {0: 'Suction Cups'},\n  // },\n  // Linoone: {\n  //   types: ['Normal'],\n  //   bs: {hp: 78, at: 70, df: 61, sa: 50, sd: 61, sp: 100},\n  //   weightkg: 32.5,\n  //   abilities: {0: 'Pickup'},\n  // },\n  Lombre: {\n    types: ['Water', 'Grass'],\n    bs: {hp: 60, at: 50, df: 50, sa: 60, sd: 70, sp: 50},\n    weightkg: 32.5,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  Lotad: {\n    types: ['Water', 'Grass'],\n    bs: {hp: 40, at: 30, df: 30, sa: 40, sd: 50, sp: 30},\n    weightkg: 2.6,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Loudred: {\n  //   types: ['Normal'],\n  //   bs: {hp: 84, at: 71, df: 43, sa: 71, sd: 43, sp: 48},\n  //   weightkg: 40.5,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Ludicolo: {\n    types: ['Water', 'Grass'],\n    bs: {hp: 80, at: 70, df: 70, sa: 90, sd: 100, sp: 70},\n    weightkg: 55,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Lunatone: {\n  //   types: ['Rock', 'Psychic'],\n  //   bs: {hp: 70, at: 55, df: 65, sa: 95, sd: 85, sp: 70},\n  //   weightkg: 168,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  Luvdisc: {\n    types: ['Water'],\n    bs: {hp: 43, at: 30, df: 55, sa: 40, sd: 65, sp: 97},\n    weightkg: 8.7,\n    abilities: {0: 'Swift Swim'},\n  },\n  Makuhita: {\n    types: ['Fighting'],\n    bs: {hp: 72, at: 60, df: 30, sa: 20, sd: 30, sp: 25},\n    weightkg: 86.4,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  // Manectric: {\n    // types: ['Electric'],\n    // bs: {hp: 70, at: 75, df: 60, sa: 105, sd: 60, sp: 105},\n    // weightkg: 40.2,\n    // abilities: {0: 'Static'},\n  // },\n  // Marshtomp: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 70, at: 85, df: 70, sa: 60, sd: 70, sp: 50},\n  //   weightkg: 28,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  Masquerain: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 60, df: 62, sa: 80, sd: 82, sp: 60},\n    weightkg: 3.6,\n    abilities: {0: 'Intimidate'},\n  },\n  // Mawile: {\n    // types: ['Steel'],\n    // bs: {hp: 50, at: 85, df: 85, sa: 55, sd: 55, sp: 50},\n    // weightkg: 11.5,\n    // abilities: {0: 'Hyper Cutter'},\n  // },\n  Medicham: {\n    types: ['Fighting', 'Psychic'],\n    bs: {hp: 60, at: 60, df: 75, sa: 60, sd: 75, sp: 80},\n    weightkg: 31.5,\n    abilities: {0: 'Pure Power'},\n  },\n  Meditite: {\n    types: ['Fighting', 'Psychic'],\n    bs: {hp: 30, at: 40, df: 55, sa: 40, sd: 55, sp: 60},\n    weightkg: 11.2,\n    nfe: true,\n    abilities: {0: 'Pure Power'},\n  },\n  // Metagross: {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 80, at: 135, df: 130, sa: 95, sd: 90, sp: 70},\n  //   weightkg: 550,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Metang: {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 60, at: 75, df: 100, sa: 55, sd: 80, sp: 50},\n  //   weightkg: 202.5,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  Mightyena: {\n    types: ['Dark'],\n    bs: {hp: 70, at: 90, df: 70, sa: 60, sd: 60, sp: 70},\n    weightkg: 37,\n    abilities: {0: 'Intimidate'},\n  },\n  Milotic: {\n    types: ['Water'],\n    bs: {hp: 95, at: 60, df: 79, sa: 100, sd: 125, sp: 81},\n    weightkg: 162,\n    abilities: {0: 'Marvel Scale'},\n  },\n  // Minun: {\n  //   types: ['Electric'],\n  //   bs: {hp: 60, at: 40, df: 50, sa: 75, sd: 85, sp: 95},\n  //   weightkg: 4.2,\n  //   abilities: {0: 'Minus'},\n  // },\n  // Mudkip: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 70, df: 50, sa: 50, sd: 50, sp: 40},\n  //   weightkg: 7.6,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Nincada: {\n  //   types: ['Bug', 'Ground'],\n  //   bs: {hp: 31, at: 45, df: 90, sa: 30, sd: 30, sp: 40},\n  //   weightkg: 5.5,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Ninjask: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 61, at: 90, df: 45, sa: 50, sd: 50, sp: 160},\n  //   weightkg: 12,\n  //   abilities: {0: 'Speed Boost'},\n  // },\n  Nosepass: {\n    types: ['Rock'],\n    bs: {hp: 30, at: 45, df: 135, sa: 45, sd: 90, sp: 30},\n    weightkg: 97,\n    abilities: {0: 'Sturdy'},\n  },\n  Numel: {\n    types: ['Fire', 'Ground'],\n    bs: {hp: 60, at: 60, df: 40, sa: 65, sd: 45, sp: 35},\n    weightkg: 24,\n    nfe: true,\n    abilities: {0: 'Oblivious'},\n  },\n  Nuzleaf: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 70, at: 70, df: 40, sa: 60, sd: 40, sp: 60},\n    weightkg: 28,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Pelipper: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 60, at: 50, df: 100, sa: 85, sd: 70, sp: 65},\n    weightkg: 28,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Plusle: {\n  //   types: ['Electric'],\n  //   bs: {hp: 60, at: 50, df: 40, sa: 85, sd: 75, sp: 95},\n  //   weightkg: 4.2,\n  //   abilities: {0: 'Plus'},\n  // },\n  Poochyena: {\n    types: ['Dark'],\n    bs: {hp: 35, at: 55, df: 35, sa: 30, sd: 30, sp: 35},\n    weightkg: 13.6,\n    nfe: true,\n    abilities: {0: 'Run Away'},\n  },\n  Ralts: {\n    types: ['Psychic'],\n    bs: {hp: 28, at: 25, df: 25, sa: 45, sd: 35, sp: 40},\n    weightkg: 6.6,\n    nfe: true,\n    abilities: {0: 'Synchronize'},\n  },\n  Rayquaza: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 105, at: 150, df: 90, sa: 150, sd: 90, sp: 95},\n    weightkg: 206.5,\n    abilities: {0: 'Air Lock'},\n    gender: 'N',\n  },\n  // Regice: {\n  //   types: ['Ice'],\n  //   bs: {hp: 80, at: 50, df: 100, sa: 100, sd: 200, sp: 50},\n  //   weightkg: 175,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Regirock: {\n  //   types: ['Rock'],\n  //   bs: {hp: 80, at: 100, df: 200, sa: 50, sd: 100, sp: 50},\n  //   weightkg: 230,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Registeel: {\n  //   types: ['Steel'],\n  //   bs: {hp: 80, at: 75, df: 150, sa: 75, sd: 150, sp: 50},\n  //   weightkg: 205,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Relicanth: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 100, at: 90, df: 130, sa: 45, sd: 65, sp: 55},\n  //   weightkg: 23.4,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Roselia: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 50, at: 60, df: 45, sa: 100, sd: 80, sp: 65},\n  //   weightkg: 2,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Sableye: {\n    types: ['Dark', 'Ghost'],\n    bs: {hp: 50, at: 75, df: 75, sa: 65, sd: 65, sp: 50},\n    weightkg: 11,\n    abilities: {0: 'Keen Eye'},\n  },\n  Salamence: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 95, at: 135, df: 80, sa: 110, sd: 80, sp: 100},\n    weightkg: 102.6,\n    abilities: {0: 'Intimidate'},\n  },\n  // Sceptile: {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 85, df: 65, sa: 105, sd: 85, sp: 120},\n  //   weightkg: 52.2,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Sealeo: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 90, at: 60, df: 70, sa: 75, sd: 70, sp: 45},\n  //   weightkg: 87.6,\n  //   nfe: true,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  Seedot: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 40, df: 50, sa: 30, sd: 30, sp: 30},\n    weightkg: 4,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Seviper: {\n    types: ['Poison'],\n    bs: {hp: 73, at: 100, df: 60, sa: 100, sd: 60, sp: 65},\n    weightkg: 52.5,\n    abilities: {0: 'Shed Skin'},\n  },\n  // Sharpedo: {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 70, at: 120, df: 40, sa: 95, sd: 40, sp: 95},\n  //   weightkg: 88.8,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  // Shedinja: {\n  //   types: ['Bug', 'Ghost'],\n  //   bs: {hp: 1, at: 90, df: 45, sa: 30, sd: 30, sp: 40},\n  //   weightkg: 1.2,\n  //   abilities: {0: 'Wonder Guard'},\n  //   gender: 'N',\n  // },\n  // Shelgon: {\n  //   types: ['Dragon'],\n  //   bs: {hp: 65, at: 95, df: 100, sa: 60, sd: 50, sp: 50},\n  //   weightkg: 110.5,\n  //   nfe: true,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  Shiftry: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 90, at: 100, df: 60, sa: 90, sd: 60, sp: 80},\n    weightkg: 59.6,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Shroomish: {\n    types: ['Grass'],\n    bs: {hp: 60, at: 40, df: 60, sa: 40, sd: 60, sp: 35},\n    weightkg: 4.5,\n    nfe: true,\n    abilities: {0: 'Effect Spore'},\n  },\n  Shuppet: {\n    types: ['Ghost'],\n    bs: {hp: 44, at: 75, df: 35, sa: 63, sd: 33, sp: 45},\n    weightkg: 2.3,\n    nfe: true,\n    abilities: {0: 'Insomnia'},\n  },\n  // Silcoon: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 35, df: 55, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 10,\n  //   abilities: {0: 'Shed Skin'},\n  //   nfe: true,\n  // },\n  // Skitty: {\n  //   types: ['Normal'],\n  //   bs: {hp: 50, at: 45, df: 45, sa: 35, sd: 35, sp: 50},\n  //   weightkg: 11,\n  //   nfe: true,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  Slaking: {\n    types: ['Normal'],\n    bs: {hp: 150, at: 160, df: 100, sa: 95, sd: 65, sp: 100},\n    weightkg: 130.5,\n    abilities: {0: 'Truant'},\n  },\n  Slakoth: {\n    types: ['Normal'],\n    bs: {hp: 60, at: 60, df: 60, sa: 35, sd: 35, sp: 30},\n    weightkg: 24,\n    abilities: {0: 'Truant'},\n    nfe: true,\n  },\n  Snorunt: {\n    types: ['Ice'],\n    bs: {hp: 50, at: 50, df: 50, sa: 50, sd: 50, sp: 50},\n    weightkg: 16.8,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  // Solrock: {\n  //   types: ['Rock', 'Psychic'],\n  //   bs: {hp: 70, at: 95, df: 85, sa: 55, sd: 65, sp: 70},\n  //   weightkg: 154,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Spheal: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 70, at: 40, df: 50, sa: 55, sd: 50, sp: 25},\n  //   weightkg: 39.5,\n  //   nfe: true,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  // Spinda: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 60, df: 60, sa: 60, sd: 60, sp: 60},\n  //   weightkg: 5,\n  //   abilities: {0: 'Own Tempo'},\n  // },\n  Spoink: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 25, df: 35, sa: 70, sd: 80, sp: 60},\n    weightkg: 30.6,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  Surskit: {\n    types: ['Bug', 'Water'],\n    bs: {hp: 40, at: 30, df: 32, sa: 50, sd: 52, sp: 65},\n    weightkg: 1.7,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  Swablu: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 45, at: 40, df: 60, sa: 40, sd: 75, sp: 50},\n    weightkg: 1.2,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n  },\n  Swalot: {\n    types: ['Poison'],\n    bs: {hp: 100, at: 73, df: 83, sa: 73, sd: 83, sp: 55},\n    weightkg: 80,\n    abilities: {0: 'Liquid Ooze'},\n  },\n  // Swampert: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 100, at: 110, df: 90, sa: 85, sd: 90, sp: 60},\n  //   weightkg: 81.9,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Swellow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 60, at: 85, df: 60, sa: 50, sd: 50, sp: 125},\n  //   weightkg: 19.8,\n  //   abilities: {0: 'Guts'},\n  // },\n  // Taillow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 55, df: 30, sa: 30, sd: 30, sp: 85},\n  //   weightkg: 2.3,\n  //   nfe: true,\n  //   abilities: {0: 'Guts'},\n  // },\n  // Torchic: {\n  //   types: ['Fire'],\n  //   bs: {hp: 45, at: 60, df: 40, sa: 70, sd: 50, sp: 45},\n  //   weightkg: 2.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  Torkoal: {\n    types: ['Fire'],\n    bs: {hp: 70, at: 85, df: 140, sa: 85, sd: 70, sp: 20},\n    weightkg: 80.4,\n    abilities: {0: 'White Smoke'},\n  },\n  // Trapinch: {\n  //   types: ['Ground'],\n  //   bs: {hp: 45, at: 100, df: 45, sa: 45, sd: 45, sp: 10},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Hyper Cutter'},\n  // },\n  // Treecko: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 45, df: 35, sa: 65, sd: 55, sp: 70},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Tropius: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 99, at: 68, df: 83, sa: 72, sd: 87, sp: 51},\n    weightkg: 100,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Vibrava: {\n  //   types: ['Ground', 'Dragon'],\n  //   bs: {hp: 50, at: 70, df: 50, sa: 50, sd: 50, sp: 70},\n  //   weightkg: 15.3,\n  //   abilities: {0: 'Levitate'},\n  //   nfe: true,\n  // },\n  Vigoroth: {\n    types: ['Normal'],\n    bs: {hp: 80, at: 80, df: 80, sa: 55, sd: 55, sp: 90},\n    weightkg: 46.5,\n    abilities: {0: 'Vital Spirit'},\n    nfe: true,\n  },\n  Volbeat: {\n    types: ['Bug'],\n    bs: {hp: 65, at: 73, df: 55, sa: 47, sd: 75, sp: 85},\n    weightkg: 17.7,\n    abilities: {0: 'Illuminate'},\n  },\n  // Wailmer: {\n  //   types: ['Water'],\n  //   bs: {hp: 130, at: 70, df: 35, sa: 70, sd: 35, sp: 60},\n  //   weightkg: 130,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  // Wailord: {\n  //   types: ['Water'],\n  //   bs: {hp: 170, at: 90, df: 45, sa: 90, sd: 45, sp: 60},\n  //   weightkg: 398,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  // Walrein: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 110, at: 80, df: 90, sa: 95, sd: 90, sp: 65},\n  //   weightkg: 150.6,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  Whiscash: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 110, at: 78, df: 73, sa: 76, sd: 71, sp: 60},\n    weightkg: 23.6,\n    abilities: {0: 'Oblivious'},\n  },\n  // Whismur: {\n  //   types: ['Normal'],\n  //   bs: {hp: 64, at: 51, df: 23, sa: 51, sd: 23, sp: 28},\n  //   weightkg: 16.3,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Wingull: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 40, at: 30, df: 30, sa: 55, sd: 30, sp: 85},\n    weightkg: 9.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Wurmple: {\n  //   types: ['Bug'],\n  //   bs: {hp: 45, at: 45, df: 35, sa: 20, sd: 30, sp: 20},\n  //   weightkg: 3.6,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Wynaut: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 95, at: 23, df: 48, sa: 23, sd: 48, sp: 23},\n  //   weightkg: 14,\n  //   nfe: true,\n  //   abilities: {0: 'Shadow Tag'},\n  // },\n  Zangoose: {\n    types: ['Normal'],\n    bs: {hp: 73, at: 115, df: 60, sa: 60, sd: 60, sp: 90},\n    weightkg: 40.3,\n    abilities: {0: 'Immunity'},\n  },\n  // Zigzagoon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 38, at: 30, df: 41, sa: 30, sd: 41, sp: 60},\n  //   weightkg: 17.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  // },\n};\n\nconst ADV: {[name: string]: SpeciesData} = extend(true, {}, GSC, ADV_PATCH);\n\nconst DPP_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Aipom: {nfe: true},\n  Dusclops: {nfe: true},\n  // Electabuzz: {nfe: true},\n  Gligar: {nfe: true},\n  // Lickitung: {nfe: true},\n  // Magmar: {nfe: true},\n  Magneton: {nfe: true},\n  Misdreavus: {nfe: true},\n  Murkrow: {nfe: true},\n  Nosepass: {nfe: true},\n  Piloswine: {nfe: true},\n  // Pichu: {otherFormes: ['Pichu-Spiky-eared']},\n  // Porygon2: {nfe: true},\n  // Rhydon: {nfe: true},\n  // Roselia: {nfe: true},\n  Sneasel: {nfe: true},\n  // Tangela: {nfe: true},\n  // Togetic: {nfe: true},\n  Yanma: {nfe: true},\n  Abomasnow: {\n    types: ['Grass', 'Ice'],\n    bs: {hp: 90, at: 92, df: 75, sa: 92, sd: 85, sp: 60},\n    weightkg: 135.5,\n    abilities: {0: 'Snow Warning'},\n  },\n  Ambipom: {\n    types: ['Normal'],\n    bs: {hp: 75, at: 100, df: 66, sa: 60, sd: 66, sp: 115},\n    weightkg: 20.3,\n    abilities: {0: 'Technician'},\n  },\n  Arceus: {\n    types: ['Normal'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    otherFormes: [\n      // 'Arceus-Bug',\n      // 'Arceus-Dark',\n      // 'Arceus-Dragon',\n      // 'Arceus-Electric',\n      // 'Arceus-Fighting',\n      // 'Arceus-Fire',\n      // 'Arceus-Flying',\n      // 'Arceus-Ghost',\n      // 'Arceus-Grass',\n      // 'Arceus-Ground',\n      // 'Arceus-Ice',\n      // 'Arceus-Poison',\n      // 'Arceus-Psychic',\n      // 'Arceus-Rock',\n      // 'Arceus-Steel',\n      // 'Arceus-Water',\n    ],\n  },\n  // 'Arceus-Bug': {\n  //   types: ['Bug'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Dark': {\n  //   types: ['Dark'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Dragon': {\n  //   types: ['Dragon'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Electric': {\n  //   types: ['Electric'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Fighting': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Fire': {\n  //   types: ['Fire'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Flying': {\n  //   types: ['Flying'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Ghost': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Grass': {\n  //   types: ['Grass'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Ground': {\n  //   types: ['Ground'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Ice': {\n  //   types: ['Ice'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Poison': {\n  //   types: ['Poison'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Psychic': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Rock': {\n  //   types: ['Rock'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Steel': {\n  //   types: ['Steel'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Water': {\n  //   types: ['Water'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // Arghonaut: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 105, at: 110, df: 95, sa: 70, sd: 100, sp: 75},\n  //   weightkg: 151,\n  //   abilities: {0: 'Unaware'},\n  // },\n  Azelf: {\n    types: ['Psychic'],\n    bs: {hp: 75, at: 125, df: 70, sa: 125, sd: 70, sp: 115},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  // Bastiodon: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 60, at: 52, df: 168, sa: 47, sd: 138, sp: 30},\n  //   weightkg: 149.5,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Bibarel: {\n  //   types: ['Normal', 'Water'],\n  //   bs: {hp: 79, at: 85, df: 60, sa: 55, sd: 60, sp: 71},\n  //   weightkg: 31.5,\n  //   abilities: {0: 'Simple'},\n  // },\n  // Bidoof: {\n  //   types: ['Normal'],\n  //   bs: {hp: 59, at: 45, df: 40, sa: 35, sd: 40, sp: 31},\n  //   weightkg: 20,\n  //   nfe: true,\n  //   abilities: {0: 'Simple'},\n  // },\n  Bonsly: {\n    types: ['Rock'],\n    bs: {hp: 50, at: 80, df: 95, sa: 10, sd: 45, sp: 10},\n    weightkg: 15,\n    nfe: true,\n    abilities: {0: 'Sturdy'},\n  },\n  // Breezi: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 50, at: 46, df: 69, sa: 60, sd: 50, sp: 75},\n  //   weightkg: 0.6,\n  //   nfe: true,\n  //   abilities: {0: 'Unburden'},\n  // },\n  Bronzong: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 67, at: 89, df: 116, sa: 79, sd: 116, sp: 33},\n    weightkg: 187,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n  },\n  Bronzor: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 57, at: 24, df: 86, sa: 24, sd: 86, sp: 23},\n    weightkg: 60.5,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n  },\n  // Budew: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 40, at: 30, df: 35, sa: 50, sd: 70, sp: 55},\n  //   weightkg: 1.2,\n  //   nfe: true,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Buizel: {\n    types: ['Water'],\n    bs: {hp: 55, at: 65, df: 35, sa: 60, sd: 30, sp: 85},\n    weightkg: 29.5,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Buneary: {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 66, df: 44, sa: 44, sd: 56, sp: 85},\n  //   weightkg: 5.5,\n  //   nfe: true,\n  //   abilities: {0: 'Run Away'},\n  // },\n  // Burmy: {\n  //   types: ['Bug'],\n  //   bs: {hp: 40, at: 29, df: 45, sa: 29, sd: 45, sp: 36},\n  //   weightkg: 3.4,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Carnivine: {\n  //   types: ['Grass'],\n  //   bs: {hp: 74, at: 100, df: 72, sa: 90, sd: 72, sp: 46},\n  //   weightkg: 27,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Chatot: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 76, at: 65, df: 45, sa: 92, sd: 42, sp: 91},\n  //   weightkg: 1.9,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Cherrim: {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 60, df: 70, sa: 87, sd: 78, sp: 85},\n  //   weightkg: 9.3,\n  //   abilities: {0: 'Flower Gift'},\n  //   otherFormes: ['Cherrim-Sunshine'],\n  // },\n  // 'Cherrim-Sunshine': {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 60, df: 70, sa: 87, sd: 78, sp: 85},\n  //   weightkg: 9.3,\n  //   abilities: {0: 'Flower Gift'},\n  //   baseSpecies: 'Cherrim',\n  // },\n  // Cherubi: {\n  //   types: ['Grass'],\n  //   bs: {hp: 45, at: 35, df: 45, sa: 62, sd: 53, sp: 35},\n  //   weightkg: 3.3,\n  //   abilities: {0: 'Chlorophyll'},\n  //   nfe: true,\n  // },\n  Chimchar: {\n    types: ['Fire'],\n    bs: {hp: 44, at: 58, df: 44, sa: 58, sd: 44, sp: 61},\n    weightkg: 6.2,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Chingling: {\n    types: ['Psychic'],\n    bs: {hp: 45, at: 30, df: 50, sa: 65, sd: 50, sp: 45},\n    weightkg: 0.6,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  // Colossoil: {\n  //   types: ['Ground', 'Dark'],\n  //   bs: {hp: 133, at: 122, df: 72, sa: 71, sd: 72, sp: 95},\n  //   weightkg: 683.6,\n  //   abilities: {0: 'Rebound'},\n  // },\n  Combee: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 30, at: 30, df: 42, sa: 30, sd: 42, sp: 70},\n    weightkg: 5.5,\n    nfe: true,\n    abilities: {0: 'Honey Gather'},\n  },\n  // Cranidos: {\n  //   types: ['Rock'],\n  //   bs: {hp: 67, at: 125, df: 40, sa: 30, sd: 30, sp: 58},\n  //   weightkg: 31.5,\n  //   nfe: true,\n  //   abilities: {0: 'Mold Breaker'},\n  // },\n  Cresselia: {\n    types: ['Psychic'],\n    bs: {hp: 120, at: 70, df: 120, sa: 75, sd: 130, sp: 85},\n    weightkg: 85.6,\n    abilities: {0: 'Levitate'},\n  },\n  Croagunk: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 48, at: 61, df: 40, sa: 61, sd: 40, sp: 50},\n    weightkg: 23,\n    nfe: true,\n    abilities: {0: 'Anticipation'},\n  },\n  // Cyclohm: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 108, at: 60, df: 118, sa: 112, sd: 70, sp: 80},\n  //   weightkg: 59,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  Darkrai: {\n    types: ['Dark'],\n    bs: {hp: 70, at: 90, df: 90, sa: 135, sd: 90, sp: 125},\n    weightkg: 50.5,\n    abilities: {0: 'Bad Dreams'},\n    gender: 'N',\n  },\n  Dialga: {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 100, at: 120, df: 120, sa: 150, sd: 100, sp: 90},\n    weightkg: 683,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n  },\n  // Dorsoil: {\n  //   types: ['Ground'],\n  //   bs: {hp: 103, at: 72, df: 52, sa: 61, sd: 52, sp: 65},\n  //   weightkg: 145,\n  //   nfe: true,\n  //   abilities: {0: 'Oblivious'},\n  // },\n  // Drapion: {\n  //   types: ['Poison', 'Dark'],\n  //   bs: {hp: 70, at: 90, df: 110, sa: 60, sd: 75, sp: 95},\n  //   weightkg: 61.5,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  Drifblim: {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 150, at: 80, df: 44, sa: 90, sd: 54, sp: 80},\n    weightkg: 15,\n    abilities: {0: 'Aftermath'},\n  },\n  Drifloon: {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 90, at: 50, df: 34, sa: 60, sd: 44, sp: 70},\n    weightkg: 1.2,\n    nfe: true,\n    abilities: {0: 'Aftermath'},\n  },\n  // Duohm: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 88, at: 40, df: 103, sa: 77, sd: 60, sp: 60},\n  //   weightkg: 19.2,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  Dusknoir: {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 100, df: 135, sa: 65, sd: 135, sp: 45},\n    weightkg: 106.6,\n    abilities: {0: 'Pressure'},\n  },\n  // Electivire: {\n  //   types: ['Electric'],\n  //   bs: {hp: 75, at: 123, df: 67, sa: 95, sd: 85, sp: 95},\n  //   weightkg: 138.6,\n  //   abilities: {0: 'Motor Drive'},\n  // },\n  // Embirch: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 60, at: 40, df: 55, sa: 65, sd: 40, sp: 60},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Reckless'},\n  // },\n  Empoleon: {\n    types: ['Water', 'Steel'],\n    bs: {hp: 84, at: 86, df: 88, sa: 111, sd: 101, sp: 60},\n    weightkg: 84.5,\n    abilities: {0: 'Torrent'},\n  },\n  // Fidgit: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 95, at: 76, df: 109, sa: 90, sd: 80, sp: 105},\n  //   weightkg: 53,\n  //   abilities: {0: 'Persistent'},\n  // },\n  Finneon: {\n    types: ['Water'],\n    bs: {hp: 49, at: 49, df: 56, sa: 49, sd: 61, sp: 66},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Flarelm: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 90, at: 50, df: 95, sa: 75, sd: 70, sp: 40},\n  //   weightkg: 73,\n  //   nfe: true,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  Floatzel: {\n    types: ['Water'],\n    bs: {hp: 85, at: 105, df: 55, sa: 85, sd: 50, sp: 115},\n    weightkg: 33.5,\n    abilities: {0: 'Swift Swim'},\n  },\n  Froslass: {\n    types: ['Ice', 'Ghost'],\n    bs: {hp: 70, at: 80, df: 70, sa: 80, sd: 70, sp: 110},\n    weightkg: 26.6,\n    abilities: {0: 'Snow Cloak'},\n  },\n  Gabite: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 68, at: 90, df: 65, sa: 50, sd: 55, sp: 82},\n    weightkg: 56,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Gallade: {\n    types: ['Psychic', 'Fighting'],\n    bs: {hp: 68, at: 125, df: 65, sa: 65, sd: 115, sp: 80},\n    weightkg: 52,\n    abilities: {0: 'Steadfast'},\n  },\n  Garchomp: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 108, at: 130, df: 95, sa: 80, sd: 85, sp: 102},\n    weightkg: 95,\n    abilities: {0: 'Sand Veil'},\n  },\n  Gastrodon: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 111, at: 83, df: 68, sa: 92, sd: 82, sp: 39},\n    weightkg: 29.9,\n    abilities: {0: 'Sticky Hold'},\n  },\n  Gible: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 58, at: 70, df: 45, sa: 40, sd: 45, sp: 42},\n    weightkg: 20.5,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Giratina: {\n    types: ['Ghost', 'Dragon'],\n    bs: {hp: 150, at: 100, df: 120, sa: 100, sd: 120, sp: 90},\n    weightkg: 750,\n    gender: 'N',\n    otherFormes: ['Giratina-Origin'],\n    abilities: {0: 'Pressure'},\n  },\n  'Giratina-Origin': {\n    types: ['Ghost', 'Dragon'],\n    bs: {hp: 150, at: 120, df: 100, sa: 120, sd: 100, sp: 90},\n    weightkg: 650,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n    baseSpecies: 'Giratina',\n  },\n  Glaceon: {\n    types: ['Ice'],\n    bs: {hp: 65, at: 60, df: 110, sa: 130, sd: 95, sp: 65},\n    weightkg: 25.9,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Glameow: {\n  //   types: ['Normal'],\n  //   bs: {hp: 49, at: 55, df: 42, sa: 42, sd: 37, sp: 85},\n  //   weightkg: 3.9,\n  //   nfe: true,\n  //   abilities: {0: 'Limber'},\n  // },\n  Gliscor: {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 75, at: 95, df: 125, sa: 45, sd: 75, sp: 95},\n    weightkg: 42.5,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Grotle: {\n    types: ['Grass'],\n    bs: {hp: 75, at: 89, df: 85, sa: 55, sd: 65, sp: 36},\n    weightkg: 97,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Happiny: {\n    types: ['Normal'],\n    bs: {hp: 100, at: 5, df: 5, sa: 15, sd: 65, sp: 30},\n    weightkg: 24.4,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n  },\n  Heatran: {\n    types: ['Fire', 'Steel'],\n    bs: {hp: 91, at: 90, df: 106, sa: 130, sd: 106, sp: 77},\n    weightkg: 430,\n    abilities: {0: 'Flash Fire'},\n  },\n  Hippopotas: {\n    types: ['Ground'],\n    bs: {hp: 68, at: 72, df: 78, sa: 38, sd: 42, sp: 32},\n    weightkg: 49.5,\n    nfe: true,\n    abilities: {0: 'Sand Stream'},\n  },\n  Hippowdon: {\n    types: ['Ground'],\n    bs: {hp: 108, at: 112, df: 118, sa: 68, sd: 72, sp: 47},\n    weightkg: 300,\n    abilities: {0: 'Sand Stream'},\n  },\n  Honchkrow: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 100, at: 125, df: 52, sa: 105, sd: 52, sp: 71},\n    weightkg: 27.3,\n    abilities: {0: 'Insomnia'},\n  },\n  Infernape: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 76, at: 104, df: 71, sa: 104, sd: 71, sp: 108},\n    weightkg: 55,\n    abilities: {0: 'Blaze'},\n  },\n  // Kitsunoh: {\n  //   types: ['Ghost', 'Steel'],\n  //   bs: {hp: 80, at: 103, df: 85, sa: 55, sd: 80, sp: 110},\n  //   weightkg: 51,\n  //   abilities: {0: 'Frisk'},\n  // },\n  Kricketot: {\n    types: ['Bug'],\n    bs: {hp: 37, at: 25, df: 41, sa: 25, sd: 41, sp: 25},\n    weightkg: 2.2,\n    nfe: true,\n    abilities: {0: 'Shed Skin'},\n  },\n  Kricketune: {\n    types: ['Bug'],\n    bs: {hp: 77, at: 85, df: 51, sa: 55, sd: 51, sp: 65},\n    weightkg: 25.5,\n    abilities: {0: 'Swarm'},\n  },\n  // Krilowatt: {\n  //   types: ['Electric', 'Water'],\n  //   bs: {hp: 151, at: 84, df: 73, sa: 83, sd: 74, sp: 105},\n  //   weightkg: 10.6,\n  //   abilities: {0: 'Trace'},\n  // },\n  Leafeon: {\n    types: ['Grass'],\n    bs: {hp: 65, at: 110, df: 130, sa: 60, sd: 65, sp: 95},\n    weightkg: 25.5,\n    abilities: {0: 'Leaf Guard'},\n  },\n  // Lickilicky: {\n  //   types: ['Normal'],\n  //   bs: {hp: 110, at: 85, df: 95, sa: 80, sd: 95, sp: 50},\n  //   weightkg: 140,\n  //   abilities: {0: 'Own Tempo'},\n  // },\n  // Lopunny: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 76, df: 84, sa: 54, sd: 96, sp: 105},\n  //   weightkg: 33.3,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  Lucario: {\n    types: ['Fighting', 'Steel'],\n    bs: {hp: 70, at: 110, df: 70, sa: 115, sd: 70, sp: 90},\n    weightkg: 54,\n    abilities: {0: 'Steadfast'},\n  },\n  Lumineon: {\n    types: ['Water'],\n    bs: {hp: 69, at: 69, df: 76, sa: 69, sd: 86, sp: 91},\n    weightkg: 24,\n    abilities: {0: 'Swift Swim'},\n  },\n  Luxio: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 85, df: 49, sa: 60, sd: 49, sp: 60},\n    weightkg: 30.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  Luxray: {\n    types: ['Electric'],\n    bs: {hp: 80, at: 120, df: 79, sa: 95, sd: 79, sp: 70},\n    weightkg: 42,\n    abilities: {0: 'Rivalry'},\n  },\n  // Magmortar: {\n  //   types: ['Fire'],\n  //   bs: {hp: 75, at: 95, df: 67, sa: 125, sd: 95, sp: 83},\n  //   weightkg: 68,\n  //   abilities: {0: 'Flame Body'},\n  // },\n  Magnezone: {\n    types: ['Electric', 'Steel'],\n    bs: {hp: 70, at: 70, df: 115, sa: 130, sd: 90, sp: 60},\n    weightkg: 180,\n    gender: 'N',\n    abilities: {0: 'Magnet Pull'},\n  },\n  Mamoswine: {\n    types: ['Ice', 'Ground'],\n    bs: {hp: 110, at: 130, df: 80, sa: 70, sd: 60, sp: 80},\n    weightkg: 291,\n    abilities: {0: 'Oblivious'},\n  },\n  Manaphy: {\n    types: ['Water'],\n    bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n    weightkg: 1.4,\n    abilities: {0: 'Hydration'},\n    gender: 'N',\n  },\n  // Mantyke: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 45, at: 20, df: 50, sa: 60, sd: 120, sp: 50},\n  //   weightkg: 65,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Mesprit: {\n    types: ['Psychic'],\n    bs: {hp: 80, at: 105, df: 105, sa: 105, sd: 105, sp: 80},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  // 'Mime Jr.': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 20, at: 25, df: 45, sa: 70, sd: 90, sp: 60},\n  //   weightkg: 13,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Mismagius: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 60, df: 60, sa: 105, sd: 105, sp: 105},\n    weightkg: 4.4,\n    abilities: {0: 'Levitate'},\n  },\n  Monferno: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 64, at: 78, df: 52, sa: 78, sd: 52, sp: 81},\n    weightkg: 22,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  // Monohm: {\n  //   types: ['Electric'],\n  //   bs: {hp: 53, at: 40, df: 58, sa: 67, sd: 55, sp: 55},\n  //   weightkg: 4.1,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Mothim: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 70, at: 94, df: 50, sa: 94, sd: 50, sp: 66},\n  //   weightkg: 23.3,\n  //   abilities: {0: 'Swarm'},\n  // },\n  Munchlax: {\n    types: ['Normal'],\n    bs: {hp: 135, at: 85, df: 40, sa: 40, sd: 85, sp: 5},\n    weightkg: 105,\n    nfe: true,\n    abilities: {0: 'Pickup'},\n  },\n  // Nohface: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 50, at: 73, df: 50, sa: 30, sd: 50, sp: 80},\n  //   weightkg: 5.9,\n  //   nfe: true,\n  //   abilities: {0: 'Frisk'},\n  // },\n  Pachirisu: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 45, df: 70, sa: 45, sd: 90, sp: 95},\n    weightkg: 3.9,\n    abilities: {0: 'Run Away'},\n  },\n  Palkia: {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 90, at: 120, df: 100, sa: 150, sd: 120, sp: 100},\n    weightkg: 336,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n  },\n  Phione: {\n    types: ['Water'],\n    bs: {hp: 80, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 3.1,\n    abilities: {0: 'Hydration'},\n    gender: 'N',\n  },\n  // 'Pichu-Spiky-eared': {\n  //   types: ['Electric'],\n  //   bs: {hp: 20, at: 40, df: 15, sa: 35, sd: 35, sp: 60},\n  //   weightkg: 2,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pichu',\n  // },\n  Piplup: {\n    types: ['Water'],\n    bs: {hp: 53, at: 51, df: 53, sa: 61, sd: 56, sp: 40},\n    weightkg: 5.2,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // 'Porygon-Z': {\n  //   types: ['Normal'],\n  //   bs: {hp: 85, at: 80, df: 70, sa: 135, sd: 75, sp: 90},\n  //   weightkg: 34,\n  //   gender: 'N',\n  //   abilities: {0: 'Adaptability'},\n  // },\n  Prinplup: {\n    types: ['Water'],\n    bs: {hp: 64, at: 66, df: 68, sa: 81, sd: 76, sp: 50},\n    weightkg: 23,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Privatyke: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 65, at: 75, df: 65, sa: 40, sd: 60, sp: 45},\n  //   weightkg: 35,\n  //   nfe: true,\n  //   abilities: {0: 'Unaware'},\n  // },\n  Probopass: {\n    types: ['Rock', 'Steel'],\n    bs: {hp: 60, at: 55, df: 145, sa: 75, sd: 150, sp: 40},\n    weightkg: 340,\n    abilities: {0: 'Sturdy'},\n  },\n  // Protowatt: {\n  //   types: ['Electric', 'Water'],\n  //   bs: {hp: 51, at: 44, df: 33, sa: 43, sd: 34, sp: 65},\n  //   weightkg: 0.1,\n  //   nfe: true,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Purugly: {\n  //   types: ['Normal'],\n  //   bs: {hp: 71, at: 82, df: 64, sa: 64, sd: 59, sp: 112},\n  //   weightkg: 43.8,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  // Pyroak: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 120, at: 70, df: 105, sa: 95, sd: 90, sp: 60},\n  //   weightkg: 168,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  // Rampardos: {\n  //   types: ['Rock'],\n  //   bs: {hp: 97, at: 165, df: 60, sa: 65, sd: 50, sp: 58},\n  //   weightkg: 102.5,\n  //   abilities: {0: 'Mold Breaker'},\n  // },\n  // Rebble: {\n  //   types: ['Rock'],\n  //   bs: {hp: 45, at: 25, df: 65, sa: 75, sd: 55, sp: 80},\n  //   weightkg: 7,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Regigigas: {\n  //   types: ['Normal'],\n  //   bs: {hp: 110, at: 160, df: 110, sa: 80, sd: 110, sp: 100},\n  //   weightkg: 420,\n  //   abilities: {0: 'Slow Start'},\n  //   gender: 'N',\n  // },\n  // Revenankh: {\n  //   types: ['Ghost', 'Fighting'],\n  //   bs: {hp: 90, at: 105, df: 90, sa: 65, sd: 110, sp: 65},\n  //   weightkg: 44,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Rhyperior: {\n  //   types: ['Ground', 'Rock'],\n  //   bs: {hp: 115, at: 140, df: 130, sa: 55, sd: 55, sp: 40},\n  //   weightkg: 282.8,\n  //   abilities: {0: 'Lightning Rod'},\n  // },\n  Riolu: {\n    types: ['Fighting'],\n    bs: {hp: 40, at: 70, df: 40, sa: 35, sd: 40, sp: 60},\n    weightkg: 20.2,\n    nfe: true,\n    abilities: {0: 'Steadfast'},\n  },\n  // Roserade: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 60, at: 70, df: 55, sa: 125, sd: 105, sp: 90},\n  //   weightkg: 14.5,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Rotom: {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 50, df: 77, sa: 95, sd: 77, sp: 91},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    otherFormes: ['Rotom-Fan', 'Rotom-Frost', 'Rotom-Heat', 'Rotom-Mow', 'Rotom-Wash'],\n  },\n  'Rotom-Mow': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Frost': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Heat': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Fan': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Wash': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  Shaymin: {\n    types: ['Grass'],\n    bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n    weightkg: 2.1,\n    abilities: {0: 'Natural Cure'},\n    gender: 'N',\n    otherFormes: ['Shaymin-Sky'],\n  },\n  'Shaymin-Sky': {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 100, at: 103, df: 75, sa: 120, sd: 75, sp: 127},\n    weightkg: 5.2,\n    abilities: {0: 'Serene Grace'},\n    gender: 'N',\n    baseSpecies: 'Shaymin',\n  },\n  Shellos: {\n    types: ['Water'],\n    bs: {hp: 76, at: 48, df: 48, sa: 57, sd: 62, sp: 34},\n    weightkg: 6.3,\n    nfe: true,\n    abilities: {0: 'Sticky Hold'},\n  },\n  // Shieldon: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 30, at: 42, df: 118, sa: 42, sd: 88, sp: 30},\n  //   weightkg: 57,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Shinx: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 65, df: 34, sa: 40, sd: 34, sp: 45},\n    weightkg: 9.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  // Skorupi: {\n  //   types: ['Poison', 'Bug'],\n  //   bs: {hp: 40, at: 50, df: 90, sa: 30, sd: 55, sp: 65},\n  //   weightkg: 12,\n  //   nfe: true,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  Skuntank: {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 103, at: 93, df: 67, sa: 71, sd: 61, sp: 84},\n    weightkg: 38,\n    abilities: {0: 'Stench'},\n  },\n  Snover: {\n    types: ['Grass', 'Ice'],\n    bs: {hp: 60, at: 62, df: 50, sa: 62, sd: 60, sp: 40},\n    weightkg: 50.5,\n    nfe: true,\n    abilities: {0: 'Snow Warning'},\n  },\n  Spiritomb: {\n    types: ['Ghost', 'Dark'],\n    bs: {hp: 50, at: 92, df: 108, sa: 92, sd: 108, sp: 35},\n    weightkg: 108,\n    abilities: {0: 'Pressure'},\n  },\n  Staraptor: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 85, at: 120, df: 70, sa: 50, sd: 50, sp: 100},\n    weightkg: 24.9,\n    abilities: {0: 'Intimidate'},\n  },\n  Staravia: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 55, at: 75, df: 50, sa: 40, sd: 40, sp: 80},\n    weightkg: 15.5,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  Starly: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 40, at: 55, df: 30, sa: 30, sd: 30, sp: 60},\n    weightkg: 2,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Stratagem: {\n  //   types: ['Rock'],\n  //   bs: {hp: 90, at: 60, df: 65, sa: 120, sd: 70, sp: 130},\n  //   weightkg: 45,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  Stunky: {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 63, at: 63, df: 47, sa: 41, sd: 41, sp: 74},\n    weightkg: 19.2,\n    nfe: true,\n    abilities: {0: 'Stench'},\n  },\n  // Syclant: {\n  //   types: ['Ice', 'Bug'],\n  //   bs: {hp: 70, at: 116, df: 70, sa: 114, sd: 64, sp: 121},\n  //   weightkg: 52,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Syclar: {\n  //   types: ['Ice', 'Bug'],\n  //   bs: {hp: 40, at: 76, df: 45, sa: 74, sd: 39, sp: 91},\n  //   weightkg: 4,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Tactite: {\n  //   types: ['Rock'],\n  //   bs: {hp: 70, at: 40, df: 65, sa: 100, sd: 65, sp: 95},\n  //   weightkg: 16,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Tangrowth: {\n  //   types: ['Grass'],\n  //   bs: {hp: 100, at: 100, df: 125, sa: 110, sd: 50, sp: 50},\n  //   weightkg: 128.6,\n  //   abilities: {0: 'Chlorophyll'},\n  // },\n  // Togekiss: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 85, at: 50, df: 95, sa: 120, sd: 115, sp: 80},\n  //   weightkg: 38,\n  //   abilities: {0: 'Hustle'},\n  // },\n  Torterra: {\n    types: ['Grass', 'Ground'],\n    bs: {hp: 95, at: 109, df: 105, sa: 75, sd: 85, sp: 56},\n    weightkg: 310,\n    abilities: {0: 'Overgrow'},\n  },\n  Toxicroak: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 83, at: 106, df: 65, sa: 86, sd: 65, sp: 85},\n    weightkg: 44.4,\n    abilities: {0: 'Anticipation'},\n  },\n  Turtwig: {\n    types: ['Grass'],\n    bs: {hp: 55, at: 68, df: 64, sa: 45, sd: 55, sp: 31},\n    weightkg: 10.2,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Uxie: {\n    types: ['Psychic'],\n    bs: {hp: 75, at: 75, df: 130, sa: 75, sd: 130, sp: 95},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  Vespiquen: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 80, df: 102, sa: 80, sd: 102, sp: 40},\n    weightkg: 38.5,\n    abilities: {0: 'Pressure'},\n  },\n  // Voodoll: {\n  //   types: ['Normal', 'Dark'],\n  //   bs: {hp: 55, at: 40, df: 55, sa: 75, sd: 50, sp: 70},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Volt Absorb'},\n  // },\n  // Voodoom: {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 90, at: 85, df: 80, sa: 105, sd: 80, sp: 110},\n  //   weightkg: 75.5,\n  //   abilities: {0: 'Volt Absorb'},\n  // },\n  Weavile: {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 70, at: 120, df: 65, sa: 45, sd: 85, sp: 125},\n    weightkg: 34,\n    abilities: {0: 'Pressure'},\n  },\n  // Wormadam: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 60, at: 59, df: 85, sa: 79, sd: 105, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   otherFormes: ['Wormadam-Sandy', 'Wormadam-Trash'],\n  // },\n  // 'Wormadam-Sandy': {\n  //   types: ['Bug', 'Ground'],\n  //   bs: {hp: 60, at: 79, df: 105, sa: 59, sd: 85, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   baseSpecies: 'Wormadam',\n  // },\n  // 'Wormadam-Trash': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 60, at: 69, df: 95, sa: 69, sd: 95, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   baseSpecies: 'Wormadam',\n  // },\n  Yanmega: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 86, at: 76, df: 86, sa: 116, sd: 56, sp: 95},\n    weightkg: 51.5,\n    abilities: {0: 'Speed Boost'},\n  },\n};\n\nconst DPP: {[name: string]: SpeciesData} = extend(true, {}, ADV, DPP_PATCH);\n\nconst BW_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  'Rotom-Fan': {types: ['Electric', 'Flying']},\n  'Rotom-Frost': {types: ['Electric', 'Ice']},\n  'Rotom-Heat': {types: ['Electric', 'Fire']},\n  'Rotom-Mow': {types: ['Electric', 'Grass']},\n  'Rotom-Wash': {types: ['Electric', 'Water']},\n  // Accelgor: {\n  //   types: ['Bug'],\n  //   bs: {hp: 80, at: 70, df: 40, sa: 100, sd: 60, sp: 145},\n  //   weightkg: 25.3,\n  //   abilities: {0: 'Hydration'},\n  // },\n  Alomomola: {\n    types: ['Water'],\n    bs: {hp: 165, at: 75, df: 80, sa: 40, sd: 45, sp: 65},\n    weightkg: 31.6,\n    abilities: {0: 'Healer'},\n  },\n  Amoonguss: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 114, at: 85, df: 70, sa: 85, sd: 80, sp: 30},\n    weightkg: 10.5,\n    abilities: {0: 'Effect Spore'},\n  },\n  // Archen: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 55, at: 112, df: 45, sa: 74, sd: 45, sp: 70},\n  //   weightkg: 9.5,\n  //   abilities: {0: 'Defeatist'},\n  //   nfe: true,\n  // },\n  // Archeops: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 75, at: 140, df: 65, sa: 112, sd: 65, sp: 110},\n  //   weightkg: 32,\n  //   abilities: {0: 'Defeatist'},\n  // },\n  // Argalis: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 90, df: 89, sa: 87, sd: 40, sp: 54},\n  //   weightkg: 341.4,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Audino: {\n  //   types: ['Normal'],\n  //   bs: {hp: 103, at: 60, df: 86, sa: 60, sd: 86, sp: 50},\n  //   weightkg: 31,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Aurumoth: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 110, at: 120, df: 99, sa: 117, sd: 60, sp: 94},\n  //   weightkg: 193,\n  //   abilities: {0: 'Weak Armor'},\n  // },\n  Axew: {\n    types: ['Dragon'],\n    bs: {hp: 46, at: 87, df: 60, sa: 30, sd: 40, sp: 57},\n    weightkg: 18,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  Basculin: {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Reckless'},\n    otherFormes: ['Basculin-Blue-Striped'],\n  },\n  'Basculin-Blue-Striped': {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Rock Head'},\n    baseSpecies: 'Basculin',\n  },\n  Beartic: {\n    types: ['Ice'],\n    bs: {hp: 95, at: 110, df: 80, sa: 70, sd: 80, sp: 50},\n    weightkg: 260,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Beheeyem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 75, at: 75, df: 75, sa: 125, sd: 95, sp: 40},\n  //   weightkg: 34.5,\n  //   abilities: {0: 'Telepathy'},\n  // },\n  Bisharp: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 65, at: 125, df: 100, sa: 60, sd: 70, sp: 70},\n    weightkg: 70,\n    abilities: {0: 'Defiant'},\n  },\n  // Blitzle: {\n  //   types: ['Electric'],\n  //   bs: {hp: 45, at: 60, df: 32, sa: 50, sd: 32, sp: 76},\n  //   weightkg: 29.8,\n  //   nfe: true,\n  //   abilities: {0: 'Lightning Rod'},\n  // },\n  // Boldore: {\n  //   types: ['Rock'],\n  //   bs: {hp: 70, at: 105, df: 105, sa: 50, sd: 40, sp: 20},\n  //   weightkg: 102,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Bouffalant: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 110, df: 95, sa: 40, sd: 95, sp: 55},\n  //   weightkg: 94.6,\n  //   abilities: {0: 'Reckless'},\n  // },\n  // Brattler: {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 80, at: 70, df: 40, sa: 20, sd: 90, sp: 30},\n  //   weightkg: 11.5,\n  //   nfe: true,\n  //   abilities: {0: 'Harvest'},\n  // },\n  Braviary: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 100, at: 123, df: 75, sa: 57, sd: 75, sp: 80},\n    weightkg: 41,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Carracosta: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 74, at: 108, df: 133, sa: 83, sd: 65, sp: 32},\n  //   weightkg: 81,\n  //   abilities: {0: 'Solid Rock'},\n  // },\n  // Cawdet: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 35, at: 72, df: 85, sa: 40, sd: 55, sp: 88},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Cawmodore: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 50, at: 92, df: 130, sa: 65, sd: 75, sp: 118},\n  //   weightkg: 37,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Chandelure: {\n    types: ['Ghost', 'Fire'],\n    bs: {hp: 60, at: 55, df: 90, sa: 145, sd: 90, sp: 80},\n    weightkg: 34.3,\n    abilities: {0: 'Flash Fire'},\n  },\n  // Cinccino: {\n  //   types: ['Normal'],\n  //   bs: {hp: 75, at: 95, df: 60, sa: 65, sd: 60, sp: 115},\n  //   weightkg: 7.5,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  // Cobalion: {\n  //   types: ['Steel', 'Fighting'],\n  //   bs: {hp: 91, at: 90, df: 129, sa: 90, sd: 72, sp: 108},\n  //   weightkg: 250,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  // },\n  // Cofagrigus: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 58, at: 50, df: 145, sa: 95, sd: 105, sp: 30},\n  //   weightkg: 76.5,\n  //   abilities: {0: 'Mummy'},\n  // },\n  Conkeldurr: {\n    types: ['Fighting'],\n    bs: {hp: 105, at: 140, df: 95, sa: 55, sd: 65, sp: 45},\n    weightkg: 87,\n    abilities: {0: 'Guts'},\n  },\n  // Cottonee: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 27, df: 60, sa: 37, sd: 50, sp: 66},\n  //   weightkg: 0.6,\n  //   nfe: true,\n  //   abilities: {0: 'Prankster'},\n  // },\n  // Crustle: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 70, at: 95, df: 125, sa: 65, sd: 75, sp: 45},\n  //   weightkg: 200,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Cryogonal: {\n    types: ['Ice'],\n    bs: {hp: 70, at: 50, df: 30, sa: 95, sd: 135, sp: 105},\n    weightkg: 148,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  Cubchoo: {\n    types: ['Ice'],\n    bs: {hp: 55, at: 70, df: 40, sa: 60, sd: 40, sp: 40},\n    weightkg: 8.5,\n    nfe: true,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Cupra: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 50, at: 60, df: 49, sa: 67, sd: 30, sp: 44},\n  //   weightkg: 4.8,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Darmanitan: {\n  //   types: ['Fire'],\n  //   bs: {hp: 105, at: 140, df: 55, sa: 30, sd: 55, sp: 95},\n  //   weightkg: 92.9,\n  //   abilities: {0: 'Sheer Force'},\n  //   otherFormes: ['Darmanitan-Zen'],\n  // },\n  // 'Darmanitan-Zen': {\n  //   types: ['Fire', 'Psychic'],\n  //   bs: {hp: 105, at: 30, df: 105, sa: 140, sd: 105, sp: 55},\n  //   weightkg: 92.9,\n  //   baseSpecies: 'Darmanitan',\n  //   abilities: {0: 'Zen Mode'},\n  // },\n  // Darumaka: {\n  //   types: ['Fire'],\n  //   bs: {hp: 70, at: 90, df: 45, sa: 15, sd: 45, sp: 50},\n  //   weightkg: 37.5,\n  //   nfe: true,\n  //   abilities: {0: 'Hustle'},\n  // },\n  Deerling: {\n    types: ['Normal', 'Grass'],\n    bs: {hp: 60, at: 60, df: 50, sa: 40, sd: 50, sp: 75},\n    weightkg: 19.5,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Deino: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 52, at: 65, df: 50, sa: 45, sd: 50, sp: 38},\n    weightkg: 17.3,\n    abilities: {0: 'Hustle'},\n    nfe: true,\n  },\n  Dewott: {\n    types: ['Water'],\n    bs: {hp: 75, at: 75, df: 60, sa: 83, sd: 60, sp: 60},\n    weightkg: 24.5,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Drilbur: {\n  //   types: ['Ground'],\n  //   bs: {hp: 60, at: 85, df: 40, sa: 30, sd: 45, sp: 68},\n  //   weightkg: 8.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sand Rush'},\n  // },\n  // Druddigon: {\n  //   types: ['Dragon'],\n  //   bs: {hp: 77, at: 120, df: 90, sa: 60, sd: 90, sp: 48},\n  //   weightkg: 139,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  Ducklett: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 62, at: 44, df: 50, sa: 44, sd: 50, sp: 55},\n    weightkg: 5.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Duosion: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 65, at: 40, df: 50, sa: 125, sd: 60, sp: 30},\n  //   weightkg: 8,\n  //   nfe: true,\n  //   abilities: {0: 'Overcoat'},\n  // },\n  // Durant: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 58, at: 109, df: 112, sa: 48, sd: 48, sp: 109},\n  //   weightkg: 33,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Dwebble: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 50, at: 65, df: 85, sa: 35, sd: 35, sp: 55},\n  //   weightkg: 14.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Eelektrik: {\n    types: ['Electric'],\n    bs: {hp: 65, at: 85, df: 70, sa: 75, sd: 70, sp: 40},\n    weightkg: 22,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  Eelektross: {\n    types: ['Electric'],\n    bs: {hp: 85, at: 115, df: 80, sa: 105, sd: 80, sp: 50},\n    weightkg: 80.5,\n    abilities: {0: 'Levitate'},\n  },\n  // Elgyem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 55, df: 55, sa: 85, sd: 55, sp: 30},\n  //   weightkg: 9,\n  //   nfe: true,\n  //   abilities: {0: 'Telepathy'},\n  // },\n  // Emboar: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 110, at: 123, df: 65, sa: 100, sd: 65, sp: 65},\n  //   weightkg: 150,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Emolga: {\n  //   types: ['Electric', 'Flying'],\n  //   bs: {hp: 55, at: 75, df: 60, sa: 75, sd: 60, sp: 103},\n  //   weightkg: 5,\n  //   abilities: {0: 'Static'},\n  // },\n  // Escavalier: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 70, at: 135, df: 105, sa: 60, sd: 105, sp: 20},\n  //   weightkg: 33,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Excadrill: {\n  //   types: ['Ground', 'Steel'],\n  //   bs: {hp: 110, at: 135, df: 60, sa: 50, sd: 65, sp: 88},\n  //   weightkg: 40.4,\n  //   abilities: {0: 'Sand Rush'},\n  // },\n  // Ferroseed: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 44, at: 50, df: 91, sa: 24, sd: 86, sp: 10},\n  //   weightkg: 18.8,\n  //   nfe: true,\n  //   abilities: {0: 'Iron Barbs'},\n  // },\n  // Ferrothorn: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 74, at: 94, df: 131, sa: 54, sd: 116, sp: 20},\n  //   weightkg: 110,\n  //   abilities: {0: 'Iron Barbs'},\n  // },\n  Foongus: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 69, at: 55, df: 45, sa: 55, sd: 55, sp: 15},\n    weightkg: 1,\n    nfe: true,\n    abilities: {0: 'Effect Spore'},\n  },\n  // Fraxure: {\n  //   types: ['Dragon'],\n  //   bs: {hp: 66, at: 117, df: 70, sa: 40, sd: 50, sp: 67},\n  //   weightkg: 36,\n  //   nfe: true,\n  //   abilities: {0: 'Rivalry'},\n  // },\n  // Frillish: {\n  //   types: ['Water', 'Ghost'],\n  //   bs: {hp: 55, at: 40, df: 50, sa: 65, sd: 85, sp: 40},\n  //   weightkg: 33,\n  //   nfe: true,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  // Galvantula: {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 70, at: 77, df: 60, sa: 97, sd: 60, sp: 108},\n  //   weightkg: 14.3,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Garbodor: {\n  //   types: ['Poison'],\n  //   bs: {hp: 80, at: 95, df: 82, sa: 60, sd: 82, sp: 75},\n  //   weightkg: 107.3,\n  //   abilities: {0: 'Stench'},\n  // },\n  // Genesect: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   otherFormes: ['Genesect-Burn', 'Genesect-Chill', 'Genesect-Douse', 'Genesect-Shock'],\n  // },\n  // 'Genesect-Burn': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Chill': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Douse': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Shock': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // Gigalith: {\n  //   types: ['Rock'],\n  //   bs: {hp: 85, at: 135, df: 130, sa: 60, sd: 70, sp: 25},\n  //   weightkg: 260,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Golett: {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 59, at: 74, df: 50, sa: 35, sd: 50, sp: 35},\n  //   weightkg: 92,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Golurk: {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 89, at: 124, df: 80, sa: 55, sd: 80, sp: 55},\n  //   weightkg: 330,\n  //   gender: 'N',\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  Gothita: {\n    types: ['Psychic'],\n    bs: {hp: 45, at: 30, df: 50, sa: 55, sd: 65, sp: 45},\n    weightkg: 5.8,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Gothitelle: {\n    types: ['Psychic'],\n    bs: {hp: 70, at: 55, df: 95, sa: 95, sd: 110, sp: 65},\n    weightkg: 44,\n    abilities: {0: 'Frisk'},\n  },\n  Gothorita: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 45, df: 70, sa: 75, sd: 85, sp: 55},\n    weightkg: 18,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Gurdurr: {\n    types: ['Fighting'],\n    bs: {hp: 85, at: 105, df: 85, sa: 40, sd: 50, sp: 40},\n    weightkg: 40,\n    nfe: true,\n    abilities: {0: 'Guts'},\n  },\n  Haxorus: {\n    types: ['Dragon'],\n    bs: {hp: 76, at: 147, df: 90, sa: 60, sd: 70, sp: 97},\n    weightkg: 105.5,\n    abilities: {0: 'Rivalry'},\n  },\n  // Heatmor: {\n  //   types: ['Fire'],\n  //   bs: {hp: 85, at: 97, df: 66, sa: 105, sd: 66, sp: 65},\n  //   weightkg: 58,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Herdier: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 80, df: 65, sa: 35, sd: 65, sp: 60},\n  //   weightkg: 14.7,\n  //   nfe: true,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Hydreigon: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 92, at: 105, df: 90, sa: 125, sd: 90, sp: 98},\n    weightkg: 160,\n    abilities: {0: 'Levitate'},\n  },\n  // Jellicent: {\n  //   types: ['Water', 'Ghost'],\n  //   bs: {hp: 100, at: 60, df: 70, sa: 85, sd: 105, sp: 60},\n  //   weightkg: 135,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  // Joltik: {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 50, at: 47, df: 50, sa: 57, sd: 50, sp: 65},\n  //   weightkg: 0.6,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Karrablast: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 75, df: 45, sa: 40, sd: 45, sp: 60},\n  //   weightkg: 5.9,\n  //   nfe: true,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Keldeo: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 91, at: 72, df: 90, sa: 129, sd: 90, sp: 108},\n  //   weightkg: 48.5,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  //   otherFormes: ['Keldeo-Resolute'],\n  // },\n  // 'Keldeo-Resolute': {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 91, at: 72, df: 90, sa: 129, sd: 90, sp: 108},\n  //   weightkg: 48.5,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  //   baseSpecies: 'Keldeo',\n  // },\n  // Klang: {\n  //   types: ['Steel'],\n  //   bs: {hp: 60, at: 80, df: 95, sa: 70, sd: 85, sp: 50},\n  //   weightkg: 51,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  // Klink: {\n  //   types: ['Steel'],\n  //   bs: {hp: 40, at: 55, df: 70, sa: 45, sd: 60, sp: 30},\n  //   weightkg: 21,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  // Klinklang: {\n  //   types: ['Steel'],\n  //   bs: {hp: 60, at: 100, df: 115, sa: 70, sd: 85, sp: 90},\n  //   weightkg: 81,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  Krokorok: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 60, at: 82, df: 45, sa: 45, sd: 45, sp: 74},\n    weightkg: 33.4,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  Krookodile: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 95, at: 117, df: 70, sa: 65, sd: 70, sp: 92},\n    weightkg: 96.3,\n    abilities: {0: 'Intimidate'},\n  },\n  // Kyurem: {\n  //   types: ['Dragon', 'Ice'],\n  //   bs: {hp: 125, at: 130, df: 90, sa: 130, sd: 90, sp: 95},\n  //   weightkg: 325,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   otherFormes: ['Kyurem-Black', 'Kyurem-White'],\n  // },\n  // 'Kyurem-Black': {\n  //   types: ['Dragon', 'Ice'],\n  //   bs: {hp: 125, at: 170, df: 100, sa: 120, sd: 90, sp: 95},\n  //   weightkg: 325,\n  //   abilities: {0: 'Teravolt'},\n  //   gender: 'N',\n  //   baseSpecies: 'Kyurem',\n  // },\n  // 'Kyurem-White': {\n  //   types: ['Dragon', 'Ice'],\n  //   bs: {hp: 125, at: 120, df: 90, sa: 170, sd: 100, sp: 95},\n  //   weightkg: 325,\n  //   abilities: {0: 'Turboblaze'},\n  //   gender: 'N',\n  //   baseSpecies: 'Kyurem',\n  // },\n  Lampent: {\n    types: ['Ghost', 'Fire'],\n    bs: {hp: 60, at: 40, df: 60, sa: 95, sd: 60, sp: 55},\n    weightkg: 13,\n    nfe: true,\n    abilities: {0: 'Flash Fire'},\n  },\n  Landorus: {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 89, at: 125, df: 90, sa: 115, sd: 80, sp: 101},\n    weightkg: 68,\n    abilities: {0: 'Sand Force'},\n    otherFormes: ['Landorus-Therian'],\n  },\n  'Landorus-Therian': {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 89, at: 145, df: 90, sa: 105, sd: 80, sp: 91},\n    weightkg: 68,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Landorus',\n  },\n  Larvesta: {\n    types: ['Bug', 'Fire'],\n    bs: {hp: 55, at: 85, df: 55, sa: 50, sd: 55, sp: 60},\n    weightkg: 28.8,\n    nfe: true,\n    abilities: {0: 'Flame Body'},\n  },\n  Leavanny: {\n    types: ['Bug', 'Grass'],\n    bs: {hp: 75, at: 103, df: 80, sa: 70, sd: 70, sp: 92},\n    weightkg: 20.5,\n    abilities: {0: 'Swarm'},\n  },\n  // Liepard: {\n  //   types: ['Dark'],\n  //   bs: {hp: 64, at: 88, df: 50, sa: 88, sd: 50, sp: 106},\n  //   weightkg: 37.5,\n  //   abilities: {0: 'Limber'},\n  // },\n  Lilligant: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 60, df: 75, sa: 110, sd: 75, sp: 90},\n    weightkg: 16.3,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Lillipup: {\n  //   types: ['Normal'],\n  //   bs: {hp: 45, at: 60, df: 45, sa: 25, sd: 45, sp: 55},\n  //   weightkg: 4.1,\n  //   nfe: true,\n  //   abilities: {0: 'Vital Spirit'},\n  // },\n  Litwick: {\n    types: ['Ghost', 'Fire'],\n    bs: {hp: 50, at: 30, df: 55, sa: 65, sd: 55, sp: 20},\n    weightkg: 3.1,\n    nfe: true,\n    abilities: {0: 'Flash Fire'},\n  },\n  // Malaconda: {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 115, at: 100, df: 60, sa: 40, sd: 130, sp: 55},\n  //   weightkg: 108.8,\n  //   abilities: {0: 'Harvest'},\n  // },\n  Mandibuzz: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 110, at: 65, df: 105, sa: 55, sd: 95, sp: 80},\n    weightkg: 39.5,\n    abilities: {0: 'Big Pecks'},\n  },\n  // Maractus: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 86, df: 67, sa: 106, sd: 67, sp: 60},\n  //   weightkg: 28,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  Meloetta: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 100, at: 77, df: 77, sa: 128, sd: 128, sp: 90},\n    weightkg: 6.5,\n    abilities: {0: 'Serene Grace'},\n    otherFormes: ['Meloetta-Pirouette'],\n    gender: 'N',\n  },\n  'Meloetta-Pirouette': {\n    types: ['Normal', 'Fighting'],\n    bs: {hp: 100, at: 128, df: 90, sa: 77, sd: 77, sp: 128},\n    weightkg: 6.5,\n    abilities: {0: 'Serene Grace'},\n    baseSpecies: 'Meloetta',\n    gender: 'N',\n  },\n  Mienfoo: {\n    types: ['Fighting'],\n    bs: {hp: 45, at: 85, df: 50, sa: 55, sd: 50, sp: 65},\n    weightkg: 20,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  Mienshao: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 125, df: 60, sa: 95, sd: 60, sp: 105},\n    weightkg: 35.5,\n    abilities: {0: 'Inner Focus'},\n  },\n  // Minccino: {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 50, df: 40, sa: 40, sd: 40, sp: 75},\n  //   weightkg: 5.8,\n  //   nfe: true,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  // Mollux: {\n  //   types: ['Fire', 'Poison'],\n  //   bs: {hp: 95, at: 45, df: 83, sa: 131, sd: 105, sp: 76},\n  //   weightkg: 41,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Munna: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 76, at: 25, df: 45, sa: 67, sd: 55, sp: 24},\n  //   weightkg: 23.3,\n  //   nfe: true,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  // Musharna: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 116, at: 55, df: 85, sa: 107, sd: 95, sp: 29},\n  //   weightkg: 60.5,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  // Necturine: {\n  //   types: ['Grass', 'Ghost'],\n  //   bs: {hp: 49, at: 55, df: 60, sa: 50, sd: 75, sp: 51},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  //   abilities: {0: 'Anticipation'},\n  // },\n  // Necturna: {\n  //   types: ['Grass', 'Ghost'],\n  //   bs: {hp: 64, at: 120, df: 100, sa: 85, sd: 120, sp: 81},\n  //   weightkg: 49.6,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  Oshawott: {\n    types: ['Water'],\n    bs: {hp: 55, at: 55, df: 45, sa: 63, sd: 45, sp: 45},\n    weightkg: 5.9,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Palpitoad: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 75, at: 65, df: 55, sa: 65, sd: 55, sp: 69},\n  //   weightkg: 17,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Panpour: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 13.5,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Pansage: {\n  //   types: ['Grass'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 10.5,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Pansear: {\n  //   types: ['Fire'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 11,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Patrat: {\n  //   types: ['Normal'],\n  //   bs: {hp: 45, at: 55, df: 39, sa: 35, sd: 39, sp: 42},\n  //   weightkg: 11.6,\n  //   nfe: true,\n  //   abilities: {0: 'Run Away'},\n  // },\n  Pawniard: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 45, at: 85, df: 70, sa: 40, sd: 40, sp: 60},\n    weightkg: 10.2,\n    nfe: true,\n    abilities: {0: 'Defiant'},\n  },\n  Petilil: {\n    types: ['Grass'],\n    bs: {hp: 45, at: 35, df: 50, sa: 70, sd: 50, sp: 30},\n    weightkg: 6.6,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Pidove: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 50, at: 55, df: 50, sa: 36, sd: 30, sp: 43},\n  //   weightkg: 2.1,\n  //   nfe: true,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Pignite: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 90, at: 93, df: 55, sa: 70, sd: 55, sp: 55},\n  //   weightkg: 55.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Purrloin: {\n  //   types: ['Dark'],\n  //   bs: {hp: 41, at: 50, df: 37, sa: 50, sd: 37, sp: 66},\n  //   weightkg: 10.1,\n  //   nfe: true,\n  //   abilities: {0: 'Limber'},\n  // },\n  // Reshiram: {\n  //   types: ['Dragon', 'Fire'],\n  //   bs: {hp: 100, at: 120, df: 100, sa: 150, sd: 120, sp: 90},\n  //   weightkg: 330,\n  //   abilities: {0: 'Turboblaze'},\n  //   gender: 'N',\n  // },\n  // Reuniclus: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 110, at: 65, df: 75, sa: 125, sd: 85, sp: 30},\n  //   weightkg: 20.1,\n  //   abilities: {0: 'Overcoat'},\n  // },\n  // Roggenrola: {\n  //   types: ['Rock'],\n  //   bs: {hp: 55, at: 75, df: 85, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 18,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Rufflet: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 70, at: 83, df: 50, sa: 37, sd: 50, sp: 60},\n    weightkg: 10.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Samurott: {\n    types: ['Water'],\n    bs: {hp: 95, at: 100, df: 85, sa: 108, sd: 70, sp: 70},\n    weightkg: 94.6,\n    abilities: {0: 'Torrent'},\n  },\n  Sandile: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 50, at: 72, df: 35, sa: 35, sd: 35, sp: 65},\n    weightkg: 15.2,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  // Sawk: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 75, at: 125, df: 75, sa: 30, sd: 75, sp: 85},\n  //   weightkg: 51,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Sawsbuck: {\n    types: ['Normal', 'Grass'],\n    bs: {hp: 80, at: 100, df: 70, sa: 60, sd: 70, sp: 95},\n    weightkg: 92.5,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Scolipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 60, at: 90, df: 89, sa: 55, sd: 69, sp: 112},\n  //   weightkg: 200.5,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Scrafty: {\n  //   types: ['Dark', 'Fighting'],\n  //   bs: {hp: 65, at: 90, df: 115, sa: 45, sd: 115, sp: 58},\n  //   weightkg: 30,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Scraggy: {\n  //   types: ['Dark', 'Fighting'],\n  //   bs: {hp: 50, at: 75, df: 70, sa: 35, sd: 70, sp: 48},\n  //   weightkg: 11.8,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Scratchet: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 55, at: 85, df: 80, sa: 20, sd: 70, sp: 40},\n  //   weightkg: 20,\n  //   nfe: true,\n  //   abilities: {0: 'Scrappy'},\n  // },\n  // Seismitoad: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 105, at: 85, df: 75, sa: 85, sd: 75, sp: 74},\n  //   weightkg: 62,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Serperior: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 75, df: 95, sa: 75, sd: 95, sp: 113},\n  //   weightkg: 63,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Servine: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 60, df: 75, sa: 60, sd: 75, sp: 83},\n  //   weightkg: 16,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Sewaddle: {\n    types: ['Bug', 'Grass'],\n    bs: {hp: 45, at: 53, df: 70, sa: 40, sd: 60, sp: 42},\n    weightkg: 2.5,\n    nfe: true,\n    abilities: {0: 'Swarm'},\n  },\n  // Shelmet: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 40, df: 85, sa: 40, sd: 65, sp: 25},\n  //   weightkg: 7.7,\n  //   nfe: true,\n  //   abilities: {0: 'Hydration'},\n  // },\n  // Sigilyph: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 72, at: 58, df: 80, sa: 103, sd: 80, sp: 97},\n  //   weightkg: 14,\n  //   abilities: {0: 'Wonder Skin'},\n  // },\n  // Simipour: {\n  //   types: ['Water'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 29,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Simisage: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 30.5,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Simisear: {\n  //   types: ['Fire'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 28,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Snivy: {\n  //   types: ['Grass'],\n  //   bs: {hp: 45, at: 45, df: 55, sa: 45, sd: 55, sp: 63},\n  //   weightkg: 8.1,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Solosis: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 45, at: 30, df: 40, sa: 105, sd: 50, sp: 20},\n  //   weightkg: 1,\n  //   nfe: true,\n  //   abilities: {0: 'Overcoat'},\n  // },\n  // Stoutland: {\n  //   types: ['Normal'],\n  //   bs: {hp: 85, at: 100, df: 90, sa: 45, sd: 90, sp: 80},\n  //   weightkg: 61,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  // Stunfisk: {\n  //   types: ['Ground', 'Electric'],\n  //   bs: {hp: 109, at: 66, df: 84, sa: 81, sd: 99, sp: 32},\n  //   weightkg: 11,\n  //   abilities: {0: 'Static'},\n  // },\n  Swadloon: {\n    types: ['Bug', 'Grass'],\n    bs: {hp: 55, at: 63, df: 90, sa: 50, sd: 80, sp: 42},\n    weightkg: 7.3,\n    nfe: true,\n    abilities: {0: 'Leaf Guard'},\n  },\n  Swanna: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 75, at: 87, df: 63, sa: 87, sd: 63, sp: 98},\n    weightkg: 24.2,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Swoobat: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 67, at: 57, df: 55, sa: 77, sd: 55, sp: 114},\n  //   weightkg: 10.5,\n  //   abilities: {0: 'Unaware'},\n  // },\n  // Tepig: {\n  //   types: ['Fire'],\n  //   bs: {hp: 65, at: 63, df: 45, sa: 45, sd: 45, sp: 45},\n  //   weightkg: 9.9,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Terrakion: {\n  //   types: ['Rock', 'Fighting'],\n  //   bs: {hp: 91, at: 129, df: 90, sa: 72, sd: 90, sp: 108},\n  //   weightkg: 260,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  // },\n  // Throh: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 120, at: 100, df: 85, sa: 30, sd: 85, sp: 45},\n  //   weightkg: 55.5,\n  //   abilities: {0: 'Guts'},\n  // },\n  Thundurus: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 79, at: 115, df: 70, sa: 125, sd: 80, sp: 111},\n    weightkg: 61,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Thundurus-Therian'],\n  },\n  'Thundurus-Therian': {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 79, at: 105, df: 70, sa: 145, sd: 80, sp: 101},\n    weightkg: 61,\n    abilities: {0: 'Volt Absorb'},\n    baseSpecies: 'Thundurus',\n  },\n  Timburr: {\n    types: ['Fighting'],\n    bs: {hp: 75, at: 80, df: 55, sa: 25, sd: 35, sp: 35},\n    weightkg: 12.5,\n    nfe: true,\n    abilities: {0: 'Guts'},\n  },\n  // Tirtouga: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 54, at: 78, df: 103, sa: 53, sd: 45, sp: 22},\n  //   weightkg: 16.5,\n  //   nfe: true,\n  //   abilities: {0: 'Solid Rock'},\n  // },\n  // Tomohawk: {\n  //   types: ['Flying', 'Fighting'],\n  //   bs: {hp: 105, at: 60, df: 90, sa: 115, sd: 80, sp: 85},\n  //   weightkg: 37.2,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Tornadus: {\n    types: ['Flying'],\n    bs: {hp: 79, at: 115, df: 70, sa: 125, sd: 80, sp: 111},\n    weightkg: 63,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Tornadus-Therian'],\n  },\n  'Tornadus-Therian': {\n    types: ['Flying'],\n    bs: {hp: 79, at: 100, df: 80, sa: 110, sd: 90, sp: 121},\n    weightkg: 63,\n    abilities: {0: 'Regenerator'},\n    baseSpecies: 'Tornadus',\n  },\n  // Tranquill: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 62, at: 77, df: 62, sa: 50, sd: 42, sp: 65},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Trubbish: {\n  //   types: ['Poison'],\n  //   bs: {hp: 50, at: 50, df: 62, sa: 40, sd: 62, sp: 65},\n  //   weightkg: 31,\n  //   nfe: true,\n  //   abilities: {0: 'Stench'},\n  // },\n  // Tympole: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 50, df: 40, sa: 50, sd: 40, sp: 64},\n  //   weightkg: 4.5,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Tynamo: {\n    types: ['Electric'],\n    bs: {hp: 35, at: 55, df: 40, sa: 45, sd: 40, sp: 60},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  // Unfezant: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 80, at: 105, df: 80, sa: 65, sd: 55, sp: 93},\n  //   weightkg: 29,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Vanillish: {\n  //   types: ['Ice'],\n  //   bs: {hp: 51, at: 65, df: 65, sa: 80, sd: 75, sp: 59},\n  //   weightkg: 41,\n  //   nfe: true,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Vanillite: {\n  //   types: ['Ice'],\n  //   bs: {hp: 36, at: 50, df: 50, sa: 65, sd: 60, sp: 44},\n  //   weightkg: 5.7,\n  //   nfe: true,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Vanilluxe: {\n  //   types: ['Ice'],\n  //   bs: {hp: 71, at: 95, df: 85, sa: 110, sd: 95, sp: 79},\n  //   weightkg: 57.5,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Venipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 30, at: 45, df: 59, sa: 30, sd: 39, sp: 57},\n  //   weightkg: 5.3,\n  //   nfe: true,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Victini: {\n  //   types: ['Psychic', 'Fire'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 4,\n  //   abilities: {0: 'Victory Star'},\n  //   gender: 'N',\n  // },\n  // Virizion: {\n  //   types: ['Grass', 'Fighting'],\n  //   bs: {hp: 91, at: 90, df: 72, sa: 90, sd: 129, sp: 108},\n  //   weightkg: 200,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  // },\n  Volcarona: {\n    types: ['Bug', 'Fire'],\n    bs: {hp: 85, at: 60, df: 65, sa: 135, sd: 105, sp: 100},\n    weightkg: 46,\n    abilities: {0: 'Flame Body'},\n  },\n  Vullaby: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 70, at: 55, df: 75, sa: 45, sd: 65, sp: 60},\n    weightkg: 9,\n    nfe: true,\n    abilities: {0: 'Big Pecks'},\n  },\n  // Watchog: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 85, df: 69, sa: 60, sd: 69, sp: 77},\n  //   weightkg: 27,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  // Whimsicott: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 67, df: 85, sa: 77, sd: 75, sp: 116},\n  //   weightkg: 6.6,\n  //   abilities: {0: 'Prankster'},\n  // },\n  // Whirlipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 40, at: 55, df: 99, sa: 40, sd: 79, sp: 47},\n  //   weightkg: 58.5,\n  //   nfe: true,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Woobat: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 55, at: 45, df: 43, sa: 55, sd: 43, sp: 72},\n  //   weightkg: 2.1,\n  //   nfe: true,\n  //   abilities: {0: 'Unaware'},\n  // },\n  // Yamask: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 38, at: 30, df: 85, sa: 55, sd: 65, sp: 30},\n  //   weightkg: 1.5,\n  //   abilities: {0: 'Mummy'},\n  //   nfe: true,\n  // },\n  // Zebstrika: {\n  //   types: ['Electric'],\n  //   bs: {hp: 75, at: 100, df: 63, sa: 80, sd: 63, sp: 116},\n  //   weightkg: 79.5,\n  //   abilities: {0: 'Lightning Rod'},\n  // },\n  // Zekrom: {\n  //   types: ['Dragon', 'Electric'],\n  //   bs: {hp: 100, at: 150, df: 120, sa: 120, sd: 100, sp: 90},\n  //   weightkg: 345,\n  //   abilities: {0: 'Teravolt'},\n  //   gender: 'N',\n  // },\n  Zoroark: {\n    types: ['Dark'],\n    bs: {hp: 60, at: 105, df: 60, sa: 120, sd: 60, sp: 105},\n    weightkg: 81.1,\n    abilities: {0: 'Illusion'},\n  },\n  Zorua: {\n    types: ['Dark'],\n    bs: {hp: 40, at: 65, df: 40, sa: 80, sd: 40, sp: 65},\n    weightkg: 12.5,\n    abilities: {0: 'Illusion'},\n    nfe: true,\n  },\n  Zweilous: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 72, at: 85, df: 70, sa: 65, sd: 70, sp: 58},\n    weightkg: 50,\n    abilities: {0: 'Hustle'},\n    nfe: true,\n  },\n};\n\nconst BW: {[name: string]: SpeciesData} = extend(true, {}, DPP, BW_PATCH);\n\n// @ts-ignore readonly\ndelete BW['Pichu'].otherFormes;\n// delete BW['Pichu-Spiky-eared'];\n\nconst XY_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // Abomasnow: {otherFormes: ['Abomasnow-Mega']},\n  // Absol: {otherFormes: ['Absol-Mega']},\n  // Aerodactyl: {otherFormes: ['Aerodactyl-Mega']},\n  // Aggron: {otherFormes: ['Aggron-Mega']},\n  // Alakazam: {bs: {sd: 95}, otherFormes: ['Alakazam-Mega']},\n  // Altaria: {otherFormes: ['Altaria-Mega']},\n  // Ampharos: {bs: {df: 85}, otherFormes: ['Ampharos-Mega']},\n  // Audino: {otherFormes: ['Audino-Mega']},\n  Azumarill: {types: ['Water', 'Fairy'], bs: {sa: 60}},\n  Azurill: {types: ['Normal', 'Fairy']},\n  // Banette: {otherFormes: ['Banette-Mega']},\n  // Beautifly: {bs: {sa: 100}},\n  // Beedrill: {bs: {at: 90}, otherFormes: ['Beedrill-Mega']},\n  // Bellossom: {bs: {df: 95}},\n  // Blastoise: {otherFormes: ['Blastoise-Mega']},\n  // Blaziken: {otherFormes: ['Blaziken-Mega']},\n  // Butterfree: {bs: {sa: 90}},\n  // Camerupt: {otherFormes: ['Camerupt-Mega']},\n  // Charizard: {otherFormes: ['Charizard-Mega-X', 'Charizard-Mega-Y']},\n  Clefable: {types: ['Fairy'], bs: {sa: 95}},\n  Clefairy: {types: ['Fairy']},\n  Cleffa: {types: ['Fairy']},\n  // Cottonee: {types: ['Grass', 'Fairy']},\n  // Exploud: {bs: {sd: 73}},\n  // Gallade: {otherFormes: ['Gallade-Mega']},\n  // Garchomp: {otherFormes: ['Garchomp-Mega']},\n  // Gardevoir: {types: ['Psychic', 'Fairy'], otherFormes: ['Gardevoir-Mega']},\n  // Gengar: {otherFormes: ['Gengar-Mega']},\n  // Gigalith: {bs: {sd: 80}},\n  // Glalie: {otherFormes: ['Glalie-Mega']},\n  Golem: {bs: {at: 120}},\n  // Granbull: {types: ['Fairy']},\n  // Groudon: {otherFormes: ['Groudon-Primal']},\n  // Gyarados: {otherFormes: ['Gyarados-Mega']},\n  // Heracross: {otherFormes: ['Heracross-Mega']},\n  // Houndoom: {otherFormes: ['Houndoom-Mega']},\n  Igglybuff: {types: ['Normal', 'Fairy']},\n  Jigglypuff: {types: ['Normal', 'Fairy']},\n  Jumpluff: {bs: {sd: 95}},\n  // Kangaskhan: {otherFormes: ['Kangaskhan-Mega']},\n  Kirlia: {types: ['Psychic', 'Fairy']},\n  Krookodile: {bs: {df: 80}},\n  // Kyogre: {otherFormes: ['Kyogre-Primal']},\n  // Latias: {otherFormes: ['Latias-Mega']},\n  // Latios: {otherFormes: ['Latios-Mega']},\n  Leavanny: {bs: {sd: 80}},\n  // Lopunny: {otherFormes: ['Lopunny-Mega']},\n  // Lucario: {otherFormes: ['Lucario-Mega']},\n  // Manectric: {otherFormes: ['Manectric-Mega']},\n  Marill: {types: ['Water', 'Fairy']},\n  // Mawile: {types: ['Steel', 'Fairy'], otherFormes: ['Mawile-Mega']},\n  Medicham: {otherFormes: ['Medicham-Mega']},\n  // Metagross: {otherFormes: ['Metagross-Mega']},\n  // Mewtwo: {otherFormes: ['Mewtwo-Mega-X', 'Mewtwo-Mega-Y']},\n  // 'Mime Jr.': {types: ['Psychic', 'Fairy']},\n  // 'Mr. Mime': {types: ['Psychic', 'Fairy']},\n  // Nidoking: {bs: {at: 102}},\n  // Nidoqueen: {bs: {at: 92}},\n  // Pidgeot: {bs: {sp: 101}, otherFormes: ['Pidgeot-Mega']},\n  Pikachu: {\n    bs: {df: 40, sd: 50},\n    // otherFormes: [\n    //   'Pikachu-Belle',\n    //   'Pikachu-Cosplay',\n    //   'Pikachu-Libre',\n    //   'Pikachu-PhD',\n    //   'Pikachu-Pop-Star',\n    //   'Pikachu-Rock-Star',\n    // ],\n  },\n  // Pinsir: {otherFormes: ['Pinsir-Mega']},\n  Poliwrath: {bs: {at: 95}},\n  Raichu: {bs: {sp: 110}},\n  Ralts: {types: ['Psychic', 'Fairy']},\n  // Rayquaza: {otherFormes: ['Rayquaza-Mega']},\n  // Roserade: {bs: {df: 65}},\n  // Sableye: {otherFormes: ['Sableye-Mega']},\n  // Salamence: {otherFormes: ['Salamence-Mega']},\n  // Sceptile: {otherFormes: ['Sceptile-Mega']},\n  // Scizor: {otherFormes: ['Scizor-Mega']},\n  // Scolipede: {bs: {at: 100}},\n  // Seismitoad: {bs: {at: 95}},\n  // Sharpedo: {otherFormes: ['Sharpedo-Mega']},\n  // Slowbro: {otherFormes: ['Slowbro-Mega']},\n  // Snubbull: {types: ['Fairy']},\n  Staraptor: {bs: {sd: 60}},\n  // Steelix: {otherFormes: ['Steelix-Mega']},\n  // Stoutland: {bs: {at: 110}},\n  // Swampert: {otherFormes: ['Swampert-Mega']},\n  // Togekiss: {types: ['Fairy', 'Flying']},\n  // Togepi: {types: ['Fairy']},\n  // Togetic: {types: ['Fairy', 'Flying']},\n  // Tyranitar: {otherFormes: ['Tyranitar-Mega']},\n  // Unfezant: {bs: {at: 115}},\n  // Venusaur: {otherFormes: ['Venusaur-Mega']},\n  Victreebel: {bs: {sd: 70}},\n  // Vileplume: {bs: {sa: 110}},\n  // Whimsicott: {types: ['Grass', 'Fairy']},\n  Wigglytuff: {types: ['Normal', 'Fairy'], bs: {sa: 85}},\n  // 'Aegislash-Blade': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 150, df: 50, sa: 150, sd: 50, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   otherFormes: ['Aegislash-Shield', 'Aegislash-Both'],\n  // },\n  // 'Aegislash-Shield': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 50, df: 150, sa: 50, sd: 150, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   baseSpecies: 'Aegislash-Blade',\n  // },\n  // 'Aegislash-Both': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 150, df: 150, sa: 150, sd: 150, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   baseSpecies: 'Aegislash-Blade',\n  // },\n  // Amaura: {\n  //   types: ['Rock', 'Ice'],\n  //   bs: {hp: 77, at: 59, df: 50, sa: 67, sd: 63, sp: 46},\n  //   weightkg: 25.2,\n  //   nfe: true,\n  //   abilities: {0: 'Refrigerate'},\n  // },\n  // 'Arceus-Fairy': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   baseSpecies: 'Arceus',\n  //   gender: 'N',\n  // },\n  // Aromatisse: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 101, at: 72, df: 72, sa: 99, sd: 89, sp: 29},\n  //   weightkg: 15.5,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Aurorus: {\n  //   types: ['Rock', 'Ice'],\n  //   bs: {hp: 123, at: 77, df: 72, sa: 99, sd: 92, sp: 58},\n  //   weightkg: 225,\n  //   abilities: {0: 'Refrigerate'},\n  // },\n  Avalugg: {\n    types: ['Ice'],\n    bs: {hp: 95, at: 117, df: 184, sa: 44, sd: 46, sp: 28},\n    weightkg: 505,\n    abilities: {0: 'Own Tempo'},\n  },\n  // Barbaracle: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 72, at: 105, df: 115, sa: 54, sd: 86, sp: 68},\n  //   weightkg: 96,\n  //   abilities: {0: 'Tough Claws'},\n  // },\n  Bergmite: {\n    types: ['Ice'],\n    bs: {hp: 55, at: 69, df: 85, sa: 32, sd: 35, sp: 28},\n    weightkg: 99.5,\n    nfe: true,\n    abilities: {0: 'Own Tempo'},\n  },\n  // Binacle: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 42, at: 52, df: 67, sa: 39, sd: 56, sp: 50},\n  //   weightkg: 31,\n  //   nfe: true,\n  //   abilities: {0: 'Tough Claws'},\n  // },\n  Braixen: {\n    types: ['Fire'],\n    bs: {hp: 59, at: 59, df: 58, sa: 90, sd: 70, sp: 73},\n    weightkg: 14.5,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  // Bunnelby: {\n  //   types: ['Normal'],\n  //   bs: {hp: 38, at: 36, df: 38, sa: 32, sd: 36, sp: 57},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Caimanoe: {\n  //   types: ['Water', 'Steel'],\n  //   bs: {hp: 73, at: 85, df: 65, sa: 80, sd: 40, sp: 87},\n  //   weightkg: 72.5,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Carbink: {\n    types: ['Rock', 'Fairy'],\n    bs: {hp: 50, at: 50, df: 150, sa: 50, sd: 150, sp: 50},\n    weightkg: 5.7,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Chesnaught: {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 88, at: 107, df: 122, sa: 74, sd: 75, sp: 64},\n    weightkg: 90,\n    abilities: {0: 'Overgrow'},\n  },\n  Chespin: {\n    types: ['Grass'],\n    bs: {hp: 56, at: 61, df: 65, sa: 48, sd: 45, sp: 38},\n    weightkg: 9,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Clauncher: {\n    types: ['Water'],\n    bs: {hp: 50, at: 53, df: 62, sa: 58, sd: 63, sp: 44},\n    weightkg: 8.3,\n    abilities: {0: 'Mega Launcher'},\n    nfe: true,\n  },\n  Clawitzer: {\n    types: ['Water'],\n    bs: {hp: 71, at: 73, df: 88, sa: 120, sd: 89, sp: 59},\n    weightkg: 35.3,\n    abilities: {0: 'Mega Launcher'},\n  },\n  // Crucibelle: {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 106, at: 105, df: 65, sa: 75, sd: 85, sp: 104},\n  //   weightkg: 23.6,\n  //   abilities: {0: 'Regenerator'},\n  //   otherFormes: ['Crucibelle-Mega'],\n  // },\n  Diancie: {\n    types: ['Rock', 'Fairy'],\n    bs: {hp: 50, at: 100, df: 150, sa: 100, sd: 150, sp: 50},\n    weightkg: 8.8,\n    abilities: {0: 'Clear Body'},\n    otherFormes: ['Diancie-Mega'],\n    gender: 'N',\n  },\n  Dedenne: {\n    types: ['Electric', 'Fairy'],\n    bs: {hp: 67, at: 58, df: 57, sa: 81, sd: 67, sp: 101},\n    weightkg: 2.2,\n    abilities: {0: 'Cheek Pouch'},\n  },\n  Delphox: {\n    types: ['Fire', 'Psychic'],\n    bs: {hp: 75, at: 69, df: 72, sa: 114, sd: 100, sp: 104},\n    weightkg: 39,\n    abilities: {0: 'Blaze'},\n  },\n  // Diggersby: {\n  //   types: ['Normal', 'Ground'],\n  //   bs: {hp: 85, at: 56, df: 77, sa: 50, sd: 77, sp: 78},\n  //   weightkg: 42.4,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Doublade: {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 59, at: 110, df: 150, sa: 45, sd: 49, sp: 35},\n  //   weightkg: 4.5,\n  //   abilities: {0: 'No Guard'},\n  //   nfe: true,\n  // },\n  Dragalge: {\n    types: ['Poison', 'Dragon'],\n    bs: {hp: 65, at: 75, df: 90, sa: 97, sd: 123, sp: 44},\n    weightkg: 81.5,\n    abilities: {0: 'Poison Point'},\n  },\n  // Espurr: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 62, at: 48, df: 54, sa: 63, sd: 60, sp: 68},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  Fennekin: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 45, df: 40, sa: 62, sd: 60, sp: 60},\n    weightkg: 9.4,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Flabébé: {\n    types: ['Fairy'],\n    bs: {hp: 44, at: 38, df: 39, sa: 61, sd: 79, sp: 42},\n    weightkg: 0.1,\n    nfe: true,\n    abilities: {0: 'Flower Veil'},\n  },\n  Fletchinder: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 62, at: 73, df: 55, sa: 56, sd: 52, sp: 84},\n    weightkg: 16,\n    nfe: true,\n    abilities: {0: 'Flame Body'},\n  },\n  Fletchling: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 45, at: 50, df: 43, sa: 40, sd: 38, sp: 62},\n    weightkg: 1.7,\n    nfe: true,\n    abilities: {0: 'Big Pecks'},\n  },\n  // Floatoy: {\n  //   types: ['Water'],\n  //   bs: {hp: 48, at: 70, df: 40, sa: 70, sd: 30, sp: 77},\n  //   weightkg: 1.9,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Floette: {\n    types: ['Fairy'],\n    bs: {hp: 54, at: 45, df: 47, sa: 75, sd: 98, sp: 52},\n    weightkg: 0.9,\n    nfe: true,\n    // otherFormes: ['Floette-Eternal'],\n    abilities: {0: 'Flower Veil'},\n  },\n  // 'Floette-Eternal': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 74, at: 65, df: 67, sa: 125, sd: 128, sp: 92},\n  //   weightkg: 0.9,\n  //   abilities: {0: 'Flower Veil'},\n  //   baseSpecies: 'Floette',\n  // },\n  Florges: {\n    types: ['Fairy'],\n    bs: {hp: 78, at: 65, df: 68, sa: 112, sd: 154, sp: 75},\n    weightkg: 10,\n    abilities: {0: 'Flower Veil'},\n  },\n  Froakie: {\n    types: ['Water'],\n    bs: {hp: 41, at: 56, df: 40, sa: 62, sd: 44, sp: 71},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  Frogadier: {\n    types: ['Water'],\n    bs: {hp: 54, at: 63, df: 52, sa: 83, sd: 56, sp: 97},\n    weightkg: 10.9,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Furfrou: {\n  //   types: ['Normal'],\n  //   bs: {hp: 75, at: 80, df: 60, sa: 65, sd: 90, sp: 102},\n  //   weightkg: 28,\n  //   abilities: {0: 'Fur Coat'},\n  // },\n  Gogoat: {\n    types: ['Grass'],\n    bs: {hp: 123, at: 100, df: 62, sa: 97, sd: 81, sp: 68},\n    weightkg: 91,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Goodra: {\n    types: ['Dragon'],\n    bs: {hp: 90, at: 100, df: 70, sa: 110, sd: 150, sp: 80},\n    weightkg: 150.5,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Goomy: {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 50, df: 35, sa: 55, sd: 75, sp: 40},\n    weightkg: 2.8,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  // 'Gourgeist': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 65, at: 90, df: 122, sa: 58, sd: 75, sp: 84},\n  //   weightkg: 12.5,\n  //   abilities: {0: 'Pickup'},\n  //   otherFormes: ['Gourgeist-Large', 'Gourgeist-Small', 'Gourgeist-Super'],\n  // },\n  // 'Gourgeist-Large': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 75, at: 95, df: 122, sa: 58, sd: 75, sp: 69},\n  //   weightkg: 14,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  // 'Gourgeist-Small': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 55, at: 85, df: 122, sa: 58, sd: 75, sp: 99},\n  //   weightkg: 9.5,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  // 'Gourgeist-Super': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 85, at: 100, df: 122, sa: 58, sd: 75, sp: 54},\n  //   weightkg: 39,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  Greninja: {\n    types: ['Water', 'Dark'],\n    bs: {hp: 72, at: 95, df: 67, sa: 103, sd: 71, sp: 122},\n    weightkg: 40,\n    abilities: {0: 'Torrent'},\n  },\n  Hawlucha: {\n    types: ['Fighting', 'Flying'],\n    bs: {hp: 78, at: 92, df: 75, sa: 74, sd: 63, sp: 118},\n    weightkg: 21.5,\n    abilities: {0: 'Limber'},\n  },\n  // Heliolisk: {\n  //   types: ['Electric', 'Normal'],\n  //   bs: {hp: 62, at: 55, df: 52, sa: 109, sd: 94, sp: 109},\n  //   weightkg: 21,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Helioptile: {\n  //   types: ['Electric', 'Normal'],\n  //   bs: {hp: 44, at: 38, df: 33, sa: 61, sd: 43, sp: 70},\n  //   weightkg: 6,\n  //   nfe: true,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Honedge: {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 45, at: 80, df: 100, sa: 35, sd: 37, sp: 28},\n  //   weightkg: 2,\n  //   abilities: {0: 'No Guard'},\n  //   nfe: true,\n  // },\n  Hoopa: {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 80, at: 110, df: 60, sa: 150, sd: 130, sp: 70},\n    weightkg: 9,\n    gender: 'N',\n    abilities: {0: 'Magician'},\n    otherFormes: ['Hoopa-Unbound'],\n  },\n  'Hoopa-Unbound': {\n    types: ['Psychic', 'Dark'],\n    bs: {hp: 80, at: 160, df: 60, sa: 170, sd: 130, sp: 80},\n    weightkg: 490,\n    gender: 'N',\n    abilities: {0: 'Magician'},\n    baseSpecies: 'Hoopa',\n  },\n  // Inkay: {\n  //   types: ['Dark', 'Psychic'],\n  //   bs: {hp: 53, at: 54, df: 53, sa: 37, sd: 46, sp: 45},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Contrary'},\n  // },\n  // Kerfluffle: {\n  //   types: ['Fairy', 'Fighting'],\n  //   bs: {hp: 84, at: 78, df: 86, sa: 115, sd: 88, sp: 119},\n  //   weightkg: 24.2,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Klefki: {\n    types: ['Steel', 'Fairy'],\n    bs: {hp: 57, at: 80, df: 91, sa: 80, sd: 87, sp: 75},\n    weightkg: 3,\n    abilities: {0: 'Prankster'},\n  },\n  Litleo: {\n    types: ['Fire', 'Normal'],\n    bs: {hp: 62, at: 50, df: 58, sa: 73, sd: 54, sp: 72},\n    weightkg: 13.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  // Malamar: {\n  //   types: ['Dark', 'Psychic'],\n  //   bs: {hp: 86, at: 92, df: 88, sa: 68, sd: 75, sp: 73},\n  //   weightkg: 47,\n  //   abilities: {0: 'Contrary'},\n  // },\n  // 'Abomasnow-Mega': {\n  //   types: ['Grass', 'Ice'],\n  //   bs: {hp: 90, at: 132, df: 105, sa: 132, sd: 105, sp: 30},\n  //   weightkg: 185,\n  //   abilities: {0: 'Snow Warning'},\n  //   baseSpecies: 'Abomasnow',\n  // },\n  // 'Absol-Mega': {\n  //   types: ['Dark'],\n  //   bs: {hp: 65, at: 150, df: 60, sa: 115, sd: 60, sp: 115},\n  //   weightkg: 49,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Absol',\n  // },\n  // 'Aerodactyl-Mega': {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 80, at: 135, df: 85, sa: 70, sd: 95, sp: 150},\n  //   weightkg: 79,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Aerodactyl',\n  // },\n  // 'Aggron-Mega': {\n  //   types: ['Steel'],\n  //   bs: {hp: 70, at: 140, df: 230, sa: 60, sd: 80, sp: 50},\n  //   weightkg: 395,\n  //   abilities: {0: 'Filter'},\n  //   baseSpecies: 'Aggron',\n  // },\n  // 'Alakazam-Mega': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 50, df: 65, sa: 175, sd: 95, sp: 150},\n  //   weightkg: 48,\n  //   abilities: {0: 'Trace'},\n  //   baseSpecies: 'Alakazam',\n  // },\n  // 'Altaria-Mega': {\n  //   types: ['Dragon', 'Fairy'],\n  //   bs: {hp: 75, at: 110, df: 110, sa: 110, sd: 105, sp: 80},\n  //   weightkg: 20.6,\n  //   abilities: {0: 'Pixilate'},\n  //   baseSpecies: 'Altaria',\n  // },\n  // 'Ampharos-Mega': {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 90, at: 95, df: 105, sa: 165, sd: 110, sp: 45},\n  //   weightkg: 61.5,\n  //   abilities: {0: 'Mold Breaker'},\n  //   baseSpecies: 'Ampharos',\n  // },\n  // 'Audino-Mega': {\n  //   types: ['Normal', 'Fairy'],\n  //   bs: {hp: 103, at: 60, df: 126, sa: 80, sd: 126, sp: 50},\n  //   weightkg: 32,\n  //   abilities: {0: 'Healer'},\n  //   baseSpecies: 'Audino',\n  // },\n  // 'Banette-Mega': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 64, at: 165, df: 75, sa: 93, sd: 83, sp: 75},\n  //   weightkg: 13,\n  //   abilities: {0: 'Prankster'},\n  //   baseSpecies: 'Banette',\n  // },\n  // 'Beedrill-Mega': {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 65, at: 150, df: 40, sa: 15, sd: 80, sp: 145},\n  //   weightkg: 40.5,\n  //   abilities: {0: 'Adaptability'},\n  //   baseSpecies: 'Beedrill',\n  // },\n  // 'Blastoise-Mega': {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 103, df: 120, sa: 135, sd: 115, sp: 78},\n  //   weightkg: 101.1,\n  //   abilities: {0: 'Mega Launcher'},\n  //   baseSpecies: 'Blastoise',\n  // },\n  // 'Blaziken-Mega': {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 80, at: 160, df: 80, sa: 130, sd: 80, sp: 100},\n  //   weightkg: 52,\n  //   abilities: {0: 'Speed Boost'},\n  //   baseSpecies: 'Blaziken',\n  // },\n  // 'Camerupt-Mega': {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 70, at: 120, df: 100, sa: 145, sd: 105, sp: 20},\n  //   weightkg: 320.5,\n  //   abilities: {0: 'Sheer Force'},\n  //   baseSpecies: 'Camerupt',\n  // },\n  // 'Charizard-Mega-X': {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 78, at: 130, df: 111, sa: 130, sd: 85, sp: 100},\n  //   weightkg: 110.5,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Charizard',\n  // },\n  // 'Charizard-Mega-Y': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 78, at: 104, df: 78, sa: 159, sd: 115, sp: 100},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'Drought'},\n  //   baseSpecies: 'Charizard',\n  // },\n  // 'Crucibelle-Mega': {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 106, at: 135, df: 75, sa: 85, sd: 125, sp: 114},\n  //   weightkg: 22.5,\n  //   abilities: {0: 'Magic Guard'},\n  //   baseSpecies: 'Crucibelle',\n  // },\n  // 'Diancie-Mega': {\n  //   types: ['Rock', 'Fairy'],\n  //   bs: {hp: 50, at: 160, df: 110, sa: 160, sd: 110, sp: 110},\n  //   weightkg: 27.8,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Diancie',\n  //   gender: 'N',\n  // },\n  // 'Gallade-Mega': {\n  //   types: ['Psychic', 'Fighting'],\n  //   bs: {hp: 68, at: 165, df: 95, sa: 65, sd: 115, sp: 110},\n  //   weightkg: 56.4,\n  //   abilities: {0: 'Inner Focus'},\n  //   baseSpecies: 'Gallade',\n  // },\n  // 'Garchomp-Mega': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 108, at: 170, df: 115, sa: 120, sd: 95, sp: 92},\n  //   weightkg: 95,\n  //   abilities: {0: 'Sand Force'},\n  //   baseSpecies: 'Garchomp',\n  // },\n  // 'Gardevoir-Mega': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 68, at: 85, df: 65, sa: 165, sd: 135, sp: 100},\n  //   weightkg: 48.4,\n  //   abilities: {0: 'Pixilate'},\n  //   baseSpecies: 'Gardevoir',\n  // },\n  // 'Gengar-Mega': {\n  //   types: ['Ghost', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 80, sa: 170, sd: 95, sp: 130},\n  //   weightkg: 40.5,\n  //   abilities: {0: 'Shadow Tag'},\n  //   baseSpecies: 'Gengar',\n  // },\n  // 'Glalie-Mega': {\n  //   types: ['Ice'],\n  //   bs: {hp: 80, at: 120, df: 80, sa: 120, sd: 80, sp: 100},\n  //   weightkg: 350.2,\n  //   abilities: {0: 'Refrigerate'},\n  //   baseSpecies: 'Glalie',\n  // },\n  // 'Gyarados-Mega': {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 95, at: 155, df: 109, sa: 70, sd: 130, sp: 81},\n  //   weightkg: 305,\n  //   abilities: {0: 'Mold Breaker'},\n  //   baseSpecies: 'Gyarados',\n  // },\n  // 'Heracross-Mega': {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 80, at: 185, df: 115, sa: 40, sd: 105, sp: 75},\n  //   weightkg: 62.5,\n  //   abilities: {0: 'Skill Link'},\n  //   baseSpecies: 'Heracross',\n  // },\n  // 'Houndoom-Mega': {\n  //   types: ['Dark', 'Fire'],\n  //   bs: {hp: 75, at: 90, df: 90, sa: 140, sd: 90, sp: 115},\n  //   weightkg: 49.5,\n  //   abilities: {0: 'Solar Power'},\n  //   baseSpecies: 'Houndoom',\n  // },\n  // 'Kangaskhan-Mega': {\n  //   types: ['Normal'],\n  //   bs: {hp: 105, at: 125, df: 100, sa: 60, sd: 100, sp: 100},\n  //   weightkg: 100,\n  //   abilities: {0: 'Parental Bond'},\n  //   baseSpecies: 'Kangaskhan',\n  // },\n  // 'Latias-Mega': {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 100, df: 120, sa: 140, sd: 150, sp: 110},\n  //   weightkg: 52,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Latias',\n  // },\n  // 'Latios-Mega': {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 130, df: 100, sa: 160, sd: 120, sp: 110},\n  //   weightkg: 70,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Latios',\n  // },\n  // 'Lopunny-Mega': {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 65, at: 136, df: 94, sa: 54, sd: 96, sp: 135},\n  //   weightkg: 28.3,\n  //   abilities: {0: 'Scrappy'},\n  //   baseSpecies: 'Lopunny',\n  // },\n  // 'Lucario-Mega': {\n  //   types: ['Fighting', 'Steel'],\n  //   bs: {hp: 70, at: 145, df: 88, sa: 140, sd: 70, sp: 112},\n  //   weightkg: 57.5,\n  //   abilities: {0: 'Adaptability'},\n  //   baseSpecies: 'Lucario',\n  // },\n  // 'Manectric-Mega': {\n  //   types: ['Electric'],\n  //   bs: {hp: 70, at: 75, df: 80, sa: 135, sd: 80, sp: 135},\n  //   weightkg: 44,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Manectric',\n  // },\n  // 'Mawile-Mega': {\n  //   types: ['Steel', 'Fairy'],\n  //   bs: {hp: 50, at: 105, df: 125, sa: 55, sd: 95, sp: 50},\n  //   weightkg: 23.5,\n  //   abilities: {0: 'Huge Power'},\n  //   baseSpecies: 'Mawile',\n  // },\n  // 'Medicham-Mega': {\n  //   types: ['Fighting', 'Psychic'],\n  //   bs: {hp: 60, at: 100, df: 85, sa: 80, sd: 85, sp: 100},\n  //   weightkg: 31.5,\n  //   abilities: {0: 'Pure Power'},\n  //   baseSpecies: 'Medicham',\n  // },\n  // 'Metagross-Mega': {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 80, at: 145, df: 150, sa: 105, sd: 110, sp: 110},\n  //   weightkg: 942.9,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Metagross',\n  //   gender: 'N',\n  // },\n  // 'Mewtwo-Mega-X': {\n  //   types: ['Psychic', 'Fighting'],\n  //   bs: {hp: 106, at: 190, df: 100, sa: 154, sd: 100, sp: 130},\n  //   weightkg: 127,\n  //   abilities: {0: 'Steadfast'},\n  //   baseSpecies: 'Mewtwo',\n  //   gender: 'N',\n  // },\n  // 'Mewtwo-Mega-Y': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 106, at: 150, df: 70, sa: 194, sd: 120, sp: 140},\n  //   weightkg: 33,\n  //   abilities: {0: 'Insomnia'},\n  //   baseSpecies: 'Mewtwo',\n  //   gender: 'N',\n  // },\n  // 'Pidgeot-Mega': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 83, at: 80, df: 80, sa: 135, sd: 80, sp: 121},\n  //   weightkg: 50.5,\n  //   abilities: {0: 'No Guard'},\n  //   baseSpecies: 'Pidgeot',\n  // },\n  // 'Pinsir-Mega': {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 65, at: 155, df: 120, sa: 65, sd: 90, sp: 105},\n  //   weightkg: 59,\n  //   abilities: {0: 'Aerilate'},\n  //   baseSpecies: 'Pinsir',\n  // },\n  // 'Rayquaza-Mega': {\n  //   types: ['Dragon', 'Flying'],\n  //   bs: {hp: 105, at: 180, df: 100, sa: 180, sd: 100, sp: 115},\n  //   weightkg: 392,\n  //   gender: 'N',\n  //   abilities: {0: 'Delta Stream'},\n  //   baseSpecies: 'Rayquaza',\n  // },\n  // 'Sableye-Mega': {\n  //   types: ['Dark', 'Ghost'],\n  //   bs: {hp: 50, at: 85, df: 125, sa: 85, sd: 115, sp: 20},\n  //   weightkg: 161,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Sableye',\n  // },\n  // 'Salamence-Mega': {\n  //   types: ['Dragon', 'Flying'],\n  //   bs: {hp: 95, at: 145, df: 130, sa: 120, sd: 90, sp: 120},\n  //   weightkg: 112.6,\n  //   abilities: {0: 'Aerilate'},\n  //   baseSpecies: 'Salamence',\n  // },\n  // 'Sceptile-Mega': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 70, at: 110, df: 75, sa: 145, sd: 85, sp: 145},\n  //   weightkg: 55.2,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Sceptile',\n  // },\n  // 'Scizor-Mega': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 70, at: 150, df: 140, sa: 65, sd: 100, sp: 75},\n  //   weightkg: 125,\n  //   abilities: {0: 'Technician'},\n  //   baseSpecies: 'Scizor',\n  // },\n  // 'Sharpedo-Mega': {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 70, at: 140, df: 70, sa: 110, sd: 65, sp: 105},\n  //   weightkg: 130.3,\n  //   abilities: {0: 'Strong Jaw'},\n  //   baseSpecies: 'Sharpedo',\n  // },\n  // 'Slowbro-Mega': {\n  //   types: ['Water', 'Psychic'],\n  //   bs: {hp: 95, at: 75, df: 180, sa: 130, sd: 80, sp: 30},\n  //   weightkg: 120,\n  //   abilities: {0: 'Shell Armor'},\n  //   baseSpecies: 'Slowbro',\n  // },\n  // 'Steelix-Mega': {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 75, at: 125, df: 230, sa: 55, sd: 95, sp: 30},\n  //   weightkg: 740,\n  //   abilities: {0: 'Sand Force'},\n  //   baseSpecies: 'Steelix',\n  // },\n  // 'Swampert-Mega': {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 100, at: 150, df: 110, sa: 95, sd: 110, sp: 70},\n  //   weightkg: 102,\n  //   abilities: {0: 'Swift Swim'},\n  //   baseSpecies: 'Swampert',\n  // },\n  // 'Tyranitar-Mega': {\n  //   types: ['Rock', 'Dark'],\n  //   bs: {hp: 100, at: 164, df: 150, sa: 95, sd: 120, sp: 71},\n  //   weightkg: 255,\n  //   abilities: {0: 'Sand Stream'},\n  //   baseSpecies: 'Tyranitar',\n  // },\n  // 'Venusaur-Mega': {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 100, df: 123, sa: 122, sd: 120, sp: 80},\n  //   weightkg: 155.5,\n  //   abilities: {0: 'Thick Fat'},\n  //   baseSpecies: 'Venusaur',\n  // },\n  // 'Meowstic-M': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 74, at: 48, df: 76, sa: 83, sd: 81, sp: 104},\n  //   weightkg: 8.5,\n  //   abilities: {0: 'Keen Eye'},\n  //   otherFormes: ['Meowstic-F'],\n  // },\n  // 'Meowstic-F': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 74, at: 48, df: 76, sa: 83, sd: 81, sp: 104},\n  //   weightkg: 8.5,\n  //   abilities: {0: 'Keen Eye'},\n  //   baseSpecies: 'Meowstic-M',\n  // },\n  // Naviathan: {\n  //   types: ['Water', 'Steel'],\n  //   bs: {hp: 103, at: 110, df: 90, sa: 95, sd: 65, sp: 97},\n  //   weightkg: 510,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Noibat: {\n    types: ['Flying', 'Dragon'],\n    bs: {hp: 40, at: 30, df: 35, sa: 45, sd: 40, sp: 55},\n    weightkg: 8,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Noivern: {\n    types: ['Flying', 'Dragon'],\n    bs: {hp: 85, at: 70, df: 80, sa: 97, sd: 80, sp: 123},\n    weightkg: 85,\n    abilities: {0: 'Frisk'},\n  },\n  // Pancham: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 67, at: 82, df: 62, sa: 46, sd: 48, sp: 43},\n  //   weightkg: 8,\n  //   nfe: true,\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Pangoro: {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 95, at: 124, df: 78, sa: 69, sd: 71, sp: 58},\n  //   weightkg: 136,\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  Phantump: {\n    types: ['Ghost', 'Grass'],\n    bs: {hp: 43, at: 70, df: 48, sa: 50, sd: 60, sp: 38},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n  },\n  // 'Pikachu-Cosplay': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Rock-Star': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Belle': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-PhD': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Pop-Star': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Libre': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // Plasmanta: {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 60, at: 57, df: 119, sa: 131, sd: 98, sp: 100},\n  //   weightkg: 460,\n  //   abilities: {0: 'Storm Drain'},\n  // },\n  // Pluffle: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 74, at: 38, df: 51, sa: 65, sd: 78, sp: 49},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  // 'Groudon-Primal': {\n  //   types: ['Ground', 'Fire'],\n  //   bs: {hp: 100, at: 180, df: 160, sa: 150, sd: 90, sp: 90},\n  //   weightkg: 999.7,\n  //   abilities: {0: 'Desolate Land'},\n  //   baseSpecies: 'Groudon',\n  //   gender: 'N',\n  // },\n  // 'Kyogre-Primal': {\n  //   types: ['Water'],\n  //   bs: {hp: 100, at: 150, df: 90, sa: 180, sd: 160, sp: 90},\n  //   weightkg: 430,\n  //   abilities: {0: 'Primordial Sea'},\n  //   baseSpecies: 'Kyogre',\n  //   gender: 'N',\n  // },\n  // Pumpkaboo: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 49, at: 66, df: 70, sa: 44, sd: 55, sp: 51},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   otherFormes: ['Pumpkaboo-Large', 'Pumpkaboo-Small', 'Pumpkaboo-Super'],\n  // },\n  // 'Pumpkaboo-Large': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 54, at: 66, df: 70, sa: 44, sd: 55, sp: 46},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  // 'Pumpkaboo-Small': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 44, at: 66, df: 70, sa: 44, sd: 55, sp: 56},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  // 'Pumpkaboo-Super': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 59, at: 66, df: 70, sa: 44, sd: 55, sp: 41},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  Pyroar: {\n    types: ['Fire', 'Normal'],\n    bs: {hp: 86, at: 68, df: 72, sa: 109, sd: 66, sp: 106},\n    weightkg: 81.5,\n    abilities: {0: 'Rivalry'},\n  },\n  Quilladin: {\n    types: ['Grass'],\n    bs: {hp: 61, at: 78, df: 95, sa: 56, sd: 58, sp: 57},\n    weightkg: 29,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Scatterbug: {\n    types: ['Bug'],\n    bs: {hp: 38, at: 35, df: 40, sa: 27, sd: 25, sp: 35},\n    weightkg: 2.5,\n    nfe: true,\n    abilities: {0: 'Shield Dust'},\n  },\n  Skiddo: {\n    types: ['Grass'],\n    bs: {hp: 66, at: 65, df: 48, sa: 62, sd: 57, sp: 52},\n    weightkg: 31,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Skrelp: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 60, df: 60, sa: 60, sd: 60, sp: 30},\n    weightkg: 7.3,\n    nfe: true,\n    abilities: {0: 'Poison Point'},\n  },\n  Sliggoo: {\n    types: ['Dragon'],\n    bs: {hp: 68, at: 75, df: 53, sa: 83, sd: 113, sp: 60},\n    weightkg: 17.5,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  // Slurpuff: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 82, at: 80, df: 86, sa: 85, sd: 75, sp: 72},\n  //   weightkg: 5,\n  //   abilities: {0: 'Sweet Veil'},\n  // },\n  // Snugglow: {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 40, at: 37, df: 79, sa: 91, sd: 68, sp: 70},\n  //   weightkg: 6,\n  //   nfe: true,\n  //   abilities: {0: 'Storm Drain'},\n  // },\n  Spewpa: {\n    types: ['Bug'],\n    bs: {hp: 45, at: 22, df: 60, sa: 27, sd: 30, sp: 29},\n    weightkg: 8.4,\n    nfe: true,\n    abilities: {0: 'Shed Skin'},\n  },\n  // Spritzee: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 78, at: 52, df: 60, sa: 63, sd: 65, sp: 23},\n  //   weightkg: 0.5,\n  //   nfe: true,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Swirlix: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 62, at: 48, df: 66, sa: 59, sd: 57, sp: 49},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sweet Veil'},\n  // },\n  Sylveon: {\n    types: ['Fairy'],\n    bs: {hp: 95, at: 65, df: 65, sa: 110, sd: 130, sp: 60},\n    weightkg: 23.5,\n    abilities: {0: 'Cute Charm'},\n  },\n  Talonflame: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 78, at: 81, df: 71, sa: 74, sd: 69, sp: 126},\n    weightkg: 24.5,\n    abilities: {0: 'Flame Body'},\n  },\n  Trevenant: {\n    types: ['Ghost', 'Grass'],\n    bs: {hp: 85, at: 110, df: 76, sa: 65, sd: 82, sp: 56},\n    weightkg: 71,\n    abilities: {0: 'Natural Cure'},\n  },\n  // Tyrantrum: {\n  //   types: ['Rock', 'Dragon'],\n  //   bs: {hp: 82, at: 121, df: 119, sa: 69, sd: 59, sp: 71},\n  //   weightkg: 270,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  // Tyrunt: {\n  //   types: ['Rock', 'Dragon'],\n  //   bs: {hp: 58, at: 89, df: 77, sa: 45, sd: 45, sp: 48},\n  //   weightkg: 26,\n  //   nfe: true,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  Vivillon: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    otherFormes: ['Vivillon-Fancy', 'Vivillon-Pokeball'],\n  },\n  'Vivillon-Fancy': {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    baseSpecies: 'Vivillon',\n  },\n  'Vivillon-Pokeball': {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    baseSpecies: 'Vivillon',\n  },\n  Volcanion: {\n    types: ['Fire', 'Water'],\n    bs: {hp: 80, at: 110, df: 120, sa: 130, sd: 90, sp: 70},\n    weightkg: 195,\n    gender: 'N',\n    abilities: {0: 'Water Absorb'},\n  },\n  // Volkraken: {\n  //   types: ['Water', 'Fire'],\n  //   bs: {hp: 100, at: 45, df: 80, sa: 135, sd: 100, sp: 95},\n  //   weightkg: 44.5,\n  //   abilities: {0: 'Analytic'},\n  // },\n  // Volkritter: {\n  //   types: ['Water', 'Fire'],\n  //   bs: {hp: 60, at: 30, df: 50, sa: 80, sd: 60, sp: 70},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Anticipation'},\n  // },\n  // Xerneas: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 126, at: 131, df: 95, sa: 131, sd: 98, sp: 99},\n  //   weightkg: 215,\n  //   abilities: {0: 'Fairy Aura'},\n  //   gender: 'N',\n  // },\n  // Yveltal: {\n  //   types: ['Dark', 'Flying'],\n  //   bs: {hp: 126, at: 131, df: 95, sa: 131, sd: 98, sp: 99},\n  //   weightkg: 203,\n  //   abilities: {0: 'Dark Aura'},\n  //   gender: 'N',\n  // },\n  // Zygarde: {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 108, at: 100, df: 121, sa: 81, sd: 95, sp: 95},\n  //   weightkg: 305,\n  //   abilities: {0: 'Aura Break'},\n  //   gender: 'N',\n  // },\n};\n\nconst XY: {[name: string]: SpeciesData} = extend(true, {}, BW, XY_PATCH);\n\n// XY['Arceus'].otherFormes!.push('Arceus-Fairy');\n// XY['Arceus'].otherFormes!.sort();\n\nconst SM_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // 'Alakazam-Mega': {bs: {sd: 105}},\n  Arbok: {bs: {at: 95}},\n  Ariados: {bs: {sd: 70}},\n  Beartic: {bs: {at: 130}},\n  Chimecho: {bs: {hp: 75, df: 80, sd: 90}},\n  // Corsola: {bs: {hp: 65, df: 95, sd: 95}},\n  // 'Crucibelle-Mega': {bs: {sa: 91, sp: 108}},\n  // Crustle: {bs: {at: 105}},\n  Cryogonal: {bs: {hp: 80, df: 50}},\n  // Delcatty: {bs: {sp: 90}},\n  Diglett: {otherFormes: ['Diglett-Alola']},\n  // Dodrio: {bs: {sp: 110}},\n  // Dugtrio: {bs: {at: 100}, otherFormes: ['Dugtrio-Alola']},\n  // Eevee: {otherFormes: ['Eevee-Starter']},\n  Electrode: {bs: {sp: 150}},\n  // Exeggutor: {bs: {sd: 75}, otherFormes: ['Exeggutor-Alola']},\n  // 'Farfetch\\u2019d': {bs: {at: 90}},\n  Gengar: {abilities: {0: 'Cursed Body'}},\n  Geodude: {otherFormes: ['Geodude-Alola']},\n  Golem: {otherFormes: ['Golem-Alola']},\n  Graveler: {otherFormes: ['Graveler-Alola']},\n  Greninja: {otherFormes: ['Greninja-Ash']},\n  Grimer: {otherFormes: ['Grimer-Alola']},\n  Illumise: {bs: {df: 75, sd: 85}},\n  // Lunatone: {bs: {hp: 90}},\n  Magcargo: {bs: {hp: 60, sa: 90}},\n  // Mantine: {bs: {hp: 85}},\n  // Marowak: {otherFormes: ['Marowak-Alola', 'Marowak-Alola-Totem']},\n  Masquerain: {bs: {sa: 100, sp: 80}},\n  Meowth: {otherFormes: ['Meowth-Alola']},\n  Muk: {otherFormes: ['Muk-Alola']},\n  // Necturna: {bs: {sp: 58}},\n  Ninetales: {otherFormes: ['Ninetales-Alola']},\n  // Naviathan: {abilities: {0: 'Guts'}},\n  Noctowl: {bs: {sa: 86}},\n  Pelipper: {bs: {sa: 95}},\n  Persian: {otherFormes: ['Persian-Alola']},\n  // Pikachu: {\n    // otherFormes: [\n    //   'Pikachu-Alola',\n    //   'Pikachu-Hoenn',\n    //   'Pikachu-Kalos',\n    //   'Pikachu-Original',\n    //   'Pikachu-Partner',\n    //   'Pikachu-Sinnoh',\n    //   'Pikachu-Starter',\n    //   'Pikachu-Unova',\n    // ],\n  // },\n  Qwilfish: {bs: {df: 85}},\n  Raichu: {otherFormes: ['Raichu-Alola']},\n  // Raticate: {otherFormes: ['Raticate-Alola', 'Raticate-Alola-Totem']},\n  // Rattata: {otherFormes: ['Rattata-Alola']},\n  Sandshrew: {otherFormes: ['Sandshrew-Alola']},\n  Sandslash: {otherFormes: ['Sandslash-Alola']},\n  // Solrock: {bs: {hp: 90}},\n  // Swellow: {bs: {sa: 75}},\n  Volbeat: {bs: {df: 75, sd: 85}},\n  Vulpix: {otherFormes: ['Vulpix-Alola']},\n  // Woobat: {bs: {hp: 65}},\n  // Zygarde: {otherFormes: ['Zygarde-10%', 'Zygarde-Complete']},\n  // Araquanid: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 68, at: 70, df: 92, sa: 50, sd: 132, sp: 42},\n  //   abilities: {0: 'Water Bubble'},\n  //   weightkg: 82,\n  //   otherFormes: ['Araquanid-Totem'],\n  // },\n  // 'Araquanid-Totem': {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 68, at: 70, df: 92, sa: 50, sd: 132, sp: 42},\n  //   abilities: {0: 'Water Bubble'},\n  //   weightkg: 217.5,\n  //   baseSpecies: 'Araquanid',\n  // },\n  // Bewear: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 120, at: 125, df: 80, sa: 55, sd: 60, sp: 60},\n  //   abilities: {0: 'Fluffy'},\n  //   weightkg: 135,\n  // },\n  // Blacephalon: {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 53, at: 127, df: 53, sa: 151, sd: 79, sp: 107},\n  //   weightkg: 13,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Bounsweet: {\n  //   types: ['Grass'],\n  //   bs: {hp: 42, at: 30, df: 38, sa: 30, sd: 38, sp: 32},\n  //   weightkg: 3.2,\n  //   nfe: true,\n  //   abilities: {0: 'Leaf Guard'},\n  // },\n  // Brionne: {\n  //   types: ['Water'],\n  //   bs: {hp: 60, at: 69, df: 69, sa: 91, sd: 81, sp: 50},\n  //   weightkg: 17.5,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  Bruxish: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 68, at: 105, df: 70, sa: 70, sd: 70, sp: 92},\n    weightkg: 19,\n    abilities: {0: 'Dazzling'},\n  },\n  // Buzzwole: {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 107, at: 139, df: 139, sa: 53, sd: 53, sp: 79},\n  //   weightkg: 333.6,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Caribolt: {\n  //   types: ['Grass', 'Electric'],\n  //   bs: {hp: 84, at: 106, df: 82, sa: 77, sd: 80, sp: 106},\n  //   weightkg: 140,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Celesteela: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 97, at: 101, df: 103, sa: 107, sd: 101, sp: 61},\n  //   weightkg: 999.9,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Charjabug: {\n    types: ['Bug', 'Electric'],\n    bs: {hp: 57, at: 82, df: 95, sa: 55, sd: 75, sp: 36},\n    weightkg: 10.5,\n    nfe: true,\n    abilities: {0: 'Battery'},\n  },\n  // Comfey: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 51, at: 52, df: 90, sa: 82, sd: 110, sp: 100},\n  //   weightkg: 0.3,\n  //   abilities: {0: 'Flower Veil'},\n  // },\n  // Cosmoem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 43, at: 29, df: 131, sa: 29, sd: 131, sp: 37},\n  //   weightkg: 999.9,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Coribalis: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 76, at: 69, df: 90, sa: 65, sd: 77, sp: 43},\n  //   weightkg: 24.5,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Cosmog: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 43, at: 29, df: 31, sa: 29, sd: 31, sp: 37},\n  //   weightkg: 0.1,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Unaware'},\n  // },\n  Crabominable: {\n    types: ['Fighting', 'Ice'],\n    bs: {hp: 97, at: 132, df: 77, sa: 62, sd: 67, sp: 43},\n    weightkg: 180,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Crabrawler: {\n    types: ['Fighting'],\n    bs: {hp: 47, at: 82, df: 57, sa: 42, sd: 47, sp: 63},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Cutiefly: {\n    types: ['Bug', 'Fairy'],\n    bs: {hp: 40, at: 45, df: 40, sa: 55, sd: 40, sp: 84},\n    weightkg: 0.2,\n    nfe: true,\n    abilities: {0: 'Honey Gather'},\n  },\n  Dartrix: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 78, at: 75, df: 75, sa: 70, sd: 70, sp: 52},\n    weightkg: 16,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Decidueye: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 78, at: 107, df: 75, sa: 100, sd: 100, sp: 70},\n    weightkg: 36.6,\n    abilities: {0: 'Overgrow'},\n  },\n  // Dewpider: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 38, at: 40, df: 52, sa: 40, sd: 72, sp: 27},\n  //   weightkg: 4,\n  //   nfe: true,\n  //   abilities: {0: 'Water Bubble'},\n  // },\n  // Dhelmise: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 70, at: 131, df: 100, sa: 86, sd: 90, sp: 40},\n  //   weightkg: 210,\n  //   gender: 'N',\n  //   abilities: {0: 'Steelworker'},\n  // },\n  // Drampa: {\n  //   types: ['Normal', 'Dragon'],\n  //   bs: {hp: 78, at: 60, df: 85, sa: 135, sd: 91, sp: 36},\n  //   weightkg: 185,\n  //   abilities: {0: 'Berserk'},\n  // },\n  'Diglett-Alola': {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 10, at: 55, df: 30, sa: 35, sd: 45, sp: 90},\n    weightkg: 1,\n    baseSpecies: 'Diglett',\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  // 'Dugtrio-Alola': {\n  //   types: ['Ground', 'Steel'],\n  //   bs: {hp: 35, at: 100, df: 60, sa: 50, sd: 70, sp: 110},\n  //   weightkg: 66.6,\n  //   baseSpecies: 'Dugtrio',\n  //   abilities: {0: 'Sand Veil'},\n  // },\n  // 'Eevee-Starter': {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 75, df: 70, sa: 65, sd: 85, sp: 75},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Eevee',\n  // },\n  // Electrelk: {\n  //   types: ['Grass', 'Electric'],\n  //   bs: {hp: 59, at: 81, df: 67, sa: 57, sd: 55, sp: 101},\n  //   weightkg: 41.5,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Equilibra: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 102, at: 50, df: 96, sa: 133, sd: 118, sp: 60},\n  //   weightkg: 51.3,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  // 'Exeggutor-Alola': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 95, at: 105, df: 85, sa: 125, sd: 75, sp: 45},\n  //   weightkg: 415.6,\n  //   baseSpecies: 'Exeggutor',\n  //   abilities: {0: 'Frisk'},\n  // },\n  // Fawnifer: {\n  //   types: ['Grass'],\n  //   bs: {hp: 49, at: 61, df: 42, sa: 52, sd: 40, sp: 76},\n  //   weightkg: 6.9,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Fomantis: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 55, df: 35, sa: 50, sd: 35, sp: 35},\n    weightkg: 1.5,\n    nfe: true,\n    abilities: {0: 'Leaf Guard'},\n  },\n  'Geodude-Alola': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 40, at: 80, df: 100, sa: 30, sd: 30, sp: 20},\n    weightkg: 20.3,\n    baseSpecies: 'Geodude',\n    nfe: true,\n    abilities: {0: 'Magnet Pull'},\n  },\n  'Golem-Alola': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 80, at: 120, df: 130, sa: 55, sd: 65, sp: 45},\n    weightkg: 316,\n    abilities: {0: 'Magnet Pull'},\n    baseSpecies: 'Golem',\n  },\n  // Golisopod: {\n  //   types: ['Bug', 'Water'],\n  //   bs: {hp: 75, at: 125, df: 140, sa: 60, sd: 90, sp: 40},\n  //   weightkg: 108,\n  //   abilities: {0: 'Emergency Exit'},\n  // },\n  'Graveler-Alola': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 55, at: 95, df: 115, sa: 45, sd: 45, sp: 35},\n    weightkg: 110,\n    baseSpecies: 'Graveler',\n    nfe: true,\n    abilities: {0: 'Magnet Pull'},\n  },\n  'Grimer-Alola': {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 80, at: 80, df: 50, sa: 40, sd: 50, sp: 25},\n    weightkg: 42,\n    baseSpecies: 'Grimer',\n    nfe: true,\n    abilities: {0: 'Poison Touch'},\n  },\n  'Greninja-Ash': {\n    types: ['Water', 'Dark'],\n    bs: {hp: 72, at: 145, df: 67, sa: 153, sd: 71, sp: 132},\n    weightkg: 40,\n    abilities: {0: 'Battle Bond'},\n    baseSpecies: 'Greninja',\n  },\n  Grubbin: {\n    types: ['Bug'],\n    bs: {hp: 47, at: 62, df: 45, sa: 55, sd: 45, sp: 46},\n    weightkg: 4.4,\n    nfe: true,\n    abilities: {0: 'Swarm'},\n  },\n  Gumshoos: {\n    types: ['Normal'],\n    bs: {hp: 88, at: 110, df: 60, sa: 55, sd: 60, sp: 45},\n    weightkg: 14.2,\n    // otherFormes: ['Gumshoos-Totem'],\n    abilities: {0: 'Stakeout'},\n  },\n  // 'Gumshoos-Totem': {\n  //   types: ['Normal'],\n  //   bs: {hp: 88, at: 110, df: 60, sa: 55, sd: 60, sp: 45},\n  //   weightkg: 60,\n  //   baseSpecies: 'Gumshoos',\n  //   abilities: {0: 'Adaptability'},\n  // },\n  // Guzzlord: {\n  //   types: ['Dark', 'Dragon'],\n  //   bs: {hp: 223, at: 101, df: 53, sa: 97, sd: 53, sp: 43},\n  //   weightkg: 888,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  'Hakamo-o': {\n    types: ['Dragon', 'Fighting'],\n    bs: {hp: 55, at: 75, df: 90, sa: 65, sd: 70, sp: 65},\n    weightkg: 47,\n    nfe: true,\n    abilities: {0: 'Bulletproof'},\n  },\n  // Incineroar: {\n  //   types: ['Fire', 'Dark'],\n  //   bs: {hp: 95, at: 115, df: 90, sa: 80, sd: 90, sp: 60},\n  //   weightkg: 83,\n  //   abilities: {0: 'Blaze'},\n  // },\n  'Jangmo-o': {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 55, df: 65, sa: 45, sd: 45, sp: 45},\n    weightkg: 29.7,\n    nfe: true,\n    abilities: {0: 'Bulletproof'},\n  },\n  // Justyke: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 72, at: 70, df: 56, sa: 83, sd: 68, sp: 30},\n  //   weightkg: 36.5,\n  //   nfe: true,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Jumbao: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 92, at: 63, df: 97, sa: 124, sd: 104, sp: 96},\n  //   weightkg: 200,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Kartana: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 59, at: 181, df: 131, sa: 59, sd: 31, sp: 109},\n  //   weightkg: 0.1,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Komala: {\n    types: ['Normal'],\n    bs: {hp: 65, at: 115, df: 65, sa: 75, sd: 95, sp: 65},\n    weightkg: 19.9,\n    abilities: {0: 'Comatose'},\n  },\n  'Kommo-o': {\n    types: ['Dragon', 'Fighting'],\n    bs: {hp: 75, at: 110, df: 125, sa: 100, sd: 105, sp: 85},\n    weightkg: 78.2,\n    otherFormes: ['Kommo-o-Totem'],\n    abilities: {0: 'Bulletproof'},\n  },\n  // 'Kommo-o-Totem': {\n  //   types: ['Dragon', 'Fighting'],\n  //   bs: {hp: 75, at: 110, df: 125, sa: 100, sd: 105, sp: 85},\n  //   weightkg: 207.5,\n  //   abilities: {0: 'Overcoat'},\n  //   baseSpecies: 'Kommo-o',\n  // },\n  // Litten: {\n  //   types: ['Fire'],\n  //   bs: {hp: 45, at: 65, df: 40, sa: 60, sd: 40, sp: 70},\n  //   weightkg: 4.3,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Lunala: {\n  //   types: ['Psychic', 'Ghost'],\n  //   bs: {hp: 137, at: 113, df: 89, sa: 137, sd: 107, sp: 97},\n  //   weightkg: 120,\n  //   abilities: {0: 'Shadow Shield'},\n  //   gender: 'N',\n  // },\n  Lurantis: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 105, df: 90, sa: 80, sd: 90, sp: 45},\n    weightkg: 18.5,\n    // otherFormes: ['Lurantis-Totem'],\n    abilities: {0: 'Leaf Guard'},\n  },\n  // 'Lurantis-Totem': {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 105, df: 90, sa: 80, sd: 90, sp: 45},\n  //   weightkg: 58,\n  //   abilities: {0: 'Leaf Guard'},\n  //   baseSpecies: 'Lurantis',\n  // },\n  Lycanroc: {\n    types: ['Rock'],\n    bs: {hp: 75, at: 115, df: 65, sa: 55, sd: 65, sp: 112},\n    weightkg: 25,\n    otherFormes: ['Lycanroc-Dusk', 'Lycanroc-Midnight'],\n    abilities: {0: 'Keen Eye'},\n  },\n  'Lycanroc-Dusk': {\n    types: ['Rock'],\n    bs: {hp: 75, at: 117, df: 65, sa: 55, sd: 65, sp: 110},\n    weightkg: 25,\n    abilities: {0: 'Tough Claws'},\n    baseSpecies: 'Lycanroc',\n  },\n  'Lycanroc-Midnight': {\n    types: ['Rock'],\n    bs: {hp: 85, at: 115, df: 75, sa: 55, sd: 75, sp: 82},\n    weightkg: 25,\n    baseSpecies: 'Lycanroc',\n    abilities: {0: 'Keen Eye'},\n  },\n  Magearna: {\n    types: ['Steel', 'Fairy'],\n    bs: {hp: 80, at: 95, df: 115, sa: 130, sd: 115, sp: 65},\n    weightkg: 80.5,\n    gender: 'N',\n    abilities: {0: 'Soul-Heart'},\n  },\n  Mareanie: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 53, df: 62, sa: 43, sd: 52, sp: 45},\n    weightkg: 8,\n    nfe: true,\n    abilities: {0: 'Merciless'},\n  },\n  // 'Marowak-Alola': {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 60, at: 80, df: 110, sa: 50, sd: 80, sp: 45},\n  //   weightkg: 34,\n  //   abilities: {0: 'Cursed Body'},\n  //   baseSpecies: 'Marowak',\n  // },\n  // 'Marowak-Alola-Totem': {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 60, at: 80, df: 110, sa: 50, sd: 80, sp: 45},\n  //   weightkg: 98,\n  //   abilities: {0: 'Rock Head'},\n  //   baseSpecies: 'Marowak',\n  // },\n  // Marshadow: {\n  //   types: ['Fighting', 'Ghost'],\n  //   bs: {hp: 90, at: 125, df: 80, sa: 90, sd: 90, sp: 125},\n  //   weightkg: 22.2,\n  //   gender: 'N',\n  //   abilities: {0: 'Technician'},\n  // },\n  // Melmetal: {\n  //   types: ['Steel'],\n  //   bs: {hp: 135, at: 143, df: 143, sa: 80, sd: 65, sp: 34},\n  //   weightkg: 800,\n  //   gender: 'N',\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Meltan does NOT benefit from Eviolite and should not have nfe: true (credit: Anubis)\n  // https://smogon.com/forums/threads/sword-shield-battle-mechanics-research.3655528/post-8295399\n  // Meltan: {\n  //   types: ['Steel'],\n  //   bs: {hp: 46, at: 65, df: 65, sa: 55, sd: 35, sp: 34},\n  //   weightkg: 8,\n  //   gender: 'N',\n  //   abilities: {0: 'Magnet Pull'},\n  // },\n  'Meowth-Alola': {\n    types: ['Dark'],\n    bs: {hp: 40, at: 35, df: 35, sa: 50, sd: 40, sp: 90},\n    weightkg: 4.2,\n    baseSpecies: 'Meowth',\n    nfe: true,\n    abilities: {0: 'Pickup'},\n  },\n  Mimikyu: {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n    weightkg: 0.7,\n    // otherFormes: ['Mimikyu-Busted', 'Mimikyu-Busted-Totem', 'Mimikyu-Totem'],\n    abilities: {0: 'Disguise'},\n  },\n  // 'Mimikyu-Busted': {\n  //   types: ['Ghost', 'Fairy'],\n  //   bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n  //   weightkg: 0.7,\n  //   baseSpecies: 'Mimikyu',\n  //   abilities: {0: 'Disguise'},\n  // },\n  // 'Mimikyu-Totem-Busted': {\n  //   types: ['Ghost', 'Fairy'],\n  //   bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n  //   weightkg: 2.8,\n  //   baseSpecies: 'Mimikyu',\n  //   abilities: {0: 'Disguise'},\n  // },\n  // 'Mimikyu-Totem-Disguised': {\n  //   types: ['Ghost', 'Fairy'],\n  //   bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n  //   weightkg: 2.8,\n  //   baseSpecies: 'Mimikyu',\n  //   abilities: {0: 'Disguise'},\n  // },\n  // Minior: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 60, at: 100, df: 60, sa: 100, sd: 60, sp: 120},\n  //   weightkg: 0.3,\n  //   otherFormes: ['Minior-Meteor'],\n  //   gender: 'N',\n  //   abilities: {0: 'Shields Down'},\n  // },\n  // 'Minior-Meteor': {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 60, at: 60, df: 100, sa: 60, sd: 100, sp: 60},\n  //   weightkg: 40,\n  //   gender: 'N',\n  //   baseSpecies: 'Minior',\n  //   abilities: {0: 'Shields Down'},\n  // },\n  // Morelull: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 40, at: 35, df: 55, sa: 65, sd: 75, sp: 15},\n  //   weightkg: 1.5,\n  //   nfe: true,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  Mudbray: {\n    types: ['Ground'],\n    bs: {hp: 70, at: 100, df: 70, sa: 45, sd: 55, sp: 45},\n    weightkg: 110,\n    nfe: true,\n    abilities: {0: 'Own Tempo'},\n  },\n  Mudsdale: {\n    types: ['Ground'],\n    bs: {hp: 100, at: 125, df: 100, sa: 55, sd: 85, sp: 35},\n    weightkg: 920,\n    abilities: {0: 'Own Tempo'},\n  },\n  'Muk-Alola': {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 105, at: 105, df: 75, sa: 65, sd: 100, sp: 50},\n    weightkg: 52,\n    baseSpecies: 'Muk',\n    abilities: {0: 'Poison Touch'},\n  },\n  // Mumbao: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 55, at: 30, df: 64, sa: 87, sd: 73, sp: 66},\n  //   weightkg: 83,\n  //   nfe: true,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Naganadel: {\n  //   types: ['Poison', 'Dragon'],\n  //   bs: {hp: 73, at: 73, df: 73, sa: 127, sd: 73, sp: 121},\n  //   weightkg: 150,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Necrozma: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 97, at: 107, df: 101, sa: 127, sd: 89, sp: 79},\n  //   weightkg: 230,\n  //   abilities: {0: 'Prism Armor'},\n  //   otherFormes: ['Necrozma-Dawn-Wings', 'Necrozma-Dusk-Mane', 'Necrozma-Ultra'],\n  //   gender: 'N',\n  // },\n  // 'Necrozma-Dawn-Wings': {\n  //   types: ['Psychic', 'Ghost'],\n  //   bs: {hp: 97, at: 113, df: 109, sa: 157, sd: 127, sp: 77},\n  //   weightkg: 350,\n  //   abilities: {0: 'Prism Armor'},\n  //   baseSpecies: 'Necrozma',\n  //   gender: 'N',\n  // },\n  // 'Necrozma-Dusk-Mane': {\n  //   types: ['Psychic', 'Steel'],\n  //   bs: {hp: 97, at: 157, df: 127, sa: 113, sd: 109, sp: 77},\n  //   weightkg: 460,\n  //   abilities: {0: 'Prism Armor'},\n  //   baseSpecies: 'Necrozma',\n  //   gender: 'N',\n  // },\n  // 'Necrozma-Ultra': {\n  //   types: ['Psychic', 'Dragon'],\n  //   bs: {hp: 97, at: 167, df: 97, sa: 167, sd: 97, sp: 129},\n  //   weightkg: 230,\n  //   abilities: {0: 'Neuroforce'},\n  //   baseSpecies: 'Necrozma',\n  //   gender: 'N',\n  // },\n  // Nihilego: {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 109, at: 53, df: 47, sa: 127, sd: 131, sp: 103},\n  //   weightkg: 55.5,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  'Ninetales-Alola': {\n    types: ['Ice', 'Fairy'],\n    bs: {hp: 73, at: 67, df: 75, sa: 81, sd: 100, sp: 109},\n    weightkg: 19.9,\n    abilities: {0: 'Snow Cloak'},\n    baseSpecies: 'Ninetales',\n  },\n  Oranguru: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 90, at: 60, df: 80, sa: 90, sd: 110, sp: 60},\n    weightkg: 76,\n    abilities: {0: 'Inner Focus'},\n  },\n  Oricorio: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    otherFormes: ['Oricorio-Pa\\'u', 'Oricorio-Pom-Pom', 'Oricorio-Sensu'],\n  },\n  'Oricorio-Pa\\'u': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio',\n  },\n  'Oricorio-Pom-Pom': {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio',\n  },\n  'Oricorio-Sensu': {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio',\n  },\n  // Pajantom: {\n  //   types: ['Dragon', 'Ghost'],\n  //   bs: {hp: 84, at: 133, df: 71, sa: 51, sd: 111, sp: 101},\n  //   weightkg: 3.1,\n  //   abilities: {0: 'Comatose'},\n  // },\n  Palossand: {\n    types: ['Ghost', 'Ground'],\n    bs: {hp: 85, at: 75, df: 110, sa: 100, sd: 75, sp: 35},\n    weightkg: 250,\n    abilities: {0: 'Water Compaction'},\n  },\n  Passimian: {\n    types: ['Fighting'],\n    bs: {hp: 100, at: 120, df: 90, sa: 40, sd: 60, sp: 80},\n    weightkg: 82.8,\n    abilities: {0: 'Receiver'},\n  },\n  'Persian-Alola': {\n    types: ['Dark'],\n    bs: {hp: 65, at: 60, df: 60, sa: 75, sd: 65, sp: 115},\n    weightkg: 33,\n    baseSpecies: 'Persian',\n    abilities: {0: 'Fur Coat'},\n  },\n  // Pheromosa: {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 71, at: 137, df: 37, sa: 137, sd: 37, sp: 151},\n  //   weightkg: 25,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // 'Pikachu-Alola': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Hoenn': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Kalos': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Original': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Partner': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Sinnoh': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Starter': {\n  //   types: ['Electric'],\n  //   bs: {hp: 45, at: 80, df: 50, sa: 75, sd: 60, sp: 120},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Unova': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // Pikipek: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 35, at: 75, df: 30, sa: 30, sd: 30, sp: 65},\n  //   weightkg: 1.2,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Poipole: {\n  //   types: ['Poison'],\n  //   bs: {hp: 67, at: 73, df: 67, sa: 73, sd: 67, sp: 73},\n  //   weightkg: 1.8,\n  //   abilities: {0: 'Beast Boost'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  // Popplio: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 54, df: 54, sa: 66, sd: 56, sp: 40},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Primarina: {\n  //   types: ['Water', 'Fairy'],\n  //   bs: {hp: 80, at: 74, df: 74, sa: 126, sd: 116, sp: 60},\n  //   weightkg: 44,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Pyukumuku: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 60, df: 130, sa: 30, sd: 130, sp: 5},\n  //   weightkg: 1.2,\n  //   abilities: {0: 'Innards Out'},\n  // },\n  'Raichu-Alola': {\n    types: ['Electric', 'Psychic'],\n    bs: {hp: 60, at: 85, df: 50, sa: 95, sd: 85, sp: 110},\n    weightkg: 21,\n    baseSpecies: 'Raichu',\n    abilities: {0: 'Surge Surfer'},\n  },\n  // 'Raticate-Alola': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 75, at: 71, df: 70, sa: 40, sd: 80, sp: 77},\n  //   weightkg: 25.5,\n  //   baseSpecies: 'Raticate',\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // 'Raticate-Alola-Totem': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 75, at: 71, df: 70, sa: 40, sd: 80, sp: 77},\n  //   weightkg: 105,\n  //   abilities: {0: 'Thick Fat'},\n  //   baseSpecies: 'Raticate',\n  // },\n  // 'Rattata-Alola': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 30, at: 56, df: 35, sa: 25, sd: 35, sp: 72},\n  //   weightkg: 3.8,\n  //   baseSpecies: 'Rattata',\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  Ribombee: {\n    types: ['Bug', 'Fairy'],\n    bs: {hp: 60, at: 55, df: 60, sa: 95, sd: 70, sp: 124},\n    weightkg: 0.5,\n    // otherFormes: ['Ribombee-Totem'],\n    abilities: {0: 'Honey Gather'},\n  },\n  // 'Ribombee-Totem': {\n  //   types: ['Bug', 'Fairy'],\n  //   bs: {hp: 60, at: 55, df: 60, sa: 95, sd: 70, sp: 124},\n  //   weightkg: 2,\n  //   abilities: {0: 'Sweet Veil'},\n  //   baseSpecies: 'Ribombee',\n  // },\n  Rockruff: {\n    types: ['Rock'],\n    bs: {hp: 45, at: 65, df: 40, sa: 30, sd: 40, sp: 60},\n    weightkg: 9.2,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Rowlet: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 68, at: 55, df: 55, sa: 50, sd: 50, sp: 42},\n    weightkg: 1.5,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Salandit: {\n    types: ['Poison', 'Fire'],\n    bs: {hp: 48, at: 44, df: 40, sa: 71, sd: 40, sp: 77},\n    weightkg: 4.8,\n    nfe: true,\n    abilities: {0: 'Corrosion'},\n  },\n  Salazzle: {\n    types: ['Poison', 'Fire'],\n    bs: {hp: 68, at: 64, df: 60, sa: 111, sd: 60, sp: 117},\n    weightkg: 22.2,\n    otherFormes: ['Salazzle-Totem'],\n    abilities: {0: 'Corrosion'},\n  },\n  // 'Salazzle-Totem': {\n  //   types: ['Poison', 'Fire'],\n  //   bs: {hp: 68, at: 64, df: 60, sa: 111, sd: 60, sp: 117},\n  //   weightkg: 81,\n  //   abilities: {0: 'Corrosion'},\n  //   baseSpecies: 'Salazzle',\n  // },\n  'Sandshrew-Alola': {\n    types: ['Ice', 'Steel'],\n    bs: {hp: 50, at: 75, df: 90, sa: 10, sd: 35, sp: 40},\n    weightkg: 40,\n    baseSpecies: 'Sandshrew',\n    nfe: true,\n    abilities: {0: 'Snow Cloak'},\n  },\n  'Sandslash-Alola': {\n    types: ['Ice', 'Steel'],\n    bs: {hp: 75, at: 100, df: 120, sa: 25, sd: 65, sp: 65},\n    weightkg: 55,\n    baseSpecies: 'Sandslash',\n    abilities: {0: 'Snow Cloak'},\n  },\n  Sandygast: {\n    types: ['Ghost', 'Ground'],\n    bs: {hp: 55, at: 55, df: 80, sa: 70, sd: 45, sp: 15},\n    weightkg: 70,\n    nfe: true,\n    abilities: {0: 'Water Compaction'},\n  },\n  // Shiinotic: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 60, at: 45, df: 80, sa: 90, sd: 100, sp: 30},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  // Silvally: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   gender: 'N',\n  //   otherFormes: [\n  //     'Silvally-Bug',\n  //     'Silvally-Dark',\n  //     'Silvally-Dragon',\n  //     'Silvally-Electric',\n  //     'Silvally-Fairy',\n  //     'Silvally-Fighting',\n  //     'Silvally-Fire',\n  //     'Silvally-Flying',\n  //     'Silvally-Ghost',\n  //     'Silvally-Grass',\n  //     'Silvally-Ground',\n  //     'Silvally-Ice',\n  //     'Silvally-Poison',\n  //     'Silvally-Psychic',\n  //     'Silvally-Rock',\n  //     'Silvally-Steel',\n  //     'Silvally-Water',\n  //   ],\n  // },\n  // 'Silvally-Bug': {\n  //   types: ['Bug'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Dark': {\n  //   types: ['Dark'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Dragon': {\n  //   types: ['Dragon'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Electric': {\n  //   types: ['Electric'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fairy': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fighting': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fire': {\n  //   types: ['Fire'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Flying': {\n  //   types: ['Flying'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ghost': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Grass': {\n  //   types: ['Grass'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ground': {\n  //   types: ['Ground'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ice': {\n  //   types: ['Ice'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Poison': {\n  //   types: ['Poison'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Psychic': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Rock': {\n  //   types: ['Rock'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Steel': {\n  //   types: ['Steel'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Water': {\n  //   types: ['Water'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // Smogecko: {\n  //   types: ['Fire'],\n  //   bs: {hp: 48, at: 66, df: 43, sa: 58, sd: 48, sp: 56},\n  //   weightkg: 8.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Smoguana: {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 68, at: 86, df: 53, sa: 68, sd: 68, sp: 76},\n  //   weightkg: 22.2,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Smokomodo: {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 88, at: 116, df: 67, sa: 88, sd: 78, sp: 97},\n  //   weightkg: 205,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Snaelstrom: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 91, at: 94, df: 110, sa: 80, sd: 97, sp: 63},\n  //   weightkg: 120,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Solgaleo: {\n  //   types: ['Psychic', 'Steel'],\n  //   bs: {hp: 137, at: 137, df: 107, sa: 113, sd: 89, sp: 97},\n  //   weightkg: 230,\n  //   abilities: {0: 'Full Metal Body'},\n  //   gender: 'N',\n  // },\n  // Stakataka: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 61, at: 131, df: 211, sa: 53, sd: 101, sp: 13},\n  //   weightkg: 820,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Steenee: {\n  //   types: ['Grass'],\n  //   bs: {hp: 52, at: 40, df: 48, sa: 40, sd: 48, sp: 62},\n  //   weightkg: 8.2,\n  //   nfe: true,\n  //   abilities: {0: 'Leaf Guard'},\n  // },\n  // Stufful: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 70, at: 75, df: 50, sa: 45, sd: 50, sp: 50},\n  //   weightkg: 6.8,\n  //   abilities: {0: 'Fluffy'},\n  //   nfe: true,\n  // },\n  // Swirlpool: {\n  //   types: ['Water'],\n  //   bs: {hp: 61, at: 49, df: 70, sa: 50, sd: 62, sp: 28},\n  //   weightkg: 7,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // 'Tapu Bulu': {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 70, at: 130, df: 115, sa: 85, sd: 95, sp: 75},\n  //   weightkg: 45.5,\n  //   abilities: {0: 'Grassy Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Fini': {\n  //   types: ['Water', 'Fairy'],\n  //   bs: {hp: 70, at: 75, df: 115, sa: 95, sd: 130, sp: 85},\n  //   weightkg: 21.2,\n  //   abilities: {0: 'Misty Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Koko': {\n  //   types: ['Electric', 'Fairy'],\n  //   bs: {hp: 70, at: 115, df: 85, sa: 95, sd: 75, sp: 130},\n  //   weightkg: 20.5,\n  //   abilities: {0: 'Electric Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Lele': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 70, at: 85, df: 75, sa: 130, sd: 115, sp: 95},\n  //   weightkg: 18.6,\n  //   abilities: {0: 'Psychic Surge'},\n  //   gender: 'N',\n  // },\n  // Togedemaru: {\n  //   types: ['Electric', 'Steel'],\n  //   bs: {hp: 65, at: 98, df: 63, sa: 40, sd: 73, sp: 96},\n  //   weightkg: 3.3,\n  //   abilities: {0: 'Iron Barbs'},\n  //   otherFormes: ['Togedemaru-Totem'],\n  // },\n  // 'Togedemaru-Totem': {\n  //   types: ['Electric', 'Steel'],\n  //   bs: {hp: 65, at: 98, df: 63, sa: 40, sd: 73, sp: 96},\n  //   weightkg: 13,\n  //   abilities: {0: 'Sturdy'},\n  //   baseSpecies: 'Togedemaru',\n  // },\n  // Torracat: {\n  //   types: ['Fire'],\n  //   bs: {hp: 65, at: 85, df: 50, sa: 80, sd: 50, sp: 90},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Toucannon: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 80, at: 120, df: 75, sa: 75, sd: 75, sp: 60},\n  //   weightkg: 26,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  Toxapex: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 63, df: 152, sa: 53, sd: 142, sp: 35},\n    weightkg: 14.5,\n    abilities: {0: 'Merciless'},\n  },\n  // Trumbeak: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 55, at: 85, df: 50, sa: 40, sd: 50, sp: 75},\n  //   weightkg: 14.8,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  Tsareena: {\n    types: ['Grass'],\n    bs: {hp: 72, at: 120, df: 98, sa: 50, sd: 98, sp: 72},\n    weightkg: 21.4,\n    abilities: {0: 'Leaf Guard'},\n  },\n  // Turtonator: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 60, at: 78, df: 135, sa: 91, sd: 85, sp: 36},\n  //   weightkg: 212,\n  //   abilities: {0: 'Shell Armor'},\n  // },\n  // 'Type: Null': {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 59},\n  //   weightkg: 120.5,\n  //   abilities: {0: 'Battle Armor'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  Vikavolt: {\n    types: ['Bug', 'Electric'],\n    bs: {hp: 77, at: 70, df: 90, sa: 145, sd: 75, sp: 43},\n    weightkg: 45,\n    abilities: {0: 'Levitate'},\n    otherFormes: ['Vikavolt-Totem'],\n  },\n  // 'Vikavolt-Totem': {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 77, at: 70, df: 90, sa: 145, sd: 75, sp: 43},\n  //   weightkg: 147.5,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Vikavolt',\n  // },\n  'Vulpix-Alola': {\n    types: ['Ice'],\n    bs: {hp: 38, at: 41, df: 40, sa: 50, sd: 65, sp: 65},\n    weightkg: 9.9,\n    baseSpecies: 'Vulpix',\n    nfe: true,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Wimpod: {\n  //   types: ['Bug', 'Water'],\n  //   bs: {hp: 25, at: 35, df: 40, sa: 20, sd: 30, sp: 80},\n  //   weightkg: 12,\n  //   abilities: {0: 'Wimp Out'},\n  //   nfe: true,\n  // },\n  // Wishiwashi: {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 20, df: 20, sa: 25, sd: 25, sp: 40},\n  //   weightkg: 0.3,\n  //   otherFormes: ['Wishiwashi-School'],\n  //   abilities: {0: 'Schooling'},\n  // },\n  // 'Wishiwashi-School': {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 140, df: 130, sa: 140, sd: 135, sp: 30},\n  //   weightkg: 78.6,\n  //   baseSpecies: 'Wishiwashi',\n  //   abilities: {0: 'Schooling'},\n  // },\n  // Xurkitree: {\n  //   types: ['Electric'],\n  //   bs: {hp: 83, at: 89, df: 71, sa: 173, sd: 71, sp: 83},\n  //   weightkg: 100,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Yungoos: {\n    types: ['Normal'],\n    bs: {hp: 48, at: 70, df: 30, sa: 30, sd: 30, sp: 45},\n    weightkg: 6,\n    nfe: true,\n    abilities: {0: 'Stakeout'},\n  },\n  // Zeraora: {\n  //   types: ['Electric'],\n  //   bs: {hp: 88, at: 112, df: 75, sa: 102, sd: 80, sp: 143},\n  //   weightkg: 44.5,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  // 'Zygarde-10%': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 54, at: 100, df: 71, sa: 61, sd: 85, sp: 115},\n  //   weightkg: 33.5,\n  //   abilities: {0: 'Aura Break'},\n  //   baseSpecies: 'Zygarde',\n  //   gender: 'N',\n  // },\n  // 'Zygarde-Complete': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 216, at: 100, df: 121, sa: 91, sd: 95, sp: 85},\n  //   weightkg: 610,\n  //   abilities: {0: 'Power Construct'},\n  //   baseSpecies: 'Zygarde',\n  //   gender: 'N',\n  // },\n};\n\nconst SM: {[name: string]: SpeciesData} = extend(true, {}, XY, SM_PATCH);\n\n// delete SM['Pikachu-Cosplay'];\n// delete SM['Pikachu-Rock-Star'];\n// delete SM['Pikachu-Belle'];\n// delete SM['Pikachu-PhD'];\n// delete SM['Pikachu-Pop-Star'];\n// delete SM['Pikachu-Libre'];\n\nconst SS_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // 'Aegislash-Blade': {bs: {at: 140, sa: 140}},\n  // 'Aegislash-Both': {bs: {at: 140, df: 140, sa: 140, sd: 140}},\n  // 'Aegislash-Shield': {bs: {df: 140, sd: 140}},\n  Articuno: {otherFormes: ['Articuno-Galar']},\n  // Blastoise: {otherFormes: ['Blastoise-Gmax', 'Blastoise-Mega']},\n  // Butterfree: {otherFormes: ['Butterfree-Gmax']},\n  // Charizard: {otherFormes: ['Charizard-Gmax', 'Charizard-Mega-X', 'Charizard-Mega-Y']},\n  // Corsola: {otherFormes: ['Corsola-Galar']},\n  // Darmanitan: {\n  //   otherFormes: ['Darmanitan-Galar', 'Darmanitan-Galar-Zen', 'Darmanitan-Zen'],\n  // },\n  // Darumaka: {otherFormes: ['Darumaka-Galar']},\n  // Eevee: {otherFormes: ['Eevee-Gmax']},\n  // Equilibra: {bs: {sa: 133}},\n  // 'Farfetch\\u2019d': {otherFormes: ['Farfetch\\u2019d-Galar']},\n  // Garbodor: {otherFormes: ['Garbodor-Gmax']},\n  // Gengar: {otherFormes: ['Gengar-Gmax', 'Gengar-Mega']},\n  // Kingler: {otherFormes: ['Kingler-Gmax']},\n  // Lapras: {otherFormes: ['Lapras-Gmax']},\n  // Linoone: {otherFormes: ['Linoone-Galar']},\n  // Machamp: {otherFormes: ['Machamp-Gmax']},\n  // Melmetal: {otherFormes: ['Melmetal-Gmax']},\n  Meowth: {otherFormes: ['Meowth-Alola', 'Meowth-Galar']}, //, 'Meowth-Gmax']},\n  Moltres: {otherFormes: ['Moltres-Galar']},\n  // 'Mr. Mime': {otherFormes: ['Mr. Mime-Galar']},\n  // Pikachu: {\n  //   otherFormes: [\n  //     'Pikachu-Alola',\n  //     'Pikachu-Gmax',\n  //     'Pikachu-Hoenn',\n  //     'Pikachu-Kalos',\n  //     'Pikachu-Original',\n  //     'Pikachu-Partner',\n  //     'Pikachu-Sinnoh',\n  //     'Pikachu-Unova',\n  //     'Pikachu-World',\n  //   ],\n  // },\n  // Ponyta: {otherFormes: ['Ponyta-Galar']},\n  // Pyroak: {bs: {sa: 70, sd: 65}},\n  // Rapidash: {otherFormes: ['Rapidash-Galar']},\n  Slowbro: {otherFormes: ['Slowbro-Galar']}, // , 'Slowbro-Mega']},\n  Slowking: {otherFormes: ['Slowking-Galar']},\n  Slowpoke: {otherFormes: ['Slowpoke-Galar']},\n  // Snorlax: {otherFormes: ['Snorlax-Gmax']},\n  // Stunfisk: {otherFormes: ['Stunfisk-Galar']},\n  // Venusaur: {otherFormes: ['Venusaur-Gmax', 'Venusaur-Mega']},\n  // Voodoom: {bs: {sa: 130}},\n  Weezing: {otherFormes: ['Weezing-Galar']},\n  // Yamask: {otherFormes: ['Yamask-Galar']},\n  Zapdos: {otherFormes: ['Zapdos-Galar']},\n  // Zigzagoon: {otherFormes: ['Zigzagoon-Galar']},\n  // Alcremie: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 65, at: 60, df: 75, sa: 110, sd: 121, sp: 64},\n  //   weightkg: 0.5,\n  //   abilities: {0: 'Sweet Veil'},\n  //   otherFormes: ['Alcremie-Gmax'],\n  // },\n  // 'Alcremie-Gmax': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 65, at: 60, df: 75, sa: 110, sd: 121, sp: 64},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sweet Veil'},\n  //   baseSpecies: 'Alcremie',\n  // },\n  Appletun: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 110, at: 85, df: 80, sa: 100, sd: 80, sp: 30},\n    weightkg: 13,\n    abilities: {0: 'Ripen'},\n    otherFormes: ['Appletun-Gmax'],\n  },\n  // 'Appletun-Gmax': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 110, at: 85, df: 80, sa: 100, sd: 80, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Ripen'},\n  //   baseSpecies: 'Appletun',\n  // },\n  Applin: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 40, at: 40, df: 80, sa: 40, sd: 40, sp: 20},\n    weightkg: 0.5,\n    abilities: {0: 'Ripen'},\n    nfe: true,\n  },\n  // Arctovish: {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 90, at: 90, df: 100, sa: 80, sd: 90, sp: 55},\n  //   weightkg: 175,\n  //   abilities: {0: 'Water Absorb'},\n  //   gender: 'N',\n  // },\n  // Arctozolt: {\n  //   types: ['Electric', 'Ice'],\n  //   bs: {hp: 90, at: 100, df: 90, sa: 90, sd: 80, sp: 55},\n  //   weightkg: 150,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  Arrokuda: {\n    types: ['Water'],\n    bs: {hp: 41, at: 63, df: 40, sa: 40, sd: 30, sp: 66},\n    weightkg: 1,\n    abilities: {0: 'Swift Swim'},\n    nfe: true,\n  },\n  'Articuno-Galar': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 90, at: 85, df: 85, sa: 125, sd: 100, sp: 95},\n    weightkg: 50.9,\n    abilities: {0: 'Competitive'},\n    gender: 'N',\n    baseSpecies: 'Articuno',\n  },\n  // Astrolotl: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 108, at: 108, df: 74, sa: 92, sd: 64, sp: 114},\n  //   weightkg: 50,\n  //   abilities: {0: 'Regenerator'},\n  // },\n  Barraskewda: {\n    types: ['Water'],\n    bs: {hp: 61, at: 123, df: 60, sa: 60, sd: 50, sp: 136},\n    weightkg: 30,\n    abilities: {0: 'Swift Swim'},\n  },\n  // 'Blastoise-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 83, df: 100, sa: 85, sd: 105, sp: 78},\n  //   weightkg: 0,\n  //   abilities: {0: 'Torrent'},\n  //   baseSpecies: 'Blastoise',\n  // },\n  // Blipbug: {\n  //   types: ['Bug'],\n  //   bs: {hp: 25, at: 20, df: 20, sa: 25, sd: 45, sp: 45},\n  //   weightkg: 8,\n  //   abilities: {0: 'Swarm'},\n  //   nfe: true,\n  // },\n  // Boltund: {\n  //   types: ['Electric'],\n  //   bs: {hp: 69, at: 90, df: 60, sa: 90, sd: 60, sp: 121},\n  //   weightkg: 34,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  // 'Butterfree-Gmax': {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 45, df: 50, sa: 90, sd: 80, sp: 70},\n  //   weightkg: 0,\n  //   abilities: {0: 'Compound Eyes'},\n  //   baseSpecies: 'Butterfree',\n  // },\n  Calyrex: {\n    types: ['Psychic', 'Grass'],\n    bs: {hp: 100, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 7.7,\n    abilities: {0: 'Unnerve'},\n    gender: 'N',\n    otherFormes: ['Calyrex-Ice', 'Calyrex-Shadow'],\n  },\n  'Calyrex-Ice': {\n    types: ['Psychic', 'Ice'],\n    bs: {hp: 100, at: 165, df: 150, sa: 85, sd: 130, sp: 50},\n    weightkg: 809.1,\n    abilities: {0: 'As One (Glastrier)'},\n    gender: 'N',\n    baseSpecies: 'Calyrex',\n  },\n  'Calyrex-Shadow': {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 100, at: 85, df: 80, sa: 165, sd: 100, sp: 150},\n    weightkg: 53.6,\n    abilities: {0: 'As One (Spectrier)'},\n    gender: 'N',\n    baseSpecies: 'Calyrex',\n  },\n  Carkol: {\n    types: ['Rock', 'Fire'],\n    bs: {hp: 80, at: 60, df: 90, sa: 60, sd: 70, sp: 50},\n    weightkg: 78,\n    abilities: {0: 'Steam Engine'},\n    nfe: true,\n  },\n  // Centiskorch: {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 100, at: 115, df: 65, sa: 90, sd: 90, sp: 65},\n  //   weightkg: 120,\n  //   abilities: {0: 'Flash Fire'},\n  //   otherFormes: ['Centiskorch-Gmax'],\n  // },\n  // 'Centiskorch-Gmax': {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 100, at: 115, df: 65, sa: 90, sd: 90, sp: 65},\n  //   weightkg: 0,\n  //   abilities: {0: 'Flash Fire'},\n  //   baseSpecies: 'Centiskorch',\n  // },\n  // 'Charizard-Gmax': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 78, at: 84, df: 78, sa: 109, sd: 85, sp: 100},\n  //   weightkg: 0,\n  //   abilities: {0: 'Blaze'},\n  //   baseSpecies: 'Charizard',\n  // },\n  Chewtle: {\n    types: ['Water'],\n    bs: {hp: 50, at: 64, df: 50, sa: 38, sd: 38, sp: 44},\n    weightkg: 8.5,\n    abilities: {0: 'Strong Jaw'},\n    nfe: true,\n  },\n  // Chromera: {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 85, at: 85, df: 115, sa: 115, sd: 100, sp: 100},\n  //   weightkg: 215,\n  //   abilities: {0: 'Color Change'},\n  //   gender: 'N',\n  // },\n  Cinderace: {\n    types: ['Fire'],\n    bs: {hp: 80, at: 116, df: 75, sa: 65, sd: 75, sp: 119},\n    weightkg: 33,\n    abilities: {0: 'Blaze'},\n    otherFormes: ['Cinderace-Gmax'],\n  },\n  // 'Cinderace-Gmax': {\n  //   types: ['Fire'],\n  //   bs: {hp: 80, at: 116, df: 75, sa: 65, sd: 75, sp: 119},\n  //   weightkg: 0,\n  //   abilities: {0: 'Blaze'},\n  //   baseSpecies: 'Cinderace',\n  // },\n  // Clobbopus: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 68, df: 60, sa: 50, sd: 50, sp: 32},\n  //   weightkg: 4,\n  //   abilities: {0: 'Limber'},\n  //   nfe: true,\n  // },\n  Coalossal: {\n    types: ['Rock', 'Fire'],\n    bs: {hp: 110, at: 80, df: 120, sa: 80, sd: 90, sp: 30},\n    weightkg: 310.5,\n    abilities: {0: 'Steam Engine'},\n    otherFormes: ['Coalossal-Gmax'],\n  },\n  // 'Coalossal-Gmax': {\n  //   types: ['Rock', 'Fire'],\n  //   bs: {hp: 110, at: 80, df: 120, sa: 80, sd: 90, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Steam Engine'},\n  //   baseSpecies: 'Coalossal',\n  // },\n  Copperajah: {\n    types: ['Steel'],\n    bs: {hp: 122, at: 130, df: 69, sa: 80, sd: 69, sp: 30},\n    weightkg: 650,\n    abilities: {0: 'Sheer Force'},\n    otherFormes: ['Copperajah-Gmax'],\n  },\n  // 'Copperajah-Gmax': {\n  //   types: ['Steel'],\n  //   bs: {hp: 122, at: 130, df: 69, sa: 80, sd: 69, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sheer Force'},\n  //   baseSpecies: 'Copperajah',\n  // },\n  // 'Corsola-Galar': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 55, df: 100, sa: 65, sd: 100, sp: 30},\n  //   weightkg: 0.5,\n  //   abilities: {0: 'Weak Armor'},\n  //   nfe: true,\n  //   baseSpecies: 'Corsola',\n  // },\n  Corviknight: {\n    types: ['Flying', 'Steel'],\n    bs: {hp: 98, at: 87, df: 105, sa: 53, sd: 85, sp: 67},\n    weightkg: 75,\n    abilities: {0: 'Pressure'},\n    otherFormes: ['Corviknight-Gmax'],\n  },\n  // 'Corviknight-Gmax': {\n  //   types: ['Flying', 'Steel'],\n  //   bs: {hp: 98, at: 87, df: 105, sa: 53, sd: 85, sp: 67},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pressure'},\n  //   baseSpecies: 'Corviknight',\n  // },\n  Corvisquire: {\n    types: ['Flying'],\n    bs: {hp: 68, at: 67, df: 55, sa: 43, sd: 55, sp: 77},\n    weightkg: 16,\n    abilities: {0: 'Keen Eye'},\n    nfe: true,\n  },\n  Cramorant: {\n    types: ['Flying', 'Water'],\n    bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n    weightkg: 18,\n    abilities: {0: 'Gulp Missile'},\n    // otherFormes: ['Cramorant-Gorging', 'Cramorant-Gulping'],\n  },\n  // 'Cramorant-Gorging': {\n  //   types: ['Flying', 'Water'],\n  //   bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n  //   weightkg: 18,\n  //   abilities: {0: 'Gulp Missile'},\n  //   baseSpecies: 'Cramorant',\n  // },\n  // 'Cramorant-Gulping': {\n  //   types: ['Flying', 'Water'],\n  //   bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n  //   weightkg: 18,\n  //   abilities: {0: 'Gulp Missile'},\n  //   baseSpecies: 'Cramorant',\n  // },\n  Cufant: {\n    types: ['Steel'],\n    bs: {hp: 72, at: 80, df: 49, sa: 40, sd: 49, sp: 40},\n    weightkg: 100,\n    abilities: {0: 'Sheer Force'},\n    nfe: true,\n  },\n  // Cursola: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 95, df: 50, sa: 145, sd: 130, sp: 30},\n  //   weightkg: 0.4,\n  //   abilities: {0: 'Weak Armor'},\n  // },\n  // 'Darmanitan-Galar': {\n  //   types: ['Ice'],\n  //   bs: {hp: 105, at: 140, df: 55, sa: 30, sd: 55, sp: 95},\n  //   weightkg: 120,\n  //   abilities: {0: 'Gorilla Tactics'},\n  //   baseSpecies: 'Darmanitan',\n  // },\n  // 'Darmanitan-Galar-Zen': {\n  //   types: ['Ice', 'Fire'],\n  //   bs: {hp: 105, at: 160, df: 55, sa: 30, sd: 55, sp: 135},\n  //   weightkg: 120,\n  //   abilities: {0: 'Zen Mode'},\n  //   baseSpecies: 'Darmanitan',\n  // },\n  // 'Darumaka-Galar': {\n  //   types: ['Ice'],\n  //   bs: {hp: 70, at: 90, df: 45, sa: 15, sd: 45, sp: 50},\n  //   weightkg: 40,\n  //   abilities: {0: 'Hustle'},\n  //   nfe: true,\n  //   baseSpecies: 'Darumaka',\n  // },\n  // Dottler: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 50, at: 35, df: 80, sa: 50, sd: 90, sp: 30},\n  //   weightkg: 19.5,\n  //   abilities: {0: 'Swarm'},\n  //   nfe: true,\n  // },\n  // Dracovish: {\n  //   types: ['Water', 'Dragon'],\n  //   bs: {hp: 90, at: 90, df: 100, sa: 70, sd: 80, sp: 75},\n  //   weightkg: 215,\n  //   abilities: {0: 'Water Absorb'},\n  //   gender: 'N',\n  // },\n  // Dracozolt: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 90, at: 100, df: 90, sa: 80, sd: 70, sp: 75},\n  //   weightkg: 190,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  Dragapult: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 88, at: 120, df: 75, sa: 100, sd: 75, sp: 142},\n    weightkg: 50,\n    abilities: {0: 'Clear Body'},\n  },\n  Drakloak: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 68, at: 80, df: 50, sa: 60, sd: 50, sp: 102},\n    weightkg: 11,\n    abilities: {0: 'Clear Body'},\n    nfe: true,\n  },\n  Drednaw: {\n    types: ['Water', 'Rock'],\n    bs: {hp: 90, at: 115, df: 90, sa: 48, sd: 68, sp: 74},\n    weightkg: 115.5,\n    abilities: {0: 'Strong Jaw'},\n    otherFormes: ['Drednaw-Gmax'],\n  },\n  // 'Drednaw-Gmax': {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 90, at: 115, df: 90, sa: 48, sd: 68, sp: 74},\n  //   weightkg: 0,\n  //   abilities: {0: 'Strong Jaw'},\n  //   baseSpecies: 'Drednaw',\n  // },\n  Dreepy: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 28, at: 60, df: 30, sa: 40, sd: 30, sp: 82},\n    weightkg: 2,\n    abilities: {0: 'Clear Body'},\n    nfe: true,\n  },\n  Drizzile: {\n    types: ['Water'],\n    bs: {hp: 65, at: 60, df: 55, sa: 95, sd: 55, sp: 90},\n    weightkg: 11.5,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  // Dubwool: {\n  //   types: ['Normal'],\n  //   bs: {hp: 72, at: 80, df: 100, sa: 60, sd: 90, sp: 88},\n  //   weightkg: 43,\n  //   abilities: {0: 'Fluffy'},\n  // },\n  // Duraludon: {\n  //   types: ['Steel', 'Dragon'],\n  //   bs: {hp: 70, at: 95, df: 115, sa: 120, sd: 50, sp: 85},\n  //   weightkg: 40,\n  //   abilities: {0: 'Light Metal'},\n  //   otherFormes: ['Duraludon-Gmax'],\n  // },\n  // 'Duraludon-Gmax': {\n  //   types: ['Steel', 'Dragon'],\n  //   bs: {hp: 70, at: 95, df: 115, sa: 120, sd: 50, sp: 85},\n  //   weightkg: 0,\n  //   abilities: {0: 'Light Metal'},\n  //   baseSpecies: 'Duraludon',\n  // },\n  // 'Eevee-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 55, df: 50, sa: 45, sd: 65, sp: 55},\n  //   weightkg: 0,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Eevee',\n  // },\n  Eiscue: {\n    types: ['Ice'],\n    bs: {hp: 75, at: 80, df: 110, sa: 65, sd: 90, sp: 50},\n    weightkg: 89,\n    abilities: {0: 'Ice Face'},\n    otherFormes: ['Eiscue-Noice'],\n  },\n  'Eiscue-Noice': {\n    types: ['Ice'],\n    bs: {hp: 75, at: 80, df: 70, sa: 65, sd: 50, sp: 130},\n    weightkg: 89,\n    abilities: {0: 'Ice Face'},\n    baseSpecies: 'Eiscue',\n  },\n  // Eldegoss: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 50, df: 90, sa: 80, sd: 120, sp: 60},\n  //   weightkg: 2.5,\n  //   abilities: {0: 'Cotton Down'},\n  // },\n  Eternatus: {\n    types: ['Poison', 'Dragon'],\n    bs: {hp: 140, at: 85, df: 95, sa: 145, sd: 95, sp: 130},\n    weightkg: 950,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    otherFormes: ['Eternatus-Eternamax'],\n  },\n  // 'Eternatus-Eternamax': {\n  //   types: ['Poison', 'Dragon'],\n  //   bs: {hp: 255, at: 115, df: 250, sa: 125, sd: 250, sp: 130},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Eternatus',\n  // },\n  Falinks: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 100, df: 100, sa: 70, sd: 60, sp: 75},\n    weightkg: 62,\n    abilities: {0: 'Battle Armor'},\n    gender: 'N',\n  },\n  // 'Farfetch\\u2019d-Galar': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 52, at: 95, df: 55, sa: 58, sd: 62, sp: 55},\n  //   weightkg: 15,\n  //   abilities: {0: 'Steadfast'},\n  //   nfe: true,\n  //   baseSpecies: 'Farfetch\\u2019d',\n  // },\n  Flapple: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 70, at: 110, df: 80, sa: 95, sd: 60, sp: 70},\n    weightkg: 1,\n    abilities: {0: 'Ripen'},\n    otherFormes: ['Flapple-Gmax'],\n  },\n  // 'Flapple-Gmax': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 70, at: 110, df: 80, sa: 95, sd: 60, sp: 70},\n  //   weightkg: 0,\n  //   abilities: {0: 'Ripen'},\n  //   baseSpecies: 'Flapple',\n  // },\n  Frosmoth: {\n    types: ['Ice', 'Bug'],\n    bs: {hp: 70, at: 65, df: 60, sa: 125, sd: 90, sp: 65},\n    weightkg: 42,\n    abilities: {0: 'Shield Dust'},\n  },\n  // 'Garbodor-Gmax': {\n  //   types: ['Poison'],\n  //   bs: {hp: 80, at: 95, df: 82, sa: 60, sd: 82, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Stench'},\n  //   baseSpecies: 'Garbodor',\n  // },\n  // 'Gengar-Gmax': {\n  //   types: ['Ghost', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 60, sa: 130, sd: 75, sp: 110},\n  //   weightkg: 0,\n  //   abilities: {0: 'Cursed Body'},\n  //   baseSpecies: 'Gengar',\n  // },\n  Glastrier: {\n    types: ['Ice'],\n    bs: {hp: 100, at: 145, df: 130, sa: 65, sd: 110, sp: 30},\n    weightkg: 800,\n    abilities: {0: 'Chilling Neigh'},\n    gender: 'N',\n  },\n  // Gossifleur: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 40, df: 60, sa: 40, sd: 60, sp: 10},\n  //   weightkg: 2.2,\n  //   abilities: {0: 'Cotton Down'},\n  //   nfe: true,\n  // },\n  // Grapploct: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 80, at: 118, df: 90, sa: 70, sd: 80, sp: 42},\n  //   weightkg: 39,\n  //   abilities: {0: 'Limber'},\n  // },\n  Greedent: {\n    types: ['Normal'],\n    bs: {hp: 120, at: 95, df: 95, sa: 55, sd: 75, sp: 20},\n    weightkg: 6,\n    abilities: {0: 'Cheek Pouch'},\n  },\n  Grimmsnarl: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 95, at: 120, df: 65, sa: 95, sd: 75, sp: 60},\n    weightkg: 61,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Grimmsnarl-Gmax'],\n  },\n  // 'Grimmsnarl-Gmax': {\n  //   types: ['Dark', 'Fairy'],\n  //   bs: {hp: 95, at: 120, df: 65, sa: 95, sd: 75, sp: 60},\n  //   weightkg: 0,\n  //   abilities: {0: 'Prankster'},\n  //   baseSpecies: 'Grimmsnarl',\n  // },\n  Grookey: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 65, df: 50, sa: 40, sd: 40, sp: 65},\n    weightkg: 5,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Hatenna: {\n    types: ['Psychic'],\n    bs: {hp: 42, at: 30, df: 45, sa: 56, sd: 53, sp: 39},\n    weightkg: 3.4,\n    abilities: {0: 'Healer'},\n    nfe: true,\n  },\n  Hatterene: {\n    types: ['Psychic', 'Fairy'],\n    bs: {hp: 57, at: 90, df: 95, sa: 136, sd: 103, sp: 29},\n    weightkg: 5.1,\n    abilities: {0: 'Healer'},\n    otherFormes: ['Hatterene-Gmax'],\n  },\n  // 'Hatterene-Gmax': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 57, at: 90, df: 95, sa: 136, sd: 103, sp: 29},\n  //   weightkg: 0,\n  //   abilities: {0: 'Healer'},\n  //   baseSpecies: 'Hatterene',\n  // },\n  Hattrem: {\n    types: ['Psychic'],\n    bs: {hp: 57, at: 40, df: 65, sa: 86, sd: 73, sp: 49},\n    weightkg: 4.8,\n    abilities: {0: 'Healer'},\n    nfe: true,\n  },\n  Impidimp: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 45, at: 45, df: 30, sa: 55, sd: 40, sp: 50},\n    weightkg: 5.5,\n    abilities: {0: 'Prankster'},\n    nfe: true,\n  },\n  Indeedee: {\n    types: ['Psychic', 'Normal'],\n    bs: {hp: 60, at: 65, df: 55, sa: 105, sd: 95, sp: 95},\n    weightkg: 28,\n    abilities: {0: 'Inner Focus'},\n    otherFormes: ['Indeedee-F'],\n  },\n  'Indeedee-F': {\n    types: ['Psychic', 'Normal'],\n    bs: {hp: 70, at: 55, df: 65, sa: 95, sd: 105, sp: 85},\n    weightkg: 28,\n    abilities: {0: 'Own Tempo'},\n    baseSpecies: 'Indeedee',\n  },\n  Inteleon: {\n    types: ['Water'],\n    bs: {hp: 70, at: 85, df: 65, sa: 125, sd: 65, sp: 120},\n    weightkg: 45.2,\n    abilities: {0: 'Torrent'},\n    // otherFormes: ['Inteleon-Gmax'],\n  },\n  // 'Inteleon-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 70, at: 85, df: 65, sa: 125, sd: 65, sp: 120},\n  //   weightkg: 0,\n  //   abilities: {0: 'Torrent'},\n  //   baseSpecies: 'Inteleon',\n  // },\n  // 'Kingler-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 130, df: 115, sa: 50, sd: 50, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Hyper Cutter'},\n  //   baseSpecies: 'Kingler',\n  // },\n  'Kubfu': {\n    types: ['Fighting'],\n    bs: {hp: 60, at: 90, df: 60, sa: 53, sd: 50, sp: 72},\n    weightkg: 12,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  // 'Lapras-Gmax': {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 130, at: 85, df: 80, sa: 85, sd: 95, sp: 60},\n  //   weightkg: 0,\n  //   abilities: {0: 'Water Absorb'},\n  //   baseSpecies: 'Lapras',\n  // },\n  // 'Linoone-Galar': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 78, at: 70, df: 61, sa: 50, sd: 61, sp: 100},\n  //   weightkg: 32.5,\n  //   abilities: {0: 'Pickup'},\n  //   nfe: true,\n  //   baseSpecies: 'Linoone',\n  // },\n  // Magearna: {otherFormes: ['Magearna-Original']},\n  // 'Magearna-Original': {\n  //   baseSpecies: 'Magearna',\n  //   types: ['Steel', 'Fairy'],\n  //   bs: {hp: 80, at: 95, df: 115, sa: 130, sd: 115, sp: 65},\n  //   weightkg: 80.5,\n  //   gender: 'N',\n  //   abilities: {0: 'Soul-Heart'},\n  // },\n  // 'Machamp-Gmax': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 90, at: 130, df: 80, sa: 65, sd: 85, sp: 55},\n  //   weightkg: 0,\n  //   abilities: {0: 'Guts'},\n  //   baseSpecies: 'Machamp',\n  // },\n  // 'Melmetal-Gmax': {\n  //   types: ['Steel'],\n  //   bs: {hp: 135, at: 143, df: 143, sa: 80, sd: 65, sp: 34},\n  //   weightkg: 0,\n  //   abilities: {0: 'Iron Fist'},\n  //   baseSpecies: 'Melmetal',\n  //   gender: 'N',\n  // },\n  'Meowth-Galar': {\n    types: ['Steel'],\n    bs: {hp: 50, at: 65, df: 55, sa: 40, sd: 40, sp: 40},\n    weightkg: 7.5,\n    abilities: {0: 'Pickup'},\n    nfe: true,\n    baseSpecies: 'Meowth',\n  },\n  // 'Meowth-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 40, at: 45, df: 35, sa: 40, sd: 40, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Meowth',\n  // },\n  // Miasmaw: {\n  //   types: ['Bug', 'Dragon'],\n  //   bs: {hp: 85, at: 135, df: 60, sa: 88, sd: 105, sp: 99},\n  //   weightkg: 57,\n  //   abilities: {0: 'Neutralizing Gas'},\n  // },\n  // Miasmite: {\n  //   types: ['Bug', 'Dragon'],\n  //   bs: {hp: 40, at: 85, df: 60, sa: 52, sd: 52, sp: 44},\n  //   weightkg: 10.1,\n  //   abilities: {0: 'Neutralizing Gas'},\n  //   nfe: true,\n  // },\n  // Milcery: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 45, at: 40, df: 40, sa: 50, sd: 61, sp: 34},\n  //   weightkg: 0.3,\n  //   abilities: {0: 'Sweet Veil'},\n  //   nfe: true,\n  // },\n  'Moltres-Galar': {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 90, at: 85, df: 90, sa: 100, sd: 125, sp: 90},\n    weightkg: 66,\n    abilities: {0: 'Berserk'},\n    gender: 'N',\n    baseSpecies: 'Moltres',\n  },\n  Morgrem: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 65, at: 60, df: 45, sa: 75, sd: 55, sp: 70},\n    weightkg: 12.5,\n    abilities: {0: 'Prankster'},\n    nfe: true,\n  },\n  Morpeko: {\n    types: ['Electric', 'Dark'],\n    bs: {hp: 58, at: 95, df: 58, sa: 70, sd: 58, sp: 97},\n    weightkg: 3,\n    abilities: {0: 'Hunger Switch'},\n    // otherFormes: ['Morpeko-Hangry'],\n  },\n  // 'Morpeko-Hangry': {\n  //   types: ['Electric', 'Dark'],\n  //   bs: {hp: 58, at: 95, df: 58, sa: 70, sd: 58, sp: 97},\n  //   weightkg: 3,\n  //   abilities: {0: 'Hunger Switch'},\n  //   baseSpecies: 'Morpeko',\n  // },\n  // 'Mr. Mime-Galar': {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 50, at: 65, df: 65, sa: 90, sd: 90, sp: 100},\n  //   weightkg: 56.8,\n  //   abilities: {0: 'Vital Spirit'},\n  //   nfe: true,\n  //   baseSpecies: 'Mr. Mime',\n  // },\n  // 'Mr. Rime': {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 80, at: 85, df: 75, sa: 110, sd: 100, sp: 70},\n  //   weightkg: 58.2,\n  //   abilities: {0: 'Tangled Feet'},\n  // },\n  // Nickit: {\n  //   types: ['Dark'],\n  //   bs: {hp: 40, at: 28, df: 28, sa: 47, sd: 52, sp: 50},\n  //   weightkg: 8.9,\n  //   abilities: {0: 'Run Away'},\n  //   nfe: true,\n  // },\n  // Obstagoon: {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 93, at: 90, df: 101, sa: 60, sd: 81, sp: 95},\n  //   weightkg: 46,\n  //   abilities: {0: 'Reckless'},\n  // },\n  // Orbeetle: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 45, df: 110, sa: 80, sd: 120, sp: 90},\n  //   weightkg: 40.8,\n  //   abilities: {0: 'Swarm'},\n  //   otherFormes: ['Orbeetle-Gmax'],\n  // },\n  // 'Orbeetle-Gmax': {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 45, df: 110, sa: 80, sd: 120, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Swarm'},\n  //   baseSpecies: 'Orbeetle',\n  // },\n  Perrserker: {\n    types: ['Steel'],\n    bs: {hp: 70, at: 110, df: 100, sa: 50, sd: 60, sp: 50},\n    weightkg: 28,\n    abilities: {0: 'Battle Armor'},\n  },\n  // 'Pikachu-Gmax': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-World': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  Pincurchin: {\n    types: ['Electric'],\n    bs: {hp: 48, at: 101, df: 95, sa: 91, sd: 85, sp: 15},\n    weightkg: 1,\n    abilities: {0: 'Lightning Rod'},\n  },\n  Polteageist: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 65, df: 65, sa: 134, sd: 114, sp: 70},\n    weightkg: 0.4,\n    abilities: {0: 'Weak Armor'},\n    // otherFormes: ['Polteageist-Antique'],\n    gender: 'N',\n  },\n  // 'Polteageist-Antique': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 65, df: 65, sa: 134, sd: 114, sp: 70},\n  //   weightkg: 0.4,\n  //   abilities: {0: 'Weak Armor'},\n  //   baseSpecies: 'Polteageist',\n  //   gender: 'N',\n  // },\n  // 'Ponyta-Galar': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 85, df: 55, sa: 65, sd: 65, sp: 90},\n  //   weightkg: 24,\n  //   abilities: {0: 'Run Away'},\n  //   nfe: true,\n  //   baseSpecies: 'Ponyta',\n  // },\n  Raboot: {\n    types: ['Fire'],\n    bs: {hp: 65, at: 86, df: 60, sa: 55, sd: 60, sp: 94},\n    weightkg: 9,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  // 'Rapidash-Galar': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 65, at: 100, df: 70, sa: 80, sd: 80, sp: 105},\n  //   weightkg: 80,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Rapidash',\n  // },\n  Regidrago: {\n    types: ['Dragon'],\n    bs: {hp: 200, at: 100, df: 50, sa: 100, sd: 50, sp: 80},\n    weightkg: 200,\n    abilities: {0: 'Dragon\\'s Maw'},\n    gender: 'N',\n  },\n  Regieleki: {\n    types: ['Electric'],\n    bs: {hp: 80, at: 100, df: 50, sa: 100, sd: 50, sp: 200},\n    weightkg: 145,\n    abilities: {0: 'Transistor'},\n    gender: 'N',\n  },\n  Rillaboom: {\n    types: ['Grass'],\n    bs: {hp: 100, at: 125, df: 90, sa: 60, sd: 70, sp: 85},\n    weightkg: 90,\n    abilities: {0: 'Overgrow'},\n    otherFormes: ['Rillaboom-Gmax'],\n  },\n  // 'Rillaboom-Gmax': {\n  //   types: ['Grass'],\n  //   bs: {hp: 100, at: 125, df: 90, sa: 60, sd: 70, sp: 85},\n  //   weightkg: 0,\n  //   abilities: {0: 'Overgrow'},\n  //   baseSpecies: 'Rillaboom',\n  // },\n  Rolycoly: {\n    types: ['Rock'],\n    bs: {hp: 30, at: 40, df: 50, sa: 40, sd: 50, sp: 30},\n    weightkg: 12,\n    abilities: {0: 'Steam Engine'},\n    nfe: true,\n  },\n  Rookidee: {\n    types: ['Flying'],\n    bs: {hp: 38, at: 47, df: 35, sa: 33, sd: 35, sp: 57},\n    weightkg: 1.8,\n    abilities: {0: 'Keen Eye'},\n    nfe: true,\n  },\n  // Runerigus: {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 58, at: 95, df: 145, sa: 50, sd: 105, sp: 30},\n  //   weightkg: 66.6,\n  //   abilities: {0: 'Wandering Spirit'},\n  // },\n  // Saharaja: {\n  //   types: ['Ground'],\n  //   bs: {hp: 70, at: 112, df: 105, sa: 65, sd: 123, sp: 78},\n  //   weightkg: 303.9,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  // Saharascal: {\n  //   types: ['Ground'],\n  //   bs: {hp: 50, at: 80, df: 65, sa: 45, sd: 90, sp: 70},\n  //   weightkg: 48,\n  //   abilities: {0: 'Water Absorb'},\n  //   nfe: true,\n  // },\n  Sandaconda: {\n    types: ['Ground'],\n    bs: {hp: 72, at: 107, df: 125, sa: 65, sd: 70, sp: 71},\n    weightkg: 65.5,\n    abilities: {0: 'Sand Spit'},\n    otherFormes: ['Sandaconda-Gmax'],\n  },\n  // 'Sandaconda-Gmax': {\n  //   types: ['Ground'],\n  //   bs: {hp: 72, at: 107, df: 125, sa: 65, sd: 70, sp: 71},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sand Spit'},\n  //   baseSpecies: 'Sandaconda',\n  // },\n  Scorbunny: {\n    types: ['Fire'],\n    bs: {hp: 50, at: 71, df: 40, sa: 40, sd: 40, sp: 69},\n    weightkg: 4.5,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Silicobra: {\n    types: ['Ground'],\n    bs: {hp: 52, at: 57, df: 75, sa: 35, sd: 50, sp: 46},\n    weightkg: 7.6,\n    abilities: {0: 'Sand Spit'},\n    nfe: true,\n  },\n  Sinistea: {\n    types: ['Ghost'],\n    bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 50},\n    weightkg: 0.2,\n    abilities: {0: 'Weak Armor'},\n    nfe: true,\n    // otherFormes: ['Sinistea-Antique'],\n    gender: 'N',\n  },\n  // 'Sinistea-Antique': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 50},\n  //   weightkg: 0.2,\n  //   abilities: {0: 'Weak Armor'},\n  //   nfe: true,\n  //   baseSpecies: 'Sinistea',\n  //   gender: 'N',\n  // },\n  // 'Sirfetch\\u2019d': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 62, at: 135, df: 95, sa: 68, sd: 82, sp: 65},\n  //   weightkg: 117,\n  //   abilities: {0: 'Steadfast'},\n  // },\n  // Sizzlipede: {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 50, at: 65, df: 45, sa: 50, sd: 50, sp: 45},\n  //   weightkg: 1,\n  //   abilities: {0: 'Flash Fire'},\n  //   nfe: true,\n  // },\n  Skwovet: {\n    types: ['Normal'],\n    bs: {hp: 70, at: 55, df: 55, sa: 35, sd: 35, sp: 25},\n    weightkg: 2.5,\n    abilities: {0: 'Cheek Pouch'},\n    nfe: true,\n  },\n  'Slowbro-Galar': {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 95, at: 100, df: 95, sa: 100, sd: 70, sp: 30},\n    weightkg: 70.5,\n    abilities: {0: 'Quick Draw'},\n    baseSpecies: 'Slowbro',\n  },\n  'Slowking-Galar': {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 95, at: 65, df: 80, sa: 110, sd: 110, sp: 30},\n    weightkg: 79.5,\n    abilities: {0: 'Curious Medicine'},\n    baseSpecies: 'Slowking',\n  },\n  'Slowpoke-Galar': {\n    types: ['Psychic'],\n    bs: {hp: 90, at: 65, df: 65, sa: 40, sd: 40, sp: 15},\n    weightkg: 36,\n    nfe: true,\n    abilities: {0: 'Gluttony'},\n    baseSpecies: 'Slowpoke',\n  },\n  // Solotl: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 68, at: 48, df: 34, sa: 72, sd: 24, sp: 84},\n  //   weightkg: 11.8,\n  //   nfe: true,\n  //   abilities: {0: 'Regenerator'},\n  // },\n  Snom: {\n    types: ['Ice', 'Bug'],\n    bs: {hp: 30, at: 25, df: 35, sa: 45, sd: 30, sp: 20},\n    weightkg: 3.8,\n    abilities: {0: 'Shield Dust'},\n    nfe: true,\n  },\n  // 'Snorlax-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 160, at: 110, df: 65, sa: 65, sd: 110, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Immunity'},\n  //   baseSpecies: 'Snorlax',\n  // },\n  Sobble: {\n    types: ['Water'],\n    bs: {hp: 50, at: 40, df: 40, sa: 70, sd: 40, sp: 70},\n    weightkg: 4,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Spectrier: {\n    types: ['Ghost'],\n    bs: {hp: 100, at: 65, df: 60, sa: 145, sd: 80, sp: 130},\n    weightkg: 44.5,\n    abilities: {0: 'Grim Neigh'},\n    gender: 'N',\n  },\n  Stonjourner: {\n    types: ['Rock'],\n    bs: {hp: 100, at: 125, df: 135, sa: 20, sd: 20, sp: 70},\n    weightkg: 520,\n    abilities: {0: 'Power Spot'},\n  },\n  // 'Stunfisk-Galar': {\n  //   types: ['Ground', 'Steel'],\n  //   bs: {hp: 109, at: 81, df: 99, sa: 66, sd: 84, sp: 32},\n  //   weightkg: 20.5,\n  //   abilities: {0: 'Mimicry'},\n  //   baseSpecies: 'Stunfisk',\n  // },\n  // Thievul: {\n  //   types: ['Dark'],\n  //   bs: {hp: 70, at: 58, df: 58, sa: 87, sd: 92, sp: 90},\n  //   weightkg: 19.9,\n  //   abilities: {0: 'Run Away'},\n  // },\n  Thwackey: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 85, df: 70, sa: 55, sd: 60, sp: 80},\n    weightkg: 14,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Toxel: {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 40, at: 38, df: 35, sa: 54, sd: 35, sp: 40},\n    weightkg: 11,\n    abilities: {0: 'Rattled'},\n    nfe: true,\n  },\n  Toxtricity: {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n    weightkg: 40,\n    abilities: {0: 'Punk Rock'},\n    otherFormes: ['Toxtricity-Gmax', 'Toxtricity-Low-Key'],\n  },\n  // 'Toxtricity-Gmax': {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Punk Rock'},\n  //   baseSpecies: 'Toxtricity',\n  // },\n  'Toxtricity-Low-Key': {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n    weightkg: 40,\n    abilities: {0: 'Punk Rock'},\n    baseSpecies: 'Toxtricity',\n  },\n  Urshifu: {\n    types: ['Fighting', 'Dark'],\n    bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n    weightkg: 105,\n    abilities: {0: 'Unseen Fist'},\n    otherFormes: ['Urshifu-Gmax', 'Urshifu-Rapid-Strike', 'Urshifu-Rapid-Strike-Gmax'],\n  },\n  'Urshifu-Rapid-Strike': {\n    types: ['Fighting', 'Water'],\n    bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n    weightkg: 105,\n    abilities: {0: 'Unseen Fist'},\n    baseSpecies: 'Urshifu',\n  },\n  // 'Urshifu-Rapid-Strike-Gmax': {\n  //   types: ['Fighting', 'Water'],\n  //   bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n  //   weightkg: 105,\n  //   abilities: {0: 'Unseen Fist'},\n  //   baseSpecies: 'Urshifu-Single-Strike',\n  // },\n  // 'Urshifu-Single-Strike-Gmax': {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n  //   weightkg: 0,\n  //   abilities: {0: 'Unseen Fist'},\n  //   baseSpecies: 'Urshifu-Single-Strike',\n  // },\n  // Venomicon: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 50, df: 113, sa: 118, sd: 90, sp: 64},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Stamina'},\n  //   otherFormes: ['Venomicon-Epilogue'],\n  //   gender: 'N',\n  // },\n  // 'Venomicon-Epilogue': {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 102, df: 85, sa: 62, sd: 85, sp: 101},\n  //   weightkg: 12.4,\n  //   abilities: {0: 'Tinted Lens'},\n  //   baseSpecies: 'Venomicon',\n  //   gender: 'N',\n  // },\n  // 'Venusaur-Gmax': {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 82, df: 83, sa: 100, sd: 100, sp: 80},\n  //   weightkg: 0,\n  //   abilities: {0: 'Overgrow'},\n  //   baseSpecies: 'Venusaur',\n  // },\n  'Weezing-Galar': {\n    types: ['Poison', 'Fairy'],\n    bs: {hp: 65, at: 90, df: 120, sa: 85, sd: 70, sp: 60},\n    weightkg: 16,\n    abilities: {0: 'Levitate'},\n    baseSpecies: 'Weezing',\n  },\n  // Wooloo: {\n  //   types: ['Normal'],\n  //   bs: {hp: 42, at: 40, df: 55, sa: 40, sd: 45, sp: 48},\n  //   weightkg: 6,\n  //   abilities: {0: 'Fluffy'},\n  //   nfe: true,\n  // },\n  // 'Yamask-Galar': {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 38, at: 55, df: 85, sa: 30, sd: 65, sp: 30},\n  //   weightkg: 1.5,\n  //   abilities: {0: 'Wandering Spirit'},\n  //   nfe: true,\n  //   baseSpecies: 'Yamask',\n  // },\n  // Yamper: {\n  //   types: ['Electric'],\n  //   bs: {hp: 59, at: 45, df: 50, sa: 40, sd: 50, sp: 26},\n  //   weightkg: 13.5,\n  //   abilities: {0: 'Ball Fetch'},\n  //   nfe: true,\n  // },\n  Zacian: {\n    types: ['Fairy'],\n    bs: {hp: 92, at: 130, df: 115, sa: 80, sd: 115, sp: 138},\n    weightkg: 110,\n    abilities: {0: 'Intrepid Sword'},\n    gender: 'N',\n    otherFormes: ['Zacian-Crowned'],\n  },\n  'Zacian-Crowned': {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 92, at: 170, df: 115, sa: 80, sd: 115, sp: 148},\n    weightkg: 355,\n    abilities: {0: 'Intrepid Sword'},\n    baseSpecies: 'Zacian',\n    gender: 'N',\n  },\n  Zamazenta: {\n    types: ['Fighting'],\n    bs: {hp: 92, at: 130, df: 115, sa: 80, sd: 115, sp: 138},\n    weightkg: 210,\n    abilities: {0: 'Dauntless Shield'},\n    gender: 'N',\n    otherFormes: ['Zamazenta-Crowned'],\n  },\n  'Zamazenta-Crowned': {\n    types: ['Fighting', 'Steel'],\n    bs: {hp: 92, at: 130, df: 145, sa: 80, sd: 145, sp: 128},\n    weightkg: 785,\n    abilities: {0: 'Dauntless Shield'},\n    baseSpecies: 'Zamazenta',\n    gender: 'N',\n  },\n  'Zapdos-Galar': {\n    types: ['Fighting', 'Flying'],\n    bs: {hp: 90, at: 125, df: 90, sa: 85, sd: 90, sp: 100},\n    weightkg: 58.2,\n    abilities: {0: 'Defiant'},\n    gender: 'N',\n    baseSpecies: 'Zapdos',\n  },\n  Zarude: {\n    types: ['Dark', 'Grass'],\n    bs: {hp: 105, at: 120, df: 105, sa: 70, sd: 95, sp: 105},\n    weightkg: 70,\n    abilities: {0: 'Leaf Guard'},\n    gender: 'N',\n    // otherFormes: ['Zarude-Dada'],\n  },\n  // 'Zarude-Dada': {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 105, at: 120, df: 105, sa: 70, sd: 95, sp: 105},\n  //   weightkg: 70,\n  //   abilities: {0: 'Leaf Guard'},\n  //   baseSpecies: 'Zarude',\n  //   gender: 'N',\n  // },\n  // 'Zigzagoon-Galar': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 38, at: 30, df: 41, sa: 30, sd: 41, sp: 60},\n  //   weightkg: 17.5,\n  //   abilities: {0: 'Pickup'},\n  //   nfe: true,\n  //   baseSpecies: 'Zigzagoon',\n  // },\n};\n\nconst SS: {[name: string]: SpeciesData} = extend(true, {}, SM, SS_PATCH);\n\n// delete SS['Pikachu-Starter'];\n// delete SS['Eevee-Starter'];\n\nconst PLA_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Arcanine: {otherFormes: ['Arcanine-Hisui']},\n  Avalugg: {otherFormes: ['Avalugg-Hisui']},\n  'Basculin': {otherFormes: ['Basculin-Blue-Striped', 'Basculin-White-Striped']},\n  Braviary: {otherFormes: ['Braviary-Hisui']},\n  Decidueye: {otherFormes: ['Decidueye-Hisui']},\n  Dialga: {otherFormes: ['Dialga-Origin']},\n  Electrode: {otherFormes: ['Electrode-Hisui']},\n  Goodra: {otherFormes: ['Goodra-Hisui']},\n  Growlithe: {otherFormes: ['Growlithe-Hisui']},\n  Lilligant: {otherFormes: ['Lilligant-Hisui']},\n  Palkia: {otherFormes: ['Palkia-Origin']},\n  Qwilfish: {otherFormes: ['Qwilfish-Hisui']},\n  Samurott: {otherFormes: ['Samurott-Hisui']},\n  Sliggoo: {otherFormes: ['Sliggoo-Hisui']},\n  Sneasel: {otherFormes: ['Sneasel-Hisui']},\n  Stantler: {nfe: true},\n  Typhlosion: {otherFormes: ['Typhlosion-Hisui']},\n  Ursaring: {nfe: true},\n  Voltorb: {otherFormes: ['Voltorb-Hisui']},\n  Zoroark: {otherFormes: ['Zoroark-Hisui']},\n  Zorua: {otherFormes: ['Zorua-Hisui']},\n  'Arcanine-Hisui': {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 95, at: 115, df: 80, sa: 95, sd: 80, sp: 90},\n    weightkg: 168,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Arcanine',\n  },\n  'Avalugg-Hisui': {\n    types: ['Ice', 'Rock'],\n    bs: {hp: 95, at: 127, df: 184, sa: 34, sd: 36, sp: 38},\n    weightkg: 262.4,\n    abilities: {0: 'Strong Jaw'},\n    baseSpecies: 'Avalugg',\n  },\n  Basculegion: {\n    types: ['Water', 'Ghost'],\n    bs: {hp: 120, at: 112, df: 65, sa: 80, sd: 75, sp: 78},\n    weightkg: 110,\n    abilities: {0: 'Swift Swim'},\n    otherFormes: ['Basculegion-F'],\n  },\n  'Basculegion-F': {\n    types: ['Water', 'Ghost'],\n    bs: {hp: 120, at: 92, df: 65, sa: 100, sd: 75, sp: 78},\n    weightkg: 110,\n    abilities: {0: 'Swift Swim'},\n    baseSpecies: 'Basculegion',\n  },\n  'Basculin-White-Striped': {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Rattled'},\n    baseSpecies: 'Basculin',\n    nfe: true,\n  },\n  'Braviary-Hisui': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 110, at: 83, df: 70, sa: 112, sd: 70, sp: 65},\n    weightkg: 43.4,\n    abilities: {0: 'Keen Eye'},\n    baseSpecies: 'Braviary',\n  },\n  'Decidueye-Hisui': {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 88, at: 112, df: 80, sa: 95, sd: 95, sp: 60},\n    weightkg: 37,\n    abilities: {0: 'Overgrow'},\n    baseSpecies: 'Decidueye',\n  },\n  'Dialga-Origin': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 100, at: 100, df: 120, sa: 150, sd: 120, sp: 90},\n    weightkg: 850,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n    baseSpecies: 'Dialga',\n  },\n  'Electrode-Hisui': {\n    types: ['Electric', 'Grass'],\n    bs: {hp: 60, at: 50, df: 70, sa: 80, sd: 80, sp: 150},\n    weightkg: 71,\n    gender: 'N',\n    abilities: {0: 'Soundproof'},\n    baseSpecies: 'Electrode',\n  },\n  Enamorus: {\n    types: ['Fairy', 'Flying'],\n    bs: {hp: 74, at: 115, df: 70, sa: 135, sd: 80, sp: 106},\n    weightkg: 48,\n    abilities: {0: 'Cute Charm'},\n    otherFormes: ['Enamorus-Therian'],\n  },\n  'Enamorus-Therian': {\n    types: ['Fairy', 'Flying'],\n    bs: {hp: 74, at: 115, df: 110, sa: 135, sd: 100, sp: 46},\n    weightkg: 48,\n    abilities: {0: 'Overcoat'},\n    baseSpecies: 'Enamorus',\n  },\n  'Goodra-Hisui': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 80, at: 100, df: 100, sa: 110, sd: 150, sp: 60},\n    weightkg: 334.1,\n    abilities: {0: 'Sap Sipper'},\n    baseSpecies: 'Goodra',\n  },\n  'Growlithe-Hisui': {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 60, at: 75, df: 45, sa: 65, sd: 50, sp: 55},\n    weightkg: 22.7,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Growlithe',\n    nfe: true,\n  },\n  Kleavor: {\n    types: ['Bug', 'Rock'],\n    bs: {hp: 70, at: 130, df: 95, sa: 45, sd: 75, sp: 85},\n    weightkg: 89,\n    abilities: {0: 'Swarm'},\n  },\n  'Lilligant-Hisui': {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 70, at: 105, df: 75, sa: 50, sd: 75, sp: 105},\n    weightkg: 19.2,\n    abilities: {0: 'Chlorophyll'},\n    baseSpecies: 'Lilligant',\n  },\n  Overqwil: {\n    types: ['Dark', 'Poison'],\n    bs: {hp: 85, at: 115, df: 95, sa: 65, sd: 65, sp: 85},\n    weightkg: 3.9,\n    abilities: {0: 'Poison Point'},\n  },\n  'Palkia-Origin': {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 90, at: 100, df: 100, sa: 150, sd: 120, sp: 120},\n    weightkg: 660,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n    baseSpecies: 'Palkia',\n  },\n  'Qwilfish-Hisui': {\n    types: ['Dark', 'Poison'],\n    bs: {hp: 65, at: 95, df: 85, sa: 55, sd: 55, sp: 85},\n    weightkg: 3.9,\n    abilities: {0: 'Poison Point'},\n    baseSpecies: 'Qwilfish',\n    nfe: true,\n  },\n  'Samurott-Hisui': {\n    types: ['Water', 'Dark'],\n    bs: {hp: 90, at: 108, df: 80, sa: 100, sd: 65, sp: 85},\n    weightkg: 58.2,\n    abilities: {0: 'Torrent'},\n    baseSpecies: 'Samurott',\n  },\n  'Sliggoo-Hisui': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 58, at: 75, df: 83, sa: 83, sd: 113, sp: 40},\n    weightkg: 68.5,\n    abilities: {0: 'Sap Sipper'},\n    baseSpecies: 'Sliggoo',\n    nfe: true,\n  },\n  'Sneasel-Hisui': {\n    types: ['Fighting', 'Poison'],\n    bs: {hp: 55, at: 95, df: 55, sa: 35, sd: 75, sp: 115},\n    weightkg: 27,\n    abilities: {0: 'Inner Focus'},\n    baseSpecies: 'Sneasel',\n    nfe: true,\n  },\n  Sneasler: {\n    types: ['Fighting', 'Poison'],\n    bs: {hp: 80, at: 130, df: 60, sa: 40, sd: 80, sp: 120},\n    weightkg: 43,\n    abilities: {0: 'Pressure'},\n  },\n  'Typhlosion-Hisui': {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 73, at: 84, df: 78, sa: 119, sd: 85, sp: 95},\n    weightkg: 69.8,\n    abilities: {0: 'Blaze'},\n    baseSpecies: 'Typhlosion',\n  },\n  Ursaluna: {\n    types: ['Ground', 'Normal'],\n    bs: {hp: 130, at: 140, df: 105, sa: 45, sd: 80, sp: 50},\n    weightkg: 290,\n    abilities: {0: 'Guts'},\n  },\n  'Voltorb-Hisui': {\n    types: ['Electric', 'Grass'],\n    bs: {hp: 40, at: 30, df: 50, sa: 55, sd: 55, sp: 100},\n    weightkg: 13,\n    gender: 'N',\n    abilities: {0: 'Soundproof'},\n    baseSpecies: 'Voltorb',\n    nfe: true,\n  },\n  Wyrdeer: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 103, at: 105, df: 72, sa: 105, sd: 75, sp: 65},\n    weightkg: 95.1,\n    abilities: {0: 'Intimidate'},\n  },\n  'Zoroark-Hisui': {\n    types: ['Normal', 'Ghost'],\n    bs: {hp: 55, at: 100, df: 60, sa: 125, sd: 60, sp: 110},\n    weightkg: 73,\n    abilities: {0: 'Illusion'},\n    baseSpecies: 'Zoroark',\n  },\n  'Zorua-Hisui': {\n    types: ['Normal', 'Ghost'],\n    bs: {hp: 35, at: 60, df: 40, sa: 85, sd: 40, sp: 70},\n    weightkg: 12.5,\n    abilities: {0: 'Illusion'},\n    baseSpecies: 'Zorua',\n    nfe: true,\n  },\n};\n\nconst SV_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Bisharp: {nfe: true},\n  Cresselia: {bs: {df: 110, sd: 120}},\n  Dunsparce: {nfe: true},\n  Girafarig: {nfe: true},\n  Primeape: {nfe: true},\n  Tauros: {otherFormes: ['Tauros-Paldea-Aqua', 'Tauros-Paldea-Blaze', 'Tauros-Paldea-Combat']},\n  Ursaluna: {otherFormes: ['Ursaluna-Bloodmoon']},\n  Wooper: {otherFormes: ['Wooper-Paldea']},\n  Zacian: {bs: {at: 120}},\n  'Zacian-Crowned': {bs: {at: 150}},\n  Zamazenta: {bs: {at: 120}},\n  'Zamazenta-Crowned': {bs: {at: 120, df: 140, sd: 140}},\n  Annihilape: {\n    types: ['Fighting', 'Ghost'],\n    bs: {hp: 110, at: 115, df: 80, sa: 50, sd: 90, sp: 90},\n    weightkg: 56,\n    abilities: {0: 'Vital Spirit'},\n  },\n  Arboliva: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 78, at: 69, df: 90, sa: 125, sd: 109, sp: 39},\n    weightkg: 48.2,\n    abilities: {0: 'Seed Sower'},\n  },\n  Arctibax: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 90, at: 95, df: 66, sa: 45, sd: 65, sp: 62},\n    weightkg: 30,\n    abilities: {0: 'Thermal Exchange'},\n    nfe: true,\n  },\n  Armarouge: {\n    types: ['Fire', 'Psychic'],\n    bs: {hp: 85, at: 60, df: 100, sa: 125, sd: 80, sp: 75},\n    weightkg: 85,\n    abilities: {0: 'Flash Fire'},\n  },\n  Baxcalibur: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 115, at: 145, df: 92, sa: 75, sd: 86, sp: 87},\n    weightkg: 210,\n    abilities: {0: 'Thermal Exchange'},\n  },\n  Bellibolt: {\n    types: ['Electric'],\n    bs: {hp: 109, at: 64, df: 91, sa: 103, sd: 83, sp: 45},\n    weightkg: 113,\n    abilities: {0: 'Electromorphosis'},\n  },\n  'Ursaluna-Bloodmoon': {\n    types: ['Ground', 'Normal'],\n    bs: {hp: 113, at: 70, df: 120, sa: 135, sd: 65, sp: 52},\n    weightkg: 333,\n    abilities: {0: 'Mind\\'s Eye'},\n    baseSpecies: 'Ursaluna',\n  },\n  Bombirdier: {\n    types: ['Flying', 'Dark'],\n    bs: {hp: 70, at: 103, df: 85, sa: 60, sd: 85, sp: 82},\n    weightkg: 42.9,\n    abilities: {0: 'Big Pecks'},\n  },\n  Brambleghast: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 55, at: 115, df: 70, sa: 80, sd: 70, sp: 90},\n    weightkg: 6,\n    abilities: {0: 'Wind Rider'},\n  },\n  Bramblin: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 40, at: 65, df: 30, sa: 45, sd: 35, sp: 60},\n    weightkg: 0.6,\n    abilities: {0: 'Wind Rider'},\n    nfe: true,\n  },\n  'Brute Bonnet': {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 111, at: 127, df: 99, sa: 79, sd: 99, sp: 55},\n    weightkg: 21,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Capsakid: {\n    types: ['Grass'],\n    bs: {hp: 52, at: 62, df: 40, sa: 62, sd: 40, sp: 50},\n    weightkg: 3,\n    abilities: {0: 'Chlorophyll'},\n    nfe: true,\n  },\n  Ceruledge: {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 75, at: 125, df: 80, sa: 60, sd: 100, sp: 85},\n    weightkg: 62,\n    abilities: {0: 'Flash Fire'},\n  },\n  Cetitan: {\n    types: ['Ice'],\n    bs: {hp: 170, at: 113, df: 65, sa: 45, sd: 55, sp: 73},\n    weightkg: 700,\n    abilities: {0: 'Thick Fat'},\n  },\n  Cetoddle: {\n    types: ['Ice'],\n    bs: {hp: 108, at: 68, df: 45, sa: 30, sd: 40, sp: 43},\n    weightkg: 45,\n    abilities: {0: 'Thick Fat'},\n    nfe: true,\n  },\n  Charcadet: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 50, df: 40, sa: 50, sd: 40, sp: 35},\n    weightkg: 10.5,\n    abilities: {0: 'Flash Fire'},\n    nfe: true,\n  },\n  'Chi-Yu': {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 55, at: 80, df: 80, sa: 135, sd: 120, sp: 100},\n    weightkg: 4.9,\n    gender: 'N',\n    abilities: {0: 'Beads of Ruin'},\n  },\n  'Chien-Pao': {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 80, at: 120, df: 80, sa: 90, sd: 65, sp: 135},\n    weightkg: 152.2,\n    gender: 'N',\n    abilities: {0: 'Sword of Ruin'},\n  },\n  Clodsire: {\n    types: ['Poison', 'Ground'],\n    bs: {hp: 130, at: 75, df: 60, sa: 45, sd: 100, sp: 20},\n    weightkg: 223,\n    abilities: {0: 'Poison Point'},\n  },\n  Crocalor: {\n    types: ['Fire'],\n    bs: {hp: 81, at: 55, df: 78, sa: 90, sd: 58, sp: 49},\n    weightkg: 30.7,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Cyclizar: {\n    types: ['Dragon', 'Normal'],\n    bs: {hp: 70, at: 95, df: 65, sa: 85, sd: 65, sp: 121},\n    weightkg: 63,\n    abilities: {0: 'Shed Skin'},\n  },\n  Dachsbun: {\n    types: ['Fairy'],\n    bs: {hp: 57, at: 80, df: 115, sa: 50, sd: 80, sp: 95},\n    weightkg: 14.9,\n    abilities: {0: 'Well-Baked Body'},\n  },\n  Dipplin: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 80, at: 80, df: 110, sa: 95, sd: 80, sp: 40},\n    weightkg: 4.4,\n    abilities: {0: 'Supersweet Syrup'},\n  },\n  Dolliv: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 52, at: 53, df: 60, sa: 78, sd: 78, sp: 33},\n    weightkg: 11.9,\n    abilities: {0: 'Early Bird'},\n    nfe: true,\n  },\n  Dondozo: {\n    types: ['Water'],\n    bs: {hp: 150, at: 100, df: 115, sa: 65, sd: 65, sp: 35},\n    weightkg: 220,\n    abilities: {0: 'Unaware'},\n  },\n  Dudunsparce: {\n    types: ['Normal'],\n    bs: {hp: 125, at: 100, df: 80, sa: 85, sd: 75, sp: 55},\n    weightkg: 39.2,\n    abilities: {0: 'Serene Grace'},\n    // otherFormes: ['Dudunsparce-Three-Segment'],\n  },\n  // 'Dudunsparce-Three-Segment': {\n  //   types: ['Normal'],\n  //   bs: {hp: 125, at: 100, df: 80, sa: 85, sd: 75, sp: 55},\n  //   weightkg: 47.4,\n  //   abilities: {0: 'Serene Grace'},\n  //   baseSpecies: 'Dudunsparce',\n  // },\n  Espathra: {\n    types: ['Psychic'],\n    bs: {hp: 95, at: 60, df: 60, sa: 101, sd: 60, sp: 105},\n    weightkg: 90,\n    abilities: {0: 'Opportunist'},\n  },\n  Farigiraf: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 120, at: 90, df: 70, sa: 110, sd: 70, sp: 60},\n    weightkg: 160,\n    abilities: {0: 'Cud Chew'},\n  },\n  Fezandipiti: {\n    types: ['Poison', 'Fairy'],\n    bs: {hp: 88, at: 91, df: 82, sa: 70, sd: 125, sp: 99},\n    weightkg: 30.1,\n    gender: 'M',\n    abilities: {0: 'Toxic Chain'},\n  },\n  Fidough: {\n    types: ['Fairy'],\n    bs: {hp: 37, at: 55, df: 70, sa: 30, sd: 55, sp: 65},\n    weightkg: 10.9,\n    abilities: {0: 'Own Tempo'},\n    nfe: true,\n  },\n  Finizen: {\n    types: ['Water'],\n    bs: {hp: 70, at: 45, df: 40, sa: 45, sd: 40, sp: 75},\n    weightkg: 60.2,\n    abilities: {0: 'Water Veil'},\n    nfe: true,\n  },\n  Flamigo: {\n    types: ['Flying', 'Fighting'],\n    bs: {hp: 82, at: 115, df: 74, sa: 75, sd: 64, sp: 90},\n    weightkg: 37,\n    abilities: {0: 'Scrappy'},\n  },\n  Flittle: {\n    types: ['Psychic'],\n    bs: {hp: 30, at: 35, df: 30, sa: 55, sd: 30, sp: 75},\n    weightkg: 1.5,\n    abilities: {0: 'Anticipation'},\n    nfe: true,\n  },\n  Floragato: {\n    types: ['Grass'],\n    bs: {hp: 61, at: 80, df: 63, sa: 60, sd: 63, sp: 83},\n    weightkg: 12.2,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  'Flutter Mane': {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 55, df: 55, sa: 135, sd: 135, sp: 135},\n    weightkg: 4,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Frigibax: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 65, at: 75, df: 45, sa: 35, sd: 45, sp: 55},\n    weightkg: 17,\n    abilities: {0: 'Thermal Exchange'},\n    nfe: true,\n  },\n  Fuecoco: {\n    types: ['Fire'],\n    bs: {hp: 67, at: 45, df: 59, sa: 63, sd: 40, sp: 36},\n    weightkg: 9.8,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Garganacl: {\n    types: ['Rock'],\n    bs: {hp: 100, at: 100, df: 130, sa: 45, sd: 90, sp: 35},\n    weightkg: 240,\n    abilities: {0: 'Purifying Salt'},\n  },\n  Gholdengo: {\n    types: ['Steel', 'Ghost'],\n    bs: {hp: 87, at: 60, df: 95, sa: 133, sd: 91, sp: 84},\n    weightkg: 30,\n    gender: 'N',\n    abilities: {0: 'Good as Gold'},\n  },\n  Gimmighoul: {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 30, df: 70, sa: 75, sd: 70, sp: 10},\n    weightkg: 5,\n    gender: 'N',\n    abilities: {0: 'Rattled'},\n    nfe: true,\n    otherFormes: ['Gimmighoul-Roaming'],\n  },\n  'Gimmighoul-Roaming': {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 30, df: 25, sa: 75, sd: 45, sp: 80},\n    weightkg: 0.1,\n    gender: 'N',\n    abilities: {0: 'Run Away'},\n    nfe: true,\n    baseSpecies: 'Gimmighoul',\n  },\n  Glimmet: {\n    types: ['Rock', 'Poison'],\n    bs: {hp: 48, at: 35, df: 42, sa: 105, sd: 60, sp: 60},\n    weightkg: 8,\n    abilities: {0: 'Toxic Debris'},\n    nfe: true,\n  },\n  Glimmora: {\n    types: ['Rock', 'Poison'],\n    bs: {hp: 83, at: 55, df: 90, sa: 130, sd: 81, sp: 86},\n    weightkg: 45,\n    abilities: {0: 'Toxic Debris'},\n  },\n  Grafaiai: {\n    types: ['Poison', 'Normal'],\n    bs: {hp: 63, at: 95, df: 65, sa: 80, sd: 72, sp: 110},\n    weightkg: 27.2,\n    abilities: {0: 'Unburden'},\n  },\n  'Great Tusk': {\n    types: ['Ground', 'Fighting'],\n    bs: {hp: 115, at: 131, df: 131, sa: 53, sd: 53, sp: 87},\n    weightkg: 320,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Greavard: {\n    types: ['Ghost'],\n    bs: {hp: 50, at: 61, df: 60, sa: 30, sd: 55, sp: 34},\n    weightkg: 35,\n    abilities: {0: 'Pickup'},\n    nfe: true,\n  },\n  Houndstone: {\n    types: ['Ghost'],\n    bs: {hp: 72, at: 101, df: 100, sa: 50, sd: 97, sp: 68},\n    weightkg: 15,\n    abilities: {0: 'Sand Rush'},\n  },\n  'Iron Bundle': {\n    types: ['Ice', 'Water'],\n    bs: {hp: 56, at: 80, df: 114, sa: 124, sd: 60, sp: 136},\n    weightkg: 11,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Hands': {\n    types: ['Fighting', 'Electric'],\n    bs: {hp: 154, at: 140, df: 108, sa: 50, sd: 68, sp: 50},\n    weightkg: 380.7,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Jugulis': {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 94, at: 80, df: 86, sa: 122, sd: 80, sp: 108},\n    weightkg: 111,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Leaves': {\n    types: ['Grass', 'Psychic'],\n    bs: {hp: 90, at: 130, df: 88, sa: 70, sd: 108, sp: 104},\n    weightkg: 125,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Moth': {\n    types: ['Fire', 'Poison'],\n    bs: {hp: 80, at: 70, df: 60, sa: 140, sd: 110, sp: 110},\n    weightkg: 36,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Thorns': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 100, at: 134, df: 110, sa: 70, sd: 84, sp: 72},\n    weightkg: 303,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Treads': {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 90, at: 112, df: 120, sa: 72, sd: 70, sp: 106},\n    weightkg: 240,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Valiant': {\n    types: ['Fairy', 'Fighting'],\n    bs: {hp: 74, at: 130, df: 90, sa: 120, sd: 60, sp: 116},\n    weightkg: 35,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  Kilowattrel: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 70, at: 70, df: 60, sa: 105, sd: 60, sp: 125},\n    weightkg: 38.6,\n    abilities: {0: 'Wind Power'},\n  },\n  Kingambit: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 100, at: 135, df: 120, sa: 60, sd: 85, sp: 50},\n    weightkg: 120,\n    abilities: {0: 'Defiant'},\n  },\n  Klawf: {\n    types: ['Rock'],\n    bs: {hp: 70, at: 100, df: 115, sa: 35, sd: 55, sp: 75},\n    weightkg: 79,\n    abilities: {0: 'Anger Shell'},\n  },\n  Koraidon: {\n    types: ['Fighting', 'Dragon'],\n    bs: {hp: 100, at: 135, df: 115, sa: 85, sd: 100, sp: 135},\n    weightkg: 303,\n    gender: 'N',\n    abilities: {0: 'Orichalcum Pulse'},\n  },\n  Lechonk: {\n    types: ['Normal'],\n    bs: {hp: 54, at: 45, df: 40, sa: 35, sd: 45, sp: 35},\n    weightkg: 10.2,\n    abilities: {0: 'Aroma Veil'},\n    nfe: true,\n  },\n  Lokix: {\n    types: ['Bug', 'Dark'],\n    bs: {hp: 71, at: 102, df: 78, sa: 52, sd: 55, sp: 92},\n    weightkg: 17.5,\n    abilities: {0: 'Swarm'},\n  },\n  Mabosstiff: {\n    types: ['Dark'],\n    bs: {hp: 80, at: 120, df: 90, sa: 60, sd: 70, sp: 85},\n    weightkg: 61,\n    abilities: {0: 'Intimidate'},\n  },\n  Maschiff: {\n    types: ['Dark'],\n    bs: {hp: 60, at: 78, df: 60, sa: 40, sd: 51, sp: 51},\n    weightkg: 16,\n    abilities: {0: 'Intimidate'},\n    nfe: true,\n  },\n  Maushold: {\n    types: ['Normal'],\n    bs: {hp: 74, at: 75, df: 70, sa: 65, sd: 75, sp: 111},\n    weightkg: 2.3,\n    gender: 'N',\n    abilities: {0: 'Friend Guard'},\n    // otherFormes: ['Maushold-Four'],\n  },\n  Meowscarada: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 76, at: 110, df: 70, sa: 81, sd: 70, sp: 123},\n    weightkg: 31.2,\n    abilities: {0: 'Overgrow'},\n  },\n  Miraidon: {\n    types: ['Electric', 'Dragon'],\n    bs: {hp: 100, at: 85, df: 100, sa: 135, sd: 115, sp: 135},\n    weightkg: 240,\n    gender: 'N',\n    abilities: {0: 'Hadron Engine'},\n  },\n  Munkidori: {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 88, at: 75, df: 66, sa: 130, sd: 90, sp: 106},\n    weightkg: 12.2,\n    gender: 'M',\n    abilities: {0: 'Toxic Chain'},\n  },\n  Nacli: {\n    types: ['Rock'],\n    bs: {hp: 55, at: 55, df: 75, sa: 35, sd: 35, sp: 25},\n    weightkg: 16,\n    abilities: {0: 'Purifying Salt'},\n    nfe: true,\n  },\n  Naclstack: {\n    types: ['Rock'],\n    bs: {hp: 60, at: 60, df: 100, sa: 35, sd: 65, sp: 35},\n    weightkg: 105,\n    abilities: {0: 'Purifying Salt'},\n    nfe: true,\n  },\n  Nymble: {\n    types: ['Bug'],\n    bs: {hp: 33, at: 46, df: 40, sa: 21, sd: 25, sp: 45},\n    weightkg: 1,\n    abilities: {0: 'Swarm'},\n    nfe: true,\n  },\n  Ogerpon: {\n    types: ['Grass'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    weightkg: 39.8, \n    gender: 'F',\n    abilities: {0: 'Defiant'},\n    otherFormes: ['Ogerpon-Wellspring', 'Ogerpon-Hearthflame', 'Ogerpon-Cornerstone'],\n  },\n  'Ogerpon-Wellspring': {\n    types: ['Grass', 'Water'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    weightkg: 39.8, \n    gender: 'F',\n    abilities: {0: 'Water Absorb'},\n    baseSpecies: 'Ogerpon',\n  },\n  'Ogerpon-Hearthflame': {\n    types: ['Grass', 'Fire'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    weightkg: 39.8, \n    gender: 'F',\n    abilities: {0: 'Mold Breaker'},\n    baseSpecies: 'Ogerpon',\n  },\n  'Ogerpon-Cornerstone': {\n    types: ['Grass', 'Rock'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    weightkg: 39.8, \n    gender: 'F',\n    abilities: {0: 'Sturdy'},\n    baseSpecies: 'Ogerpon',\n  },\n  Oinkologne: {\n    types: ['Normal'],\n    bs: {hp: 110, at: 100, df: 75, sa: 59, sd: 80, sp: 65},\n    weightkg: 120,\n    abilities: {0: 'Lingering Aroma'},\n    otherFormes: ['Oinkologne-F'],\n  },\n  'Oinkologne-F': {\n    types: ['Normal'],\n    bs: {hp: 115, at: 90, df: 70, sa: 59, sd: 90, sp: 65},\n    weightkg: 120,\n    abilities: {0: 'Aroma Veil'},\n    baseSpecies: 'Oinkologne',\n  },\n  Okidogi: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 88, at: 128, df: 115, sa: 58, sd: 86, sp: 80},\n    weightkg: 92,\n    gender: 'M',\n    abilities: {0: 'Toxic Chain'},\n  },\n  Orthworm: {\n    types: ['Steel'],\n    bs: {hp: 70, at: 85, df: 145, sa: 60, sd: 55, sp: 65},\n    weightkg: 310,\n    abilities: {0: 'Earth Eater'},\n  },\n  Palafin: {\n    types: ['Water'],\n    bs: {hp: 100, at: 70, df: 72, sa: 53, sd: 62, sp: 100},\n    weightkg: 60.2,\n    abilities: {0: 'Zero to Hero'},\n    otherFormes: ['Palafin-Hero'],\n  },\n  'Palafin-Hero': {\n    types: ['Water'],\n    bs: {hp: 100, at: 160, df: 97, sa: 106, sd: 87, sp: 100},\n    weightkg: 97.4,\n    abilities: {0: 'Zero to Hero'},\n    baseSpecies: 'Palafin',\n  },\n  Pawmi: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 50, df: 20, sa: 40, sd: 25, sp: 60},\n    weightkg: 2.5,\n    abilities: {0: 'Static'},\n    nfe: true,\n  },\n  Pawmo: {\n    types: ['Electric', 'Fighting'],\n    bs: {hp: 60, at: 75, df: 40, sa: 50, sd: 40, sp: 85},\n    weightkg: 6.5,\n    abilities: {0: 'Volt Absorb'},\n    nfe: true,\n  },\n  Pawmot: {\n    types: ['Electric', 'Fighting'],\n    bs: {hp: 70, at: 115, df: 70, sa: 70, sd: 60, sp: 105},\n    weightkg: 41,\n    abilities: {0: 'Volt Absorb'},\n  },\n  Poltchageist: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 70},\n    weightkg: 1.1,\n    gender: 'N',\n    abilities: {0: \"Hospitality\"},\n    nfe: true,\n  },\n  Quaquaval: {\n    types: ['Water', 'Fighting'],\n    bs: {hp: 85, at: 120, df: 80, sa: 85, sd: 75, sp: 85},\n    weightkg: 61.9,\n    abilities: {0: 'Torrent'},\n  },\n  Quaxly: {\n    types: ['Water'],\n    bs: {hp: 55, at: 65, df: 45, sa: 50, sd: 45, sp: 50},\n    weightkg: 6.1,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Quaxwell: {\n    types: ['Water'],\n    bs: {hp: 70, at: 85, df: 65, sa: 65, sd: 60, sp: 65},\n    weightkg: 21.5,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Rabsca: {\n    types: ['Bug', 'Psychic'],\n    bs: {hp: 75, at: 50, df: 85, sa: 115, sd: 100, sp: 45},\n    weightkg: 3.5,\n    abilities: {0: 'Synchronize'},\n  },\n  Rellor: {\n    types: ['Bug'],\n    bs: {hp: 41, at: 50, df: 60, sa: 31, sd: 58, sp: 30},\n    weightkg: 1,\n    abilities: {0: 'Compound Eyes'},\n    nfe: true,\n  },\n  Revavroom: {\n    types: ['Steel', 'Poison'],\n    bs: {hp: 80, at: 119, df: 90, sa: 54, sd: 67, sp: 90},\n    weightkg: 120,\n    abilities: {0: 'Overcoat'},\n  },\n  'Roaring Moon': {\n    types: ['Dragon', 'Dark'],\n    bs: {hp: 105, at: 139, df: 71, sa: 55, sd: 101, sp: 119},\n    weightkg: 380,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  'Sandy Shocks': {\n    types: ['Electric', 'Ground'],\n    bs: {hp: 85, at: 81, df: 97, sa: 121, sd: 85, sp: 101},\n    weightkg: 60,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Scovillain: {\n    types: ['Grass', 'Fire'],\n    bs: {hp: 65, at: 108, df: 65, sa: 108, sd: 65, sp: 75},\n    weightkg: 15,\n    abilities: {0: 'Chlorophyll'},\n  },\n  'Scream Tail': {\n    types: ['Fairy', 'Psychic'],\n    bs: {hp: 115, at: 65, df: 99, sa: 65, sd: 115, sp: 111},\n    weightkg: 8,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Shroodle: {\n    types: ['Poison', 'Normal'],\n    bs: {hp: 40, at: 65, df: 35, sa: 40, sd: 35, sp: 75},\n    weightkg: 0.7,\n    abilities: {0: 'Unburden'},\n    nfe: true,\n  },\n  Sinistcha: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 71, at: 60, df: 106, sa: 121, sd: 80, sp: 70},\n    weightkg: 2.2,\n    gender: 'N',\n    abilities: {0: 'Hospitality'},\n  },\n  Skeledirge: {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 104, at: 75, df: 100, sa: 110, sd: 75, sp: 66},\n    weightkg: 326.5,\n    abilities: {0: 'Blaze'},\n  },\n  'Slither Wing': {\n    types: ['Bug', 'Fighting'],\n    bs: {hp: 85, at: 135, df: 79, sa: 85, sd: 105, sp: 81},\n    weightkg: 92,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Smoliv: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 41, at: 35, df: 45, sa: 58, sd: 51, sp: 30},\n    weightkg: 6.5,\n    abilities: {0: 'Early Bird'},\n    nfe: true,\n  },\n  Spidops: {\n    types: ['Bug'],\n    bs: {hp: 60, at: 79, df: 92, sa: 52, sd: 86, sp: 35},\n    weightkg: 16.5,\n    abilities: {0: 'Insomnia'},\n  },\n  Sprigatito: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 61, df: 54, sa: 45, sd: 45, sp: 65},\n    weightkg: 4.1,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Squawkabilly: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n    weightkg: 2.4,\n    abilities: {0: 'Intimidate'},\n    // otherFormes: ['Squawkabilly-Blue', 'Squawkabilly-White', 'Squawkabilly-Yellow'],\n  },\n  // 'Squawkabilly-Blue': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n  //   weightkg: 2.4,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Squawkabilly',\n  // },\n  // 'Squawkabilly-White': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n  //   weightkg: 2.4,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Squawkabilly',\n  // },\n  // 'Squawkabilly-Yellow': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n  //   weightkg: 2.4,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Squawkabilly',\n  // },\n  Tadbulb: {\n    types: ['Electric'],\n    bs: {hp: 61, at: 31, df: 41, sa: 59, sd: 35, sp: 45},\n    weightkg: 0.4,\n    abilities: {0: 'Own Tempo'},\n    nfe: true,\n  },\n  Tandemaus: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 50, df: 45, sa: 40, sd: 45, sp: 75},\n    weightkg: 1.8,\n    gender: 'N',\n    abilities: {0: 'Run Away'},\n    nfe: true,\n  },\n  Tarountula: {\n    types: ['Bug'],\n    bs: {hp: 35, at: 41, df: 45, sa: 29, sd: 40, sp: 20},\n    weightkg: 4,\n    abilities: {0: 'Insomnia'},\n    nfe: true,\n  },\n  Tatsugiri: {\n    types: ['Dragon', 'Water'],\n    bs: {hp: 68, at: 50, df: 60, sa: 120, sd: 95, sp: 82},\n    weightkg: 8,\n    abilities: {0: 'Commander'},\n  },\n  'Tauros-Paldea-Aqua': {\n    types: ['Fighting', 'Water'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 88.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n  },\n  'Tauros-Paldea-Blaze': {\n    types: ['Fighting', 'Fire'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 88.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n  },\n  'Tauros-Paldea-Combat': {\n    types: ['Fighting'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 88.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n  },\n  'Ting-Lu': {\n    types: ['Dark', 'Ground'],\n    bs: {hp: 155, at: 110, df: 125, sa: 55, sd: 80, sp: 45},\n    weightkg: 699.7,\n    gender: 'N',\n    abilities: {0: 'Vessel of Ruin'},\n  },\n  Tinkatink: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 50, at: 45, df: 45, sa: 35, sd: 64, sp: 58},\n    weightkg: 8.9,\n    abilities: {0: 'Mold Breaker'},\n    nfe: true,\n  },\n  Tinkaton: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 85, at: 75, df: 77, sa: 70, sd: 105, sp: 94},\n    weightkg: 112.8,\n    abilities: {0: 'Mold Breaker'},\n  },\n  Tinkatuff: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 65, at: 55, df: 55, sa: 45, sd: 82, sp: 78},\n    weightkg: 59.1,\n    abilities: {0: 'Mold Breaker'},\n    nfe: true,\n  },\n  Toedscool: {\n    types: ['Ground', 'Grass'],\n    bs: {hp: 40, at: 40, df: 35, sa: 50, sd: 100, sp: 70},\n    weightkg: 33,\n    abilities: {0: 'Mycelium Might'},\n    nfe: true,\n  },\n  Toedscruel: {\n    types: ['Ground', 'Grass'],\n    bs: {hp: 80, at: 70, df: 65, sa: 80, sd: 120, sp: 100},\n    weightkg: 58,\n    abilities: {0: 'Mycelium Might'},\n  },\n  Varoom: {\n    types: ['Steel', 'Poison'],\n    bs: {hp: 45, at: 70, df: 63, sa: 30, sd: 45, sp: 47},\n    weightkg: 35,\n    abilities: {0: 'Overcoat'},\n    nfe: true,\n  },\n  Veluza: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 90, at: 102, df: 73, sa: 78, sd: 65, sp: 70},\n    weightkg: 90,\n    abilities: {0: 'Mold Breaker'},\n  },\n  'Walking Wake': {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 99, at: 83, df: 91, sa: 125, sd: 83, sp: 109},\n    weightkg: 280,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Wattrel: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 40, at: 40, df: 35, sa: 55, sd: 40, sp: 70},\n    weightkg: 3.6,\n    abilities: {0: 'Wind Power'},\n    nfe: true,\n  },\n  Wiglett: {\n    types: ['Water'],\n    bs: {hp: 10, at: 55, df: 25, sa: 35, sd: 25, sp: 95},\n    weightkg: 1.8,\n    abilities: {0: 'Gooey'},\n    nfe: true,\n  },\n  'Wo-Chien': {\n    types: ['Dark', 'Grass'],\n    bs: {hp: 85, at: 85, df: 100, sa: 95, sd: 135, sp: 70},\n    weightkg: 74.2,\n    gender: 'N',\n    abilities: {0: 'Tablets of Ruin'},\n  },\n  'Wooper-Paldea': {\n    types: ['Poison', 'Ground'],\n    bs: {hp: 55, at: 45, df: 45, sa: 25, sd: 25, sp: 15},\n    weightkg: 8.5,\n    abilities: {0: 'Poison Point'},\n    baseSpecies: 'Wooper',\n    nfe: true,\n  },\n  Wugtrio: {\n    types: ['Water'],\n    bs: {hp: 35, at: 100, df: 50, sa: 50, sd: 70, sp: 120},\n    weightkg: 5.4,\n    abilities: {0: 'Gooey'},\n  },\n};\n\nconst SV: {[name: string]: SpeciesData} = extend(true, {}, SS, SV_PATCH, PLA_PATCH);\n\nexport const SPECIES = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Species implements I.Species {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return SPECIES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in SPECIES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Specie implements I.Specie {\n  readonly kind: 'Species';\n  readonly id: I.ID;\n  readonly name: I.SpeciesName;\n  readonly types!: [I.TypeName] | [I.TypeName, I.TypeName];\n  readonly baseStats: Readonly<I.StatsTable>;\n  readonly weightkg!: number; // weight\n  readonly nfe?: boolean;\n  readonly gender?: I.GenderName;\n  readonly otherFormes?: I.SpeciesName[];\n  readonly baseSpecies?: I.SpeciesName;\n  readonly abilities?: {0: I.AbilityName}; // ability\n\n  private static readonly EXCLUDE = new Set(['bs', 'otherFormes']);\n\n  constructor(name: string, data: SpeciesData) {\n    this.kind = 'Species';\n    this.id = toID(name);\n    this.name = name as I.SpeciesName;\n\n    const baseStats: Partial<I.StatsTable> = {};\n    baseStats.hp = data.bs.hp;\n    baseStats.atk = data.bs.at;\n    baseStats.def = data.bs.df;\n    baseStats.spa = gen >= 2 ? data.bs.sa : data.bs.sl;\n    baseStats.spd = gen >= 2 ? data.bs.sd : data.bs.sl;\n    baseStats.spe = data.bs.sp;\n    this.baseStats = baseStats as I.StatsTable;\n    // Hack for getting Gmax pokemon out of existence in Gen 9+\n    if (data.otherFormes) {\n      this.otherFormes = data.otherFormes as I.SpeciesName[];\n      if (gen >= 9 && !['toxtricity', 'urshifu'].includes(this.id)) {\n        this.otherFormes = this.otherFormes.filter(f => !f.endsWith('-Gmax'));\n        if (!this.otherFormes.length) this.otherFormes = undefined;\n        if (this.otherFormes) this.otherFormes = [...new Set(this.otherFormes)];\n      }\n    }\n\n    assignWithout(this, data, Specie.EXCLUDE);\n  }\n}\nconst SPECIES_BY_ID: Array<{[id: string]: Specie}> = [];\n\nlet gen = 0;\nfor (const species of SPECIES) {\n  const map: {[id: string]: Specie} = {};\n  for (const specie in species) {\n    if (gen >= 2 && species[specie].bs.sl) delete species[specie].bs.sl;\n    const m = new Specie(specie, species[specie]);\n    map[m.id] = m;\n  }\n  SPECIES_BY_ID.push(map);\n  gen++;\n}\n","import * as I from './interface';\nimport {toID, extend} from '../util';\n\nexport type TypeChart = {\n  [type in I.TypeName]?: {[type in I.TypeName]?: number};\n};\n\nconst RBY: TypeChart = {\n  '???': {\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Normal: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 0,\n    Dragon: 1,\n  },\n  Grass: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 0.5,\n    Water: 2,\n    Electric: 1,\n    Ice: 1,\n    Flying: 0.5,\n    Bug: 0.5,\n    Poison: 0.5,\n    Ground: 2,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Fire: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 0.5,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 2,\n    Flying: 1,\n    Bug: 2,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Water: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 2,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 2,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Electric: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 1,\n    Water: 2,\n    Electric: 0.5,\n    Ice: 1,\n    Flying: 2,\n    Bug: 1,\n    Poison: 1,\n    Ground: 0,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Ice: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 0.5,\n    Flying: 2,\n    Bug: 1,\n    Poison: 1,\n    Ground: 2,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n  },\n  Flying: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 1,\n    Electric: 0.5,\n    Ice: 1,\n    Flying: 1,\n    Bug: 2,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 2,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Bug: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 0.5,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 0.5,\n    Bug: 1,\n    Poison: 2,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 2,\n    Ghost: 0.5,\n    Dragon: 1,\n  },\n  Poison: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 2,\n    Poison: 0.5,\n    Ground: 0.5,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 0.5,\n    Dragon: 1,\n  },\n  Ground: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 2,\n    Water: 1,\n    Electric: 2,\n    Ice: 1,\n    Flying: 0,\n    Bug: 0.5,\n    Poison: 2,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Rock: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 2,\n    Water: 1,\n    Electric: 1,\n    Ice: 2,\n    Flying: 2,\n    Bug: 2,\n    Poison: 1,\n    Ground: 0.5,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Fighting: {\n    '???': 1,\n    Normal: 2,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 2,\n    Flying: 0.5,\n    Bug: 0.5,\n    Poison: 0.5,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 0.5,\n    Ghost: 0,\n    Dragon: 1,\n  },\n  Psychic: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 2,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 2,\n    Psychic: 0.5,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Ghost: {\n    '???': 1,\n    Normal: 0,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 0,\n    Ghost: 2,\n    Dragon: 1,\n  },\n  Dragon: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n  },\n};\n\nconst GSC: TypeChart = extend(true, {}, RBY, {\n  '???': {Dark: 1, Steel: 1},\n  Normal: {Dark: 1, Steel: 0.5},\n  Grass: {Dark: 1, Steel: 0.5},\n  Fire: {Dark: 1, Steel: 2},\n  Water: {Dark: 1, Steel: 1},\n  Electric: {Dark: 1, Steel: 1},\n  Ice: {Fire: 0.5, Dark: 1, Steel: 0.5},\n  Flying: {Dark: 1, Steel: 0.5},\n  Bug: {Poison: 0.5, Dark: 2, Steel: 0.5},\n  Poison: {Bug: 1, Dark: 1, Steel: 0},\n  Ground: {Dark: 1, Steel: 2},\n  Rock: {Dark: 1, Steel: 0.5},\n  Fighting: {Dark: 2, Steel: 2},\n  Psychic: {Dark: 0, Steel: 0.5},\n  Ghost: {Psychic: 2, Dark: 0.5, Steel: 0.5},\n  Dragon: {Dark: 1, Steel: 0.5},\n  Dark: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 2,\n    Ghost: 2,\n    Dragon: 1,\n    Dark: 0.5,\n    Steel: 0.5,\n  },\n  Steel: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 0.5,\n    Water: 0.5,\n    Electric: 0.5,\n    Ice: 2,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n    Dark: 1,\n    Steel: 0.5,\n  },\n});\n\nconst ADV = GSC;\n\nconst DPP = GSC;\n\nconst BW = GSC;\n\nconst XY: TypeChart = extend(true, {}, GSC, {\n  '???': {Fairy: 1},\n  Normal: {Fairy: 1},\n  Grass: {Fairy: 1},\n  Fire: {Fairy: 1},\n  Water: {Fairy: 1},\n  Electric: {Fairy: 1},\n  Ice: {Fairy: 1},\n  Flying: {Fairy: 1},\n  Bug: {Fairy: 0.5},\n  Poison: {Fairy: 2},\n  Ground: {Fairy: 1},\n  Rock: {Fairy: 1},\n  Fighting: {Fairy: 0.5},\n  Psychic: {Fairy: 1},\n  Ghost: {Steel: 1, Fairy: 1},\n  Dragon: {Fairy: 0},\n  Dark: {Steel: 1, Fairy: 0.5},\n  Steel: {Fairy: 2},\n  Fairy: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 0.5,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 0.5,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 2,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n    Dark: 2,\n    Steel: 0.5,\n    Fairy: 1,\n  },\n});\n\nconst SM = XY;\n\nconst SS = SM;\n\nconst SV = SS;\n\nexport const TYPE_CHART = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Types implements I.Types {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    // toID('???') => '', as do many other things, but returning the '???' type seems appropriate :)\n    return TYPES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in TYPES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Type implements I.Type {\n  readonly kind: 'Type';\n  readonly id: I.ID;\n  readonly name: I.TypeName;\n  readonly effectiveness: Readonly<{[type in I.TypeName]?: I.TypeEffectiveness}>;\n\n  constructor(name: string, effectiveness: TypeChart[I.TypeName]) {\n    this.kind = 'Type';\n    this.id = toID(name);\n    this.name = name as I.TypeName;\n    this.effectiveness = effectiveness! as {[type in I.TypeName]?: I.TypeEffectiveness};\n  }\n}\n\nconst TYPES_BY_ID: Array<{[id: string]: Type}> = [];\n\nfor (const typeChart of TYPE_CHART) {\n  const map: {[id: string]: Type} = {};\n  for (const type in typeChart) {\n    const t = new Type(type, {...typeChart[type as I.TypeName]!});\n    map[t.id] = t;\n  }\n  TYPES_BY_ID.push(map);\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nexport const NATURES: {[name: string]: [I.StatID, I.StatID]} = {\n  Adamant: ['atk', 'spa'],\n  Bashful: ['spa', 'spa'],\n  Bold: ['def', 'atk'],\n  Brave: ['atk', 'spe'],\n  Calm: ['spd', 'atk'],\n  Careful: ['spd', 'spa'],\n  Docile: ['def', 'def'],\n  Gentle: ['spd', 'def'],\n  Hardy: ['atk', 'atk'],\n  Hasty: ['spe', 'def'],\n  Impish: ['def', 'spa'],\n  Jolly: ['spe', 'spa'],\n  Lax: ['def', 'spd'],\n  Lonely: ['atk', 'def'],\n  Mild: ['spa', 'def'],\n  Modest: ['spa', 'atk'],\n  Naive: ['spe', 'spd'],\n  Naughty: ['atk', 'spd'],\n  Quiet: ['spa', 'spe'],\n  Quirky: ['spd', 'spd'],\n  Rash: ['spa', 'spd'],\n  Relaxed: ['def', 'spe'],\n  Sassy: ['spd', 'spe'],\n  Serious: ['spe', 'spe'],\n  Timid: ['spe', 'atk'],\n};\n\nexport class Natures implements I.Natures {\n  get(id: I.ID) {\n    return NATURES_BY_ID[id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in NATURES_BY_ID) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Nature implements I.Nature {\n  readonly kind: 'Nature';\n  readonly id: I.ID;\n  readonly name: I.NatureName;\n  readonly plus?: I.StatID;\n  readonly minus?: I.StatID;\n\n  constructor(name: string, [plus, minus]: [I.StatID, I.StatID]) {\n    this.kind = 'Nature';\n    this.id = toID(name);\n    this.name = name as I.NatureName;\n    this.plus = plus;\n    this.minus = minus;\n  }\n}\n\nconst NATURES_BY_ID: {[id: string]: Nature} = {};\n\nfor (const nature in NATURES) {\n  const n = new Nature(nature, NATURES[nature] as [I.StatID, I.StatID]);\n  NATURES_BY_ID[n.id] = n;\n}\n","import * as I from './interface';\n\nimport {Abilities} from './abilities';\nimport {Items} from './items';\nimport {Moves} from './moves';\nimport {Species} from './species';\nimport {Types} from './types';\nimport {Natures} from './natures';\n\nexport const Generations: I.Generations = new (class {\n  get(gen: I.GenerationNum) {\n    return new Generation(gen);\n  }\n})();\n\nclass Generation implements I.Generation {\n  num: I.GenerationNum;\n\n  abilities: Abilities;\n  items: Items;\n  moves: Moves;\n  species: Species;\n  types: Types;\n  natures: Natures;\n\n  constructor(num: I.GenerationNum) {\n    this.num = num;\n\n    this.abilities = new Abilities(num);\n    this.items = new Items(num);\n    this.moves = new Moves(num);\n    this.species = new Species(num);\n    this.types = new Types(num);\n    this.natures = new Natures();\n  }\n}\n","import {State} from './state';\nimport {GameType, Weather, Terrain} from './data/interface';\n\nexport class Field implements State.Field {\n  gameType: GameType;\n  weather?: Weather;\n  weatherTurnsRemaining?: number;\n  terrain?: Terrain;\n  terrainTurnsRemaining?: number;\n  isMagicRoom: number;\n  isWonderRoom: number;\n  isGravity: number;\n  isAuraBreak?: boolean;\n  isFairyAura?: boolean;\n  isDarkAura?: boolean;\n  isBeadsOfRuin?: boolean;\n  isSwordOfRuin?: boolean;\n  isTabletsOfRuin?: boolean;\n  isVesselOfRuin?: boolean;\n  isTrickRoom: number;\n  isCloudNine?: boolean;\n  attackerSide: Side;\n  defenderSide: Side;\n\n  constructor(field: Partial<State.Field> = {}) {\n    this.gameType = field.gameType || 'Singles';\n    this.terrain = field.terrain;\n    this.terrainTurnsRemaining = field.terrainTurnsRemaining;\n    this.weather = field.weather;\n    this.weatherTurnsRemaining = field.weatherTurnsRemaining;\n    this.isMagicRoom = field.isMagicRoom || 0;\n    this.isWonderRoom = field.isWonderRoom || 0;\n    this.isGravity = field.isGravity || 0;\n    this.isAuraBreak = field.isAuraBreak || false;\n    this.isFairyAura = field.isFairyAura || false;\n    this.isDarkAura = field.isDarkAura || false;\n    this.isBeadsOfRuin = field.isBeadsOfRuin || false;\n    this.isSwordOfRuin = field.isSwordOfRuin || false;\n    this.isTabletsOfRuin = field.isTabletsOfRuin || false;\n    this.isVesselOfRuin = field.isVesselOfRuin || false;\n    this.isTrickRoom = field.isTrickRoom || 0;\n    this.isCloudNine = field.isCloudNine || false;\n\n    this.attackerSide = new Side(field.attackerSide || {});\n    this.defenderSide = new Side(field.defenderSide || {});\n  }\n\n  hasWeather(...weathers: Weather[]) {\n    if (this.isCloudNine) { return false }; \n    return !!(this.weather && weathers.includes(this.weather));\n  }\n\n  hasTerrain(...terrains: Terrain[]) {\n    return !!(this.terrain && terrains.includes(this.terrain));\n  }\n\n  swap() {\n    [this.attackerSide, this.defenderSide] = [this.defenderSide, this.attackerSide];\n    return this;\n  }\n\n  clone() {\n    return new Field({\n      gameType: this.gameType,\n      weather: this.weather,\n      weatherTurnsRemaining: this.weatherTurnsRemaining,\n      terrain: this.terrain,\n      terrainTurnsRemaining: this.terrainTurnsRemaining,\n      isMagicRoom: this.isMagicRoom,\n      isWonderRoom: this.isWonderRoom,\n      isGravity: this.isGravity,\n      attackerSide: this.attackerSide,\n      defenderSide: this.defenderSide,\n      isAuraBreak: this.isAuraBreak,\n      isDarkAura: this.isDarkAura,\n      isFairyAura: this.isFairyAura,\n      isBeadsOfRuin: this.isBeadsOfRuin,\n      isSwordOfRuin: this.isSwordOfRuin,\n      isTabletsOfRuin: this.isTabletsOfRuin,\n      isVesselOfRuin: this.isVesselOfRuin,\n      isTrickRoom: this.isTrickRoom,\n      isCloudNine: this.isCloudNine,\n    });\n  }\n}\n\nexport class Side implements State.Side {\n  spikes: number;\n  steelsurge: boolean;\n  vinelash: boolean;\n  wildfire: boolean;\n  cannonade: boolean;\n  volcalith: boolean;\n  isSR: boolean;\n  isReflect: number;\n  isLightScreen: number;\n  isDefCheered: number\n  isProtected: boolean;\n  isWideGuard: boolean;\n  isQuickGuard: boolean;\n  isSeeded: boolean;\n  isForesight: boolean;\n  isTailwind: number;\n  isHelpingHand: boolean;\n  isAtkCheered: number;\n  isFlowerGift: boolean;\n  isFriendGuard: boolean;\n  friendGuards: number;\n  isAuroraVeil: number;\n  isBattery: boolean;\n  isPowerSpot: boolean;\n  powerSpots: number;\n  steelySpirits: number;\n  isSwitching?: 'out' | 'in';\n  isCharged: boolean;\n  isMist: number;\n  isSafeguard: number;\n  isAromaVeil: boolean;\n\n  constructor(side: State.Side = {}) {\n    this.spikes = side.spikes || 0;\n    this.steelsurge = !!side.steelsurge;\n    this.vinelash = !!side.vinelash;\n    this.wildfire = !!side.wildfire;\n    this.cannonade = !!side.cannonade;\n    this.volcalith = !!side.volcalith;\n    this.isSR = !!side.isSR;\n    this.isReflect = side.isReflect || 0;\n    this.isLightScreen = side.isLightScreen || 0;\n    this.isDefCheered = side.isDefCheered || 0;\n    this.isProtected = !!side.isProtected;\n    this.isWideGuard = !!side.isWideGuard;\n    this.isQuickGuard = !!side.isQuickGuard;\n    this.isSeeded = !!side.isSeeded;\n    this.isForesight = !!side.isForesight;\n    this.isTailwind = side.isTailwind || 0;\n    this.isHelpingHand = !!side.isHelpingHand;\n    this.isAtkCheered = side.isAtkCheered || 0;\n    this.isFlowerGift = !!side.isFlowerGift;\n    this.isFriendGuard = !!side.isFriendGuard;\n    this.friendGuards = side.friendGuards || 0;\n    this.isAuroraVeil = side.isAuroraVeil || 0;\n    this.isBattery = !!side.isBattery;\n    this.isPowerSpot = !!side.isPowerSpot;\n    this.powerSpots = side.powerSpots || 0;\n    this.steelySpirits = side.steelySpirits || 0;\n    this.isSwitching = side.isSwitching;\n    this.isCharged = !!side.isCharged;\n    this.isMist = side.isMist || 0;\n    this.isSafeguard = side.isSafeguard || 0;\n    this.isAromaVeil = !!side.isAromaVeil;\n  }\n\n  clone() {\n    return new Side(this);\n  }\n}\n","import {Generation, TypeName, StatID} from './data/interface';\nimport {toID} from './util';\n\nexport const SEED_BOOSTED_STAT: {[item: string]: StatID} = {\n  'Electric Seed': 'def',\n  'Grassy Seed': 'def',\n  'Misty Seed': 'spd',\n  'Psychic Seed': 'spd',\n};\n\nexport function getItemBoostType(item: string | undefined) {\n  switch (item) {\n  case 'Draco Plate':\n  case 'Dragon Fang':\n    return 'Dragon';\n  case 'Dread Plate':\n  case 'Black Glasses':\n    return 'Dark';\n  case 'Earth Plate':\n  case 'Soft Sand':\n    return 'Ground';\n  case 'Fist Plate':\n  case 'Black Belt':\n    return 'Fighting';\n  case 'Flame Plate':\n  case 'Charcoal':\n    return 'Fire';\n  case 'Icicle Plate':\n  case 'Never-Melt Ice':\n    return 'Ice';\n  case 'Insect Plate':\n  case 'Silver Powder':\n    return 'Bug';\n  case 'Iron Plate':\n  case 'Metal Coat':\n    return 'Steel';\n  case 'Meadow Plate':\n  case 'Rose Incense':\n  case 'Miracle Seed':\n    return 'Grass';\n  case 'Mind Plate':\n  case 'Odd Incense':\n  case 'Twisted Spoon':\n    return 'Psychic';\n  case 'Pixie Plate':\n    return 'Fairy';\n  case 'Sky Plate':\n  case 'Sharp Beak':\n    return 'Flying';\n  case 'Splash Plate':\n  case 'Sea Incense':\n  case 'Wave Incense':\n  case 'Mystic Water':\n    return 'Water';\n  case 'Spooky Plate':\n  case 'Spell Tag':\n    return 'Ghost';\n  case 'Stone Plate':\n  case 'Rock Incense':\n  case 'Hard Stone':\n    return 'Rock';\n  case 'Toxic Plate':\n  case 'Poison Barb':\n    return 'Poison';\n  case 'Zap Plate':\n  case 'Magnet':\n    return 'Electric';\n  case 'Silk Scarf':\n  case 'Pink Bow':\n  case 'Polkadot Bow':\n    return 'Normal';\n  default:\n    return undefined;\n  }\n}\n\nexport function getBerryResistType(berry: string | undefined) {\n  switch (berry) {\n  case 'Chilan Berry':\n    return 'Normal';\n  case 'Occa Berry':\n    return 'Fire';\n  case 'Passho Berry':\n    return 'Water';\n  case 'Wacan Berry':\n    return 'Electric';\n  case 'Rindo Berry':\n    return 'Grass';\n  case 'Yache Berry':\n    return 'Ice';\n  case 'Chople Berry':\n    return 'Fighting';\n  case 'Kebia Berry':\n    return 'Poison';\n  case 'Shuca Berry':\n    return 'Ground';\n  case 'Coba Berry':\n    return 'Flying';\n  case 'Payapa Berry':\n    return 'Psychic';\n  case 'Tanga Berry':\n    return 'Bug';\n  case 'Charti Berry':\n    return 'Rock';\n  case 'Kasib Berry':\n    return 'Ghost';\n  case 'Haban Berry':\n    return 'Dragon';\n  case 'Colbur Berry':\n    return 'Dark';\n  case 'Babiri Berry':\n    return 'Steel';\n  case 'Roseli Berry':\n    return 'Fairy';\n  default:\n    return undefined;\n  }\n}\n\nconst FLING_120 = new Set([\n  'TR24',\n  'TR28',\n  'TR34',\n  'TR39',\n  'TR53',\n  'TR55',\n  'TR64',\n  'TR66',\n  'TR72',\n  'TR73',\n]);\n\nconst FLING_100 = new Set([\n  'Hard Stone',\n  'Room Service',\n  'Claw Fossil',\n  'Dome Fossil',\n  'Helix Fossil',\n  'Old Amber',\n  'Root Fossil',\n  'Armor Fossil',\n  'Old Amber',\n  'Fossilized Bird',\n  'Fossilized Dino',\n  'Fossilized Drake',\n  'Fossilized Fish',\n  'Plume Fossil',\n  'Jaw Fossil',\n  'Cover Fossil',\n  'Sail Fossil',\n  'Rare Bone',\n  'Skull Fossil',\n  'TR10',\n  'TR31',\n  'TR75',\n]);\n\nconst FLING_90 = new Set([\n  'Deep Sea Tooth',\n  'Thick Club',\n  'TR02',\n  'TR04',\n  'TR05',\n  'TR08',\n  'TR11',\n  'TR22',\n  'TR35',\n  'TR42',\n  'TR45',\n  'TR50',\n  'TR61',\n  'TR65',\n  'TR67',\n  'TR86',\n  'TR90',\n  'TR96',\n]);\n\nconst FLING_85 = new Set(['TR01', 'TR41', 'TR62', 'TR93', 'TR97', 'TR98']);\n\nconst FLING_80 = new Set([\n  'Assault Vest',\n  'Blunder Policy',\n  'Chipped Pot',\n  'Cracked Pot',\n  'Heavy-Duty Boots',\n  'Weakness Policy',\n  'Quick Claw',\n  'Dawn Stone',\n  'Dusk Stone',\n  'Electirizer',\n  'Magmarizer',\n  'Oval Stone',\n  'Protector',\n  'Sachet',\n  'Whipped Dream',\n  'Razor Claw',\n  'Shiny Stone',\n  'TR16',\n  'TR18',\n  'TR19',\n  'TR25',\n  'TR32',\n  'TR33',\n  'TR47',\n  'TR56',\n  'TR57',\n  'TR58',\n  'TR59',\n  'TR60',\n  'TR63',\n  'TR69',\n  'TR70',\n  'TR74',\n  'TR84',\n  'TR87',\n  'TR92',\n  'TR95',\n  'TR99',\n]);\n\nconst FLING_70 = new Set([\n  'Poison Barb',\n  'Dragon Fang',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Lens',\n  'Power Weight',\n]);\n\nconst FLING_60 = new Set([\n  'Adamant Orb',\n  'Damp Rock',\n  'Heat Rock',\n  'Leek',\n  'Lustrous Orb',\n  'Macho Brace',\n  'Rocky Helmet',\n  'Stick',\n  'Utility Umbrella',\n  'Terrain Extender',\n]);\nconst FLING_30 = new Set([\n  'Absorb Bulb',\n  'Black Belt',\n  'Black Sludge',\n  'Black Glasses',\n  'Cell Battery',\n  'Charcoal',\n  'Deep Sea Scale',\n  'Flame Orb',\n  'King\\'s Rock',\n  'Life Orb',\n  'Light Ball',\n  'Light Clay',\n  'Magnet',\n  'Metal Coat',\n  'Miracle Seed',\n  'Mystic Water',\n  'Never-Melt Ice',\n  'Razor Fang',\n  'Scope Lens',\n  'Soul Dew',\n  'Spell Tag',\n  'Sweet Apple',\n  'Tart Apple',\n  'Throat Spray',\n  'Toxic Orb',\n  'Twisted Spoon',\n  'Dragon Scale',\n  'Energy Powder',\n  'Fire Stone',\n  'Leaf Stone',\n  'Moon Stone',\n  'Sun Stone',\n  'Thunder Stone',\n  'Up-Grade',\n  'Water Stone',\n  'Berry Juice',\n  'Black Sludge',\n  'Prism Scale',\n  'Ice Stone',\n  'Gold Bottle Cap',\n  'Luminous Moss',\n  'Eject Button',\n  'Snowball',\n  'Bottle Cap',\n]);\nconst FLING_10 = new Set([\n  'Air Balloon',\n  'Berry Sweet',\n  'Choice Band',\n  'Choice Scarf',\n  'Choice Specs',\n  'Clover Sweet',\n  'Destiny Knot',\n  'Electric Seed',\n  'Expert Belt',\n  'Flower Sweet',\n  'Focus Band',\n  'Focus Sash',\n  'Full Incense',\n  'Grassy Seed',\n  'Lagging Tail',\n  'Lax Incense',\n  'Leftovers',\n  'Love Sweet',\n  'Mental Herb',\n  'Metal Powder',\n  'Mint Berry',\n  'Miracle Berry',\n  'Misty Seed',\n  'Muscle Band',\n  'Power Herb',\n  'Psychic Seed',\n  'Odd Incense',\n  'Quick Powder',\n  'Reaper Cloth',\n  'Red Card',\n  'Ribbon Sweet',\n  'Ring Target',\n  'Rock Incense',\n  'Rose Incense',\n  'Sea Incense',\n  'Shed Shell',\n  'Silk Scarf',\n  'Silver Powder',\n  'Smooth Rock',\n  'Soft Sand',\n  'Soothe Bell',\n  'Star Sweet',\n  'Strawberry Sweet',\n  'Wave Incense',\n  'White Herb',\n  'Wide Lens',\n  'Wise Glasses',\n  'Zoom Lens',\n  'Silver Powder',\n  'Power Herb',\n  'TR00',\n  'TR07',\n  'TR12',\n  'TR13',\n  'TR14',\n  'TR17',\n  'TR20',\n  'TR21',\n  'TR23',\n  'TR26',\n  'TR27',\n  'TR29',\n  'TR30',\n  'TR37',\n  'TR38',\n  'TR40',\n  'TR44',\n  'TR46',\n  'TR48',\n  'TR49',\n  'TR51',\n  'TR52',\n  'TR54',\n  'TR68',\n  'TR76',\n  'TR77',\n  'TR79',\n  'TR80',\n  'TR83',\n  'TR85',\n  'TR88',\n  'TR91',\n]);\n\n// TODO: move this data to the data files instead.\nexport function getFlingPower(item?: string) {\n  if (!item) return 0;\n  if (['Iron Ball', 'TR43', 'TR71'].includes(item)) return 130;\n  if (FLING_120.has(item)) return 85;\n  if (['TR03', 'TR06', 'TR09', 'TR15', 'TR89'].includes(item)) return 110;\n  if (FLING_100.has(item)) return 100;\n  if (['TR36', 'TR78', 'TR81', 'TR94'].includes(item)) return 95;\n  if (item.includes('Plate') || FLING_90.has(item)) return 90;\n  if (FLING_85.has(item)) return 85;\n  if (FLING_80.has(item)) return 80;\n  if (FLING_70.has(item)) return 70;\n  if (FLING_60.has(item)) return 60;\n  if (['Eject Pack', 'Sharp Beak', 'Dubious Disc'].includes(item)) return 50;\n  if (['Icy Rock', 'Eviolite', 'Lucky Punch'].includes(item)) return 40;\n  if (FLING_30.has(item)) return 30;\n  if (item === 'TR82') return 20;\n  if (item.includes('Berry') || FLING_10.has(item)) return 10;\n  return 0;\n}\n\nexport function getNaturalGift(gen: Generation, item: string) {\n  const gift = gen.items.get(toID(item))?.naturalGift;\n  return gift ? {t: gift.type, p: gift.basePower} : {t: 'Normal' as TypeName, p: 1};\n}\n\nexport function getTechnoBlast(item: string) {\n  switch (item) {\n  case 'Burn Drive':\n    return 'Fire';\n  case 'Chill Drive':\n    return 'Ice';\n  case 'Douse Drive':\n    return 'Water';\n  case 'Shock Drive':\n    return 'Electric';\n  default:\n    return undefined;\n  }\n}\n\nexport function getMultiAttack(item: string) {\n  if (item.includes('Memory')) {\n    return item.substring(0, item.indexOf(' ')) as TypeName;\n  }\n  return undefined;\n}\n","import {Natures, Generation, TypeName, StatID, StatsTable} from './data/interface';\nimport {toID} from './util';\n\nconst RBY: Array<StatID | 'spc'> = ['hp', 'atk', 'def', 'spc', 'spe', 'acc', 'eva'];\nconst GSC: StatID[] = ['hp', 'atk', 'def', 'spa', 'spd', 'spe', 'acc', 'eva'];\nconst ADV: StatID[] = GSC;\nconst DPP: StatID[] = GSC;\nconst BW: StatID[] = GSC;\nconst XY: StatID[] = GSC;\nconst SM: StatID[] = GSC;\nconst SS: StatID[] = GSC;\nconst SV: StatID[] = GSC;\n\nexport const STATS: Array<Array<StatID | 'spc'> | StatID[]> =\n  [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\ntype HPTypeName = Exclude<TypeName, 'Normal' | 'Fairy' | '???'>;\n\nconst HP_TYPES = [\n  'Fighting', 'Flying', 'Poison', 'Ground', 'Rock', 'Bug', 'Ghost', 'Steel',\n  'Fire', 'Water', 'Grass', 'Electric', 'Psychic', 'Ice', 'Dragon', 'Dark',\n];\n\nconst HP: {[type in HPTypeName]: {ivs: Partial<StatsTable>; dvs: Partial<StatsTable>}} = {\n  Bug: {ivs: {atk: 30, def: 30, spd: 30}, dvs: {atk: 13, def: 13}},\n  Dark: {ivs: {}, dvs: {}},\n  Dragon: {ivs: {atk: 30}, dvs: {def: 14}},\n  Electric: {ivs: {spa: 30}, dvs: {atk: 14}},\n  Fighting: {ivs: {def: 30, spa: 30, spd: 30, spe: 30}, dvs: {atk: 12, def: 12}},\n  Fire: {ivs: {atk: 30, spa: 30, spe: 30}, dvs: {atk: 14, def: 12}},\n  Flying: {ivs: {hp: 30, atk: 30, def: 30, spa: 30, spd: 30}, dvs: {atk: 12, def: 13}},\n  Ghost: {ivs: {def: 30, spd: 30}, dvs: {atk: 13, def: 14}},\n  Grass: {ivs: {atk: 30, spa: 30}, dvs: {atk: 14, def: 14}},\n  Ground: {ivs: {spa: 30, spd: 30}, dvs: {atk: 12}},\n  Ice: {ivs: {atk: 30, def: 30}, dvs: {def: 13}},\n  Poison: {ivs: {def: 30, spa: 30, spd: 30}, dvs: {atk: 12, def: 14}},\n  Psychic: {ivs: {atk: 30, spe: 30}, dvs: {def: 12}},\n  Rock: {ivs: {def: 30, spd: 30, spe: 30}, dvs: {atk: 13, def: 12}},\n  Steel: {ivs: {spd: 30}, dvs: {atk: 13}},\n  Water: {ivs: {atk: 30, def: 30, spa: 30}, dvs: {atk: 14, def: 13}},\n};\n\nexport const Stats = new (class {\n  displayStat(stat: StatID | 'spc') {\n    switch (stat) {\n    case 'hp':\n      return 'HP';\n    case 'atk':\n      return 'Atk';\n    case 'def':\n      return 'Def';\n    case 'spa':\n      return 'SpA';\n    case 'spd':\n      return 'SpD';\n    case 'spe':\n      return 'Spe';\n    case 'spc':\n      return 'Spc';\n    default:\n      throw new Error(`unknown stat ${stat}`);\n    }\n  }\n\n  shortForm(stat: StatID | 'spc') {\n    switch (stat) {\n    case 'hp':\n      return 'hp';\n    case 'atk':\n      return 'at';\n    case 'def':\n      return 'df';\n    case 'spa':\n      return 'sa';\n    case 'spd':\n      return 'sd';\n    case 'spe':\n      return 'sp';\n    case 'spc':\n      return 'sl';\n    }\n  }\n\n  getHPDV(ivs: {atk: number; def: number; spe: number; spc: number}) {\n    return (\n      (this.IVToDV(ivs.atk) % 2) * 8 +\n      (this.IVToDV(ivs.def) % 2) * 4 +\n      (this.IVToDV(ivs.spe) % 2) * 2 +\n      (this.IVToDV(ivs.spc) % 2)\n    );\n  }\n\n  IVToDV(iv: number) {\n    return Math.floor(iv / 2);\n  }\n\n  DVToIV(dv: number) {\n    return dv * 2;\n  }\n\n  DVsToIVs(dvs: Readonly<Partial<StatsTable>>) {\n    const ivs: Partial<StatsTable> = {};\n    let dv: StatID;\n    for (dv in dvs) {\n      ivs[dv] = Stats.DVToIV(dvs[dv]!);\n    }\n    return ivs;\n  }\n\n  calcStat(\n    gen: Generation,\n    stat: StatID,\n    base: number,\n    iv: number,\n    ev: number,\n    level: number,\n    nature?: string\n  ) {\n    if (gen.num < 1 || gen.num > 9) throw new Error(`Invalid generation ${gen.num}`);\n    if (gen.num < 3) return this.calcStatRBY(stat, base, iv, level);\n    return this.calcStatADV(gen.natures, stat, base, iv, ev, level, nature);\n  }\n\n  calcStatADV(\n    natures: Natures,\n    stat: StatID,\n    base: number,\n    iv: number,\n    ev: number,\n    level: number,\n    nature?: string\n  ) {\n    if (stat === 'hp') {\n      return base === 1\n        ? base\n        : Math.floor(((base * 2 + iv + Math.floor(ev / 4)) * level) / 100) + level + 10;\n    } else {\n      let mods: [StatID?, StatID?] = [undefined, undefined];\n      if (nature) {\n        const nat = natures.get(toID(nature));\n        mods = [nat?.plus, nat?.minus];\n      }\n      const n =\n        mods[0] === stat && mods[1] === stat\n          ? 1\n          : mods[0] === stat\n            ? 1.1\n            : mods[1] === stat\n              ? 0.9\n              : 1;\n\n      return Math.floor((Math.floor(((base * 2 + iv + Math.floor(ev / 4)) * level) / 100) + 5) * n);\n    }\n  }\n\n  calcStatRBY(stat: StatID, base: number, iv: number, level: number) {\n    return this.calcStatRBYFromDV(stat, base, this.IVToDV(iv), level);\n  }\n\n  calcStatRBYFromDV(stat: StatID, base: number, dv: number, level: number) {\n    if (stat === 'hp') {\n      return Math.floor((((base + dv) * 2 + 63) * level) / 100) + level + 10;\n    } else {\n      return Math.floor((((base + dv) * 2 + 63) * level) / 100) + 5;\n    }\n  }\n\n  getHiddenPowerIVs(gen: Generation, hpType: HPTypeName) {\n    const hp = HP[hpType];\n    if (!hp) return undefined;\n    return gen.num === 2 ? Stats.DVsToIVs(hp.dvs) : hp.ivs;\n  }\n\n  getHiddenPower(gen: Generation, ivs: StatsTable) {\n    const tr = (num: number, bits = 0) => {\n      if (bits) return (num >>> 0) % (2 ** bits);\n      return num >>> 0;\n    };\n    const stats = {hp: 31, atk: 31, def: 31, spe: 31, spa: 31, spd: 31};\n    if (gen.num <= 2) {\n      // Gen 2 specific Hidden Power check. IVs are still treated 0-31 so we get them 0-15\n      const atkDV = tr(ivs.atk / 2);\n      const defDV = tr(ivs.def / 2);\n      const speDV = tr(ivs.spe / 2);\n      const spcDV = tr(ivs.spa / 2);\n      return {\n        type: HP_TYPES[4 * (atkDV % 4) + (defDV % 4)] as TypeName,\n        power: tr(\n          (5 * ((spcDV >> 3) +\n            (2 * (speDV >> 3)) +\n            (4 * (defDV >> 3)) +\n            (8 * (atkDV >> 3))) +\n            (spcDV % 4)) / 2 + 31\n        ),\n      };\n    } else {\n      // Hidden Power check for Gen 3 onwards\n      let hpTypeX = 0;\n      let hpPowerX = 0;\n      let i = 1;\n      for (const s in stats) {\n        hpTypeX += i * (ivs[s as StatID]! % 2);\n        hpPowerX += i * (tr(ivs[s as StatID]! / 2) % 2);\n        i *= 2;\n      }\n      return {\n        type: HP_TYPES[tr(hpTypeX * 15 / 63)] as TypeName,\n        // After Gen 6, Hidden Power is always 60 base power\n        power: (gen.num && gen.num < 6) ? tr(hpPowerX * 40 / 63) + 30 : 60,\n      };\n    }\n  }\n})();\n","import {\n  Generation,\n  ID,\n  ItemName,\n  MoveCategory,\n  NatureName,\n  StatID,\n  StatsTable,\n  Terrain,\n  TypeName,\n  Weather,\n} from '../data/interface';\nimport {toID} from '../util';\nimport {Field, Side} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Stats} from '../stats';\nimport {RawDesc} from '../desc';\n\nconst EV_ITEMS = [\n  'Macho Brace',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Lens',\n  'Power Weight',\n];\n\nexport function isGrounded(pokemon: Pokemon, field: Field) {\n  return (field.isGravity || pokemon.hasItem('Iron Ball') || pokemon.isIngrain ||\n    (!pokemon.hasType('Flying') &&\n      !pokemon.hasAbility('Levitate') &&\n      !pokemon.hasItem('Air Balloon')));\n}\n\nexport function getModifiedStat(stat: number, mod: number, gen?: Generation) {\n  if (gen && gen.num < 3) {\n    if (mod >= 0) {\n      const pastGenBoostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\n      stat = Math.floor(stat * pastGenBoostTable[mod]);\n    } else {\n      const numerators = [100, 66, 50, 40, 33, 28, 25];\n      stat = Math.floor((stat * numerators[-mod]) / 100);\n    }\n    return Math.min(999, Math.max(1, stat));\n  }\n\n  const numerator = 0;\n  const denominator = 1;\n  const modernGenBoostTable = [\n    [2, 8],\n    [2, 7],\n    [2, 6],\n    [2, 5],\n    [2, 4],\n    [2, 3],\n    [2, 2],\n    [3, 2],\n    [4, 2],\n    [5, 2],\n    [6, 2],\n    [7, 2],\n    [8, 2],\n  ];\n  stat = OF16(stat * modernGenBoostTable[6 + mod][numerator]);\n  stat = Math.floor(stat / modernGenBoostTable[6 + mod][denominator]);\n\n  return stat;\n}\n\nexport function computeFinalStats(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  field: Field,\n  ...stats: StatID[]\n) {\n  const sides: Array<[Pokemon, Side]> =\n    [[attacker, field.attackerSide], [defender, field.defenderSide]];\n  for (const [pokemon, side] of sides) {\n    for (const stat of stats) {\n      if (stat === 'spe') {\n        pokemon.stats.spe = getFinalSpeed(gen, pokemon, field, side);\n      } else {\n        pokemon.stats[stat] = getModifiedStat(pokemon.rawStats[stat]!, pokemon.boosts[stat]!, gen);\n      }\n    }\n  }\n}\n\nexport function getFinalSpeed(gen: Generation, pokemon: Pokemon, field: Field, side: Side) {\n  const weather = field.weather || '';\n  const terrain = field.terrain;\n  let speed = getModifiedStat(pokemon.rawStats.spe, pokemon.boosts.spe, gen);\n  const speedMods = [];\n\n  if (side.isTailwind) speedMods.push(8192);\n  // Pledge swamp would get applied here when implemented\n  // speedMods.push(1024);\n\n  if ((pokemon.hasAbility('Unburden') && pokemon.abilityOn) ||\n      (pokemon.hasAbility('Chlorophyll') && weather.includes('Sun')) ||\n      (pokemon.hasAbility('Sand Rush') && weather === 'Sand') ||\n      (pokemon.hasAbility('Swift Swim') && weather.includes('Rain')) ||\n      (pokemon.hasAbility('Slush Rush') && ['Hail', 'Snow'].includes(weather)) ||\n      (pokemon.hasAbility('Surge Surfer') && terrain === 'Electric')\n  ) {\n    speedMods.push(8192);\n  } else if (pokemon.hasAbility('Quick Feet') && pokemon.status) {\n    speedMods.push(6144);\n  } else if (pokemon.hasAbility('Slow Start') && pokemon.abilityOn) {\n    speedMods.push(2048);\n  } else if (isQPActive(pokemon, field) && getQPBoostedStat(pokemon, gen) === 'spe') {\n    speedMods.push(6144);\n  }\n\n  if (pokemon.hasItem('Choice Scarf')) {\n    speedMods.push(6144);\n  } else if (pokemon.hasItem('Iron Ball', ...EV_ITEMS)) {\n    speedMods.push(2048);\n  } else if (pokemon.hasItem('Quick Powder') && pokemon.named('Ditto')) {\n    speedMods.push(8192);\n  }\n\n  speed = OF32(pokeRound((speed * chainMods(speedMods, 410, 131172)) / 4096));\n  if (pokemon.hasStatus('par') && !pokemon.hasAbility('Quick Feet')) {\n    speed = Math.floor(OF32(speed * (gen.num < 7 ? 25 : 50)) / 100);\n  }\n\n  speed = Math.min(gen.num <= 2 ? 999 : 10000, speed);\n  return Math.max(0, speed);\n}\n\nexport function getMoveEffectiveness(\n  gen: Generation,\n  move: Move,\n  type: TypeName,\n  isGhostRevealed?: boolean,\n  isGravity?: boolean | number,\n  isRingTarget?: boolean,\n) {\n  if ((isRingTarget || isGhostRevealed) && type === 'Ghost' && move.hasType('Normal', 'Fighting')) {\n    return 1;\n  } else if ((isRingTarget || isGravity) && type === 'Flying' && move.hasType('Ground')) {\n    return 1;\n  } else if (move.named('Freeze-Dry') && type === 'Water') {\n    return 2;\n  } else if (move.named('Flying Press')) {\n    return (\n      gen.types.get('fighting' as ID)!.effectiveness[type]! *\n      gen.types.get('flying' as ID)!.effectiveness[type]!\n    );\n  } else {\n    return gen.types.get(toID(move.type))!.effectiveness[type]!;\n  }\n}\n\nexport function checkAirLock(pokemon: Pokemon, field: Field) {\n  if (pokemon.hasAbility('Air Lock', 'Cloud Nine')) {\n    field.weather = undefined;\n  }\n}\n\nexport function checkForecast(pokemon: Pokemon, weather?: Weather) {\n  if (pokemon.hasAbility('Forecast') && pokemon.named('Castform')) {\n    switch (weather) {\n    case 'Sun':\n    case 'Harsh Sunshine':\n      pokemon.types = ['Fire'];\n      break;\n    case 'Rain':\n    case 'Heavy Rain':\n      pokemon.types = ['Water'];\n      break;\n    case 'Hail':\n    case 'Snow':\n      pokemon.types = ['Ice'];\n      break;\n    default:\n      pokemon.types = ['Normal'];\n    }\n  }\n}\n\nexport function checkItem(pokemon: Pokemon, magicRoomActive?: boolean) {\n  if (\n    pokemon.hasAbility('Klutz') && !EV_ITEMS.includes(pokemon.item!) ||\n      magicRoomActive\n  ) {\n    pokemon.item = '' as ItemName;\n  }\n}\n\nexport function checkWonderRoom(pokemon: Pokemon, wonderRoomActive?: boolean) {\n  if (wonderRoomActive) {\n    [pokemon.rawStats.def, pokemon.rawStats.spd] = [pokemon.rawStats.spd, pokemon.rawStats.def];\n  }\n}\n\nexport function checkIntimidate(gen: Generation, source: Pokemon, target: Pokemon) {\n  const blocked =\n    target.hasAbility('Clear Body', 'White Smoke', 'Hyper Cutter', 'Full Metal Body') ||\n    // More abilities now block Intimidate in Gen 8+ (DaWoblefet, Cloudy Mistral)\n    (gen.num >= 8 && target.hasAbility('Inner Focus', 'Own Tempo', 'Oblivious', 'Scrappy')) ||\n    target.hasItem('Clear Amulet');\n  if (source.hasAbility('Intimidate') && source.abilityOn && !blocked) {\n    if (target.hasAbility('Contrary', 'Defiant', 'Guard Dog')) {\n      target.boosts.atk = Math.min(6, target.boosts.atk + 1);\n    } else if (target.hasAbility('Simple')) {\n      target.boosts.atk = Math.max(-6, target.boosts.atk - 2);\n    } else {\n      target.boosts.atk = Math.max(-6, target.boosts.atk - 1);\n    }\n    if (target.hasAbility('Competitive')) {\n      target.boosts.spa = Math.min(6, target.boosts.spa + 2);\n    }\n  }\n}\n\nexport function checkDownload(source: Pokemon, target: Pokemon, wonderRoomActive?: boolean) {\n  if (source.hasAbility('Download')) {\n    let def = target.stats.def;\n    let spd = target.stats.spd;\n    // We swap the defense stats again here since Download ignores Wonder Room\n    if (wonderRoomActive) [def, spd] = [spd, def];\n    if (spd <= def) {\n      source.boosts.spa = Math.min(6, source.boosts.spa + 1);\n    } else {\n      source.boosts.atk = Math.min(6, source.boosts.atk + 1);\n    }\n  }\n}\n\nexport function checkIntrepidSword(source: Pokemon, gen: Generation) {\n  if (source.hasAbility('Intrepid Sword') && gen.num < 9) {\n    source.boosts.atk = Math.min(6, source.boosts.atk + 1);\n  }\n}\n\nexport function checkDauntlessShield(source: Pokemon, gen: Generation) {\n  if (source.hasAbility('Dauntless Shield') && gen.num < 9) {\n    source.boosts.def = Math.min(6, source.boosts.def + 1);\n  }\n}\n\nexport function checkInfiltrator(pokemon: Pokemon, affectedSide: Side) {\n  if (pokemon.hasAbility('Infiltrator')) {\n    affectedSide.isReflect = 0;\n    affectedSide.isLightScreen = 0;\n    affectedSide.isAuroraVeil = 0;\n  }\n}\n\nexport function checkSeedBoost(pokemon: Pokemon, field: Field) {\n  if (!pokemon.item) return;\n  if (field.terrain && pokemon.item.includes('Seed')) {\n    const terrainSeed = pokemon.item.substring(0, pokemon.item.indexOf(' ')) as Terrain;\n    if (field.hasTerrain(terrainSeed)) {\n      if (terrainSeed === 'Grassy' || terrainSeed === 'Electric') {\n        pokemon.boosts.def = pokemon.hasAbility('Contrary')\n          ? Math.max(-6, pokemon.boosts.def - 1)\n          : Math.min(6, pokemon.boosts.def + 1);\n      } else {\n        pokemon.boosts.spd = pokemon.hasAbility('Contrary')\n          ? Math.max(-6, pokemon.boosts.spd - 1)\n          : Math.min(6, pokemon.boosts.spd + 1);\n      }\n    }\n  }\n}\n\n// NOTE: We only need to handle guaranteed, damage-relevant boosts here for multi-hit accuracy\nexport function checkMultihitBoost(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  usedWhiteHerb = false\n) {\n  // NOTE: attacker.ability must be Parental Bond for these moves to be multi-hit\n  if (move.named('Gyro Ball', 'Electro Ball') && defender.hasAbility('Gooey', 'Tangling Hair')) {\n    // Gyro Ball (etc) makes contact into Gooey (etc) whenever its inflicting multiple hits because\n    // this can only happen if the attacker ability is Parental Bond (and thus can't be Long Reach)\n    if (attacker.hasItem('White Herb') && !usedWhiteHerb) {\n      desc.attackerItem = attacker.item;\n      usedWhiteHerb = true;\n    } else {\n      attacker.boosts.spe = Math.max(attacker.boosts.spe - 1, -6);\n      attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n      desc.defenderAbility = defender.ability;\n    }\n    // BUG: Technically Sitrus/Figy Berry + Unburden can also affect the defender's speed, but\n    // this goes far beyond what we care to implement (especially once Gluttony is considered) now\n  } else if (move.named('Power-Up Punch')) {\n    attacker.boosts.atk = Math.min(attacker.boosts.atk + 1, 6);\n    attacker.stats.atk = getModifiedStat(attacker.rawStats.atk, attacker.boosts.atk, gen);\n  }\n\n  if (defender.hasAbility('Stamina')) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      defender.boosts.def = Math.min(defender.boosts.def + 1, 6);\n      defender.stats.def = getModifiedStat(defender.rawStats.def, defender.boosts.def, gen);\n      desc.defenderAbility = defender.ability;\n    }\n  } else if (defender.hasAbility('Weak Armor')) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      if (defender.hasItem('White Herb') && !usedWhiteHerb) {\n        desc.defenderItem = defender.item;\n        usedWhiteHerb = true;\n      } else {\n        defender.boosts.def = Math.max(defender.boosts.def - 1, -6);\n        defender.stats.def = getModifiedStat(defender.rawStats.def, defender.boosts.def, gen);\n      }\n    }\n    defender.boosts.spe = Math.min(defender.boosts.spe + 2, 6);\n    defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const simple = attacker.hasAbility('Simple') ? 2 : 1;\n  if (move.dropsStats) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      // No move with dropsStats has fancy logic regarding category here\n      const stat = move.category === 'Special' ? 'spa' : 'atk';\n\n      let boosts = attacker.boosts[stat];\n      if (attacker.hasAbility('Contrary')) {\n        boosts = Math.min(6, boosts + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        boosts = Math.max(-6, boosts - move.dropsStats * simple);\n        if (simple > 1) desc.attackerAbility = attacker.ability;\n      }\n\n      if (attacker.hasItem('White Herb') && attacker.boosts[stat] < 0 && !usedWhiteHerb) {\n        boosts += move.dropsStats * simple;\n        desc.attackerItem = attacker.item;\n        usedWhiteHerb = true;\n      }\n\n      attacker.boosts[stat] = boosts;\n      attacker.stats[stat] = getModifiedStat(attacker.rawStats[stat], defender.boosts[stat], gen);\n    }\n  }\n\n  return usedWhiteHerb;\n}\n\nexport function chainMods(mods: number[], lowerBound: number, upperBound: number) {\n  let M = 4096;\n  for (const mod of mods) {\n    if (mod !== 4096) {\n      M = (M * mod + 2048) >> 12;\n    }\n  }\n  return Math.max(Math.min(M, upperBound), lowerBound);\n}\n\nexport function getBaseDamage(level: number, basePower: number, attack: number, defense: number) {\n  return Math.floor(\n    OF32(\n      Math.floor(\n        OF32(OF32(Math.floor((2 * level) / 5 + 2) * basePower) * attack) / defense\n      ) / 50 + 2\n    )\n  );\n}\n\n/**\n * Get which stat will be boosted by Quark Drive or Protosynthesis\n * In the case that `pokemon.boostedStat` is set, it will always return that stat\n * In the case that two stats have equal value, stat choices will be prioritized\n * in the following order:\n * Attack, Defense, Special Attack, Special Defense, and Speed\n *\n * @param modifiedStats\n * @returns\n */\nexport function getQPBoostedStat(\n  pokemon: Pokemon,\n  gen?: Generation\n): StatID {\n  if (pokemon.boostedStat && pokemon.boostedStat !== 'auto') {\n    return pokemon.boostedStat; // override.\n  }\n  let bestStat: StatID = 'atk';\n  for (const stat of ['def', 'spa', 'spd', 'spe'] as StatID[]) {\n    if (\n      // proto/quark ignore boosts when considering their boost\n      getModifiedStat(pokemon.rawStats[stat]!, pokemon.boosts[stat]!, gen) >\n      getModifiedStat(pokemon.rawStats[bestStat]!, pokemon.boosts[bestStat]!, gen)\n    ) {\n      bestStat = stat;\n    }\n  }\n  return bestStat;\n}\n\nexport function isQPActive(\n  pokemon: Pokemon,\n  field: Field\n): boolean {\n  if (!pokemon.boostedStat) {\n    return false;\n  }\n\n  const weather = field.weather || '';\n  const terrain = field.terrain;\n  if (\n    (pokemon.hasAbility('Protosynthesis') &&\n      (weather.includes('Sun') || pokemon.abilityOn)) ||\n    (pokemon.hasAbility('Quark Drive') &&\n      (terrain === 'Electric' || pokemon.abilityOn)) ||\n    (pokemon.boostedStat !== 'auto')\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function getFinalDamage(\n  baseAmount: number,\n  i: number,\n  effectiveness: number,\n  isBurned: boolean,\n  stabMod: number,\n  finalMod: number,\n  protect?: boolean\n) {\n  let damageAmount = Math.floor(OF32(baseAmount * (85 + i)) / 100);\n  // If the stabMod would not accomplish anything we avoid applying it because it could cause\n  // us to calculate damage overflow incorrectly (DaWoblefet)\n  if (stabMod !== 4096) damageAmount = OF32(damageAmount * stabMod) / 4096;\n  damageAmount = Math.floor(OF32(pokeRound(damageAmount) * effectiveness));\n\n  if (isBurned) damageAmount = Math.floor(damageAmount / 2);\n  if (protect) damageAmount = pokeRound(OF32(damageAmount * 1024) / 4096);\n  return OF16(pokeRound(Math.max(1, OF32(damageAmount * finalMod) / 4096)));\n}\n\n/**\n * Determines which move category Shell Side Arm should behave as.\n *\n * A simplified formula can be used here compared to what the research\n * suggests as we do not want to implement the random tiebreak element of\n * move - instead we simply default to 'Special' and allow the user to override\n * this by manually adjusting the move's category.\n *\n * See also:\n * {@link https://github.com/smogon/pokemon-showdown/commit/65d2bb5d}\n *\n * @param source Attacking pokemon (after stat modifications)\n * @param target Target pokemon (after stat modifications)\n * @returns 'Physical' | 'Special'\n */\nexport function getShellSideArmCategory(source: Pokemon, target: Pokemon): MoveCategory {\n  const physicalDamage = source.stats.atk / target.stats.def;\n  const specialDamage = source.stats.spa / target.stats.spd;\n  return physicalDamage > specialDamage ? 'Physical' : 'Special';\n}\n\nexport function getWeightFactor(pokemon: Pokemon) {\n  return pokemon.hasAbility('Heavy Metal') ? 2\n    : (pokemon.hasAbility('Light Metal') || pokemon.hasItem('Float Stone')) ? 0.5 : 1;\n}\n\nexport function countBoosts(gen: Generation, boosts: StatsTable, randomBoosts: number = 0) {\n  let sum = 0;\n\n  const STATS: StatID[] = gen.num === 1\n    ? ['atk', 'def', 'spa', 'spe']\n    : ['atk', 'def', 'spa', 'spd', 'spe'];\n\n  for (const stat of STATS) {\n    // Only positive boosts are counted\n    const boost = boosts[stat];\n    if (boost && boost > 0) sum += boost;\n  }\n  return sum + randomBoosts;\n}\n\nexport function getEVDescriptionText(\n  gen: Generation,\n  pokemon: Pokemon,\n  stat: 'atk' | 'def' | 'spd' | 'spa',\n  natureName: NatureName\n): string {\n  const nature = gen.natures.get(toID(natureName))!;\n  return (pokemon.evs[stat] +\n    (nature.plus === nature.minus ? ''\n    : nature.plus === stat ? '+'\n    : nature.minus === stat ? '-'\n    : '') + ' ' +\n     Stats.displayStat(stat));\n}\n\nexport function handleFixedDamageMoves(attacker: Pokemon, move: Move) {\n  if (move.named('Seismic Toss', 'Night Shade')) {\n    return attacker.level;\n  } else if (move.named('Dragon Rage')) {\n    return 40;\n  } else if (move.named('Sonic Boom')) {\n    return 20;\n  }\n  return 0;\n}\n\n// Game Freak rounds DOWN on .5\nexport function pokeRound(num: number) {\n  return num % 1 > 0.5 ? Math.ceil(num) : Math.floor(num);\n}\n\n// 16-bit Overflow\nexport function OF16(n: number) {\n  return n > 65535 ? n % 65536 : n;\n}\n\n// 32-bit Overflow\nexport function OF32(n: number) {\n  return n > 4294967295 ? n % 4294967296 : n;\n}\n","import {Generation, Weather, Terrain, TypeName, ID} from './data/interface';\nimport {Field, Side} from './field';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\nimport {Damage, damageRange} from './result';\nimport {error} from './util';\n// NOTE: This needs to come last to simplify bundling\nimport {isGrounded} from './mechanics/util';\n\nexport interface RawDesc {\n  HPEVs?: string;\n  attackBoost?: number;\n  attackEVs?: string;\n  attackerAbility?: string;\n  attackerItem?: string;\n  attackerName: string;\n  attackerTera?: string;\n  defenderAbility?: string;\n  defenderItem?: string;\n  defenderName: string;\n  defenderTera?: string;\n  defenseBoost?: number;\n  defenseEVs?: string;\n  hits?: number;\n  alliesFainted?: number;\n  isBeadsOfRuin?: boolean;\n  isSwordOfRuin?: boolean;\n  isTabletsOfRuin?: boolean;\n  isVesselOfRuin?: boolean;\n  isAuroraVeil?: boolean;\n  isFlowerGiftAttacker?: boolean;\n  isFlowerGiftDefender?: boolean;\n  isFriendGuard?: boolean;\n  friendGuards?: number;\n  isHelpingHand?: boolean;\n  isAtkCheered?: boolean;\n  isCritical?: boolean;\n  isLightScreen?: boolean;\n  isDefCheered?: boolean;\n  isDefCheeredBodyPress?: boolean;\n  isBurned?: boolean;\n  isProtected?: boolean;\n  isReflect?: boolean;\n  isBattery?: boolean;\n  isPowerSpot?: boolean;\n  isWonderRoom?: boolean;\n  isSwitching?: 'out' | 'in';\n  moveBP?: number;\n  moveName: string;\n  moveTurns?: string;\n  moveType?: TypeName;\n  powerSpots?: number;\n  rivalry?: 'buffed' | 'nerfed';\n  steelySpirits?: number;\n  terrain?: Terrain;\n  weather?: Weather;\n  isDefenderDynamaxed?: boolean;\n  isCharged?: boolean;\n  shieldActive?: boolean;\n}\n\nexport function display(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  damage: Damage,\n  rawDesc: RawDesc,\n  notation = '%',\n  err = true\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  const minDisplay = toDisplay(notation, min, defender.maxHP());\n  const maxDisplay = toDisplay(notation, max, defender.maxHP());\n\n  const desc = buildDescription(rawDesc, attacker, defender);\n  const damageText = `${min}-${max} (${minDisplay} - ${maxDisplay}${notation}${getBossMultiplierDesc(defender)})`;\n\n  if (move.category === 'Status' && !move.named('Nature Power')) return `${desc}: ${damageText}`;\n  const koChanceText = getKOChance(gen, attacker, defender, move, field, damage, err).text;\n  return koChanceText ? `${desc}: ${damageText} -- ${koChanceText}` : `${desc}: ${damageText}`;\n}\n\nexport function displayMove(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  const minDisplay = toDisplay(notation, min, defender.maxHP());\n  const maxDisplay = toDisplay(notation, max, defender.maxHP());\n\n  const recoveryText = getRecovery(gen, attacker, defender, move, damage, notation).text;\n  const recoilText = getRecoil(gen, attacker, defender, move, damage, notation).text;\n\n  return `${minDisplay} - ${maxDisplay}${notation}${recoveryText &&\n    ` (${recoveryText})`}${recoilText && ` (${recoilText})`}`;\n}\n\nexport function getRecovery(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const minD = typeof minDamage === 'number' ? [minDamage] : minDamage;\n  const maxD = typeof maxDamage === 'number' ? [maxDamage] : maxDamage;\n\n  const recovery = [0, 0] as [number, number];\n  let text = '';\n\n  const ignoresShellBell =\n    gen.num === 3 && move.named('Doom Desire', 'Future Sight');\n  if (attacker.hasItem('Shell Bell') && !ignoresShellBell) {\n    const max = Math.round(defender.maxHP() / 8);\n    for (let i = 0; i < minD.length; i++) {\n      recovery[0] += Math.min(Math.round(minD[i] * move.hits / 8), max);\n      recovery[1] += Math.min(Math.round(maxD[i] * move.hits / 8), max);\n    }\n  }\n\n  if (move.named('G-Max Finale')) {\n    recovery[0] = recovery[1] = Math.round(attacker.maxHP() / 6);\n  }\n\n  if (move.drain) {\n    const percentHealed = move.drain[0] / move.drain[1];\n    const max = Math.round(defender.maxHP() * percentHealed);\n    for (let i = 0; i < minD.length; i++) {\n      const range = [minD[i], maxD[i]];\n      for (const j in recovery) {\n        let drained = Math.round(range[j] * percentHealed);\n        if (attacker.hasItem('Big Root')) drained = Math.trunc(drained * 5324 / 4096);\n        recovery[j] += Math.min(drained * move.hits, max);\n      }\n    }\n  }\n\n  if (recovery[1] === 0) return {recovery, text};\n\n  const minHealthRecovered = toDisplay(notation, recovery[0], attacker.maxHP());\n  const maxHealthRecovered = toDisplay(notation, recovery[1], attacker.maxHP());\n\n  text = `${minHealthRecovered} - ${maxHealthRecovered}${notation} recovered`;\n  return {recovery, text};\n}\n\n// TODO: return recoil damage as exact HP\nexport function getRecoil(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  let recoil: [number, number] | number = [0, 0];\n  let text = '';\n\n  const damageOverflow = minDamage > defender.curHP() || maxDamage > defender.curHP();\n  if (move.recoil) {\n    const mod = (move.recoil[0] / move.recoil[1]) * 100;\n    let minRecoilDamage, maxRecoilDamage;\n    if (damageOverflow) {\n      minRecoilDamage =\n        toDisplay(notation, defender.curHP() * mod, attacker.maxHP(), 100);\n      maxRecoilDamage =\n        toDisplay(notation, defender.curHP() * mod, attacker.maxHP(), 100);\n    } else {\n      minRecoilDamage = toDisplay(\n        notation, Math.min(min, defender.curHP()) * mod, attacker.maxHP(), 100\n      );\n      maxRecoilDamage = toDisplay(\n        notation, Math.min(max, defender.curHP()) * mod, attacker.maxHP(), 100\n      );\n    }\n    if (!attacker.hasAbility('Rock Head')) {\n      recoil = [minRecoilDamage, maxRecoilDamage];\n      text = `${minRecoilDamage} - ${maxRecoilDamage}${notation} recoil damage`;\n    }\n  } else if (move.hasCrashDamage) {\n    const genMultiplier = gen.num === 2 ? 12.5 : gen.num >= 3 ? 50 : 1;\n\n    let minRecoilDamage, maxRecoilDamage;\n    if (damageOverflow && gen.num !== 2) {\n      minRecoilDamage =\n        toDisplay(notation, defender.curHP() * genMultiplier, attacker.maxHP(), 100);\n      maxRecoilDamage =\n        toDisplay(notation, defender.curHP() * genMultiplier, attacker.maxHP(), 100);\n    } else {\n      minRecoilDamage = toDisplay(\n        notation, Math.min(min, defender.maxHP()) * genMultiplier, attacker.maxHP(), 100\n      );\n      maxRecoilDamage = toDisplay(\n        notation, Math.min(max, defender.maxHP()) * genMultiplier, attacker.maxHP(), 100\n      );\n    }\n\n    recoil = [minRecoilDamage, maxRecoilDamage];\n    switch (gen.num) {\n    case 1:\n      recoil = toDisplay(notation, 1, attacker.maxHP());\n      text = '1hp damage on miss';\n      break;\n    case 2: case 3: case 4:\n      if (defender.hasType('Ghost')) {\n        if (gen.num === 4) {\n          const gen4CrashDamage = Math.floor(((defender.maxHP() * 0.5) / attacker.maxHP()) * 100);\n          recoil = notation === '%' ? gen4CrashDamage : Math.floor((gen4CrashDamage / 100) * 48);\n          text = `${gen4CrashDamage}% crash damage`;\n        } else {\n          recoil = 0;\n          text = 'no crash damage on Ghost types';\n        }\n      } else {\n        text = `${minRecoilDamage} - ${maxRecoilDamage}${notation} crash damage on miss`;\n      }\n      break;\n    default:\n      recoil = notation === '%' ? 24 : 50;\n      text = '50% crash damage';\n    }\n  } else if (move.struggleRecoil) {\n    recoil = notation === '%' ? 12 : 25;\n    text = '25% struggle damage';\n    // Struggle recoil is actually rounded down in Gen 4 per DaWoblefet's research, but until we\n    // return recoil damage as exact HP the best we can do is add some more text to this effect\n    if (gen.num === 4) text += ' (rounded down)';\n  } else if (move.mindBlownRecoil) {\n    recoil = notation === '%' ? 24 : 50;\n    text = '50% recoil damage';\n  }\n\n  return {recoil, text};\n}\n\nexport function getKOChance(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  damage: Damage,\n  err = true\n) {\n  damage = combine(damage);\n  if (isNaN(damage[0])) {\n    error(err, 'damage[0] must be a number.');\n    return {chance: 0, n: 0, text: ''};\n  }\n  if (damage[damage.length - 1] === 0) {\n    error(err, 'damage[damage.length - 1] === 0.');\n    return {chance: 0, n: 0, text: ''};\n  }\n\n  // Code doesn't really work if these aren't set.\n  if (move.timesUsed === undefined) move.timesUsed = 1;\n  if (move.timesUsedWithMetronome === undefined) move.timesUsedWithMetronome = 1;\n\n  if (damage[0] >= defender.maxHP() && move.timesUsed === 1 && move.timesUsedWithMetronome === 1) {\n    return {chance: 1, n: 1, text: 'guaranteed OHKO'};\n  }\n\n  const hazards = getHazards(gen, defender, field.defenderSide);\n  const eot = getEndOfTurn(gen, attacker, defender, move, field);\n  const toxicCounter =\n     defender.hasStatus('tox') && !defender.hasAbility('Magic Guard') ? defender.toxicCounter : 0;\n\n  // multi-hit moves have too many possibilities for brute-forcing to work, so reduce it\n  // to an approximate distribution\n  let qualifier = '';\n  if (move.hits > 1) {\n    qualifier = 'approx. ';\n    damage = squashMultihit(gen, damage, move.hits, err);\n  }\n\n  const hazardsText = hazards.texts.length > 0\n    ? ' after ' + serializeText(hazards.texts)\n    : '';\n  const afterText =\n    hazards.texts.length > 0 || eot.texts.length > 0\n      ? ' after ' + serializeText(hazards.texts.concat(eot.texts))\n      : '';\n\n  if ((move.timesUsed === 1 && move.timesUsedWithMetronome === 1) || move.isZ) {\n    const chance = computeKOChance(\n      damage, defender.curHP() - hazards.damage, 0, 1, 1, defender.maxHP(), toxicCounter\n    );\n    if (chance === 1) {\n      return {chance, n: 1, text: `guaranteed OHKO${hazardsText}`}; // eot wasn't considered\n    } else if (chance > 0) {\n      // note: still not accounting for EOT due to poor eot damage handling\n      return {\n        chance,\n        n: 1,\n        text: qualifier + Math.round(chance * 1000) / 10 + `% chance to OHKO${hazardsText}`,\n      };\n    }\n\n    // Parental Bond's combined first + second hit only is accurate for chance to OHKO, for\n    // multihit KOs its only approximated. We should be doing squashMultihit here instead of\n    // pretending we ar emore accurate than we are, but just throwing on an qualifer should be\n    // sufficient.\n    if (damage.length === 256) {\n      qualifier = 'approx. ';\n      // damage = squashMultihit(gen, damage, move.hits, err);\n    }\n\n    for (let i = 2; i <= 4; i++) {\n      const chance = computeKOChance(\n        damage, defender.curHP() - hazards.damage, eot.damage, i, 1, defender.maxHP(), toxicCounter\n      );\n      if (chance === 1) {\n        return {chance, n: i, text: `${qualifier || 'guaranteed '}${i}HKO${afterText}`};\n      } else if (chance > 0) {\n        return {\n          chance,\n          n: i,\n          text: qualifier + Math.round(chance * 1000) / 10 + `% chance to ${i}HKO${afterText}`,\n        };\n      }\n    }\n\n    for (let i = 5; i <= 9; i++) {\n      if (\n        predictTotal(damage[0], eot.damage, i, 1, toxicCounter, defender.maxHP()) >=\n        defender.curHP() - hazards.damage\n      ) {\n        return {chance: 1, n: i, text: `${qualifier || 'guaranteed '}${i}HKO${afterText}`};\n      } else if (\n        predictTotal(damage[damage.length - 1], eot.damage, i, 1, toxicCounter, defender.maxHP()) >=\n        defender.curHP() - hazards.damage\n      ) {\n        return {n: i, text: qualifier + `possible ${i}HKO${afterText}`};\n      }\n    }\n  } else {\n    const chance = computeKOChance(\n      damage, defender.maxHP() - hazards.damage,\n      eot.damage,\n      move.hits || 1,\n      move.timesUsed || 1,\n      defender.maxHP(),\n      toxicCounter\n    );\n    if (chance === 1) {\n      return {\n        chance,\n        n: move.timesUsed,\n        text: `${qualifier || 'guaranteed '}KO in ${move.timesUsed} turns${afterText}`,\n      };\n    } else if (chance > 0) {\n      return {\n        chance,\n        n: move.timesUsed,\n        text:\n          qualifier +\n          Math.round(chance * 1000) / 10 +\n          `% chance to ${move.timesUsed}HKO${afterText}`,\n      };\n    }\n\n    if (predictTotal(\n      damage[0],\n      eot.damage,\n      move.hits,\n      move.timesUsed,\n      toxicCounter,\n      defender.maxHP()\n    ) >=\n      defender.curHP() - hazards.damage\n    ) {\n      return {\n        chance: 1,\n        n: move.timesUsed,\n        text: `${qualifier || 'guaranteed '}KO in ${move.timesUsed} turns${afterText}`,\n      };\n    } else if (\n      predictTotal(\n        damage[damage.length - 1],\n        eot.damage,\n        move.hits,\n        move.timesUsed,\n        toxicCounter,\n        defender.maxHP()\n      ) >=\n      defender.curHP() - hazards.damage\n    ) {\n      return {\n        n: move.timesUsed,\n        text: qualifier + `possible KO in ${move.timesUsed} turns${afterText}`,\n      };\n    }\n    return {n: move.timesUsed, text: qualifier + 'not a KO'};\n  }\n\n  return {chance: 0, n: 0, text: ''};\n}\n\nfunction combine(damage: Damage) {\n  // Fixed Damage\n  if (typeof damage === 'number') return [damage];\n  // Standard Damage\n  if (damage.length > 2) {\n    if (damage[0] > damage[damage.length - 1]) damage = damage.slice().sort() as number[];\n    return damage as number[];\n  }\n  // Fixed Parental Bond Damage\n  if (typeof damage[0] === 'number' && typeof damage[1] === 'number') {\n    return [damage[0] + damage[1]];\n  }\n  // Parental Bond Damage\n  const d = damage as [number[], number[]];\n  const combined = [];\n  for (let i = 0; i < d[0].length; i++) { // eslint-disable-line\n    for (let j = 0; j < d[1].length; j++) { // eslint-disable-line\n      combined.push(d[0][i] + d[1][j]);\n    }\n  }\n  return combined.sort();\n}\n\nconst TRAPPING = [\n  'Bind', 'Clamp', 'Fire Spin', 'Infestation', 'Magma Storm', 'Sand Tomb',\n  'Thunder Cage', 'Whirlpool', 'Wrap', 'G-Max Sandblast', 'G-Max Centiferno',\n];\n\nfunction getBossMultiplierDesc(defender: Pokemon){\n    if(defender.bossMultiplier > 100){\n        return ` of ${toFixedIfNecessary(defender.bossMultiplier/100, 1)}x hp boss`\n    }\n    return ''\n}\n\nfunction toFixedIfNecessary( value : any, dp : number ){\n    return +parseFloat(value).toFixed( dp );\n  }\n\nfunction getHazards(gen: Generation, defender: Pokemon, defenderSide: Side) {\n  let damage = 0;\n  const texts: string[] = [];\n\n  if (defender.hasItem('Heavy-Duty Boots')) {\n    return {damage, texts};\n  }\n  if (defenderSide.isSR && !defender.hasAbility('Magic Guard', 'Mountaineer')) {\n    const rockType = gen.types.get('rock' as ID)!;\n    const effectiveness =\n      rockType.effectiveness[defender.types[0]]! *\n      (defender.types[1] ? rockType.effectiveness[defender.types[1]]! : 1);\n    damage += Math.floor((effectiveness * defender.maxHP()) / 8);\n    texts.push('Stealth Rock');\n  }\n  if (defenderSide.steelsurge && !defender.hasAbility('Magic Guard', 'Mountaineer')) {\n    const steelType = gen.types.get('steel' as ID)!;\n    const effectiveness =\n      steelType.effectiveness[defender.types[0]]! *\n      (defender.types[1] ? steelType.effectiveness[defender.types[1]]! : 1);\n    damage += Math.floor((effectiveness * defender.maxHP()) / 8);\n    texts.push('Steelsurge');\n  }\n\n  if (!defender.hasType('Flying') &&\n      !defender.hasAbility('Magic Guard', 'Levitate') &&\n      !defender.hasItem('Air Balloon')\n  ) {\n    if (defenderSide.spikes === 1) {\n      damage += Math.floor(defender.maxHP() / 8);\n      if (gen.num === 2) {\n        texts.push('Spikes');\n      } else {\n        texts.push('1 layer of Spikes');\n      }\n    } else if (defenderSide.spikes === 2) {\n      damage += Math.floor(defender.maxHP() / 6);\n      texts.push('2 layers of Spikes');\n    } else if (defenderSide.spikes === 3) {\n      damage += Math.floor(defender.maxHP() / 4);\n      texts.push('3 layers of Spikes');\n    }\n  }\n\n  if (isNaN(damage)) {\n    damage = 0;\n  }\n\n  return {damage, texts};\n}\n\nexport function getEndOfTurn(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  let damage = 0;\n  const texts = [];\n\n  if (field.hasWeather('Sun', 'Harsh Sunshine')) {\n    if (defender.hasAbility('Dry Skin', 'Solar Power')) {\n      damage -= Math.floor(defender.maxHP() / 8);\n      texts.push(defender.ability + ' damage');\n    }\n  } else if (field.hasWeather('Rain', 'Heavy Rain')) {\n    if (defender.hasAbility('Dry Skin')) {\n      damage += Math.floor(defender.maxHP() / 8);\n      texts.push('Dry Skin recovery');\n    } else if (defender.hasAbility('Rain Dish')) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Rain Dish recovery');\n    }\n  } else if (field.hasWeather('Sand')) {\n    if (\n      !defender.hasType('Rock', 'Ground', 'Steel') &&\n      !defender.hasAbility('Magic Guard', 'Overcoat', 'Sand Force', 'Sand Rush', 'Sand Veil') &&\n      !defender.hasItem('Safety Goggles')\n    ) {\n      damage -= Math.floor(defender.maxHP() / (gen.num === 2 ? 8 : 16));\n      texts.push('sandstorm damage');\n    }\n  } else if (field.hasWeather('Hail', 'Snow')) {\n    if (defender.hasAbility('Ice Body')) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Ice Body recovery');\n    } else if (\n      !defender.hasType('Ice') &&\n      !defender.hasAbility('Magic Guard', 'Overcoat', 'Snow Cloak') &&\n      !defender.hasItem('Safety Goggles') &&\n      field.hasWeather('Hail')\n    ) {\n      damage -= Math.floor(defender.maxHP() / 16);\n      texts.push('hail damage');\n    }\n  }\n\n  const loseItem = move.named('Knock Off') && !defender.hasAbility('Sticky Hold');\n  if (defender.hasItem('Leftovers') && !loseItem) {\n    damage += Math.floor(defender.maxHP() / 16);\n    texts.push('Leftovers recovery');\n  } else if (defender.hasItem('Black Sludge') && !loseItem) {\n    if (defender.hasType('Poison')) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Black Sludge recovery');\n    } else if (!defender.hasAbility('Magic Guard', 'Klutz')) {\n      damage -= Math.floor(defender.maxHP() / 8);\n      texts.push('Black Sludge damage');\n    }\n  } else if (defender.hasItem('Sticky Barb')) {\n    damage -= Math.floor(defender.maxHP() / 8);\n    texts.push('Sticky Barb damage');\n  }\n\n  if (field.defenderSide.isSeeded) {\n    if (!defender.hasAbility('Magic Guard')) {\n      // 1/16 in gen 1, 1/8 in gen 2 onwards\n      damage -= Math.floor(defender.maxHP() / (gen.num >= 2 ? 8 : 16));\n      texts.push('Leech Seed damage');\n    }\n  }\n\n  if (field.attackerSide.isSeeded && !attacker.hasAbility('Magic Guard')) {\n    let recovery = Math.floor(attacker.maxHP() / (gen.num >= 2 ? 8 : 16));\n    if (defender.hasItem('Big Root')) recovery = Math.trunc(recovery * 5324 / 4096);\n    if (attacker.hasAbility('Liquid Ooze')) {\n      damage -= recovery;\n      texts.push('Liquid Ooze damage');\n    } else {\n      damage += recovery;\n      texts.push('Leech Seed recovery');\n    }\n  }\n\n  if (field.hasTerrain('Grassy')) {\n    if (isGrounded(defender, field)) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Grassy Terrain recovery');\n    }\n  }\n\n  if (defender.hasStatus('psn')) {\n    if (defender.hasAbility('Poison Heal')) {\n      damage += Math.floor(defender.maxHP() / 8);\n      texts.push('Poison Heal');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      damage -= Math.floor(defender.maxHP() / (gen.num === 1 ? 16 : 8));\n      texts.push('poison damage');\n    }\n  } else if (defender.hasStatus('tox')) {\n    if (defender.hasAbility('Poison Heal')) {\n      damage += Math.floor(defender.maxHP() / 8);\n      texts.push('Poison Heal');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      texts.push('toxic damage');\n    }\n  } else if (defender.hasStatus('brn')) {\n    if (defender.hasAbility('Heatproof')) {\n      damage -= Math.floor(defender.maxHP() / (gen.num > 6 ? 32 : 16));\n      texts.push('reduced burn damage');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      damage -= Math.floor(defender.maxHP() / (gen.num === 1 || gen.num > 6 ? 16 : 8));\n      texts.push('burn damage');\n    }\n  } else if (\n    (defender.hasStatus('slp') || defender.hasAbility('Comatose')) &&\n    attacker.hasAbility('isBadDreams') &&\n    !defender.hasAbility('Magic Guard')\n  ) {\n    damage -= Math.floor(defender.maxHP() / 8);\n    texts.push('Bad Dreams');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && TRAPPING.includes(move.name)) {\n    if (attacker.hasItem('Binding Band')) {\n      damage -= gen.num > 5 ? Math.floor(defender.maxHP() / 6) : Math.floor(defender.maxHP() / 8);\n      texts.push('trapping damage');\n    } else {\n      damage -= gen.num > 5 ? Math.floor(defender.maxHP() / 8) : Math.floor(defender.maxHP() / 16);\n      texts.push('trapping damage');\n    }\n  }\n  if (defender.isSaltCure && !defender.hasAbility('Magic Guard')) {\n    const isWaterOrSteel = defender.hasType('Water', 'Steel') ||\n      (defender.teraType && ['Water', 'Steel'].includes(defender.teraType));\n    damage -= Math.floor(defender.maxHP() / (isWaterOrSteel ? 4 : 8));\n    texts.push('Salt Cure');\n  }\n  if (!defender.hasType('Fire') && !defender.hasAbility('Magic Guard') &&\n      (move.named('Fire Pledge (Grass Pledge Boosted)', 'Grass Pledge (Fire Pledge Boosted)'))) {\n    damage -= Math.floor(defender.maxHP() / 8);\n    texts.push('Sea of Fire damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Grass') &&\n      (field.defenderSide.vinelash || move.named('G-Max Vine Lash'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Vine Lash damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Fire') &&\n      (field.defenderSide.wildfire || move.named('G-Max Wildfire'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Wildfire damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Water') &&\n      (field.defenderSide.cannonade || move.named('G-Max Cannonade'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Cannonade damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Rock') &&\n      (field.defenderSide.volcalith || move.named('G-Max Volcalith'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Volcalith damage');\n  }\n\n  if (defender.isIngrain)  {\n    damage += Math.floor(defender.maxHP() * (defender.item === \"Big Root\" ? 0.3 : 1/16));\n    texts.push('Ingrain recovery');\n  }\n\n  return {damage, texts};\n}\n\nfunction computeKOChance(\n  damage: number[],\n  hp: number,\n  eot: number,\n  hits: number,\n  timesUsed: number,\n  maxHP: number,\n  toxicCounter: number\n) {\n  const n = damage.length;\n  if (hits === 1) {\n    for (let i = 0; i < n; i++) {\n      if (damage[n - 1] < hp) return 0;\n      if (damage[i] >= hp) {\n        return (n - i) / n;\n      }\n    }\n  }\n  let toxicDamage = 0;\n  if (toxicCounter > 0) {\n    toxicDamage = Math.floor((toxicCounter * maxHP) / 16);\n    toxicCounter++;\n  }\n  let sum = 0;\n  let lastc = 0;\n  for (let i = 0; i < n; i++) {\n    let c;\n    if (i === 0 || damage[i] !== damage[i - 1]) {\n      c = computeKOChance(\n        damage,\n        hp - damage[i] + eot - toxicDamage,\n        eot,\n        hits - 1,\n        timesUsed,\n        maxHP,\n        toxicCounter\n      );\n    } else {\n      c = lastc;\n    }\n    if (c === 1) {\n      sum += n - i;\n      break;\n    } else {\n      sum += c;\n    }\n    lastc = c;\n  }\n  return sum / n;\n}\n\nfunction predictTotal(\n  damage: number,\n  eot: number,\n  hits: number,\n  timesUsed: number,\n  toxicCounter: number,\n  maxHP: number\n) {\n  let toxicDamage = 0;\n  if (toxicCounter > 0) {\n    for (let i = 0; i < hits - 1; i++) {\n      toxicDamage += Math.floor(((toxicCounter + i) * maxHP) / 16);\n    }\n  }\n  let total = 0;\n  if (hits > 1 && timesUsed === 1) {\n    total = damage * hits - eot * (hits - 1) + toxicDamage;\n  } else {\n    total = damage - eot * (hits - 1) + toxicDamage;\n  }\n  return total;\n}\n\nfunction squashMultihit(gen: Generation, d: number[], hits: number, err = true) {\n  if (d.length === 1) {\n    return [d[0] * hits];\n  } else if (gen.num === 1) {\n    const r = [];\n    for (let i = 0; i < d.length; i++) {\n      r[i] = d[i] * hits;\n    }\n    return r;\n  } else if (d.length === 16) {\n    switch (hits) {\n    case 2:\n      return [\n        2 * d[0], d[2] + d[3], d[4] + d[4], d[4] + d[5], d[5] + d[6], d[6] + d[6],\n        d[6] + d[7], d[7] + d[7], d[8] + d[8], d[8] + d[9], d[9] + d[9], d[9] + d[10],\n        d[10] + d[11], d[11] + d[11], d[12] + d[13], 2 * d[15],\n      ];\n    case 3:\n      return [\n        3 * d[0], d[3] + d[3] + d[4], d[4] + d[4] + d[5], d[5] + d[5] + d[6],\n        d[5] + d[6] + d[6], d[6] + d[6] + d[7], d[6] + d[7] + d[7], d[7] + d[7] + d[8],\n        d[7] + d[8] + d[8], d[8] + d[8] + d[9], d[8] + d[9] + d[9], d[9] + d[9] + d[10],\n        d[9] + d[10] + d[10], d[10] + d[11] + d[11], d[11] + d[12] + d[12], 3 * d[15],\n      ];\n    case 4:\n      return [\n        4 * d[0], 4 * d[4], d[4] + d[5] + d[5] + d[5], d[5] + d[5] + d[6] + d[6],\n        4 * d[6], d[6] + d[6] + d[7] + d[7], 4 * d[7], d[7] + d[7] + d[7] + d[8],\n        d[7] + d[8] + d[8] + d[8], 4 * d[8], d[8] + d[8] + d[9] + d[9], 4 * d[9],\n        d[9] + d[9] + d[10] + d[10], d[10] + d[10] + d[10] + d[11], 4 * d[11], 4 * d[15],\n      ];\n    case 5:\n      return [\n        5 * d[0], d[4] + d[4] + d[4] + d[5] + d[5], d[5] + d[5] + d[5] + d[5] + d[6],\n        d[5] + d[6] + d[6] + d[6] + d[6], d[6] + d[6] + d[6] + d[6] + d[7],\n        d[6] + d[6] + d[7] + d[7] + d[7], 5 * d[7], d[7] + d[7] + d[7] + d[8] + d[8],\n        d[7] + d[7] + d[8] + d[8] + d[8], 5 * d[8], d[8] + d[8] + d[8] + d[9] + d[9],\n        d[8] + d[9] + d[9] + d[9] + d[9], d[9] + d[9] + d[9] + d[9] + d[10],\n        d[9] + d[10] + d[10] + d[10] + d[10], d[10] + d[10] + d[11] + d[11] + d[11], 5 * d[15],\n      ];\n    case 10:\n      return [\n        10 * d[0], 10 * d[4], 3 * d[4] + 7 * d[5], 5 * d[5] + 5 * d[6], 10 * d[6],\n        5 * d[6] + 5 * d[7], 10 * d[7], 7 * d[7] + 3 * d[8], 3 * d[7] + 7 * d[8], 10 * d[8],\n        5 * d[8] + 5 * d[9], 4 * d[9], 5 * d[9] + 5 * d[10], 7 * d[10] + 3 * d[11], 10 * d[11],\n        10 * d[15],\n      ];\n    default:\n      error(err, `Unexpected # of hits: ${hits}`);\n      return d;\n    }\n  } else if (d.length === 39) {\n    switch (hits) {\n    case 2:\n      return [\n        2 * d[0], 2 * d[7], 2 * d[10], 2 * d[12], 2 * d[14], d[15] + d[16],\n        2 * d[17], d[18] + d[19], d[19] + d[20], 2 * d[21], d[22] + d[23],\n        2 * d[24], 2 * d[26], 2 * d[28], 2 * d[31], 2 * d[38],\n      ];\n    case 3:\n      return [\n        3 * d[0], 3 * d[9], 3 * d[12], 3 * d[13], 3 * d[15], 3 * d[16],\n        3 * d[17], 3 * d[18], 3 * d[20], 3 * d[21], 3 * d[22], 3 * d[23],\n        3 * d[25], 3 * d[26], 3 * d[29], 3 * d[38],\n      ];\n    case 4:\n      return [\n        4 * d[0], 2 * d[10] + 2 * d[11], 4 * d[13], 4 * d[14], 2 * d[15] + 2 * d[16],\n        2 * d[16] + 2 * d[17], 2 * d[17] + 2 * d[18], 2 * d[18] + 2 * d[19],\n        2 * d[19] + 2 * d[20], 2 * d[20] + 2 * d[21], 2 * d[21] + 2 * d[22],\n        2 * d[22] + 2 * d[23], 4 * d[24], 4 * d[25], 2 * d[27] + 2 * d[28], 4 * d[38],\n      ];\n    case 5:\n      return [\n        5 * d[0], 5 * d[11], 5 * d[13], 5 * d[15], 5 * d[16], 5 * d[17],\n        5 * d[18], 5 * d[19], 5 * d[19], 5 * d[20], 5 * d[21], 5 * d[22],\n        5 * d[23], 5 * d[25], 5 * d[27], 5 * d[38],\n      ];\n    case 10:\n      return [\n        10 * d[0], 10 * d[11], 10 * d[13], 10 * d[15], 10 * d[16], 10 * d[17],\n        10 * d[18], 10 * d[19], 10 * d[19], 10 * d[20], 10 * d[21], 10 * d[22],\n        10 * d[23], 10 * d[25], 10 * d[27], 10 * d[38],\n      ];\n    default:\n      error(err, `Unexpected # of hits: ${hits}`);\n      return d;\n    }\n  } else if (d.length === 256) {\n    if (hits > 1) {\n      error(err, `Unexpected # of hits for Parental Bond: ${hits}`);\n    }\n    // FIXME: Come up with a better Parental Bond approximation\n    const r: number[] = [];\n    for (let i = 0; i < 16; i++) {\n      let val = 0;\n      for (let j = 0; j < 16; j++) {\n        val += d[i + j];\n      }\n      r[i] = Math.round(val / 16);\n    }\n    return r;\n  } else {\n    error(err, `Unexpected # of possible damage values: ${d.length}`);\n    return d;\n  }\n}\n\nfunction buildDescription(description: RawDesc, attacker: Pokemon, defender: Pokemon) {\n  const [attackerLevel, defenderLevel] = getDescriptionLevels(attacker, defender);\n  let output = '';\n  if (description.attackBoost) {\n    if (description.attackBoost > 0) {\n      output += '+';\n    }\n    output += description.attackBoost + ' ';\n  }\n  output = appendIfSet(output, attackerLevel);\n  output = appendIfSet(output, description.attackEVs);\n  output = appendIfSet(output, description.attackerItem);\n  output = appendIfSet(output, description.attackerAbility);\n  output = appendIfSet(output, description.rivalry);\n  if (description.isBurned) {\n    output += 'burned ';\n  }\n  if (description.alliesFainted) {\n    output += Math.min(5, description.alliesFainted) +\n      ` ${description.alliesFainted === 1 ? 'ally' : 'allies'} fainted `;\n  }\n  if (description.attackerTera) {\n    output += `Tera ${description.attackerTera} `;\n  }\n  if (description.isBeadsOfRuin) {\n    output += 'Beads of Ruin ';\n  }\n  if (description.isSwordOfRuin) {\n    output += 'Sword of Ruin ';\n  }\n  output += description.attackerName + ' ';\n  if (description.isHelpingHand) {\n    output += 'Helping Hand ';\n  }\n  if (description.isAtkCheered) {\n    output += 'Atk Cheer ';\n  }\n  if (description.isDefCheeredBodyPress) {\n    output += 'Def Cheer ';\n  }\n  if (description.isFlowerGiftAttacker) {\n    output += ' with an ally\\'s Flower Gift ';\n  }\n  if (description.isBattery) {\n    output += ' Battery boosted ';\n  }\n  if (description.isPowerSpot) {\n    output += ' Power Spot boosted ';\n  }\n  if(description.powerSpots){\n    output += `with ${description.powerSpots} Power Spot ${description.powerSpots === 1 ? 'boost' : 'boosts'} `;\n  }\n  if(description.steelySpirits){\n    output += `with ${description.steelySpirits}${attacker.hasAbility('Steely Spirit') ? ' extra' : ''} Steely Spirit${description.steelySpirits === 1 ? ' ' : 's '}`;\n  }\n  if (description.isSwitching) {\n    output += ' switching boosted ';\n  }\n  if (description.isCharged) {\n    output += ' charged ';\n  }\n  output += description.moveName + ' ';\n  if (description.moveBP && description.moveType) {\n    output += '(' + description.moveBP + ' BP ' + description.moveType + ') ';\n  } else if (description.moveBP) {\n    output += '(' + description.moveBP + ' BP) ';\n  } else if (description.moveType) {\n    output += '(' + description.moveType + ') ';\n  }\n  if (description.hits) {\n    output += '(' + description.hits + ' hits) ';\n  }\n  output = appendIfSet(output, description.moveTurns);\n  output += 'vs. ';\n  if (description.defenseBoost) {\n    if (description.defenseBoost > 0) {\n      output += '+';\n    }\n    output += description.defenseBoost + ' ';\n  }\n  output = appendIfSet(output, defenderLevel);\n  output = appendIfSet(output, description.HPEVs);\n  if (description.defenseEVs) {\n    output += '/ ' + description.defenseEVs + ' ';\n  }\n  output = appendIfSet(output, description.defenderItem);\n  output = appendIfSet(output, description.defenderAbility);\n  if (description.isTabletsOfRuin) {\n    output += 'Tablets of Ruin ';\n  }\n  if (description.isVesselOfRuin) {\n    output += 'Vessel of Ruin ';\n  }\n  if (description.isProtected) {\n    output += 'protected ';\n  }\n  if (description.isDefenderDynamaxed) {\n    output += 'Dynamax ';\n  }\n  if (description.defenderTera) {\n    output += `Tera ${description.defenderTera} `;\n  }\n  output += description.defenderName;\n  if (description.weather && description.terrain) {\n    // do nothing\n  } else if (description.weather) {\n    output += ' in ' + description.weather;\n  } else if (description.terrain) {\n    output += ' in ' + description.terrain + ' Terrain';\n  }\n  if (description.isReflect) {\n    output += ' through Reflect';\n  } else if (description.isLightScreen) {\n    output += ' through Light Screen';\n  }\n  if (description.isDefCheered) {\n    if(description.isReflect || description.isLightScreen){\n        output += ' and Def Cheer';\n    } else {\n        output += ' through Def Cheer';\n    }\n  }\n  if (description.isFlowerGiftDefender) {\n    output += ' with an ally\\'s Flower Gift';\n  }\n  if (description.isFriendGuard) {\n    output += ' with an ally\\'s Friend Guard';\n  }\n  if (description.friendGuards) {\n    output += ` with ${description.friendGuards} ${description.friendGuards > 1 ? \"allies'\" : \"ally's\"} Friend Guard${description.steelySpirits === 1 ? '' : 's'}`;\n  }\n  if (description.isAuroraVeil) {\n    output += ' with an ally\\'s Aurora Veil';\n  }\n  if (description.isCritical) {\n    output += ' on a critical hit';\n  }\n  if (description.isWonderRoom) {\n    output += ' in Wonder Room';\n  }\n  if (description.shieldActive) {\n    output += ' through Tera Raid Shield';\n  }\n  return output;\n}\n\nfunction getDescriptionLevels(attacker: Pokemon, defender: Pokemon) {\n  if (attacker.level !== defender.level) {\n    return [\n      attacker.level === 100 ? '' : `Lvl ${attacker.level}`,\n      defender.level === 100 ? '' : `Lvl ${defender.level}`,\n    ];\n  }\n  // There's an argument for showing any level thats not 100, but VGC and LC players\n  // probably would rather not see level cruft in their calcs\n  const elide = [100, 50, 5].includes(attacker.level);\n  const level = elide ? '' : `Lvl ${attacker.level}`;\n  return [level, level];\n}\n\nfunction serializeText(arr: string[]) {\n  if (arr.length === 0) {\n    return '';\n  } else if (arr.length === 1) {\n    return arr[0];\n  } else if (arr.length === 2) {\n    return arr[0] + ' and ' + arr[1];\n  } else {\n    let text = '';\n    for (let i = 0; i < arr.length - 1; i++) {\n      text += arr[i] + ', ';\n    }\n    return text + 'and ' + arr[arr.length - 1];\n  }\n}\n\nfunction appendIfSet(str: string, toAppend?: string) {\n  return toAppend ? `${str}${toAppend} ` : str;\n}\n\nfunction toDisplay(notation: string, a: number, b: number, f = 1) {\n  return notation === '%' ? Math.floor((a * (1000 / f)) / b) / 10 : Math.floor((a * (48 / f)) / b);\n}\n","import {RawDesc, display, displayMove, getRecovery, getRecoil, getKOChance} from './desc';\nimport {Generation} from './data/interface';\nimport {Field} from './field';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\n\nexport type Damage = number | number[] | [number, number] | [number[], number[]];\n\nexport class Result {\n  gen: Generation;\n  attacker: Pokemon;\n  defender: Pokemon;\n  move: Move;\n  field: Field;\n  damage: number | number[] | [number[], number[]];\n  rawDesc: RawDesc;\n\n  constructor(\n    gen: Generation,\n    attacker: Pokemon,\n    defender: Pokemon,\n    move: Move,\n    field: Field,\n    damage: Damage,\n    rawDesc: RawDesc,\n  ) {\n    this.gen = gen;\n    this.attacker = attacker;\n    this.defender = defender;\n    this.move = move;\n    this.field = field;\n    this.damage = damage;\n    this.rawDesc = rawDesc;\n  }\n\n  /* get */ desc() {\n    return this.fullDesc();\n  }\n\n  range(): [number, number] {\n    const range = damageRange(this.damage);\n    if (typeof range[0] === 'number') return range as [number, number];\n    const d = range as [number[], number[]];\n    return [d[0][0] + d[0][1], d[1][0] + d[1][1]];\n  }\n\n  fullDesc(notation = '%', err = true) {\n    return display(\n      this.gen,\n      this.attacker,\n      this.defender,\n      this.move,\n      this.field,\n      this.damage,\n      this.rawDesc,\n      notation,\n      err\n    );\n  }\n\n  moveDesc(notation = '%') {\n    return displayMove(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  recovery(notation = '%') {\n    return getRecovery(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  recoil(notation = '%') {\n    return getRecoil(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  kochance(err = true) {\n    return getKOChance(\n      this.gen,\n      this.attacker,\n      this.defender,\n      this.move,\n      this.field,\n      this.damage,\n      err\n    );\n  }\n}\n\nexport function damageRange(\n  damage: Damage\n): [number, number] | [[number, number], [number, number]] {\n  // Fixed Damage\n  if (typeof damage === 'number') return [damage, damage];\n  // Standard Damage\n  if (damage.length > 2) {\n    const d = damage as number[];\n    if (d[0] > d[d.length - 1]) return [Math.min(...d), Math.max(...d)];\n    return [d[0], d[d.length - 1]];\n  }\n  // Fixed Parental Bond Damage\n  if (typeof damage[0] === 'number' && typeof damage[1] === 'number') {\n    return [[damage[0], damage[1]], [damage[0], damage[1]]];\n  }\n  // Parental Bond Damage\n  const d = damage as [number[], number[]];\n  if (d[0][0] > d[0][d[0].length - 1]) d[0] = d[0].slice().sort();\n  if (d[1][0] > d[1][d[1].length - 1]) d[1] = d[1].slice().sort();\n  return [[d[0][0], d[1][0]], [d[0][d[0].length - 1], d[1][d[1].length - 1]]];\n}\n","import {Generation} from '../data/interface';\nimport {getItemBoostType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {computeFinalStats, getMoveEffectiveness, handleFixedDamageMoves} from './util';\n\nexport function calculateRBYGSC(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'def', 'spa', 'spd', 'spe');\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status') {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  // Fixed damage moves (eg. Night Shade) ignore type effectiveness in Gen 1\n  if (gen.num === 1) {\n    const fixedDamage = handleFixedDamageMoves(attacker, move);\n    if (fixedDamage) {\n      result.damage = fixedDamage;\n      return result;\n    }\n  }\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType && gen.num === 2) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n\n  const type1Effectiveness =\n    getMoveEffectiveness(gen, move, firstDefenderType, field.defenderSide.isForesight);\n  const type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, field.defenderSide.isForesight)\n    : 1;\n  const typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if (gen.num === 2) {\n    const fixedDamage = handleFixedDamageMoves(attacker, move);\n    if (fixedDamage) {\n      result.damage = fixedDamage;\n      return result;\n    }\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  // Flail and Reversal are variable BP and never crit\n  if (move.named('Flail', 'Reversal')) {\n    move.isCrit = false;\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    move.bp = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = move.bp;\n  } else if (move.named('Present') && !move.bp) {\n    // Present is technically 0 BP so we default to 40 in that case, but the UI may override the\n    // base power in order to simulate the scenarios where it is 80 or 120 BP.\n    move.bp = 40;\n  }\n\n  if (move.bp === 0) {\n    return result;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  let at = attacker.stats[attackStat]!;\n  let df = defender.stats[defenseStat]!;\n\n  // Whether we ignore Reflect, Light Screen, stat stages, and burns if attack is a crit differs\n  // by gen - in gen 2 we also need to check that the attacker does not have stat stage advantage\n  const ignoreMods = move.isCrit &&\n    (gen.num === 1 ||\n    (gen.num === 2 && attacker.boosts[attackStat]! <= defender.boosts[defenseStat]!));\n\n  let lv = attacker.level;\n  if (ignoreMods) {\n    at = attacker.rawStats[attackStat]!;\n    df = defender.rawStats[defenseStat]!;\n    if (gen.num === 1) {\n      lv *= 2;\n      desc.isCritical = true;\n    }\n  } else {\n    if (attacker.boosts[attackStat] !== 0) desc.attackBoost = attacker.boosts[attackStat];\n    if (defender.boosts[defenseStat] !== 0) desc.defenseBoost = defender.boosts[defenseStat];\n    if (isPhysical && attacker.hasStatus('brn')) {\n      at = Math.floor(at / 2);\n      desc.isBurned = true;\n    }\n  }\n\n  if (move.named('Explosion', 'Self-Destruct')) {\n    df = Math.floor(df / 2);\n  }\n\n  if (!ignoreMods) {\n    if (isPhysical && field.defenderSide.isReflect) {\n      df *= 2;\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      df *= 2;\n      desc.isLightScreen = true;\n    }\n  }\n\n  if ((attacker.named('Pikachu') && attacker.hasItem('Light Ball') && !isPhysical) ||\n      (attacker.named('Cubone', 'Marowak') && attacker.hasItem('Thick Club') && isPhysical)) {\n    at *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  if (at > 255 || df > 255) {\n    at = Math.floor(at / 4) % 256;\n    df = Math.floor(df / 4) % 256;\n  }\n\n  // Gen 2 Present has a glitched damage calculation using the secondary types of the Pokemon\n  // for the Attacker's Level and Defender's Defense.\n  if (move.named('Present')) {\n    const lookup: {[id: string]: number} = {\n      Normal: 0, Fighting: 1, Flying: 2, Poison: 3, Ground: 4, Rock: 5, Bug: 7,\n      Ghost: 8, Steel: 9, '???': 19, Fire: 20, Water: 21, Grass: 22, Electric: 23,\n      Psychic: 24, Ice: 25, Dragon: 26, Dark: 27,\n    };\n\n    at = 10;\n    df = Math.max(lookup[attacker.types[1] ? attacker.types[1] : attacker.types[0]], 1);\n    lv = Math.max(lookup[defender.types[1] ? defender.types[1] : defender.types[0]], 1);\n  }\n\n  if (defender.named('Ditto') && defender.hasItem('Metal Powder')) {\n    df = Math.floor(df * 1.5);\n    desc.defenderItem = defender.item;\n  }\n\n  let baseDamage = Math.floor(\n    Math.floor((Math.floor((2 * lv) / 5 + 2) * Math.max(1, at) * move.bp) / Math.max(1, df)) / 50\n  );\n\n  // Gen 1 handles move.isCrit above by doubling level\n  if (gen.num === 2 && move.isCrit) {\n    baseDamage *= 2;\n    desc.isCritical = true;\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    baseDamage = Math.floor(baseDamage * 2);\n    desc.isSwitching = 'out';\n  }\n\n  // In Gen 2 and no other gens, Dragon Fang in a no-op and Dragon Scale erroneously has its effect\n  const itemBoostType =\n    attacker.hasItem('Dragon Fang')\n      ? undefined\n      : getItemBoostType(attacker.hasItem('Dragon Scale') ? 'Dragon Fang' : attacker.item);\n\n  if (move.hasType(itemBoostType)) {\n    baseDamage = Math.floor(baseDamage * 1.1);\n    desc.attackerItem = attacker.item;\n  }\n\n  baseDamage = Math.min(997, baseDamage) + 2;\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && (move.hasType('Fire') || move.named('Solar Beam')))\n  ) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.weather = field.weather;\n  }\n\n  if (move.hasType(...attacker.types)) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n  }\n\n  if (gen.num === 1) {\n    baseDamage = Math.floor(baseDamage * type1Effectiveness);\n    baseDamage = Math.floor(baseDamage * type2Effectiveness);\n  } else {\n    baseDamage = Math.floor(baseDamage * typeEffectiveness);\n  }\n\n  // Flail and Reversal don't use random factor\n  if (move.named('Flail', 'Reversal')) {\n    result.damage = baseDamage;\n    return result;\n  }\n\n  result.damage = [];\n  for (let i = 217; i <= 255; i++) {\n    if (gen.num === 2) { // in gen 2 damage is always rounded up to 1. TODO ADD TESTS\n      result.damage[i - 217] = Math.max(1, Math.floor((baseDamage * i) / 255));\n    } else {\n      if (baseDamage === 1) { // in gen 1 the random factor multiplication is skipped if damage = 1\n        result.damage[i - 217] = 1;\n      } else {\n        result.damage[i - 217] = Math.floor((baseDamage * i) / 255);\n      }\n    }\n  }\n\n  return result;\n}\n","import {Generation, AbilityName} from '../data/interface';\nimport {getItemBoostType, getNaturalGift, getFlingPower, getBerryResistType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  getModifiedStat,\n  getEVDescriptionText,\n  getFinalSpeed,\n  getMoveEffectiveness,\n  checkAirLock,\n  checkForecast,\n  checkItem,\n  checkIntimidate,\n  checkDownload,\n  countBoosts,\n  handleFixedDamageMoves,\n} from './util';\n\nexport function calculateDPP(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker);\n  checkItem(defender);\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender);\n  checkDownload(defender, attacker);\n  attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n  defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected && !move.breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (attacker.hasAbility('Mold Breaker')) {\n    defender.ability = '' as AbilityName;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isCritical = move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor');\n\n  let basePower = move.bp;\n  if (move.named('Weather Ball')) {\n    if (field.hasWeather('Sun')) {\n      move.type = 'Fire';\n      basePower *= 2;\n    } else if (field.hasWeather('Rain')) {\n      move.type = 'Water';\n      basePower *= 2;\n    } else if (field.hasWeather('Sand')) {\n      move.type = 'Rock';\n      basePower *= 2;\n    } else if (field.hasWeather('Hail')) {\n      move.type = 'Ice';\n      basePower *= 2;\n    } else {\n      move.type = 'Normal';\n    }\n\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n    desc.moveBP = basePower;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    move.type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    move.type = gift.t;\n    move.bp = gift.p;\n    desc.attackerItem = attacker.item;\n    desc.moveBP = move.bp;\n    desc.moveType = move.type;\n  }\n\n  if (attacker.hasAbility('Normalize')) {\n    move.type = 'Normal';\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed = attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n  let type1Effectiveness =\n    getMoveEffectiveness(gen, move, firstDefenderType, isGhostRevealed, field.isGravity);\n  let type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, isGhostRevealed, field.isGravity)\n    : 1;\n\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  // Iron Ball ignores Klutz in generation 4\n  if (typeEffectiveness === 0 && move.hasType('Ground') && defender.hasItem('Iron Ball')) {\n    if (type1Effectiveness === 0) {\n      type1Effectiveness = 1;\n    } else if (defender.types[1] && type2Effectiveness === 0) {\n      type2Effectiveness = 1;\n    }\n    typeEffectiveness = type1Effectiveness * type2Effectiveness;\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  const ignoresWonderGuard = move.hasType('???') || move.named('Fire Fang');\n  if ((!ignoresWonderGuard && defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Water Absorb')) ||\n      (move.hasType('Electric') && defender.hasAbility('Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') && !field.isGravity &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.sound && defender.hasAbility('Soundproof'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    result.damage = fixedDamage;\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n  const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  switch (move.name) {\n  case 'Brine':\n    if (defender.curHP() <= defender.maxHP() / 2) {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((basePower * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Facade':\n    if (attacker.hasStatus('par', 'psn', 'tox', 'brn')) {\n      basePower = move.bp * 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((64 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 5 ? 150 : p <= 12 ? 100 : p <= 21 ? 80 : p <= 42 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Grass Knot':\n  case 'Low Kick':\n    const w = defender.weightkg;\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe));\n    desc.moveBP = basePower;\n    break;\n  case 'Payback':\n    if (turnOrder !== 'first') {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Wake-Up Slap':\n    if (defender.hasStatus('slp')) {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Special';\n    move.secondaries = true;\n    basePower = 80;\n    desc.moveName = 'Tri Attack';\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = Math.floor((defender.curHP() * 120) / defender.maxHP()) + 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n\n  if (basePower === 0) {\n    return result;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    basePower = Math.floor(basePower * 1.5);\n    desc.isHelpingHand = true;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  if ((attacker.hasItem('Muscle Band') && isPhysical) ||\n      (attacker.hasItem('Wise Glasses') && !isPhysical)) {\n    basePower = Math.floor(basePower * 1.1);\n    desc.attackerItem = attacker.item;\n  } else if (move.hasType(getItemBoostType(attacker.item)) ||\n    (attacker.hasItem('Adamant Orb') &&\n     attacker.named('Dialga') &&\n     move.hasType('Steel', 'Dragon')) ||\n    (attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia') &&\n     move.hasType('Water', 'Dragon')) ||\n    (attacker.hasItem('Griseous Orb') &&\n     attacker.named('Giratina-Origin') &&\n     move.hasType('Ghost', 'Dragon'))\n  ) {\n    basePower = Math.floor(basePower * 1.2);\n    desc.attackerItem = attacker.item;\n  }\n\n  if ((attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n      (attacker.hasAbility('Iron Fist') && move.flags.punch)) {\n    basePower = Math.floor(basePower * 1.2);\n    desc.attackerAbility = attacker.ability;\n  } else if ((attacker.curHP() <= attacker.maxHP() / 3 &&\n    ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n      (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n      (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n      (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n      (attacker.hasAbility('Technician') && basePower <= 60)\n  ) {\n    basePower = Math.floor(basePower * 1.5);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((defender.hasAbility('Heatproof') && move.hasType('Fire')) ||\n      (defender.hasAbility('Thick Fat') && (move.hasType('Fire', 'Ice')))) {\n    basePower = Math.floor(basePower * 0.5);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    basePower = Math.floor(basePower * 1.25);\n    desc.defenderAbility = defender.ability;\n  }\n\n  // #endregion\n  // #region (Special) Attack\n\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  desc.attackEVs = getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n  let attack: number;\n  const attackBoost = attacker.boosts[attackStat];\n  const rawAttack = attacker.rawStats[attackStat];\n  if (attackBoost === 0 || (isCritical && attackBoost < 0)) {\n    attack = rawAttack;\n  } else if (defender.hasAbility('Unaware')) {\n    attack = rawAttack;\n    desc.defenderAbility = defender.ability;\n  } else if (attacker.hasAbility('Simple')) {\n    attack = getSimpleModifiedStat(rawAttack, attackBoost);\n    desc.attackerAbility = attacker.ability;\n    desc.attackBoost = attackBoost;\n  } else {\n    attack = getModifiedStat(rawAttack, attackBoost);\n    desc.attackBoost = attackBoost;\n  }\n\n  if (isPhysical && attacker.hasAbility('Pure Power', 'Huge Power')) {\n    attack *= 2;\n    desc.attackerAbility = attacker.ability;\n  } else if (field.hasWeather('Sun') &&\n    (attacker.hasAbility(isPhysical ? 'Flower Gift' : 'Solar Power'))\n  ) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (field.attackerSide.isFlowerGift && field.hasWeather('Sun') && isPhysical) {\n    attack = Math.floor(attack * 1.5);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (isPhysical &&\n      (attacker.hasAbility('Hustle') || (attacker.hasAbility('Guts') && attacker.status)) ||\n    (!isPhysical && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus')))\n  ) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerAbility = attacker.ability;\n  } else if (isPhysical && attacker.hasAbility('Slow Start') && attacker.abilityOn) {\n    attack = Math.floor(attack / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((isPhysical ? attacker.hasItem('Choice Band') : attacker.hasItem('Choice Specs')) ||\n      (!isPhysical && attacker.hasItem('Soul Dew') && attacker.named('Latios', 'Latias'))) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Light Ball') && attacker.named('Pikachu')) ||\n    (attacker.hasItem('Thick Club') && attacker.named('Cubone', 'Marowak') && isPhysical) ||\n    (attacker.hasItem('Deep Sea Tooth') && attacker.named('Clamperl') && !isPhysical)\n  ) {\n    attack *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  // #endregion\n  // #region (Special) Defense\n\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  let defense: number;\n  const defenseBoost = defender.boosts[defenseStat];\n  const rawDefense = defender.rawStats[defenseStat];\n  if (defenseBoost === 0 || (isCritical && defenseBoost > 0)) {\n    defense = rawDefense;\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = rawDefense;\n    desc.attackerAbility = attacker.ability;\n  } else if (defender.hasAbility('Simple')) {\n    defense = getSimpleModifiedStat(rawDefense, defenseBoost);\n    desc.defenderAbility = defender.ability;\n    desc.defenseBoost = defenseBoost;\n  } else {\n    defense = getModifiedStat(rawDefense, defenseBoost);\n    desc.defenseBoost = defenseBoost;\n  }\n\n  if (defender.hasAbility('Marvel Scale') && defender.status && isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Flower Gift') && field.hasWeather('Sun') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (field.defenderSide.isFlowerGift && field.hasWeather('Sun') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  }\n\n  if (defender.hasItem('Soul Dew') && defender.named('Latios', 'Latias') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderItem = defender.item;\n  } else if (\n    (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !isPhysical) ||\n    (defender.hasItem('Metal Powder') && defender.named('Ditto') && isPhysical)\n  ) {\n    defense *= 2;\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.weather = field.weather;\n  }\n\n  if (move.named('Explosion') || move.named('Self-Destruct')) {\n    defense = Math.floor(defense * 0.5);\n  }\n\n  if (defense < 1) {\n    defense = 1;\n  }\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = Math.floor(\n    Math.floor((Math.floor((2 * attacker.level) / 5 + 2) * basePower * attack) / 50) / defense\n  );\n\n  if (attacker.hasStatus('brn') && isPhysical && !attacker.hasAbility('Guts')) {\n    baseDamage = Math.floor(baseDamage * 0.5);\n    desc.isBurned = true;\n  }\n\n  if (!isCritical) {\n    const screenMultiplier = field.gameType !== 'Singles' ? 2 / 3 : 1 / 2;\n    if (isPhysical && field.defenderSide.isReflect) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isLightScreen = true;\n    }\n  }\n\n  if (field.gameType !== 'Singles' &&\n      ['allAdjacent', 'allAdjacentFoes'].includes(move.target)) {\n    baseDamage = Math.floor((baseDamage * 3) / 4);\n  }\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire')) ||\n    (move.named('Solar Beam') && field.hasWeather('Rain', 'Sand', 'Hail'))\n  ) {\n    baseDamage = Math.floor(baseDamage * 0.5);\n    desc.weather = field.weather;\n  }\n\n  if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.attackerAbility = 'Flash Fire';\n  }\n\n  baseDamage += 2;\n\n  if (isCritical) {\n    if (attacker.hasAbility('Sniper')) {\n      baseDamage *= 3;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      baseDamage *= 2;\n    }\n    desc.isCritical = isCritical;\n  }\n\n  if (attacker.hasItem('Life Orb')) {\n    baseDamage = Math.floor(baseDamage * 1.3);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    // technician negates switching boost, thanks DaWoblefet\n    if (attacker.hasAbility('Technician')) {\n      baseDamage = Math.floor(baseDamage * 1);\n    } else {\n      baseDamage = Math.floor(baseDamage * 2);\n      desc.isSwitching = 'out';\n    }\n  }\n\n  // the random factor is applied between the LO mod and the STAB mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 1;\n  if (move.hasType(...attacker.types)) {\n    if (attacker.hasAbility('Adaptability')) {\n      stabMod = 2;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      stabMod = 1.5;\n    }\n  }\n\n  let filterMod = 1;\n  if (defender.hasAbility('Filter', 'Solid Rock') && typeEffectiveness > 1) {\n    filterMod = 0.75;\n    desc.defenderAbility = defender.ability;\n  }\n  let ebeltMod = 1;\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1) {\n    ebeltMod = 1.2;\n    desc.attackerItem = attacker.item;\n  }\n  let tintedMod = 1;\n  if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    tintedMod = 2;\n    desc.attackerAbility = attacker.ability;\n  }\n  let berryMod = 1;\n  if (move.hasType(getBerryResistType(defender.item)) &&\n    (typeEffectiveness > 1 || move.hasType('Normal'))) {\n    berryMod = 0.5;\n    desc.defenderItem = defender.item;\n  }\n\n  const damage: number[] = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] = Math.floor((baseDamage * (85 + i)) / 100);\n    damage[i] = Math.floor(damage[i] * stabMod);\n    damage[i] = Math.floor(damage[i] * type1Effectiveness);\n    damage[i] = Math.floor(damage[i] * type2Effectiveness);\n    damage[i] = Math.floor(damage[i] * filterMod);\n    damage[i] = Math.floor(damage[i] * ebeltMod);\n    damage[i] = Math.floor(damage[i] * tintedMod);\n    damage[i] = Math.floor(damage[i] * berryMod);\n    damage[i] = Math.max(1, damage[i]);\n  }\n  result.damage = damage;\n\n  // #endregion\n\n  return result;\n}\n\nfunction getSimpleModifiedStat(stat: number, mod: number) {\n  const simpleMod = Math.min(6, Math.max(-6, mod * 2));\n  return simpleMod > 0\n    ? Math.floor((stat * (2 + simpleMod)) / 2)\n    : simpleMod < 0 ? Math.floor((stat * 2) / (2 - simpleMod)) : stat;\n}\n","import {Generation, AbilityName} from '../data/interface';\nimport {toID} from '../util';\nimport {\n  getItemBoostType,\n  getNaturalGift,\n  getFlingPower,\n  getBerryResistType,\n  getTechnoBlast,\n} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  chainMods,\n  checkAirLock,\n  checkDownload,\n  checkForecast,\n  checkInfiltrator,\n  checkIntimidate,\n  checkItem,\n  checkMultihitBoost,\n  checkSeedBoost,\n  checkWonderRoom,\n  computeFinalStats,\n  countBoosts,\n  getBaseDamage,\n  getEVDescriptionText,\n  getFinalDamage,\n  getModifiedStat,\n  getMoveEffectiveness,\n  getWeightFactor,\n  handleFixedDamageMoves,\n  isGrounded,\n  OF16, OF32,\n  pokeRound,\n} from './util';\n\nexport function calculateBWXY(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker, field.isMagicRoom);\n  checkItem(defender, field.isMagicRoom);\n  checkWonderRoom(attacker, field.isWonderRoom);\n  checkWonderRoom(defender, field.isWonderRoom);\n  checkSeedBoost(attacker, field);\n  checkSeedBoost(defender, field);\n\n  computeFinalStats(gen, attacker, defender, field, 'def', 'spd', 'spe');\n\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender, field.isWonderRoom);\n  checkDownload(defender, attacker, field.isWonderRoom);\n\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'spa');\n\n  checkInfiltrator(attacker, field.defenderSide);\n  checkInfiltrator(defender, field.attackerSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n    isWonderRoom: field.isWonderRoom,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected && !move.breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (attacker.hasAbility('Mold Breaker', 'Teravolt', 'Turboblaze')) {\n    defender.ability = '' as AbilityName;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isCritical =\n    move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor') && move.timesUsed === 1;\n\n  if (move.named('Weather Ball')) {\n    move.type =\n      field.hasWeather('Sun', 'Harsh Sunshine') ? 'Fire'\n      : field.hasWeather('Rain', 'Heavy Rain') ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail') ? 'Ice'\n      : 'Normal';\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    move.type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Techno Blast') && attacker.item && attacker.item.includes('Drive')) {\n    move.type = getTechnoBlast(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    move.type = gift.t;\n    move.bp = gift.p;\n    desc.attackerItem = attacker.item;\n    desc.moveBP = move.bp;\n    desc.moveType = move.type;\n  } else if (move.named('Nature Power')) {\n    if (gen.num === 5) {\n      move.type = 'Ground';\n    } else {\n      move.type =\n        field.hasTerrain('Electric') ? 'Electric'\n        : field.hasTerrain('Grassy') ? 'Grass'\n        : field.hasTerrain('Misty') ? 'Fairy'\n        : 'Normal';\n    }\n  }\n\n  let isAerilate = false;\n  let isPixilate = false;\n  let isRefrigerate = false;\n  let isNormalize = false;\n  const noTypeChange =\n    move.named('Judgment', 'Nature Power', 'Techo Blast', 'Natural Gift', 'Weather Ball');\n\n  if (!move.isZ && !noTypeChange) {\n    const normal = move.hasType('Normal');\n    if ((isAerilate = attacker.hasAbility('Aerilate') && normal)) {\n      move.type = 'Flying';\n    } else if ((isPixilate = attacker.hasAbility('Pixilate') && normal)) {\n      move.type = 'Fairy';\n    } else if ((isRefrigerate = attacker.hasAbility('Refrigerate') && normal)) {\n      move.type = 'Ice';\n    } else if ((isNormalize = attacker.hasAbility('Normalize'))) {\n      move.type = 'Normal';\n    }\n    if (isPixilate || isRefrigerate || isAerilate || isNormalize) {\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (attacker.hasAbility('Gale Wings') && move.hasType('Flying')) {\n    move.priority = 1;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed = attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n  const type1Effectiveness =\n    getMoveEffectiveness(gen, move, defender.types[0], isGhostRevealed, field.isGravity);\n  const type2Effectiveness = defender.types[1]\n    ? getMoveEffectiveness(gen, move, defender.types[1], isGhostRevealed, field.isGravity)\n    : 1;\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  let resistedKnockOffDamage =\n    !defender.item ||\n    (defender.named('Giratina-Origin') && defender.hasItem('Griseous Orb')) ||\n    (defender.name.includes('Arceus') && defender.item.includes('Plate')) ||\n    (defender.name.includes('Genesect') && defender.item.includes('Drive')) ||\n    (defender.named('Groudon', 'Groudon-Primal') && defender.hasItem('Red Orb')) ||\n    (defender.named('Kyogre', 'Kyogre-Primal') && defender.hasItem('Blue Orb'));\n\n  // The last case only applies when the Pokemon is holding the Mega Stone that matches its species\n  // (or when it's already a Mega-Evolution)\n  if (!resistedKnockOffDamage && defender.item) {\n    const item = gen.items.get(toID(defender.item))!;\n    resistedKnockOffDamage = !!(item.megaEvolves && defender.name.includes(item.megaEvolves));\n  }\n\n  if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n    typeEffectiveness = 1;\n  } else if (typeEffectiveness === 0 && move.hasType('Ground') &&\n    defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n    typeEffectiveness = 1;\n  } else if (typeEffectiveness === 0 && defender.hasItem('Ring Target')) {\n    const effectiveness = gen.types.get(toID(move.type))!.effectiveness;\n    if (effectiveness[defender.types[0]]! === 0) {\n      typeEffectiveness = type2Effectiveness;\n    } else if (defender.types[1] && effectiveness[defender.types[1]]! === 0) {\n      typeEffectiveness = type1Effectiveness;\n    }\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((move.named('Sky Drop') &&\n        (defender.hasType('Flying') || defender.weightkg >= 200 || field.isGravity)) ||\n      (move.named('Synchronoise') && !defender.hasType(attacker.types[0]) &&\n        (!attacker.types[1] || !defender.hasType(attacker.types[1]))) ||\n      (move.named('Dream Eater') && !defender.hasStatus('slp'))\n  ) {\n    return result;\n  }\n\n  if (\n    (field.hasWeather('Harsh Sunshine') && move.hasType('Water')) ||\n    (field.hasWeather('Heavy Rain') && move.hasType('Fire'))\n  ) {\n    desc.weather = field.weather;\n    return result;\n  }\n\n  if (field.hasWeather('Strong Winds') && defender.hasType('Flying') &&\n      gen.types.get(toID(move.type))!.effectiveness['Flying']! > 1) {\n    typeEffectiveness /= 2;\n    desc.weather = field.weather;\n  }\n\n  if ((defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Grass') && defender.hasAbility('Sap Sipper')) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Storm Drain', 'Water Absorb')) ||\n      (move.hasType('Electric') &&\n        defender.hasAbility('Lightning Rod', 'Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') &&\n        !field.isGravity && !move.named('Thousand Arrows') &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.bullet && defender.hasAbility('Bulletproof')) ||\n      (move.flags.sound && defender.hasAbility('Soundproof'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  if (move.hasType('Ground') && !move.named('Thousand Arrows') &&\n      !field.isGravity && defender.hasItem('Air Balloon')) {\n    desc.defenderItem = defender.item;\n    return result;\n  }\n\n  if (move.priority > 0 && field.hasTerrain('Psychic') && isGrounded(defender, field)) {\n    desc.terrain = field.terrain;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    if (attacker.hasAbility('Parental Bond')) {\n      result.damage = [fixedDamage, fixedDamage];\n      desc.attackerAbility = attacker.ability;\n    } else {\n      result.damage = fixedDamage;\n    }\n    return result;\n  }\n\n  if (move.named('Final Gambit')) {\n    result.damage = attacker.curHP();\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  let basePower: number;\n\n  switch (move.name) {\n  case 'Payback':\n    basePower = move.bp * (turnOrder === 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Pursuit':\n    const switching = field.defenderSide.isSwitching === 'out';\n    basePower = move.bp * (switching ? 2 : 1);\n    if (switching) desc.isSwitching = 'out';\n    desc.moveBP = basePower;\n    break;\n  case 'Electro Ball':\n    if (defender.stats.spe === 0) defender.stats.spe = 1;\n    const r = Math.floor(attacker.stats.spe / defender.stats.spe);\n    basePower = r >= 4 ? 150 : r >= 3 ? 120 : r >= 2 ? 80 : r >= 1 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    if (attacker.stats.spe === 0) attacker.stats.spe = 1;\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe) + 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Low Kick':\n  case 'Grass Knot':\n    const w = defender.weightkg * getWeightFactor(defender);\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Hex':\n    basePower = move.bp * (defender.status ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Heavy Slam':\n  case 'Heat Crash':\n    const wr =\n        (attacker.weightkg * getWeightFactor(attacker)) /\n        (defender.weightkg * getWeightFactor(defender));\n    basePower = wr >= 5 ? 120 : wr >= 4 ? 100 : wr >= 3 ? 80 : wr >= 2 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Stored Power':\n  case 'Power Trip':\n    basePower = 20 + 20 * countBoosts(gen, attacker.boosts);\n    desc.moveBP = basePower;\n    break;\n  case 'Acrobatics':\n    basePower = move.bp * (attacker.hasItem('Flying Gem') || !attacker.item ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Assurance':\n    basePower = move.bp * (defender.hasAbility('Parental Bond (Child)') ? 2 : 1);\n    // NOTE: desc.attackerAbility = 'Parental Bond' will already reflect this boost\n    break;\n  case 'Wake-Up Slap':\n    basePower = move.bp * (defender.hasStatus('slp') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Smelling Salts':\n    basePower = move.bp * (defender.hasStatus('par') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Weather Ball':\n    basePower = move.bp * (field.weather && !field.hasWeather('Strong Winds') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Nature Power':\n    if (gen.num === 5) {\n      move.category = 'Physical';\n      move.target = 'allAdjacent';\n      basePower = 100;\n      desc.moveName = 'Earthquake';\n    } else {\n      move.category = 'Special';\n      move.secondaries = true;\n      switch (field.terrain) {\n      case 'Electric':\n        basePower = 90;\n        desc.moveName = 'Thunderbolt';\n        break;\n      case 'Grassy':\n        basePower = 90;\n        desc.moveName = 'Energy Ball';\n        break;\n      case 'Misty':\n        basePower = 95;\n        desc.moveName = 'Moonblast';\n        break;\n      default:\n        basePower = 80;\n        desc.moveName = 'Tri Attack';\n      }\n    }\n    break;\n  // Triple Kick's damage doubles after each consecutive hit (10, 20, 30), this is a hack\n  case 'Triple Kick':\n    basePower = move.hits === 2 ? 15 : move.hits === 3 ? 30 : 10;\n    desc.moveBP = basePower;\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = 100 * Math.floor((defender.curHP() * 4096) / defender.maxHP());\n    basePower = Math.floor(Math.floor((120 * basePower + 2048 - 1) / 4096) / 100) || 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n\n  if (basePower === 0) {\n    return result;\n  }\n\n  const bpMods = [];\n\n  // Use BasePower after moves with custom BP to determine if Technician should boost\n  if ((attacker.hasAbility('Technician') && basePower <= 60) ||\n      (attacker.hasAbility('Flare Boost') &&\n       attacker.hasStatus('brn') && move.category === 'Special') ||\n      (attacker.hasAbility('Toxic Boost') &&\n       attacker.hasStatus('psn', 'tox') && move.category === 'Physical')\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Analytic') && turnOrder !== 'first') {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    attacker.hasAbility('Sand Force') &&\n    field.hasWeather('Sand') &&\n    move.hasType('Rock', 'Ground', 'Steel')\n  ) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    (attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n    (attacker.hasAbility('Iron Fist') && move.flags.punch)\n  ) {\n    bpMods.push(4915);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.hasAbility('Heatproof') && move.hasType('Fire')) {\n    bpMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    bpMods.push(5120);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Sheer Force') && move.secondaries) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.hasAbility('Rivalry') && ![attacker.gender, defender.gender].includes('N')) {\n    if (attacker.gender === defender.gender) {\n      bpMods.push(5120);\n      desc.rivalry = 'buffed';\n    } else {\n      bpMods.push(3072);\n      desc.rivalry = 'nerfed';\n    }\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.item && getItemBoostType(attacker.item) === move.type) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Muscle Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Wise Glasses') && move.category === 'Special')\n  ) {\n    bpMods.push(4505);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Adamant Orb') &&\n     attacker.named('Dialga') &&\n     move.hasType('Steel', 'Dragon')) ||\n    (attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia') &&\n     move.hasType('Water', 'Dragon')) ||\n    (attacker.hasItem('Griseous Orb') &&\n     attacker.named('Giratina-Origin') &&\n     move.hasType('Ghost', 'Dragon'))\n  ) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem(`${move.type} Gem`)) {\n    bpMods.push(gen.num > 5 ? 5325 : 6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  if ((move.named('Facade') && attacker.hasStatus('brn', 'par', 'psn', 'tox')) ||\n      (move.named('Brine') && defender.curHP() <= defender.maxHP() / 2) ||\n      (move.named('Venoshock') && defender.hasStatus('psn', 'tox'))) {\n    bpMods.push(8192);\n    desc.moveBP = basePower * 2;\n  } else if (gen.num > 5 && move.named('Knock Off') && !resistedKnockOffDamage) {\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if (move.named('Solar Beam') && field.hasWeather('Rain', 'Heavy Rain', 'Sand', 'Hail')) {\n    bpMods.push(2048);\n    desc.moveBP = basePower / 2;\n    desc.weather = field.weather;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    bpMods.push(6144);\n    desc.isHelpingHand = true;\n  }\n\n  if (isAerilate || isPixilate || isRefrigerate || isNormalize) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Mega Launcher') && move.flags.pulse) ||\n    (attacker.hasAbility('Strong Jaw') && move.flags.bite)\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Tough Claws') && move.flags.contact) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const aura = `${move.type} Aura`;\n  const isAttackerAura = attacker.hasAbility(aura);\n  const isDefenderAura = defender.hasAbility(aura);\n  const isUserAuraBreak = attacker.hasAbility('Aura Break') || defender.hasAbility('Aura Break');\n  const isFieldAuraBreak = field.isAuraBreak;\n  const isFieldFairyAura = field.isFairyAura && move.type === 'Fairy';\n  const isFieldDarkAura = field.isDarkAura && move.type === 'Dark';\n  const auraActive = isAttackerAura || isDefenderAura || isFieldFairyAura || isFieldDarkAura;\n  const auraBreak = isFieldAuraBreak || isUserAuraBreak;\n  if (auraActive) {\n    if (auraBreak) {\n      bpMods.push(3072);\n      desc.attackerAbility = attacker.ability;\n      desc.defenderAbility = defender.ability;\n    } else {\n      bpMods.push(5448);\n      if (isAttackerAura) desc.attackerAbility = attacker.ability;\n      if (isDefenderAura) desc.defenderAbility = defender.ability;\n    }\n  }\n\n  // It's not actually clear if the terrain modifiers are base damage mods like weather or are\n  // base power mods like in Gen 7+, but the research doesn't exist for this yet so we match PS here\n  if (isGrounded(attacker, field)) {\n    if ((field.hasTerrain('Electric') && move.hasType('Electric')) ||\n        (field.hasTerrain('Grassy') && move.hasType('Grass'))\n    ) {\n      bpMods.push(6144);\n      desc.terrain = field.terrain;\n    }\n  }\n  if (isGrounded(defender, field)) {\n    if ((field.hasTerrain('Misty') && move.hasType('Dragon')) ||\n        (field.hasTerrain('Grassy') && move.named('Bulldoze', 'Earthquake'))\n    ) {\n      bpMods.push(2048);\n      desc.terrain = field.terrain;\n    }\n  }\n\n  basePower = OF16(Math.max(1, pokeRound((basePower * chainMods(bpMods, 41, 2097152)) / 4096)));\n\n  // #endregion\n  // #region (Special) Attack\n\n  let attack: number;\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  const attackStat = move.category === 'Special' ? 'spa' : 'atk';\n  desc.attackEVs =\n    move.named('Foul Play')\n      ? getEVDescriptionText(gen, defender, attackStat, defender.nature)\n      : getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n\n  if (attackSource.boosts[attackStat] === 0 ||\n      (isCritical && attackSource.boosts[attackStat] < 0)) {\n    attack = attackSource.rawStats[attackStat];\n  } else if (defender.hasAbility('Unaware')) {\n    attack = attackSource.rawStats[attackStat];\n    desc.defenderAbility = defender.ability;\n  } else {\n    attack = attackSource.stats[attackStat];\n    desc.attackBoost = attackSource.boosts[attackStat];\n  }\n\n  // unlike all other attack modifiers, Hustle gets applied directly\n  if (attacker.hasAbility('Hustle') && move.category === 'Physical') {\n    attack = pokeRound((attack * 3) / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const atMods = [];\n  if (defender.hasAbility('Thick Fat') && move.hasType('Fire', 'Ice')) {\n    atMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((attacker.hasAbility('Guts') && attacker.status && move.category === 'Physical') ||\n      (attacker.curHP() <= attacker.maxHP() / 3 &&\n        ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n         (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n         (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n         (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n      (move.category === 'Special' && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    atMods.push(6144);\n    desc.attackerAbility = 'Flash Fire';\n  } else if (\n    (attacker.hasAbility('Solar Power') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Special') ||\n    (attacker.named('Cherrim') &&\n     attacker.hasAbility('Flower Gift') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Physical')\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.attackerSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    move.category === 'Physical') {\n    atMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (attacker.hasAbility('Defeatist') && attacker.curHP() <= attacker.maxHP() / 2) ||\n    (attacker.hasAbility('Slow Start') && attacker.abilityOn && move.category === 'Physical')\n  ) {\n    atMods.push(2048);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Huge Power', 'Pure Power') && move.category === 'Physical') {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((attacker.hasItem('Thick Club') &&\n       attacker.named('Cubone', 'Marowak', 'Marowak-Alola') &&\n       move.category === 'Physical') ||\n      (attacker.hasItem('Deep Sea Tooth') &&\n       attacker.named('Clamperl') &&\n       move.category === 'Special') ||\n      (attacker.hasItem('Light Ball') && attacker.name.startsWith('Pikachu') && !move.isZ)\n  ) {\n    atMods.push(8192);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Soul Dew') &&\n      attacker.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega') &&\n      move.category === 'Special') ||\n    (attacker.hasItem('Choice Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Choice Specs') && move.category === 'Special')\n  ) {\n    atMods.push(6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  attack = OF16(Math.max(1, pokeRound((attack * chainMods(atMods, 410, 131072)) / 4096)));\n\n  // #endregion\n  // #region (Special) Defense\n\n  let defense: number;\n  const defenseStat = move.overrideDefensiveStat || move.category === 'Physical' ? 'def' : 'spd';\n  const hitsPhysical = defenseStat === 'def';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  if (defender.boosts[defenseStat] === 0 ||\n    (isCritical && defender.boosts[defenseStat] > 0) ||\n    move.ignoreDefensive) {\n    defense = defender.rawStats[defenseStat];\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = defender.rawStats[defenseStat];\n    desc.attackerAbility = attacker.ability;\n  } else {\n    defense = defender.stats[defenseStat];\n    desc.defenseBoost = defender.boosts[defenseStat];\n  }\n\n  // unlike all other defense modifiers, Sandstorm SpD boost gets applied directly\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n\n  const dfMods = [];\n  if (defender.hasAbility('Marvel Scale') && defender.status && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    defender.named('Cherrim') &&\n    defender.hasAbility('Flower Gift') &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.defenderSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical) {\n    dfMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  }\n\n  if (field.hasTerrain('Grassy') && defender.hasAbility('Grass Pelt') && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((!hitsPhysical && defender.hasItem('Soul Dew') &&\n       defender.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega')) ||\n      (defender.hasItem('Eviolite') && gen.species.get(toID(defender.name))?.nfe) ||\n      (!hitsPhysical && defender.hasItem('Assault Vest'))) {\n    dfMods.push(6144);\n    desc.defenderItem = defender.item;\n  }\n\n  if ((defender.hasItem('Metal Powder') && defender.named('Ditto') && hitsPhysical) ||\n      (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !hitsPhysical)) {\n    dfMods.push(8192);\n    desc.defenderItem = defender.item;\n  }\n\n  if (defender.hasAbility('Fur Coat') && hitsPhysical) {\n    dfMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  defense = OF16(Math.max(1, pokeRound((defense * chainMods(dfMods, 410, 131072)) / 4096)));\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = getBaseDamage(attacker.level, basePower, attack, defense);\n\n  const isSpread = field.gameType !== 'Singles' &&\n    ['allAdjacent', 'allAdjacentFoes'].includes(move.target);\n  if (isSpread) {\n    baseDamage = pokeRound(OF32(baseDamage * 3072) / 4096);\n  }\n\n  if (attacker.hasAbility('Parental Bond (Child)')) {\n    baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n  }\n\n  if ((field.hasWeather('Sun', 'Harsh Sunshine') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain', 'Heavy Rain') && move.hasType('Water'))) {\n    baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire'))\n  ) {\n    baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n    desc.weather = field.weather;\n  }\n\n  if (isCritical) {\n    baseDamage = Math.floor(OF32(baseDamage * (gen.num > 5 ? 1.5 : 2)));\n    desc.isCritical = isCritical;\n  }\n\n  // the random factor is applied between the crit mod and the stab mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 4096;\n  if (attacker.hasType(move.type)) {\n    if (attacker.hasAbility('Adaptability')) {\n      stabMod = 8192;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      stabMod = 6144;\n    }\n  } else if (attacker.hasAbility('Protean')) {\n    stabMod = 6144;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const applyBurn =\n    attacker.hasStatus('brn') &&\n    move.category === 'Physical' &&\n    !attacker.hasAbility('Guts') &&\n    !(move.named('Facade') && gen.num === 6);\n  desc.isBurned = applyBurn;\n\n  const finalMods = [];\n\n  if (field.defenderSide.isReflect && move.category === 'Physical' && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? (gen.num > 5 ? 2732 : 2703) : 2048);\n    desc.isReflect = true;\n  } else if (field.defenderSide.isLightScreen && move.category === 'Special' && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? (gen.num > 5 ? 2732 : 2703) : 2048);\n    desc.isLightScreen = true;\n  }\n\n  if (defender.hasAbility('Multiscale') && defender.curHP() === defender.maxHP() &&\n      !field.defenderSide.isSR && (!field.defenderSide.spikes || defender.hasType('Flying')) &&\n      !attacker.hasAbility('Parental Bond (Child)')) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    finalMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (field.defenderSide.isFriendGuard) {\n    finalMods.push(3072);\n    desc.isFriendGuard = true;\n  }\n\n  if (attacker.hasAbility('Sniper') && isCritical) {\n    finalMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.hasAbility('Solid Rock', 'Filter') && typeEffectiveness > 1) {\n    finalMods.push(3072);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasItem('Metronome') && move.timesUsedWithMetronome! >= 1) {\n    const timesUsedWithMetronome = Math.floor(move.timesUsedWithMetronome!);\n    if (timesUsedWithMetronome <= 4) {\n      finalMods.push(4096 + timesUsedWithMetronome * 819);\n    } else {\n      finalMods.push(8192);\n    }\n    desc.attackerItem = attacker.item;\n  }\n\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1 && !move.isZ) {\n    finalMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Life Orb')) {\n    finalMods.push(5324);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.hasType(getBerryResistType(defender.item)) &&\n      (typeEffectiveness > 1 || move.hasType('Normal')) &&\n      !attacker.hasAbility('Unnerve')) {\n    finalMods.push(2048);\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.defenderSide.isProtected && move.isZ && attacker.item && attacker.item.includes(' Z')) {\n    finalMods.push(1024);\n    desc.isProtected = true;\n  }\n\n  const finalMod = chainMods(finalMods, 41, 131072);\n\n  let childDamage: number[] | undefined;\n  if (attacker.hasAbility('Parental Bond') && move.hits === 1 && !isSpread) {\n    const child = attacker.clone();\n    child.ability = 'Parental Bond (Child)' as AbilityName;\n    checkMultihitBoost(gen, child, defender, move, field, desc);\n    childDamage = calculateBWXY(gen, child, defender, move, field).damage as number[];\n    desc.attackerAbility = attacker.ability;\n  }\n\n  let damage: number[] = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] =\n      getFinalDamage(baseDamage, i, typeEffectiveness, applyBurn, stabMod, finalMod);\n  }\n\n  if (move.dropsStats && (move.timesUsed || 0) > 1) {\n    const simpleMultiplier = attacker.hasAbility('Simple') ? 2 : 1;\n\n    desc.moveTurns = `over ${move.timesUsed} turns`;\n    const hasWhiteHerb = attacker.hasItem('White Herb');\n    let usedWhiteHerb = false;\n    let dropCount = attacker.boosts[attackStat];\n    for (let times = 0; times < move.timesUsed!; times++) {\n      const newAttack = getModifiedStat(attack, dropCount);\n      let damageMultiplier = 0;\n      damage = damage.map(affectedAmount => {\n        if (times) {\n          const newBaseDamage = getBaseDamage(attacker.level, basePower, newAttack, defense);\n          const newFinalDamage = getFinalDamage(\n            newBaseDamage,\n            damageMultiplier,\n            typeEffectiveness,\n            applyBurn,\n            stabMod,\n            finalMod\n          );\n          damageMultiplier++;\n          return affectedAmount + newFinalDamage;\n        }\n        return affectedAmount;\n      });\n\n      if (attacker.hasAbility('Contrary')) {\n        dropCount = Math.min(6, dropCount + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        dropCount = Math.max(-6, dropCount - move.dropsStats * simpleMultiplier);\n        if (attacker.hasAbility('Simple')) {\n          desc.attackerAbility = attacker.ability;\n        }\n      }\n\n      // the Pokémon hits THEN the stat rises / lowers\n      if (hasWhiteHerb && attacker.boosts[attackStat] < 0 && !usedWhiteHerb) {\n        dropCount += move.dropsStats * simpleMultiplier;\n        usedWhiteHerb = true;\n        desc.attackerItem = attacker.item;\n      }\n    }\n  }\n\n  desc.attackBoost =\n    move.named('Foul Play') ? defender.boosts[attackStat] : attacker.boosts[attackStat];\n\n  result.damage = childDamage ? [damage, childDamage] : damage;\n\n  // #endregion\n\n  return result;\n}\n","import {Generation, AbilityName, StatID, Terrain} from '../data/interface';\nimport {toID} from '../util';\nimport {\n  getBerryResistType,\n  getFlingPower,\n  getItemBoostType,\n  getMultiAttack,\n  getNaturalGift,\n  getTechnoBlast,\n  SEED_BOOSTED_STAT,\n} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  chainMods,\n  checkAirLock,\n  checkDauntlessShield,\n  checkDownload,\n  checkForecast,\n  checkInfiltrator,\n  checkIntimidate,\n  checkIntrepidSword,\n  checkItem,\n  checkMultihitBoost,\n  checkSeedBoost,\n  checkWonderRoom,\n  computeFinalStats,\n  countBoosts,\n  getBaseDamage,\n  getEVDescriptionText,\n  getFinalDamage,\n  getModifiedStat,\n  getQPBoostedStat,\n  getMoveEffectiveness,\n  getShellSideArmCategory,\n  getWeightFactor,\n  handleFixedDamageMoves,\n  isGrounded,\n  OF16, OF32,\n  pokeRound,\n  isQPActive,\n} from './util';\n\nexport function calculateSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker, field.isMagicRoom);\n  checkItem(defender, field.isMagicRoom);\n  checkWonderRoom(attacker, field.isWonderRoom);\n  checkWonderRoom(defender, field.isWonderRoom);\n  checkSeedBoost(attacker, field);\n  checkSeedBoost(defender, field);\n  checkDauntlessShield(attacker, gen);\n  checkDauntlessShield(defender, gen);\n\n  computeFinalStats(gen, attacker, defender, field, 'def', 'spd', 'spe');\n\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender, field.isWonderRoom);\n  checkDownload(defender, attacker, field.isWonderRoom);\n  checkIntrepidSword(attacker, gen);\n  checkIntrepidSword(defender, gen);\n\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'spa');\n\n  checkInfiltrator(attacker, field.defenderSide);\n  checkInfiltrator(defender, field.attackerSide);\n\n  const atkTeraType = attacker.isTera ? attacker.teraType : undefined;\n  const defTeraType = defender.isTera ? defender.teraType : undefined;\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    attackerTera: atkTeraType,\n    moveName: move.name,\n    defenderName: defender.name,\n    defenderTera: defTeraType,\n    isDefenderDynamaxed: defender.isDynamaxed,\n    isWonderRoom: field.isWonderRoom,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  const breaksProtect = move.breaksProtect || move.isZ || attacker.isDynamaxed ||\n  (attacker.hasAbility('Unseen Fist') && move.flags.contact);\n\n  if (field.defenderSide.isProtected && !breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  const defenderIgnoresAbility = defender.hasAbility(\n    'Full Metal Body',\n    'Neutralizing Gas',\n    'Prism Armor',\n    'Shadow Shield'\n  );\n\n  const attackerIgnoresAbility = attacker.hasAbility('Mold Breaker', 'Teravolt', 'Turboblaze');\n  const moveIgnoresAbility = move.named(\n    'G-Max Drum Solo',\n    'G-Max Fire Ball',\n    'G-Max Hydrosnipe',\n    'Light That Burns the Sky',\n    'Menacing Moonraze Maelstrom',\n    'Moongeist Beam',\n    'Photon Geyser',\n    'Searing Sunraze Smash',\n    'Sunsteel Strike'\n  );\n  if (!defenderIgnoresAbility && !defender.hasAbility('Poison Heal') &&\n    (attackerIgnoresAbility || moveIgnoresAbility)) {\n    if (attackerIgnoresAbility) desc.attackerAbility = attacker.ability;\n    if (defender.hasItem('Ability Shield')) {\n      desc.defenderItem = defender.item;\n    } else {\n      defender.ability = '' as AbilityName;\n    }\n  }\n\n  // Merciless does not ignore Shell Armor, damage dealt to a poisoned Pokemon with Shell Armor\n  // will not be a critical hit (UltiMario)\n  const isCritical = !defender.hasAbility('Battle Armor', 'Shell Armor') &&\n    (move.isCrit || (attacker.hasAbility('Merciless') && defender.hasStatus('psn', 'tox'))) &&\n    move.timesUsed === 1;\n\n  let type = move.type;\n  if (move.named('Weather Ball')) {\n    const holdingUmbrella = attacker.hasItem('Utility Umbrella');\n    type =\n      field.hasWeather('Sun', 'Harsh Sunshine') && !holdingUmbrella ? 'Fire'\n      : field.hasWeather('Rain', 'Heavy Rain') && !holdingUmbrella ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail', 'Snow') ? 'Ice'\n      : 'Normal';\n    desc.weather = field.weather;\n    desc.moveType = type;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Techno Blast') && attacker.item && attacker.item.includes('Drive')) {\n    type = getTechnoBlast(attacker.item)!;\n  } else if (move.named('Multi-Attack') && attacker.item && attacker.item.includes('Memory')) {\n    type = getMultiAttack(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    type = gift.t;\n    desc.moveType = type;\n    desc.attackerItem = attacker.item;\n  } else if (\n    move.named('Nature Power') ||\n    (move.named('Terrain Pulse') && isGrounded(attacker, field))\n  ) {\n    type =\n      field.hasTerrain('Electric') ? 'Electric'\n      : field.hasTerrain('Grassy') ? 'Grass'\n      : field.hasTerrain('Misty') ? 'Fairy'\n      : field.hasTerrain('Psychic') ? 'Psychic'\n      : 'Normal';\n    desc.terrain = field.terrain;\n    desc.moveType = type;\n  } else if (move.named('Revelation Dance')) {\n    type = attacker.types[0];\n  } else if (move.named('Aura Wheel')) {\n    if (attacker.named('Morpeko')) {\n      type = 'Electric';\n    } else if (attacker.named('Morpeko-Hangry')) {\n      type = 'Dark';\n    }\n  } else if (move.named('Raging Bull')) {\n    if (attacker.named('Tauros-Paldea-Combat')) {\n      type = 'Fighting';\n    } else if (attacker.named('Tauros-Paldea-Blaze')) {\n      type = 'Fire';\n    } else if (attacker.named('Tauros-Paldea-Aqua')) {\n      type = 'Water';\n    }\n  }\n\n  let hasAteAbilityTypeChange = false;\n  let isAerilate = false;\n  let isPixilate = false;\n  let isRefrigerate = false;\n  let isGalvanize = false;\n  let isLiquidVoice = false;\n  let isNormalize = false;\n  const noTypeChange = move.named(\n    'Revelation Dance',\n    'Judgment',\n    'Nature Power',\n    'Techno Blast',\n    'Multi Attack',\n    'Natural Gift',\n    'Weather Ball',\n    'Terrain Pulse',\n  ) || (move.named('Tera Blast') && atkTeraType);\n\n  if (!move.isZ && !noTypeChange) {\n    const normal = move.hasType('Normal');\n    if ((isAerilate = attacker.hasAbility('Aerilate') && normal)) {\n      type = 'Flying';\n    } else if ((isGalvanize = attacker.hasAbility('Galvanize') && normal)) {\n      type = 'Electric';\n    } else if ((isLiquidVoice = attacker.hasAbility('Liquid Voice') && !!move.flags.sound)) {\n      type = 'Water';\n    } else if ((isPixilate = attacker.hasAbility('Pixilate') && normal)) {\n      type = 'Fairy';\n    } else if ((isRefrigerate = attacker.hasAbility('Refrigerate') && normal)) {\n      type = 'Ice';\n    } else if ((isNormalize = attacker.hasAbility('Normalize'))) { // Boosts any type\n      type = 'Normal';\n    }\n    if (isGalvanize || isPixilate || isRefrigerate || isAerilate || isNormalize) {\n      desc.attackerAbility = attacker.ability;\n      hasAteAbilityTypeChange = true;\n    } else if (isLiquidVoice) {\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (move.named('Tera Blast') && atkTeraType) {\n    type = atkTeraType;\n  }\n\n  move.type = type;\n\n  // FIXME: this is incorrect, should be move.flags.heal, not move.drain\n  if ((attacker.hasAbility('Triage') && move.drain) ||\n      (attacker.hasAbility('Gale Wings') &&\n       move.hasType('Flying') &&\n       attacker.curHP() === attacker.maxHP())) {\n    move.priority = 1;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed =\n    attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n  const isRingTarget =\n    defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n  const type1Effectiveness = getMoveEffectiveness(\n    gen,\n    move,\n    defender.types[0],\n    isGhostRevealed,\n    field.isGravity,\n    isRingTarget\n  );\n  const type2Effectiveness = defender.types[1]\n    ? getMoveEffectiveness(\n      gen,\n      move,\n      defender.types[1],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    )\n    : 1;\n  const type3Effectiveness = defender.types[2]\n    ? getMoveEffectiveness(\n      gen,\n      move,\n      defender.types[2],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    )\n    : 1;\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness * type3Effectiveness;\n\n  if (defTeraType) {\n    typeEffectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      defTeraType,\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n  }\n\n  if (typeEffectiveness === 0 && move.hasType('Ground') &&\n    defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n    typeEffectiveness = 1;\n  }\n\n  if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n    typeEffectiveness = 1;\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((move.named('Sky Drop') &&\n        (defender.hasType('Flying') || defender.weightkg >= 200 || field.isGravity)) ||\n      (move.named('Synchronoise') && !defender.hasType(attacker.types[0]) &&\n        (!attacker.types[1] || !defender.hasType(attacker.types[1]))) ||\n      (move.named('Dream Eater') &&\n        (!(defender.hasStatus('slp') || defender.hasAbility('Comatose')))) ||\n      (move.named('Steel Roller') && !field.terrain) ||\n      (move.named('Poltergeist') && !defender.item)\n  ) {\n    return result;\n  }\n\n  if (\n    (field.hasWeather('Harsh Sunshine') && move.hasType('Water')) ||\n    (field.hasWeather('Heavy Rain') && move.hasType('Fire'))\n  ) {\n    desc.weather = field.weather;\n    return result;\n  }\n\n  if (field.hasWeather('Strong Winds') && defender.hasType('Flying') &&\n      gen.types.get(toID(move.type))!.effectiveness['Flying']! > 1) {\n    typeEffectiveness /= 2;\n    desc.weather = field.weather;\n  }\n\n  if ((defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Grass') && defender.hasAbility('Sap Sipper')) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire', 'Well-Baked Body')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Storm Drain', 'Water Absorb')) ||\n      (move.hasType('Electric') &&\n        defender.hasAbility('Lightning Rod', 'Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') &&\n        !field.isGravity && !move.named('Thousand Arrows') &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.bullet && defender.hasAbility('Bulletproof')) ||\n      (move.flags.sound && !move.named('Clangorous Soul') && defender.hasAbility('Soundproof')) ||\n      (move.priority > 0 && defender.hasAbility('Queenly Majesty', 'Dazzling', 'Armor Tail')) ||\n      (move.hasType('Ground') && defender.hasAbility('Earth Eater')) ||\n      (move.flags.wind && defender.hasAbility('Wind Rider'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  if (move.hasType('Ground') && !move.named('Thousand Arrows') &&\n      !field.isGravity && defender.hasItem('Air Balloon')) {\n    desc.defenderItem = defender.item;\n    return result;\n  }\n\n  if (move.priority > 0 && field.hasTerrain('Psychic') && isGrounded(defender, field)) {\n    desc.terrain = field.terrain;\n    return result;\n  }\n\n  const weightBasedMove = move.named('Heat Crash', 'Heavy Slam', 'Low Kick', 'Grass Knot');\n  if (defender.isDynamaxed && weightBasedMove) {\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    if (attacker.hasAbility('Parental Bond')) {\n      result.damage = [fixedDamage, fixedDamage];\n      desc.attackerAbility = attacker.ability;\n    } else {\n      result.damage = fixedDamage;\n    }\n    return result;\n  }\n\n  if (move.named('Final Gambit')) {\n    result.damage = attacker.curHP();\n    return result;\n  }\n\n  if (move.named('Guardian of Alola')) {\n    let zLostHP = Math.floor((defender.curHP() * 3) / 4);\n    if (field.defenderSide.isProtected && attacker.item && attacker.item.includes(' Z')) {\n      zLostHP = Math.ceil(zLostHP / 4 - 0.5);\n    }\n    result.damage = zLostHP;\n    return result;\n  }\n\n  if (move.named('Nature\\'s Madness')) {\n    const lostHP = field.defenderSide.isProtected ? 0 : Math.floor(defender.curHP() / 2);\n    result.damage = lostHP;\n    return result;\n  }\n\n  if (move.named('Spectral Thief')) {\n    let stat: StatID;\n    for (stat in defender.boosts) {\n      if (defender.boosts[stat]) {\n        attacker.boosts[stat] +=\n          attacker.hasAbility('Contrary') ? -defender.boosts[stat]! : defender.boosts[stat]!;\n        if (attacker.boosts[stat] || 0 > 6) attacker.boosts[stat] = 6;\n        if (attacker.boosts[stat] || 0 < -6) attacker.boosts[stat] = -6;\n        attacker.stats[stat] = getModifiedStat(attacker.rawStats[stat]!, attacker.boosts[stat]!);\n      }\n    }\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  // const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  const basePower = calculateBasePowerSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    hasAteAbilityTypeChange,\n    desc\n  );\n  if (basePower === 0) {\n    return result;\n  }\n\n  // #endregion\n  // #region (Special) Attack\n  const attack = calculateAttackSMSSSV(gen, attacker, defender, move, field, desc, isCritical);\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  const atkSourceTeraType = attackSource.isTera ? attackSource.teraType : undefined;\n  if (move.named('Photon Geyser', 'Light That Burns The Sky') ||\n      (move.named('Tera Blast') && atkSourceTeraType)) {\n    move.category = attackSource.stats.atk > attackSource.stats.spa ? 'Physical' : 'Special';\n  }\n  const attackStat =\n    move.named('Shell Side Arm') &&\n    getShellSideArmCategory(attacker, defender) === 'Physical'\n      ? 'atk'\n      : move.named('Body Press')\n        ? 'def'\n        : move.category === 'Special'\n          ? 'spa'\n          : 'atk';\n  // #endregion\n  // #region (Special) Defense\n\n  const defense = calculateDefenseSMSSSV(gen, attacker, defender, move, field, desc, isCritical);\n  const hitsPhysical = move.overrideDefensiveStat === 'def' || move.category === 'Physical' ||\n    (move.named('Shell Side Arm') && getShellSideArmCategory(attacker, defender) === 'Physical');\n  const defenseStat = hitsPhysical ? 'def' : 'spd';\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = getBaseDamage(attacker.level, basePower, attack, defense);\n\n  const isSpread = field.gameType === 'Doubles' &&\n     ['allAdjacent', 'allAdjacentFoes'].includes(move.target);\n  if (isSpread) {\n    baseDamage = pokeRound(OF32(baseDamage * 3072) / 4096);\n  }\n\n  if (attacker.hasAbility('Parental Bond (Child)')) {\n    baseDamage = pokeRound(OF32(baseDamage * 1024) / 4096);\n  }\n\n  if (\n    field.hasWeather('Sun') && move.named('Hydro Steam') && !attacker.hasItem('Utility Umbrella')\n  ) {\n    baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n    desc.weather = field.weather;\n  } else if (!defender.hasItem('Utility Umbrella')) {\n    if (\n      (field.hasWeather('Sun', 'Harsh Sunshine') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain', 'Heavy Rain') && move.hasType('Water'))\n    ) {\n      baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n      desc.weather = field.weather;\n    } else if (\n      (field.hasWeather('Sun') && move.hasType('Water')) ||\n      (field.hasWeather('Rain') && move.hasType('Fire'))\n    ) {\n      baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n      desc.weather = field.weather;\n    }\n  }\n\n  if (hasTerrainSeed(defender) &&\n    field.hasTerrain(defender.item!.substring(0, defender.item!.indexOf(' ')) as Terrain) &&\n    SEED_BOOSTED_STAT[defender.item!] === defenseStat) {\n    // Last condition applies so the calc doesn't show a seed where it wouldn't affect the outcome\n    // (like Grassy Seed when being hit by a special move)\n    desc.defenderItem = defender.item;\n  }\n\n  if (isCritical) {\n    baseDamage = Math.floor(OF32(baseDamage * 1.5));\n    desc.isCritical = isCritical;\n  }\n\n  // the random factor is applied between the crit mod and the stab mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 4096;\n  if (attacker.hasOriginalType(move.type)) {\n    stabMod += 2048;\n  } else if (attacker.hasAbility('Protean', 'Libero') && !atkTeraType) {\n    stabMod += 2048;\n    desc.attackerAbility = attacker.ability;\n  }\n  const teraType = atkTeraType;\n  if (teraType === move.type) {\n    stabMod += 2048;\n    desc.attackerTera = teraType;\n  }\n  if (attacker.hasAbility('Adaptability') && attacker.hasType(move.type)) {\n    stabMod += teraType && attacker.hasOriginalType(teraType) ? 1024 : 2048;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const applyBurn =\n    attacker.hasStatus('brn') &&\n    move.category === 'Physical' &&\n    !attacker.hasAbility('Guts') &&\n    !move.named('Facade');\n  desc.isBurned = applyBurn;\n  const finalMods = calculateFinalModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    isCritical,\n    typeEffectiveness\n  );\n\n  let protect = false;\n  if (field.defenderSide.isProtected &&\n    (attacker.isDynamaxed || (move.isZ && attacker.item && attacker.item.includes(' Z')))) {\n    protect = true;\n    desc.isProtected = true;\n  }\n\n  const finalMod = chainMods(finalMods, 41, 131072);\n\n  let childDamage: number[] | undefined;\n  if (attacker.hasAbility('Parental Bond') && move.hits === 1 && !isSpread) {\n    const child = attacker.clone();\n    child.ability = 'Parental Bond (Child)' as AbilityName;\n    checkMultihitBoost(gen, child, defender, move, field, desc);\n    childDamage = calculateSMSSSV(gen, child, defender, move, field).damage as number[];\n    desc.attackerAbility = attacker.ability;\n  }\n\n  let damage = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] =\n      getFinalDamage(baseDamage, i, typeEffectiveness, applyBurn, stabMod, finalMod, protect);\n  }\n\n  if (move.dropsStats && move.timesUsed! > 1) {\n    const simpleMultiplier = attacker.hasAbility('Simple') ? 2 : 1;\n\n    desc.moveTurns = `over ${move.timesUsed} turns`;\n    const hasWhiteHerb = attacker.hasItem('White Herb');\n    let usedWhiteHerb = false;\n    let dropCount = attacker.boosts[attackStat];\n    for (let times = 0; times < move.timesUsed!; times++) {\n      const newAttack = getModifiedStat(attack, dropCount);\n      let damageMultiplier = 0;\n      damage = damage.map(affectedAmount => {\n        if (times) {\n          const newBaseDamage = getBaseDamage(attacker.level, basePower, newAttack, defense);\n          const newFinalDamage = getFinalDamage(\n            newBaseDamage,\n            damageMultiplier,\n            typeEffectiveness,\n            applyBurn,\n            stabMod,\n            finalMod,\n            protect\n          );\n          damageMultiplier++;\n          return affectedAmount + newFinalDamage;\n        }\n        return affectedAmount;\n      });\n\n      if (attacker.hasAbility('Contrary')) {\n        dropCount = Math.min(6, dropCount + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        dropCount = Math.max(-6, dropCount - move.dropsStats * simpleMultiplier);\n        if (attacker.hasAbility('Simple')) {\n          desc.attackerAbility = attacker.ability;\n        }\n      }\n\n      // the Pokémon hits THEN the stat rises / lowers\n      if (hasWhiteHerb && attacker.boosts[attackStat] < 0 && !usedWhiteHerb) {\n        dropCount += move.dropsStats * simpleMultiplier;\n        usedWhiteHerb = true;\n        desc.attackerItem = attacker.item;\n      }\n    }\n  }\n\n  desc.attackBoost =\n    move.named('Foul Play') ? defender.boosts[attackStat] : attacker.boosts[attackStat];\n\n  result.damage = childDamage ? [damage, childDamage] : damage;\n\n  // Tera Raid Shield\n  if (defender.shieldData && defender.shieldActive) {\n    // TODO: Handle case when attacker tera and move type do not match\n    let damageCoef = atkTeraType === move.type \n      ? defender.shieldData.shieldDamageRateTera / 100 \n      : atkTeraType ? \n        defender.shieldData.shieldDamageRateTeraChange / 100 \n        : defender.shieldData.shieldDamageRate / 100;\n    damageCoef = damageCoef || 1;\n    result.damage = result.damage.map((dmg) => typeof(dmg) === \"number\" \n      ? Math.max(dmg > 0 ? 1 : 0, pokeRound(dmg * damageCoef))\n      : dmg.map((dmg2) => Math.max(dmg2 > 0 ? 1 : 0, pokeRound(dmg2 * damageCoef))\n    )) as number[] | [number[], number[]];\n    desc.shieldActive = true;\n  }\n\n  // #endregion\n\n  return result;\n}\n\nexport function calculateBasePowerSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  hasAteAbilityTypeChange: boolean,\n  desc: RawDesc\n) {\n  let turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n  turnOrder = field.isTrickRoom ? (turnOrder === 'first' ? 'last' : 'first') : turnOrder;\n\n  let basePower: number;\n  const atkTeraType = attacker.isTera ? attacker.teraType : undefined;\n\n  switch (move.name) {\n  case 'Payback':\n    basePower = move.bp * (turnOrder === 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Bolt Beak':\n  case 'Fishious Rend':\n    basePower = move.bp * (turnOrder !== 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Pursuit':\n    const switching = field.defenderSide.isSwitching === 'out';\n    basePower = move.bp * (switching ? 2 : 1);\n    if (switching) desc.isSwitching = 'out';\n    desc.moveBP = basePower;\n    break;\n  case 'Electro Ball':\n    const r = Math.floor(attacker.stats.spe / defender.stats.spe);\n    basePower = r >= 4 ? 150 : r >= 3 ? 120 : r >= 2 ? 80 : r >= 1 ? 60 : 40;\n    if (defender.stats.spe === 0) basePower = 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe) + 1);\n    if (attacker.stats.spe === 0) basePower = 1;\n    desc.moveBP = basePower;\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts, defender.randomBoosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Low Kick':\n  case 'Grass Knot':\n    const w = defender.weightkg * getWeightFactor(defender);\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Hex':\n  case 'Infernal Parade':\n    // Hex deals double damage to Pokemon with Comatose (ih8ih8sn0w)\n    basePower = move.bp * (defender.status || defender.hasAbility('Comatose') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Barb Barrage':\n    basePower = move.bp * (defender.hasStatus('psn', 'tox') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Heavy Slam':\n  case 'Heat Crash':\n    const wr =\n        (attacker.weightkg * getWeightFactor(attacker)) /\n        (defender.weightkg * getWeightFactor(defender));\n    basePower = wr >= 5 ? 120 : wr >= 4 ? 100 : wr >= 3 ? 80 : wr >= 2 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Stored Power':\n  case 'Power Trip':\n    basePower = 20 + 20 * countBoosts(gen, attacker.boosts, attacker.randomBoosts);\n    desc.moveBP = basePower;\n    break;\n  case 'Rage Fist':\n    basePower = 50 + 50 * Math.min(6, attacker.hitsTaken);\n    desc.moveBP = basePower;\n    break;\n  case 'Acrobatics':\n    basePower = move.bp * (attacker.hasItem('Flying Gem') || !attacker.item ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Assurance':\n    basePower = move.bp * (defender.hasAbility('Parental Bond (Child)') ? 2 : 1);\n    // NOTE: desc.attackerAbility = 'Parental Bond' will already reflect this boost\n    break;\n  case 'Wake-Up Slap':\n    // Wake-Up Slap deals double damage to Pokemon with Comatose (ih8ih8sn0w)\n    basePower = move.bp * (defender.hasStatus('slp') || defender.hasAbility('Comatose') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Smelling Salts':\n    basePower = move.bp * (defender.hasStatus('par') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Weather Ball':\n    basePower = move.bp * (field.weather && !field.hasWeather('Strong Winds') ? 2 : 1);\n    if (field.hasWeather('Sun', 'Harsh Sunshine', 'Rain', 'Heavy Rain') &&\n      attacker.hasItem('Utility Umbrella')) basePower = move.bp;\n    desc.moveBP = basePower;\n    break;\n  case 'Terrain Pulse':\n    basePower = move.bp * (isGrounded(attacker, field) && field.terrain ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Rising Voltage':\n    basePower = move.bp * ((isGrounded(defender, field) && field.hasTerrain('Electric')) ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Psyblade':\n    basePower = move.bp * (field.hasTerrain('Electric') ? 1.5 : 1);\n    if (field.hasTerrain('Electric')) {\n      desc.moveBP = basePower;\n      desc.terrain = field.terrain;\n    }\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Dragon Energy':\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Natural Gift':\n    if (attacker.item?.includes('Berry')) {\n      const gift = getNaturalGift(gen, attacker.item)!;\n      basePower = gift.p;\n      desc.attackerItem = attacker.item;\n      desc.moveBP = move.bp;\n    } else {\n      basePower = move.bp;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Special';\n    move.secondaries = true;\n    switch (field.terrain) {\n    case 'Electric':\n      basePower = 90;\n      desc.moveName = 'Thunderbolt';\n      break;\n    case 'Grassy':\n      basePower = 90;\n      desc.moveName = 'Energy Ball';\n      break;\n    case 'Misty':\n      basePower = 95;\n      desc.moveName = 'Moonblast';\n      break;\n    case 'Psychic':\n      basePower = 90;\n      desc.moveName = 'Psychic';\n      break;\n    default:\n      basePower = 80;\n      desc.moveName = 'Tri Attack';\n    }\n    break;\n  case 'Water Shuriken':\n    basePower = attacker.named('Greninja-Ash') && attacker.hasAbility('Battle Bond') ? 20 : 15;\n    desc.moveBP = basePower;\n    break;\n  // Triple Axel's damage doubles after each consecutive hit (20, 40, 60), this is a hack\n  case 'Triple Axel':\n    basePower = move.hits === 2 ? 30 : move.hits === 3 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  // Triple Kick's damage doubles after each consecutive hit (10, 20, 30), this is a hack\n  case 'Triple Kick':\n    basePower = move.hits === 2 ? 15 : move.hits === 3 ? 30 : 10;\n    desc.moveBP = basePower;\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = 100 * Math.floor((defender.curHP() * 4096) / defender.maxHP());\n    basePower = Math.floor(Math.floor((120 * basePower + 2048 - 1) / 4096) / 100) || 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n  if (basePower === 0) {\n    return 0;\n  }\n  if (move.named(\n    'Breakneck Blitz', 'Bloom Doom', 'Inferno Overdrive', 'Hydro Vortex', 'Gigavolt Havoc',\n    'Subzero Slammer', 'Supersonic Skystrike', 'Savage Spin-Out', 'Acid Downpour', 'Tectonic Rage',\n    'Continental Crush', 'All-Out Pummeling', 'Shattered Psyche', 'Never-Ending Nightmare',\n    'Devastating Drake', 'Black Hole Eclipse', 'Corkscrew Crash', 'Twinkle Tackle'\n  )) {\n    // show z-move power in description\n    desc.moveBP = move.bp;\n  }\n  const bpMods = calculateBPModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    basePower,\n    hasAteAbilityTypeChange,\n    turnOrder\n  );\n  basePower = OF16(Math.max(1, pokeRound((basePower * chainMods(bpMods, 41, 2097152)) / 4096)));\n  if (\n    atkTeraType && move.type === atkTeraType &&\n    attacker.hasType(atkTeraType) && move.hits === 1 &&\n    move.priority <= 0 && move.bp > 0 && !move.named('Dragon Energy', 'Eruption', 'Water Spout') &&\n    basePower < 60 && gen.num >= 9\n  ) {\n    basePower = 60;\n    desc.moveBP = 60;\n  }\n  return basePower;\n}\n\nexport function calculateBPModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  basePower: number,\n  hasAteAbilityTypeChange: boolean,\n  turnOrder: string\n) {\n  const bpMods = [];\n  const defTeraType = defender.isTera ? defender.teraType : undefined;\n\n  // Move effects\n\n  let resistedKnockOffDamage =\n    !defender.item ||\n    (defender.named('Dialga-Origin') && defender.hasItem('Adamant Crystal')) ||\n    (defender.named('Palkia-Origin') && defender.hasItem('Lustrous Globe')) ||\n    // Griseous Core for gen 9, Griseous Orb otherwise\n    (defender.name.includes('Giratina-Origin') && defender.item.includes('Griseous')) ||\n    (defender.name.includes('Arceus') && defender.item.includes('Plate')) ||\n    (defender.name.includes('Genesect') && defender.item.includes('Drive')) ||\n    (defender.named('Groudon', 'Groudon-Primal') && defender.hasItem('Red Orb')) ||\n    (defender.named('Kyogre', 'Kyogre-Primal') && defender.hasItem('Blue Orb')) ||\n    (defender.name.includes('Silvally') && defender.item.includes('Memory')) ||\n    defender.item.includes(' Z') ||\n    (defender.named('Zacian') && defender.hasItem('Rusted Sword')) ||\n    (defender.named('Zamazenta') && defender.hasItem('Rusted Shield') ||\n    (defender.named('Venomicon-Epilogue') && defender.hasItem('Vile Vial')));\n\n  // The last case only applies when the Pokemon has the Mega Stone that matches its species\n  // (or when it's already a Mega-Evolution)\n  if (!resistedKnockOffDamage && defender.item) {\n    const item = gen.items.get(toID(defender.item))!;\n    if (item) {\n      resistedKnockOffDamage = !!item.megaEvolves && defender.name.includes(item.megaEvolves);\n    }\n  }\n\n  if ((move.named('Facade') && attacker.hasStatus('brn', 'par', 'psn', 'tox')) ||\n    (move.named('Brine') && defender.curHP() <= defender.maxHP() / 2) ||\n    (move.named('Venoshock') && defender.hasStatus('psn', 'tox')) ||\n    (move.named('Lash Out') && (countBoosts(gen, attacker.boosts, attacker.randomBoosts) < 0))\n  ) {\n    bpMods.push(8192);\n    desc.moveBP = basePower * 2;\n  } else if (\n    move.named('Expanding Force') && isGrounded(attacker, field) && field.hasTerrain('Psychic')\n  ) {\n    move.target = 'allAdjacentFoes';\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if ((move.named('Knock Off') && !resistedKnockOffDamage) ||\n    (move.named('Misty Explosion') && isGrounded(attacker, field) && field.hasTerrain('Misty')) ||\n    (move.named('Grav Apple') && field.isGravity)\n  ) {\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if (move.named('Solar Beam', 'Solar Blade') &&\n      field.hasWeather('Rain', 'Heavy Rain', 'Sand', 'Hail', 'Snow')) {\n    bpMods.push(2048);\n    desc.moveBP = basePower / 2;\n    desc.weather = field.weather;\n  } else if (move.named('Collision Course', 'Electro Drift')) {\n    const isGhostRevealed =\n      attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n    const isRingTarget =\n      defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n    const types = defTeraType ? [defTeraType] : defender.types;\n    const type1Effectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      types[0],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n    const type2Effectiveness = types[1] ? getMoveEffectiveness(\n      gen,\n      move,\n      types[1],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    ) : 1;\n    const type3Effectiveness = types[2] ? getMoveEffectiveness(\n      gen,\n      move,\n      types[2],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    ) : 1;\n    if (type1Effectiveness * type2Effectiveness * type3Effectiveness >= 2) {\n      bpMods.push(5461);\n      desc.moveBP = basePower * (5461 / 4096);\n    }\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    bpMods.push(6144);\n    desc.isHelpingHand = true;\n  }\n\n  // Field effects\n\n  const terrainMultiplier = gen.num > 7 ? 5325 : 6144;\n  if (isGrounded(attacker, field)) {\n    if ((field.hasTerrain('Electric') && move.hasType('Electric')) ||\n        (field.hasTerrain('Grassy') && move.hasType('Grass')) ||\n        (field.hasTerrain('Psychic') && move.hasType('Psychic'))\n    ) {\n      bpMods.push(terrainMultiplier);\n      desc.terrain = field.terrain;\n    }\n  }\n  if (isGrounded(defender, field)) {\n    if ((field.hasTerrain('Misty') && move.hasType('Dragon')) ||\n        (field.hasTerrain('Grassy') && move.named('Bulldoze', 'Earthquake'))\n    ) {\n      bpMods.push(2048);\n      desc.terrain = field.terrain;\n    }\n  }\n\n  // Abilities\n\n  // Use BasePower after moves with custom BP to determine if Technician should boost\n  if ((attacker.hasAbility('Technician') && basePower <= 60) ||\n    (attacker.hasAbility('Flare Boost') &&\n      attacker.hasStatus('brn') && move.category === 'Special') ||\n    (attacker.hasAbility('Toxic Boost') &&\n      attacker.hasStatus('psn', 'tox') && move.category === 'Physical') ||\n    (attacker.hasAbility('Mega Launcher') && move.flags.pulse) ||\n    (attacker.hasAbility('Strong Jaw') && move.flags.bite) ||\n    (attacker.hasAbility('Steely Spirit') && move.hasType('Steel')) ||\n    (attacker.hasAbility('Sharpness') && move.flags.slicing)\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  }\n\n\n  if (field.attackerSide.steelySpirits > 0 && move.hasType('Steel')){\n    for(var i = 0; i < field.attackerSide.steelySpirits; i++){\n        bpMods.push(6144);\n    }\n    desc.steelySpirits = field.attackerSide.steelySpirits;\n  }\n\n  if (field.attackerSide.isCharged && move.hasType('Electric')){\n    bpMods.push(8196);\n    desc.isCharged = true;\n  }\n\n  const aura = `${move.type} Aura`;\n  const isAttackerAura = attacker.hasAbility(aura);\n  const isDefenderAura = defender.hasAbility(aura);\n  const isUserAuraBreak = attacker.hasAbility('Aura Break') || defender.hasAbility('Aura Break');\n  const isFieldAuraBreak = field.isAuraBreak;\n  const isFieldFairyAura = field.isFairyAura && move.type === 'Fairy';\n  const isFieldDarkAura = field.isDarkAura && move.type === 'Dark';\n  const auraActive = isAttackerAura || isDefenderAura || isFieldFairyAura || isFieldDarkAura;\n  const auraBreak = isFieldAuraBreak || isUserAuraBreak;\n  if (auraActive) {\n    if (auraBreak) {\n      bpMods.push(3072);\n      desc.attackerAbility = attacker.ability;\n      desc.defenderAbility = defender.ability;\n    } else {\n      bpMods.push(5448);\n      if (isAttackerAura) desc.attackerAbility = attacker.ability;\n      if (isDefenderAura) desc.defenderAbility = defender.ability;\n    }\n  }\n\n  // Sheer Force does not power up max moves or remove the effects (SadisticMystic)\n  if (\n    (attacker.hasAbility('Sheer Force') &&\n      (move.secondaries || move.named('Jet Punch', 'Order Up')) && !move.isMax) ||\n    (attacker.hasAbility('Sand Force') &&\n      field.hasWeather('Sand') && move.hasType('Rock', 'Ground', 'Steel')) ||\n    (attacker.hasAbility('Analytic') &&\n      (turnOrder !== 'first' || field.defenderSide.isSwitching === 'out')) ||\n    (attacker.hasAbility('Tough Claws') && move.flags.contact) ||\n    (attacker.hasAbility('Punk Rock') && move.flags.sound)\n  ) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (field.attackerSide.isBattery && move.category === 'Special') {\n    bpMods.push(5325);\n    desc.isBattery = true;\n  }\n\n  if (field.attackerSide.isPowerSpot) {\n    bpMods.push(5325);\n    desc.isPowerSpot = true;\n  }\n\n  if (field.attackerSide.powerSpots > 0){\n    for(var ii = 0; ii < field.attackerSide.powerSpots; ii++){\n        bpMods.push(5325);\n    }\n    desc.powerSpots = field.attackerSide.powerSpots;\n  }\n\n\n  if (attacker.hasAbility('Rivalry') && ![attacker.gender, defender.gender].includes('N')) {\n    if (attacker.gender === defender.gender) {\n      bpMods.push(5120);\n      desc.rivalry = 'buffed';\n    } else {\n      bpMods.push(3072);\n      desc.rivalry = 'nerfed';\n    }\n    desc.attackerAbility = attacker.ability;\n  }\n\n  // The -ate abilities already changed move typing earlier, so most checks are done and desc is set\n  // However, Max Moves also don't boost -ate Abilities\n  if (!move.isMax && hasAteAbilityTypeChange) {\n    bpMods.push(4915);\n  }\n\n  if ((attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n      (attacker.hasAbility('Iron Fist') && move.flags.punch)\n  ) {\n    bpMods.push(4915);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.hasItem('Punching Glove') && move.flags.punch) {\n    bpMods.push(4506);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (defender.hasAbility('Heatproof') && move.hasType('Fire')) {\n    bpMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    bpMods.push(5120);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Supreme Overlord') && attacker.alliesFainted) {\n    const powMod = [4096, 4506, 4915, 5325, 5734, 6144];\n    bpMods.push(powMod[Math.min(5, attacker.alliesFainted)]);\n    desc.attackerAbility = attacker.ability;\n    desc.alliesFainted = attacker.alliesFainted;\n  }\n\n  // Items\n\n  if (attacker.hasItem(`${move.type} Gem`)) {\n    bpMods.push(5325);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (((attacker.hasItem('Adamant Crystal') && attacker.named('Dialga-Origin')) ||\n      (attacker.hasItem('Adamant Orb') && attacker.named('Dialga'))) &&\n     move.hasType('Steel', 'Dragon')) ||\n    (((attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia')) ||\n      (attacker.hasItem('Lustrous Globe') && attacker.named('Palkia-Origin'))) &&\n     move.hasType('Water', 'Dragon')) ||\n    (((attacker.hasItem('Griseous Orb') || attacker.hasItem('Griseous Core')) &&\n     (attacker.named('Giratina-Origin') || attacker.named('Giratina'))) &&\n     move.hasType('Ghost', 'Dragon')) ||\n    (attacker.hasItem('Vile Vial') &&\n     attacker.named('Venomicon-Epilogue') &&\n     move.hasType('Poison', 'Flying')) ||\n    (attacker.hasItem('Soul Dew') &&\n     attacker.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega') &&\n     move.hasType('Psychic', 'Dragon')) ||\n     attacker.item && move.hasType(getItemBoostType(attacker.item))\n  ) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Muscle Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Wise Glasses') && move.category === 'Special')\n  ) {\n    bpMods.push(4505);\n    desc.attackerItem = attacker.item;\n  }\n  return bpMods;\n}\n\nexport function calculateAttackSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false\n) {\n  let attack: number;\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  const atkSourceTeraType = attackSource.isTera ? attackSource.teraType : undefined;\n  if (move.named('Photon Geyser', 'Light That Burns The Sky') ||\n      (move.named('Tera Blast') && atkSourceTeraType)) {\n    move.category = attackSource.stats.atk > attackSource.stats.spa ? 'Physical' : 'Special';\n  }\n  const attackStat =\n    move.named('Shell Side Arm') &&\n    getShellSideArmCategory(attacker, defender) === 'Physical'\n      ? 'atk'\n      : move.named('Body Press')\n        ? 'def'\n        : move.category === 'Special'\n          ? 'spa'\n          : 'atk';\n  desc.attackEVs =\n    move.named('Foul Play')\n      ? getEVDescriptionText(gen, defender, attackStat, defender.nature)\n      : getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n\n  if (attackSource.boosts[attackStat] === 0 ||\n      (isCritical && attackSource.boosts[attackStat] < 0)) {\n    attack = attackSource.rawStats[attackStat];\n  } else if (defender.hasAbility('Unaware')) {\n    attack = attackSource.rawStats[attackStat];\n    desc.defenderAbility = defender.ability;\n  } else {\n    attack = attackSource.stats[attackStat];\n    desc.attackBoost = attackSource.boosts[attackStat];\n  }\n\n  // unlike all other attack modifiers, Hustle gets applied directly\n  if (attacker.hasAbility('Hustle') && move.category === 'Physical') {\n    attack = pokeRound((attack * 3) / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const atMods = calculateAtModsSMSSSV(gen, attacker, defender, move, field, desc);\n  attack = OF16(Math.max(1, pokeRound((attack * chainMods(atMods, 410, 131072)) / 4096)));\n  return attack;\n}\n\nexport function calculateAtModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc\n) {\n  const atMods = [];\n\n  // Slow Start also halves damage with special Z-moves\n  if ((attacker.hasAbility('Slow Start') && attacker.abilityOn &&\n       (move.category === 'Physical' || (move.category === 'Special' && move.isZ))) ||\n      (attacker.hasAbility('Defeatist') && attacker.curHP() <= attacker.maxHP() / 2)\n  ) {\n    atMods.push(2048);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Solar Power') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Special') ||\n    (attacker.named('Cherrim') &&\n     attacker.hasAbility('Flower Gift') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Physical') ||\n    // Gorilla Tactics has no effect during Dynamax (Anubis)\n    (attacker.hasAbility('Gorilla Tactics') && move.category === 'Physical' &&\n     !attacker.isDynamaxed)) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.attackerSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    move.category === 'Physical') {\n    atMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (attacker.hasAbility('Guts') && attacker.status && move.category === 'Physical') ||\n    (attacker.curHP() <= attacker.maxHP() / 3 &&\n      ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n       (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n       (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n       (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n    (move.category === 'Special' && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    atMods.push(6144);\n    desc.attackerAbility = 'Flash Fire';\n  } else if (\n    (attacker.hasAbility('Steelworker') && move.hasType('Steel')) ||\n    (attacker.hasAbility('Dragon\\'s Maw') && move.hasType('Dragon')) ||\n    (attacker.hasAbility('Transistor') && move.hasType('Electric')) ||\n    (attacker.hasAbility('Rocky Payload') && move.hasType('Rock'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Stakeout') && attacker.abilityOn) {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Water Bubble') && move.hasType('Water')) ||\n    (attacker.hasAbility('Huge Power', 'Pure Power') && move.category === 'Physical')\n  ) {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((defender.hasAbility('Thick Fat') && move.hasType('Fire', 'Ice')) ||\n      (defender.hasAbility('Water Bubble') && move.hasType('Fire')) ||\n     (defender.hasAbility('Purifying Salt') && move.hasType('Ghost'))) {\n    atMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const isTabletsOfRuinActive = defender.hasAbility('Tablets of Ruin') || field.isTabletsOfRuin;\n  const isVesselOfRuinActive = defender.hasAbility('Vessel of Ruin') || field.isVesselOfRuin;\n  if (\n    (isTabletsOfRuinActive && move.category === 'Physical') ||\n    (isVesselOfRuinActive && move.category === 'Special')\n  ) {\n    if (defender.hasAbility('Tablets of Ruin') || defender.hasAbility('Vessel of Ruin')) {\n      desc.defenderAbility = defender.ability;\n    } else {\n      desc[move.category === 'Special' ? 'isVesselOfRuin' : 'isTabletsOfRuin'] = true;\n    }\n    atMods.push(3072);\n  }\n\n  if (\n    (isQPActive(attacker, field))\n  ) {\n    if (\n      (move.category === 'Physical' && getQPBoostedStat(attacker) === 'atk') ||\n      (move.category === 'Special' && getQPBoostedStat(attacker) === 'spa')\n    ) {\n      atMods.push(5325);\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (\n    (attacker.hasAbility('Hadron Engine') && move.category === 'Special' &&\n      field.hasTerrain('Electric') && isGrounded(attacker, field)) ||\n    (attacker.hasAbility('Orichalcum Pulse') && move.category === 'Physical' &&\n      field.hasWeather('Sun', 'Harsh Sunshine') && !attacker.hasItem('Utility Umbrella'))\n  ) {\n    atMods.push(5461);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((attacker.hasItem('Thick Club') &&\n       attacker.named('Cubone', 'Marowak', 'Marowak-Alola', 'Marowak-Alola-Totem') &&\n       move.category === 'Physical') ||\n      (attacker.hasItem('Deep Sea Tooth') &&\n       attacker.named('Clamperl') &&\n       move.category === 'Special') ||\n      (attacker.hasItem('Light Ball') && attacker.name.includes('Pikachu') && !move.isZ)\n  ) {\n    atMods.push(8192);\n    desc.attackerItem = attacker.item;\n    // Choice Band/Scarf/Specs move lock and stat boosts are ignored during Dynamax (Anubis)\n  } else if (!move.isZ && !move.isMax &&\n    ((attacker.hasItem('Choice Band') && move.category === 'Physical') ||\n      (attacker.hasItem('Choice Specs') && move.category === 'Special'))\n  ) {\n    atMods.push(6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (field.attackerSide.isAtkCheered && !move.named('Body Press') && !move.named('Foul Play')) {\n    atMods.push(6144);\n    desc.isAtkCheered = true;\n  }\n\n  if (move.named('Foul Play') && field.defenderSide.isAtkCheered) {\n    atMods.push(6144);\n    desc.isAtkCheered = true;\n  }\n\n  if (move.named('Body Press') && field.attackerSide.isDefCheered) {\n    atMods.push(6144);\n    desc.isDefCheeredBodyPress = true;\n  }\n\n  return atMods;\n}\n\nexport function calculateDefenseSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false\n) {\n  let defense: number;\n  const hitsPhysical = move.overrideDefensiveStat === 'def' || move.category === 'Physical' ||\n    (move.named('Shell Side Arm') && getShellSideArmCategory(attacker, defender) === 'Physical');\n  const defenseStat = hitsPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  if (defender.boosts[defenseStat] === 0 ||\n      (isCritical && defender.boosts[defenseStat] > 0) ||\n      move.ignoreDefensive) {\n    defense = defender.rawStats[defenseStat];\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = defender.rawStats[defenseStat];\n    desc.attackerAbility = attacker.ability;\n  } else {\n    defense = defender.stats[defenseStat];\n    desc.defenseBoost = defender.boosts[defenseStat];\n  }\n\n  // unlike all other defense modifiers, Sandstorm SpD boost gets applied directly\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n  if (field.hasWeather('Snow') && defender.hasType('Ice') && hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n\n  const dfMods = calculateDfModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    isCritical,\n    hitsPhysical\n  );\n\n  return OF16(Math.max(1, pokeRound((defense * chainMods(dfMods, 410, 131072)) / 4096)));\n}\n\nexport function calculateDfModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false,\n  hitsPhysical = false\n) {\n  const dfMods = [];\n  if (defender.hasAbility('Marvel Scale') && defender.status && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    defender.named('Cherrim') &&\n    defender.hasAbility('Flower Gift') &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.defenderSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical) {\n    dfMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  } else if (\n    defender.hasAbility('Grass Pelt') &&\n    field.hasTerrain('Grassy') &&\n    hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Fur Coat') && hitsPhysical) {\n    dfMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const isSwordOfRuinActive = attacker.hasAbility('Sword of Ruin') || field.isSwordOfRuin;\n  const isBeadsOfRuinActive = attacker.hasAbility('Beads of Ruin') || field.isBeadsOfRuin;\n  if (\n    (isSwordOfRuinActive && hitsPhysical) ||\n    (isBeadsOfRuinActive && !hitsPhysical)\n  ) {\n    if (attacker.hasAbility('Sword of Ruin') || attacker.hasAbility('Beads of Ruin')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      desc[hitsPhysical ? 'isSwordOfRuin' : 'isBeadsOfRuin'] = true;\n    }\n    dfMods.push(3072);\n  }\n\n  if (\n    (isQPActive(defender, field))\n  ) {\n    if (\n      (hitsPhysical && getQPBoostedStat(defender) === 'def') ||\n      (!hitsPhysical && getQPBoostedStat(defender) === 'spd')\n    ) {\n      desc.defenderAbility = defender.ability;\n      dfMods.push(5324);\n    }\n  }\n\n  if ((defender.hasItem('Eviolite') && gen.species.get(toID(defender.name))?.nfe) ||\n      (!hitsPhysical && defender.hasItem('Assault Vest'))) {\n    dfMods.push(6144);\n    desc.defenderItem = defender.item;\n  } else if (\n    (defender.hasItem('Metal Powder') && defender.named('Ditto') && hitsPhysical) ||\n    (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !hitsPhysical)\n  ) {\n    dfMods.push(8192);\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.defenderSide.isDefCheered){\n    dfMods.push(6144);\n    desc.isDefCheered = true;\n  }\n\n  return dfMods;\n}\n\nexport function calculateFinalModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false,\n  typeEffectiveness: number\n) {\n  const finalMods = [];\n\n  if (field.defenderSide.isReflect && move.category === 'Physical' &&\n      !isCritical && !field.defenderSide.isAuroraVeil) {\n    // doesn't stack with Aurora Veil\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isReflect = true;\n  } else if (\n    field.defenderSide.isLightScreen && move.category === 'Special' &&\n    !isCritical && !field.defenderSide.isAuroraVeil\n  ) {\n    // doesn't stack with Aurora Veil\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isLightScreen = true;\n  }\n  if (field.defenderSide.isAuroraVeil && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isAuroraVeil = true;\n  }\n\n  if (attacker.hasAbility('Neuroforce') && typeEffectiveness > 1) {\n    finalMods.push(5120);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Sniper') && isCritical) {\n    finalMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    finalMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.isDynamaxed && move.named('Dynamax Cannon', 'Behemoth Blade', 'Behemoth Bash')) {\n    finalMods.push(8192);\n  }\n\n  if (defender.hasAbility('Multiscale', 'Shadow Shield') &&\n      defender.curHP() === defender.maxHP() &&\n      (!field.defenderSide.isSR && (!field.defenderSide.spikes || defender.hasType('Flying')) ||\n      defender.hasItem('Heavy-Duty Boots')) && !attacker.hasAbility('Parental Bond (Child)')\n  ) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (defender.hasAbility('Fluffy') && move.flags.contact && !attacker.hasAbility('Long Reach')) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    (defender.hasAbility('Punk Rock') && move.flags.sound) ||\n    (defender.hasAbility('Ice Scales') && move.category === 'Special')\n  ) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (defender.hasAbility('Solid Rock', 'Filter', 'Prism Armor') && typeEffectiveness > 1) {\n    finalMods.push(3072);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (field.defenderSide.isFriendGuard) {\n    finalMods.push(3072);\n    desc.isFriendGuard = true;\n  }\n\n  if (field.defenderSide.friendGuards > 0) {\n    for(var i = 0; i < field.defenderSide.friendGuards; ++i){\n        finalMods.push(3072);\n    }\n    desc.friendGuards = field.defenderSide.friendGuards;\n  }\n\n  if (defender.hasAbility('Fluffy') && move.hasType('Fire')) {\n    finalMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1 && !move.isZ) {\n    finalMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Life Orb')) {\n    finalMods.push(5324);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Metronome') && move.timesUsedWithMetronome! >= 1) {\n    const timesUsedWithMetronome = Math.floor(move.timesUsedWithMetronome!);\n    if (timesUsedWithMetronome <= 4) {\n      finalMods.push(4096 + timesUsedWithMetronome * 819);\n    } else {\n      finalMods.push(8192);\n    }\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.hasType(getBerryResistType(defender.item)) &&\n      (typeEffectiveness > 1 || move.hasType('Normal')) &&\n      !attacker.hasAbility('Unnerve', 'As One (Glastrier)', 'As One (Spectrier)')) {\n    if (defender.hasAbility('Ripen')) {\n      finalMods.push(1024);\n    } else {\n      finalMods.push(2048);\n    }\n    desc.defenderItem = defender.item;\n  }\n\n  return finalMods;\n}\n\nfunction hasTerrainSeed(pokemon: Pokemon) {\n  return pokemon.hasItem('Electric Seed', 'Misty Seed', 'Grassy Seed', 'Psychic Seed');\n}\n","import {Field} from './field';\nimport {Generation} from './data/interface';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\nimport {Result} from './result';\n\nimport {calculateRBYGSC} from './mechanics/gen12';\nimport {calculateADV} from './mechanics/gen3';\nimport {calculateDPP} from './mechanics/gen4';\nimport {calculateBWXY} from './mechanics/gen56';\nimport {calculateSMSSSV} from './mechanics/gen789';\n\nconst MECHANICS = [\n  () => {},\n  calculateRBYGSC,\n  calculateRBYGSC,\n  calculateADV,\n  calculateDPP,\n  calculateBWXY,\n  calculateBWXY,\n  calculateSMSSSV,\n  calculateSMSSSV,\n  calculateSMSSSV,\n];\n\nexport function calculate(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field?: Field,\n) {\n  return MECHANICS[gen.num](\n    gen,\n    attacker.clone(),\n    defender.clone(),\n    move.clone(),\n    field ? field.clone() : new Field()\n  ) as Result;\n}\n","import {Generation} from '../data/interface';\nimport {getItemBoostType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Pokemon} from '../pokemon';\nimport {Move} from '../move';\nimport {Field} from '../field';\nimport {Result} from '../result';\nimport {\n  getModifiedStat,\n  getEVDescriptionText,\n  getFinalSpeed,\n  getMoveEffectiveness,\n  checkAirLock,\n  checkForecast,\n  checkIntimidate,\n  handleFixedDamageMoves,\n} from './util';\n\nexport function calculateADV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n  defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (move.named('Weather Ball')) {\n    move.type =\n      field.hasWeather('Sun') ? 'Fire'\n      : field.hasWeather('Rain') ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail') ? 'Ice'\n      : 'Normal';\n    move.category = move.type === 'Rock' ? 'Physical' : 'Special';\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n    desc.moveBP = move.bp;\n  }\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n  const type1Effectiveness = getMoveEffectiveness(\n    gen,\n    move,\n    firstDefenderType,\n    field.defenderSide.isForesight\n  );\n  const type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, field.defenderSide.isForesight)\n    : 1;\n  const typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((defender.hasAbility('Flash Fire') && move.hasType('Fire')) ||\n      (defender.hasAbility('Levitate') && move.hasType('Ground')) ||\n      (defender.hasAbility('Volt Absorb') && move.hasType('Electric')) ||\n      (defender.hasAbility('Water Absorb') && move.hasType('Water')) ||\n      (defender.hasAbility('Wonder Guard') && !move.hasType('???') && typeEffectiveness <= 1) ||\n      (defender.hasAbility('Soundproof') && move.flags.sound)\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    result.damage = fixedDamage;\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  let bp = move.bp;\n  switch (move.name) {\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    bp = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = bp;\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    bp = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = bp;\n    break;\n  case 'Low Kick':\n    const w = defender.weightkg;\n    bp = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = bp;\n    break;\n  case 'Facade':\n    if (attacker.hasStatus('par', 'psn', 'tox', 'brn')) {\n      bp = move.bp * 2;\n      desc.moveBP = bp;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Physical';\n    bp = 60;\n    desc.moveName = 'Swift';\n    break;\n  default:\n    bp = move.bp;\n  }\n\n  if (bp === 0) {\n    return result;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  desc.attackEVs = getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n\n  let at = attacker.rawStats[attackStat];\n  let df = defender.rawStats[defenseStat];\n\n  if (isPhysical && attacker.hasAbility('Huge Power', 'Pure Power')) {\n    at *= 2;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (!attacker.hasItem('Sea Incense') && move.hasType(getItemBoostType(attacker.item))) {\n    at = Math.floor(at * 1.1);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Sea Incense') && move.hasType('Water')) {\n    at = Math.floor(at * 1.05);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (isPhysical && attacker.hasItem('Choice Band')) ||\n    (!isPhysical && attacker.hasItem('Soul Dew') && attacker.named('Latios', 'Latias'))\n  ) {\n    at = Math.floor(at * 1.5);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (!isPhysical && attacker.hasItem('Deep Sea Tooth') && attacker.named('Clamperl')) ||\n    (!isPhysical && attacker.hasItem('Light Ball') && attacker.named('Pikachu')) ||\n    (isPhysical && attacker.hasItem('Thick Club') && attacker.named('Cubone', 'Marowak'))\n  ) {\n    at *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  if (!isPhysical && defender.hasItem('Soul Dew') && defender.named('Latios', 'Latias')) {\n    df = Math.floor(df * 1.5);\n    desc.defenderItem = defender.item;\n  } else if (\n    (!isPhysical && defender.hasItem('Deep Sea Scale') && defender.named('Clamperl')) ||\n    (isPhysical && defender.hasItem('Metal Powder') && defender.named('Ditto'))\n  ) {\n    df *= 2;\n    desc.defenderItem = defender.item;\n  }\n\n  if (defender.hasAbility('Thick Fat') && (move.hasType('Fire', 'Ice'))) {\n    at = Math.floor(at / 2);\n    desc.defenderAbility = defender.ability;\n  } else if (isPhysical && defender.hasAbility('Marvel Scale') && defender.status) {\n    df = Math.floor(df * 1.5);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((isPhysical &&\n        (attacker.hasAbility('Hustle') || (attacker.hasAbility('Guts') && attacker.status))) ||\n      (!isPhysical && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    at = Math.floor(at * 1.5);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.curHP() <= attacker.maxHP() / 3 &&\n    ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n     (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n     (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n     (attacker.hasAbility('Swarm') && move.hasType('Bug')))\n  ) {\n    bp = Math.floor(bp * 1.5);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (move.named('Explosion', 'Self-Destruct')) {\n    df = Math.floor(df / 2);\n  }\n\n  const isCritical = move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor');\n\n  const attackBoost = attacker.boosts[attackStat];\n  const defenseBoost = defender.boosts[defenseStat];\n  if (attackBoost > 0 || (!isCritical && attackBoost < 0)) {\n    at = getModifiedStat(at, attackBoost);\n    desc.attackBoost = attackBoost;\n  }\n  if (defenseBoost < 0 || (!isCritical && defenseBoost > 0)) {\n    df = getModifiedStat(df, defenseBoost);\n    desc.defenseBoost = defenseBoost;\n  }\n\n  const lv = attacker.level;\n  let baseDamage = Math.floor(Math.floor((Math.floor((2 * lv) / 5 + 2) * at * bp) / df) / 50);\n\n  if (attacker.hasStatus('brn') && isPhysical && !attacker.hasAbility('Guts')) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.isBurned = true;\n  }\n\n  if (!isCritical) {\n    const screenMultiplier = field.gameType !== 'Singles' ? 2 / 3 : 1 / 2;\n    if (isPhysical && field.defenderSide.isReflect) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isLightScreen = true;\n    }\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    baseDamage = Math.floor(baseDamage * 2);\n    desc.isSwitching = 'out';\n  }\n\n  if (field.gameType !== 'Singles' && move.target === 'allAdjacentFoes') {\n    baseDamage = Math.floor(baseDamage / 2);\n  }\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire')) ||\n    (move.named('Solar Beam') && field.hasWeather('Rain', 'Sand', 'Hail'))\n  ) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.weather = field.weather;\n  }\n\n  if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.attackerAbility = 'Flash Fire';\n  }\n\n  baseDamage = (move.category === 'Physical' ? Math.max(1, baseDamage) : baseDamage) + 2;\n\n  if (isCritical) {\n    baseDamage *= 2;\n    desc.isCritical = true;\n  }\n\n  if (move.named('Weather Ball') && field.weather) {\n    baseDamage *= 2;\n    desc.moveBP = bp * 2;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.isHelpingHand = true;\n  }\n\n  if (move.hasType(...attacker.types)) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n  }\n\n  baseDamage = Math.floor(baseDamage * typeEffectiveness);\n  result.damage = [];\n  for (let i = 85; i <= 100; i++) {\n    result.damage[i - 85] = Math.max(1, Math.floor((baseDamage * i) / 100));\n  }\n\n  return result;\n}\n","import * as I from './data/interface';\nimport {Stats} from './stats';\nimport {toID, extend, assignWithout} from './util';\nimport {State} from './state';\n\nconst STATS = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'] as I.StatID[];\nconst SPC = new Set(['spc']);\n\n\nexport class Pokemon implements State.Pokemon {\n  gen: I.Generation;\n  name: I.SpeciesName;\n  species: I.Specie;\n\n  types: [I.TypeName] | [I.TypeName, I.TypeName] | [I.TypeName, I.TypeName, I.TypeName];\n  weightkg: number;\n\n  level: number;\n  bossMultiplier: number;\n  statMultipliers: I.StatsTable;\n  gender?: I.GenderName;\n  ability?: I.AbilityName;\n  abilityOn?: boolean;\n  isDynamaxed?: boolean;\n  dynamaxLevel?: number;\n  isSaltCure?: boolean;\n  alliesFainted?: number;\n  boostedStat?: I.StatIDExceptHP | 'auto';\n  item?: I.ItemName;\n  teraType?: I.TypeName;\n  isTera: boolean;\n  shieldData?: State.ShieldData;\n  shieldActive?: boolean;\n  isQP? : boolean;\n  usedBoosterEnergy?: boolean;\n  isIngrain?: boolean;\n\n  nature: I.NatureName;\n  ivs: I.StatsTable;\n  evs: I.StatsTable;\n  boosts: I.StatsTable;\n  randomBoosts: number;\n  rawStats: I.StatsTable;\n  stats: I.StatsTable;\n\n  originalCurHP: number;\n  status: I.StatusName | '';\n  volatileStatus: string[];\n  isChoiceLocked: boolean;\n  toxicCounter: number;\n  hitsTaken: number;\n  changedTypes?: [I.TypeName] | [I.TypeName, I.TypeName] | [I.TypeName, I.TypeName, I.TypeName];\n\n  moves: I.MoveName[];\n\n  constructor(\n    gen: I.Generation,\n    name: string,\n    options: Partial<State.Pokemon> & {\n      curHP?: number;\n      ivs?: Partial<I.StatsTable> & {spc?: number};\n      evs?: Partial<I.StatsTable> & {spc?: number};\n      boosts?: Partial<I.StatsTable> & {spc?: number};\n      statMultipliers?: Partial<I.StatsTable> & {spc?: number};\n    } = {}\n  ) {\n    this.species = extend(true, {}, gen.species.get(toID(name)), options.overrides);\n\n    this.gen = gen;\n    this.name = options.name || name as I.SpeciesName;\n    this.types = options.changedTypes || this.species.types;\n    this.weightkg = this.species.weightkg;\n\n    this.level = options.level || 100;\n    this.bossMultiplier = options.bossMultiplier || 100;\n    this.statMultipliers = Pokemon.withDefault(gen, options.statMultipliers, 1);\n\n    this.gender = options.gender || this.species.gender || 'M';\n    this.ability = options.ability || this.species.abilities?.[0] || undefined;\n    this.abilityOn = !!options.abilityOn;\n\n    this.isDynamaxed = !!options.isDynamaxed;\n    this.dynamaxLevel = this.isDynamaxed\n      ? (options.dynamaxLevel === undefined ? 10 : options.dynamaxLevel) : undefined;\n    this.isSaltCure = !!options.isSaltCure;\n    this.alliesFainted = options.alliesFainted;\n    this.boostedStat = options.boostedStat;\n    this.usedBoosterEnergy = options.usedBoosterEnergy;\n    this.isIngrain = options.isIngrain;\n    this.teraType = options.teraType;\n    this.isTera = !!options.isTera;\n    this.shieldData = options.shieldData;\n    this.shieldActive = options.shieldActive;\n    this.item = options.item;\n    this.nature = options.nature || ('Serious' as I.NatureName);\n    this.ivs = Pokemon.withDefault(gen, options.ivs, 31);\n    this.evs = Pokemon.withDefault(gen, options.evs, gen.num >= 3 ? 0 : 252);\n    this.boosts = Pokemon.withDefault(gen, options.boosts, 0, false);\n    this.randomBoosts = options.randomBoosts || 0;\n\n    // Gigantamax 'forms' inherit weight from their base species when not dynamaxed\n    // TODO: clean this up with proper Gigantamax support\n    if (this.weightkg === 0 && !this.isDynamaxed && this.species.baseSpecies) {\n      this.weightkg = gen.species.get(toID(this.species.baseSpecies))!.weightkg;\n    }\n\n    if (gen.num < 3) {\n      this.ivs.hp = Stats.DVToIV(\n        Stats.getHPDV({\n          atk: this.ivs.atk,\n          def: this.ivs.def,\n          spe: this.ivs.spe,\n          spc: this.ivs.spa,\n        })\n      );\n    }\n\n    this.rawStats = {} as I.StatsTable;\n    this.stats = {} as I.StatsTable;\n    for (const stat of STATS) {\n      const val = this.calcStat(gen, stat);\n      this.rawStats[stat] = stat === \"hp\" ? ~~val*this.bossMultiplier/100 : val;\n      this.stats[stat] =  stat === \"hp\" ? ~~val*this.bossMultiplier/100 : val;\n    }\n\n    const curHP = options.curHP || options.originalCurHP;\n    this.originalCurHP = curHP && curHP <= this.rawStats.hp ? curHP : curHP === 0 ? 0 : this.rawStats.hp;\n    this.status = options.status || '';\n    this.volatileStatus = options.volatileStatus || [];\n    this.isChoiceLocked = options.isChoiceLocked || false;\n    this.toxicCounter = options.toxicCounter || 0;\n    this.hitsTaken = options.hitsTaken || 0;\n    this.changedTypes = options.changedTypes;\n    this.moves = options.moves || [];\n  }\n\n  maxHP(original = false) {\n    // Shedinja still has 1 max HP during the effect even if its Dynamax Level is maxed (DaWoblefet)\n    if (!original && this.isDynamaxed && this.species.baseStats.hp !== 1) {\n      return Math.floor((this.rawStats.hp * (150 + 5 * this.dynamaxLevel!)) / 100);\n    }\n\n    return this.rawStats.hp;\n  }\n\n  curHP(original = false) {\n    // Shedinja still has 1 max HP during the effect even if its Dynamax Level is maxed (DaWoblefet)\n    if (!original && this.isDynamaxed && this.species.baseStats.hp !== 1) {\n      return Math.ceil((this.originalCurHP * (150 + 5 * this.dynamaxLevel!)) / 100);\n    }\n\n    return this.originalCurHP;\n  }\n\n  hasAbility(...abilities: string[]) {\n    return !!(this.ability && abilities.includes(this.ability));\n  }\n\n  hasItem(...items: string[]) {\n    return !!(this.item && items.includes(this.item));\n  }\n\n  hasStatus(...statuses: I.StatusName[]) {\n    return !!(this.status && statuses.includes(this.status));\n  }\n\n  hasType(...types: I.TypeName[]) {\n    for (const type of types) {\n      if (this.teraType ? this.teraType === type : this.types.includes(type)) return true;\n    }\n    return false;\n  }\n\n  /** Ignores Tera type */\n  hasOriginalType(...types: I.TypeName[]) {\n    for (const type of types) {\n      if (this.types.includes(type)) return true;\n    }\n    return false;\n  }\n\n  named(...names: string[]) {\n    return names.includes(this.name);\n  }\n\n  clone() {\n    return new Pokemon(this.gen, this.name, {\n      level: this.level,\n      bossMultiplier: this.bossMultiplier,\n      statMultipliers: this.statMultipliers,\n      ability: this.ability,\n      abilityOn: this.abilityOn,\n      isDynamaxed: this.isDynamaxed,\n      dynamaxLevel: this.dynamaxLevel,\n      isSaltCure: this.isSaltCure,\n      alliesFainted: this.alliesFainted,\n      boostedStat: this.boostedStat,\n      usedBoosterEnergy: this.usedBoosterEnergy,\n      isIngrain: this.isIngrain,\n      item: this.item,\n      gender: this.gender,\n      nature: this.nature,\n      ivs: extend(true, {}, this.ivs),\n      evs: extend(true, {}, this.evs),\n      boosts: extend(true, {}, this.boosts),\n      randomBoosts: this.randomBoosts,\n      originalCurHP: this.originalCurHP,\n      status: this.status,\n      volatileStatus: this.volatileStatus,\n      isChoiceLocked: this.isChoiceLocked,\n      teraType: this.teraType,\n      isTera: this.isTera,\n      shieldData: this.shieldData,\n      shieldActive: this.shieldActive,\n      toxicCounter: this.toxicCounter,\n      hitsTaken: this.hitsTaken,\n      changedTypes: this.changedTypes,\n      moves: this.moves.slice(),\n      overrides: this.species,\n    });\n  }\n\n  private calcStat(gen: I.Generation, stat: I.StatID) {\n    return Math.floor(this.statMultipliers[stat]! * Stats.calcStat(\n      gen,\n      stat,\n      this.species.baseStats[stat]!,\n      this.ivs[stat]!,\n      this.evs[stat]!,\n      this.level,\n      this.nature\n    ));\n  }\n\n  static getForme(\n    gen: I.Generation,\n    speciesName: string,\n    item?: I.ItemName,\n    moveName?: I.MoveName\n  ) {\n    const species = gen.species.get(toID(speciesName));\n    if (!species?.otherFormes) {\n      return speciesName;\n    }\n\n    let i = 0;\n    if (\n      (item &&\n        ((item.includes('ite') && !item.includes('ite Y')) ||\n          (speciesName === 'Groudon' && item === 'Red Orb') ||\n          (speciesName === 'Kyogre' && item === 'Blue Orb'))) ||\n      (moveName && speciesName === 'Meloetta' && moveName === 'Relic Song') ||\n      (speciesName === 'Rayquaza' && moveName === 'Dragon Ascent')\n    ) {\n      i = 1;\n    } else if (item?.includes('ite Y')) {\n      i = 2;\n    }\n\n    return i ? species.otherFormes[i - 1] : species.name;\n  }\n\n  private static withDefault(\n    gen: I.Generation,\n    current: Partial<I.StatsTable> & {spc?: number} | undefined,\n    val: number,\n    match = true,\n  ) {\n    const cur: Partial<I.StatsTable> = {};\n    if (current) {\n      assignWithout(cur, current, SPC);\n      if (current.spc) {\n        cur.spa = current.spc;\n        cur.spd = current.spc;\n      }\n      if (match && gen.num <= 2 && current.spa !== current.spd) {\n        throw new Error('Special Attack and Special Defense must match before Gen 3');\n      }\n    }\n    return {hp: val, atk: val, def: val, spa: val, spd: val, spe: val, ...cur};\n  }\n}\n","import * as I from './data/interface';\nimport {State} from './state';\nimport {toID, extend} from './util';\n\nconst SPECIAL = ['Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon'];\n\nexport class Move implements State.Move {\n  gen: I.Generation;\n  name: I.MoveName;\n\n  originalName: string;\n  ability?: I.AbilityName;\n  item?: I.ItemName;\n  species?: I.SpeciesName;\n  useZ?: boolean;\n  useMax?: boolean;\n  overrides?: Partial<I.Move>;\n\n  hits: number;\n  timesUsed?: number;\n  timesUsedWithMetronome?: number;\n  bp: number;\n  type: I.TypeName;\n  category: I.MoveCategory;\n  flags: I.MoveFlags;\n  secondaries: any;\n  target: I.MoveTarget;\n  recoil?: [number, number];\n  hasCrashDamage: boolean;\n  mindBlownRecoil: boolean;\n  struggleRecoil: boolean;\n  isCrit: boolean;\n  drain?: [number, number];\n  priority: number;\n  dropsStats?: number;\n  ignoreDefensive: boolean;\n  overrideOffensiveStat?: I.StatIDExceptHP;\n  overrideDefensiveStat?: I.StatIDExceptHP;\n  overrideOffensivePokemon?: 'target' | 'source';\n  overrideDefensivePokemon?: 'target' | 'source';\n  breaksProtect: boolean;\n  isZ: boolean;\n  isMax: boolean;\n\n  constructor(\n    gen: I.Generation,\n    name: string,\n    options: Partial<State.Move> & {\n      ability?: I.AbilityName;\n      item?: I.ItemName;\n      species?: I.SpeciesName;\n    } = {}\n  ) {\n    name = options.name || name;\n    this.originalName = name;\n    let data: I.Move = extend(true, {name}, gen.moves.get(toID(name)), options.overrides);\n\n    this.hits = 1;\n    // If isZMove but there isn't a corresponding z-move, use the original move\n    if (options.useMax && data.maxMove) {\n      const maxMoveName: string = getMaxMoveName(\n        data.type,\n        options.species,\n        !!(data.category === 'Status'),\n        options.ability\n      );\n      const maxMove = gen.moves.get(toID(maxMoveName));\n      const maxPower = () => {\n        if (['G-Max Drum Solo', 'G-Max Fire Ball', 'G-Max Hydrosnipe'].includes(maxMoveName)) {\n          return 160;\n        }\n        // TODO: checking basePower === 10 is fragile (what if the maxMove's basePower is\n        // overridden?) and also fails for Max Flare, which is strangely 100 BP in the game data\n        if (maxMove!.basePower === 10 || maxMoveName === 'Max Flare') {\n          return data.maxMove!.basePower;\n        }\n        return maxMove!.basePower;\n      };\n      data = extend(true, {}, maxMove, {\n        name: maxMoveName,\n        basePower: maxPower(),\n        category: data.category,\n      });\n    }\n    if (options.useZ && data.zMove?.basePower) {\n      const zMoveName: string = getZMoveName(data.name, data.type, options.item);\n      const zMove = gen.moves.get(toID(zMoveName));\n      data = extend(true, {}, zMove, {\n        name: zMoveName,\n        basePower: zMove!.basePower === 1 ? data.zMove.basePower : zMove!.basePower,\n        category: data.category,\n      });\n    } else {\n      if (data.multihit) {\n        if (typeof data.multihit === 'number') {\n          this.hits = data.multihit;\n        } else if (options.hits) {\n          this.hits = options.hits;\n        } else {\n          this.hits = (options.ability === 'Skill Link')\n            ? data.multihit[1]\n            : data.multihit[0] + 1;\n        }\n      }\n      this.timesUsedWithMetronome = options.timesUsedWithMetronome;\n    }\n    this.gen = gen;\n    this.name = data.name;\n    this.ability = options.ability;\n    this.item = options.item;\n    this.useZ = options.useZ;\n    this.useMax = options.useMax;\n    this.overrides = options.overrides;\n    this.species = options.species;\n\n    this.bp = data.basePower;\n    // These moves have a type, but the damage they deal is typeless so we override it\n    const typelessDamage =\n      (gen.num >= 2 && data.id === 'struggle') ||\n      (gen.num <= 4 && ['futuresight', 'doomdesire'].includes(data.id));\n    this.type = typelessDamage ? '???' : data.type;\n    this.category = data.category ||\n      (gen.num < 4 ? (SPECIAL.includes(data.type) ? 'Special' : 'Physical') : 'Status');\n\n    const stat = this.category === 'Special' ? 'spa' : 'atk';\n    if (data.self?.boosts && data.self.boosts[stat] && data.self.boosts[stat]! < 0) {\n      this.dropsStats = Math.abs(data.self.boosts[stat]!);\n    }\n    this.timesUsed = (this.dropsStats && options.timesUsed) || 1;\n    this.secondaries = data.secondaries;\n    // For the purposes of the damage formula only 'allAdjacent' and 'allAdjacentFoes' matter, so we\n    // simply default to 'any' for the others even though they may not actually be 'any'-target\n    this.target = data.target || 'any';\n    this.recoil = data.recoil;\n    this.hasCrashDamage = !!data.hasCrashDamage;\n    this.mindBlownRecoil = !!data.mindBlownRecoil;\n    this.struggleRecoil = !!data.struggleRecoil;\n    this.isCrit = !!options.isCrit || !!data.willCrit ||\n      // These don't *always* crit (255/256 chance), but for the purposes of the calc they do\n      gen.num === 1 && ['crabhammer', 'razorleaf', 'slash', 'karate chop'].includes(data.id);\n    this.drain = data.drain;\n    this.flags = data.flags;\n    // The calc doesn't currently care about negative priority moves so we simply default to 0\n    this.priority = data.priority || 0;\n\n    this.ignoreDefensive = !!data.ignoreDefensive;\n    this.overrideOffensiveStat = data.overrideOffensiveStat;\n    this.overrideDefensiveStat = data.overrideDefensiveStat;\n    this.overrideOffensivePokemon = data.overrideOffensivePokemon;\n    this.overrideDefensivePokemon = data.overrideDefensivePokemon;\n    this.breaksProtect = !!data.breaksProtect;\n    this.isZ = !!data.isZ;\n    this.isMax = !!data.isMax;\n\n    if (!this.bp) {\n      // Assume max happiness for these moves because the calc doesn't support happiness\n      if (['return', 'frustration', 'pikapapow', 'veeveevolley'].includes(data.id)) {\n        this.bp = 102;\n      }\n    }\n  }\n\n  named(...names: string[]) {\n    return names.includes(this.name);\n  }\n\n  hasType(...types: Array<(I.TypeName | undefined)>) {\n    return types.includes(this.type);\n  }\n\n  clone() {\n    return new Move(this.gen, this.originalName, {\n      ability: this.ability,\n      item: this.item,\n      species: this.species,\n      useZ: this.useZ,\n      useMax: this.useMax,\n      isCrit: this.isCrit,\n      hits: this.hits,\n      timesUsed: this.timesUsed,\n      timesUsedWithMetronome: this.timesUsedWithMetronome,\n      overrides: this.overrides,\n    });\n  }\n}\n\nexport function getZMoveName(moveName: string, moveType: I.TypeName, item?: string) {\n  item = item || '';\n  if (moveName.includes('Hidden Power')) return 'Breakneck Blitz';\n  if (moveName === 'Clanging Scales' && item === 'Kommonium Z') return 'Clangorous Soulblaze';\n  if (moveName === 'Darkest Lariat' && item === 'Incinium Z') return 'Malicious Moonsault';\n  if (moveName === 'Giga Impact' && item === 'Snorlium Z') return 'Pulverizing Pancake';\n  if (moveName === 'Moongeist Beam' && item === 'Lunalium Z') return 'Menacing Moonraze Maelstrom';\n  if (moveName === 'Photon Geyser' && item === 'Ultranecrozium Z') {\n    return 'Light That Burns the Sky';\n  }\n  if (moveName === 'Play Rough' && item === 'Mimikium Z') return 'Let\\'s Snuggle Forever';\n  if (moveName === 'Psychic' && item === 'Mewnium Z') return 'Genesis Supernova';\n  if (moveName === 'Sparkling Aria' && item === 'Primarium Z') return 'Oceanic Operetta';\n  if (moveName === 'Spectral Thief' && item === 'Marshadium Z') {\n    return 'Soul-Stealing 7-Star Strike';\n  }\n  if (moveName === 'Spirit Shackle' && item === 'Decidium Z') return 'Sinister Arrow Raid';\n  if (moveName === 'Stone Edge' && item === 'Lycanium Z') return 'Splintered Stormshards';\n  if (moveName === 'Sunsteel Strike' && item === 'Solganium Z') return 'Searing Sunraze Smash';\n  if (moveName === 'Volt Tackle' && item === 'Pikanium Z') return 'Catastropika';\n  if (moveName === 'Nature\\'s Madness' && item === 'Tapunium Z') return 'Guardian of Alola';\n  if (moveName === 'Thunderbolt') {\n    if (item === 'Aloraichium Z') return 'Stoked Sparksurfer';\n    if (item === 'Pikashunium Z') return '10,000,000 Volt Thunderbolt';\n  }\n  return ZMOVES_TYPING[moveType]!;\n}\n\nconst ZMOVES_TYPING: {\n  [type in I.TypeName]?: string;\n} = {\n  Bug: 'Savage Spin-Out',\n  Dark: 'Black Hole Eclipse',\n  Dragon: 'Devastating Drake',\n  Electric: 'Gigavolt Havoc',\n  Fairy: 'Twinkle Tackle',\n  Fighting: 'All-Out Pummeling',\n  Fire: 'Inferno Overdrive',\n  Flying: 'Supersonic Skystrike',\n  Ghost: 'Never-Ending Nightmare',\n  Grass: 'Bloom Doom',\n  Ground: 'Tectonic Rage',\n  Ice: 'Subzero Slammer',\n  Normal: 'Breakneck Blitz',\n  Poison: 'Acid Downpour',\n  Psychic: 'Shattered Psyche',\n  Rock: 'Continental Crush',\n  Steel: 'Corkscrew Crash',\n  Water: 'Hydro Vortex',\n};\n\nexport function getMaxMoveName(\n  moveType: I.TypeName,\n  pokemonSpecies?: string,\n  isStatus?: boolean,\n  pokemonAbility?: string\n) {\n  if (isStatus) return 'Max Guard';\n  if (pokemonAbility === 'Normalize') return 'Max Strike';\n  if (moveType === 'Fire') {\n    if (pokemonSpecies === 'Charizard-Gmax') return 'G-Max Wildfire';\n    if (pokemonSpecies === 'Centiskorch-Gmax') return 'G-Max Centiferno';\n    if (pokemonSpecies === 'Cinderace-Gmax') return 'G-Max Fire Ball';\n  }\n  if (moveType === 'Normal') {\n    if (pokemonSpecies === 'Eevee-Gmax') return 'G-Max Cuddle';\n    if (pokemonSpecies === 'Meowth-Gmax') return 'G-Max Gold Rush';\n    if (pokemonSpecies === 'Snorlax-Gmax') return 'G-Max Replenish';\n    if (pokemonAbility === 'Pixilate') return 'Max Starfall';\n    if (pokemonAbility === 'Aerilate') return 'Max Airstream';\n    if (pokemonAbility === 'Refrigerate') return 'Max Hailstorm';\n    if (pokemonAbility === 'Galvanize') return 'Max Lightning';\n  }\n  if (moveType === 'Fairy') {\n    if (pokemonSpecies === 'Alcremie-Gmax') return 'G-Max Finale';\n    if (pokemonSpecies === 'Hatterene-Gmax') return 'G-Max Smite';\n  }\n  if (moveType === 'Steel') {\n    if (pokemonSpecies === 'Copperajah-Gmax') return 'G-Max Steelsurge';\n    if (pokemonSpecies === 'Melmetal-Gmax') return 'G-Max Meltdown';\n  }\n  if (moveType === 'Electric') {\n    if (pokemonSpecies === 'Pikachu-Gmax') return 'G-Max Volt Crash';\n    if (pokemonSpecies?.startsWith('Toxtricity') &&\n      pokemonSpecies?.endsWith('Gmax')) return 'G-Max Stun Shock';\n  }\n  if (moveType === 'Grass') {\n    if (pokemonSpecies === 'Appletun-Gmax') return 'G-Max Sweetness';\n    if (pokemonSpecies === 'Flapple-Gmax') return 'G-Max Tartness';\n    if (pokemonSpecies === 'Rillaboom-Gmax') return 'G-Max Drum Solo';\n    if (pokemonSpecies === 'Venusaur-Gmax') return 'G-Max Vine Lash';\n  }\n  if (moveType === 'Water') {\n    if (pokemonSpecies === 'Blastoise-Gmax') return 'G-Max Cannonade';\n    if (pokemonSpecies === 'Drednaw-Gmax') return 'G-Max Stonesurge';\n    if (pokemonSpecies === 'Inteleon-Gmax') return 'G-Max Hydrosnipe';\n    if (pokemonSpecies === 'Kingler-Gmax') return 'G-Max Foam Burst';\n    if (pokemonSpecies === 'Urshifu-Rapid-Strike-Gmax') return 'G-Max Rapid Flow';\n  }\n  if (moveType === 'Dark') {\n    if (pokemonSpecies === 'Grimmsnarl-Gmax') return 'G-Max Snooze';\n    if (pokemonSpecies === 'Urshifu-Gmax') return 'G-Max One Blow';\n  }\n  if (moveType === 'Poison' && pokemonSpecies === 'Garbodor-Gmax') return 'G-Max Malodor';\n  if (moveType === 'Fighting' && pokemonSpecies === 'Machamp-Gmax') return 'G-Max Chi Strike';\n  if (moveType === 'Ghost' && pokemonSpecies === 'Gengar-Gmax') return 'G-Max Terror';\n  if (moveType === 'Ice' && pokemonSpecies === 'Lapras-Gmax') return 'G-Max Resonance';\n  if (moveType === 'Flying' && pokemonSpecies === 'Corviknight-Gmax') return 'G-Max Wind Rage';\n  if (moveType === 'Dragon' && pokemonSpecies === 'Duraludon-Gmax') return 'G-Max Depletion';\n  if (moveType === 'Psychic' && pokemonSpecies === 'Orbeetle-Gmax') return 'G-Max Gravitas';\n  if (moveType === 'Rock' && pokemonSpecies === 'Coalossal-Gmax') return 'G-Max Volcalith';\n  if (moveType === 'Ground' && pokemonSpecies === 'Sandaconda-Gmax') return 'G-Max Sandblast';\n  if (moveType === 'Dark' && pokemonSpecies === 'Grimmsnarl-Gmax') return 'G-Max Snooze';\n  return 'Max ' + MAXMOVES_TYPING[moveType];\n}\n\nconst MAXMOVES_TYPING: {\n  [type in I.TypeName]?: string;\n} = {\n  Bug: 'Flutterby',\n  Dark: 'Darkness',\n  Dragon: 'Wyrmwind',\n  Electric: 'Lightning',\n  Fairy: 'Starfall',\n  Fighting: 'Knuckle',\n  Fire: 'Flare',\n  Flying: 'Airstream',\n  Ghost: 'Phantasm',\n  Grass: 'Overgrowth',\n  Ground: 'Quake',\n  Ice: 'Hailstorm',\n  Normal: 'Strike',\n  Poison: 'Ooze',\n  Psychic: 'Mindstorm',\n  Rock: 'Rockfall',\n  Steel: 'Steelspike',\n  Water: 'Geyser',\n};\n","import * as I from './data/interface';\n\nexport namespace State {\n\n  export type ShieldData  = {\n    hpTrigger: number;\n    timeTrigger: number;\n    shieldCancelDamage: number;\n    shieldDamageRate: number;\n    shieldDamageRateTera: number;\n    shieldDamageRateTeraChange: number;\n  }\n\n  export interface Pokemon {\n    name: I.SpeciesName;\n    level?: number;\n    bossMultiplier?: number;\n    statMultipliers?: I.StatsTable;\n    ability?: I.AbilityName;\n    abilityOn?: boolean;\n    isDynamaxed?: boolean;\n    dynamaxLevel?: number;\n    isSaltCure?: boolean;\n    alliesFainted?: number;\n    boostedStat?: I.StatIDExceptHP | 'auto';\n    usedBoosterEnergy?: boolean;\n    isIngrain?: boolean;\n    item?: I.ItemName;\n    gender?: I.GenderName;\n    nature?: I.NatureName;\n    ivs?: Partial<I.StatsTable>;\n    evs?: Partial<I.StatsTable>;\n    boosts?: Partial<I.StatsTable>;\n    randomBoosts?: number;\n    originalCurHP?: number;\n    status?: I.StatusName | '';\n    volatileStatus?: string[];\n    isChoiceLocked?: boolean;\n    teraType?: I.TypeName;\n    isTera?: boolean;\n    shieldData?: ShieldData;\n    shieldActive?: boolean;\n    toxicCounter?: number;\n    hitsTaken?: number;\n    changedTypes?: [I.TypeName] | [I.TypeName, I.TypeName] | [I.TypeName, I.TypeName, I.TypeName];\n    moves?: I.MoveName[];\n    overrides?: Partial<I.Specie>;\n  }\n\n  export interface Move {\n    name: I.MoveName;\n    useZ?: boolean;\n    useMax?: boolean;\n    isCrit?: boolean;\n    hits?: number;\n    timesUsed?: number;\n    timesUsedWithMetronome?: number;\n    overrides?: Partial<I.Move>;\n  }\n\n  export interface Field {\n    gameType: I.GameType;\n    weather?: I.Weather;\n    weatherTurnsRemaining?: number;\n    terrain?: I.Terrain;\n    terrainTurnsRemaining?: number;\n    isMagicRoom?: number;       // # turns remaining\n    isWonderRoom?: number;      // # turns remaining\n    isGravity?: number;         // # turns remaining\n    isAuraBreak?: boolean;\n    isFairyAura?: boolean;\n    isDarkAura?: boolean;\n    isBeadsOfRuin?: boolean;\n    isSwordOfRuin?: boolean;\n    isTabletsOfRuin?: boolean;\n    isVesselOfRuin?: boolean;\n    isTrickRoom?: number;       // # turns remaining\n    isCloudNine?: boolean;\n    attackerSide: Side;\n    defenderSide: Side;\n  }\n\n  export interface Side {\n    spikes?: number;\n    steelsurge?: boolean;\n    vinelash?: boolean;\n    wildfire?: boolean;\n    cannonade?: boolean;\n    volcalith?: boolean;\n    isSR?: boolean;\n    isReflect?: number;         // # turns remaining\n    isLightScreen?: number;     // # turns remaining\n    isDefCheered?: number;      // # turns remaining\n    isProtected?: boolean;\n    isWideGuard?: boolean;\n    isQuickGuard?: boolean;\n    isSeeded?: boolean;\n    isForesight?: boolean;\n    isTailwind?: number;        // # turns remaining\n    isHelpingHand?: boolean;\n    isAtkCheered?: number;      // # turns remaining\n    isFlowerGift?: boolean;\n    isFriendGuard?: boolean;\n    friendGuards?: number;\n    isAuroraVeil?: number;      // # turns remaining\n    isBattery?: boolean;\n    isPowerSpot?: boolean;\n    powerSpots?: number;\n    steelySpirits?: number;\n    isSwitching?: 'out' | 'in';\n    isCharged?: boolean;\n    isMist?: number;            // # turns remaining\n    isSafeguard?: number;       // # turns remaining\n    isAromaVeil?: boolean;\n  }\n}\n","// When using this library in the browser, a bundler like Webpack should be\n// used to encapsulate the various interdependencies between internal packages.\n// However, if you are requiring contents of this package in HTML <script>\n// tags, the following loading order is required:\n//\n//   - util.js\n//   - stats.js\n//\n//   - data/species.js\n//   - data/types.js\n//   - data/natures.js\n//   - data/abilities.js\n//   - data/moves.js\n//   - data/items.js\n//   - data/index.js\n//\n//   - pokemon.js\n//   - field.js\n//   - move.js\n//   - items.js\n//\n//   - mechanics/util.js\n//   - mechanics/gen78.js\n//   - mechanics/gen56.js\n//   - mechanics/gen4.js\n//   - mechanics/gen3.js\n//   - mechanics/gen12.js\n//\n//   - calc.js\n//   - desc.js\n//   - result.ts\n//\n//   - adaptable.js\n//   - index.js\n//\n// Furthermore, before anything is loaded, the following is required:\n//\n// <script type=\"text/javascript\">\n//\t\tvar calc = exports = {};\n//\t\tfunction require() { return exports; };\n//\t</script>\n\n// If we're not being used as a module we're just going to rely on globals and\n// that the correct loading order being followed.\n\nimport {Generations} from './data';\nimport {State} from './state';\nimport * as I from './data/interface';\nimport * as A from './adaptable';\n\nexport function calculate(\n  gen: I.GenerationNum | I.Generation,\n  attacker: A.Pokemon,\n  defender: A.Pokemon,\n  move: A.Move,\n  field?: A.Field\n): A.Result {\n  return (A.calculate)(\n    typeof gen === 'number' ? Generations.get(gen) : gen,\n    attacker,\n    defender,\n    move,\n    field\n  );\n}\n\nexport class Move extends A.Move {\n  constructor(\n    gen: I.GenerationNum | I.Generation,\n    name: string,\n    options: Partial<Omit<State.Move, 'ability' | 'item' | 'species'>> & {\n      ability?: string;\n      item?: string;\n      species?: string;\n    } = {}\n  ) {\n    super(typeof gen === 'number' ? Generations.get(gen) : gen, name, options as any);\n  }\n}\n\nexport class Pokemon extends A.Pokemon {\n  constructor(\n    gen: I.GenerationNum | I.Generation,\n    name: string,\n    options: Partial<Omit<State.Pokemon, 'ability' | 'item' | 'nature' | 'moves'>> & {\n      ability?: string;\n      item?: string;\n      nature?: string;\n      moves?: string[];\n      curHP?: number;\n      ivs?: Partial<I.StatsTable> & {spc?: number};\n      evs?: Partial<I.StatsTable> & {spc?: number};\n      boosts?: Partial<I.StatsTable> & {spc?: number};\n    } = {}\n  ) {\n    super(typeof gen === 'number' ? Generations.get(gen) : gen, name, options as any);\n  }\n\n  static getForme(\n    gen: I.GenerationNum | I.Generation,\n    speciesName: string,\n    item?: string,\n    moveName?: string\n  ) {\n    return A.Pokemon.getForme(\n      typeof gen === 'number' ? Generations.get(gen) : gen,\n      speciesName,\n      item as I.ItemName,\n      moveName as I.MoveName\n    );\n  }\n}\n\nexport function calcStat(\n  gen: I.GenerationNum | I.Generation,\n  stat: I.StatID | 'spc',\n  base: number,\n  iv: number,\n  ev: number,\n  level: number,\n  nature?: string\n) {\n  return A.Stats.calcStat(\n    typeof gen === 'number' ? Generations.get(gen) : gen,\n    stat === 'spc' ? 'spa' : stat,\n    base,\n    iv,\n    ev,\n    level,\n    nature\n  );\n}\n\nexport {Field, Side} from './field';\nexport {Result} from './result';\nexport type {GenerationNum, StatsTable, StatID} from './data/interface';\nexport {Generations} from './data/index';\nexport {toID} from './util';\nexport {State} from './state';\n\nexport {ABILITIES} from './data/abilities';\nexport {ITEMS, MEGA_STONES} from './data/items';\nexport {MOVES} from './data/moves';\nexport {SPECIES} from './data/species';\nexport {NATURES} from './data/natures';\nexport {TYPE_CHART} from './data/types';\nexport {STATS, Stats} from './stats';\n","import { Move, Field, Pokemon, Generations } from \"../calc\";\nimport { AilmentName, RaidTurnInfo } from \"./interface\";\nimport { Raider } from \"./Raider\";\nimport { StatusName, AbilityName, ItemName, StatIDExceptHP } from \"../calc/data/interface\";\nimport { getMoveEffectiveness, isGrounded } from \"../calc/mechanics/util\";\nimport { get } from \"http\";\n\nconst gen = Generations.get(9);\n\n// next time I prepare the move data, I should eliminate the need for translation\nexport function ailmentToStatus(ailment: AilmentName): StatusName | \"\" {\n    if (ailment === \"paralysis\") { return \"par\"; }\n    if (ailment === \"poison\") { return \"psn\"; }\n    if (ailment === \"burn\") { return \"brn\"; }\n    if (ailment === \"freeze\") { return \"frz\"; }\n    if (ailment === \"sleep\") { return \"slp\"; }\n    if (ailment === \"toxic\") { return \"tox\"; }\n    return \"\"\n}\n\nexport function hasNoStatus(pokemon: Pokemon) {\n    return pokemon.status === \"\" || pokemon.status === undefined;\n}\n\n// See ../calc/mechanics/util.ts for the original\nexport function isSuperEffective(move: Move, field: Field, attacker: Pokemon, defender: Pokemon) {\n    if (!move.type) {return false; }\n    const isGhostRevealed =\n    attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n    const isRingTarget =\n      defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n    const type1Effectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      defender.types[0],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n    const type2Effectiveness = defender.types[1]\n      ? getMoveEffectiveness(\n        gen,\n        move,\n        defender.types[1],\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      )\n      : 1;\n    const type3Effectiveness = defender.types[2]\n      ? getMoveEffectiveness(\n        gen,\n        move,\n        defender.types[2],\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      ) : 1;\n      \n    let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n  \n    if (defender.isTera && defender.teraType) {\n      typeEffectiveness = getMoveEffectiveness(\n        gen,\n        move,\n        defender.teraType,\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      );\n    }\n  \n    if (typeEffectiveness === 0 && move.hasType('Ground') &&\n      defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n      typeEffectiveness = 1;\n    }\n  \n    if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n      typeEffectiveness = 1;\n    }\n    return typeEffectiveness >= 2;\n}\n\nexport function pokemonIsGrounded(pokemon: Raider, field: Field) {\n    let grounded = isGrounded(pokemon, field);\n    if (pokemon.lastMove) { grounded = grounded || pokemon.lastMove.name === \"Roost\"; }\n    // TO DO: Ingrain, Smack Down\n    return grounded;\n}\n\nexport function getBoostCoefficient(pokemon: Pokemon) {\n    const hasSimple = pokemon.ability === \"Simple\";\n    const hasContrary = pokemon.ability === \"Contrary\";\n    return hasSimple ? 2 : hasContrary ? -1 : 1;\n}\n\nexport function safeStatStage(value: number) {\n    return Math.max(-6, Math.min(6, value));\n}\n\n// Speed modifiers\n\nexport function modifyPokemonSpeedByStatus(speed: number, status?: string, ability?: AbilityName) {\n    return status === \"par\" && ability !== \"Quick Feet\" ? speed * .5 : speed;\n}\n\nexport function modifyPokemonSpeedByItem(speed : number, item?: ItemName) {\n    switch(item) {\n        case \"Choice Scarf\":\n            return speed * 1.5;\n        case \"Iron Ball\":\n        case \"Macho Brace\":\n        case \"Power Anklet\":\n        case \"Power Band\":\n        case \"Power Belt\":\n        case \"Power Bracer\":\n        case \"Power Lens\":\n        case \"Power Weight\":\n            return speed * .5;\n        case \"Lagging Tail\":\n        case \"Full Incense\":\n            return 0;\n        // TODO: Quick Powder doubles the speed of untransformed Ditto\n        default:\n            return speed;\n    }\n}\n\nexport function modifyPokemonSpeedByAbility(speed: number, ability?: AbilityName, abilityOn?: boolean, status?: string) {\n    switch(ability) {\n        case \"Unburden\":\n            return abilityOn ? speed * 2 : speed;\n        case \"Slow Start\":\n            return abilityOn ? speed * .5 : speed;\n        case \"Quick Feet\":\n            return status ? speed * 1.5 : speed;\n        default:\n            return speed;\n    }\n}\n\nexport function modifyPokemonSpeedByQP(speed: number, field: Field, ability?: AbilityName, item?: ItemName, qpBoostedStat?: StatIDExceptHP) {\n    return qpBoostedStat === \"spe\" ? speed * 1.5 : speed;\n}\n\nexport function modifyPokemonSpeedByField(speed: number, field: Field, ability?: AbilityName) {\n    if (\n        ability === \"Chlorophyll\" && field.weather?.includes(\"Sun\") ||\n        ability === \"Sand Rush\" && field.weather?.includes(\"Sand\") ||\n        ability === \"Slush Rush\" && field.weather?.includes(\"Snow\") ||\n        ability === \"Swift Swim\" && field.weather?.includes(\"Rain\") ||\n        ability === \"Surge Surfer\" && field.terrain?.includes(\"Electric\")\n    ) {\n        speed *= 2;\n    }\n    if (field.attackerSide.isTailwind) {\n        speed *= 2;\n    }\n    return speed;\n}\n\n// no idea if this should go here\nexport function getGroupedTurnIDs(turns: RaidTurnInfo[]) {\n    const displayGroups: number[][] = [];\n    let currentGroupIndex = -1;\n    let currentGroupID: number | undefined = -1;\n    turns.forEach((t, index) => {\n        const g = t.group;\n        if (g === undefined || g !== currentGroupID) {\n            currentGroupIndex += 1;\n            displayGroups.push([index]);\n        } else {\n            displayGroups[currentGroupIndex].push(index);\n        }\n        currentGroupID = g;\n    });\n    return displayGroups;\n}\n\nexport function getGroupedTurns(turns: RaidTurnInfo[]) {\n    const groupedTurnIDs = getGroupedTurnIDs(turns);\n    const groupedTurns = groupedTurnIDs.map(indicesArray => indicesArray.map(index => turns[index]));\n    return groupedTurns;\n}","import { Move, Field, StatsTable, Generations, calculate} from \"../calc\";\nimport { getEndOfTurn } from \"../calc/desc\";\nimport { MoveData, RaidMoveOptions } from \"./interface\";\nimport { RaidState } from \"./RaidState\";\nimport { Raider } from \"./Raider\";\nimport { AbilityName, StatIDExceptHP } from \"../calc/data/interface\";\nimport { getQPBoostedStat, isGrounded } from \"../calc/mechanics/util\";\nimport { isSuperEffective, safeStatStage, pokemonIsGrounded, ailmentToStatus, hasNoStatus } from \"./util\";\nimport persistentAbilities from \"../data/persistent_abilities.json\"\nimport bypassProtectMoves from \"../data/bypass_protect_moves.json\"\n\nexport type RaidMoveResult= {\n    state: RaidState;\n    userID: number;\n    targetID: number;\n    damage: number[];\n    drain: number[];\n    healing: number[];\n    eot: ({damage: number, texts: string[]} | undefined)[];\n    desc: string[];\n    flags: string[][];\n    causesFlinch: boolean[];\n}\n\n// we'll always use generation 9\nconst gen = Generations.get(9);\nconst dummyMove = new Move(gen, \"Splash\");\n\nexport class RaidMove {\n    move: Move;\n    moveData: MoveData;\n    raidState: RaidState;\n    userID: number;     // the id of the user of this move\n    targetID: number;   // the id of the target of this move\n    raiderID: number;   // the id of the raider who initiated this round\n    movesFirst: boolean;\n    options: RaidMoveOptions;\n    hits: number;\n    flinch?: boolean;\n\n    _raidState!: RaidState;\n    _raiders!: Raider[];\n    _user!: Raider;\n    _affectedIDs!: number[];\n    _fields!: Field[];\n\n    _doesNotAffect!: (string | undefined)[];\n    _causesFlinch!: boolean[];\n    _blockedBy!: string[];\n\n    _flingItem?: string;\n\n    _damage!: number[];\n    _healing!: number[];\n    _drain!: number[];\n    _eot!: ({damage: number, texts: string[]} | undefined)[];\n\n    _desc!: string[];\n    _flags!: string[][];\n\n    constructor(moveData: MoveData, move: Move, raidState: RaidState, userID: number, targetID: number, raiderID: number, movesFirst: boolean,  raidMoveOptions?: RaidMoveOptions, flinch?: boolean) {\n        this.move = move;\n        this.moveData = moveData;\n        this.raidState = raidState;\n        this.userID = userID;\n        this.targetID = targetID;\n        this.raiderID = raiderID;\n        this.movesFirst = movesFirst;\n        this.options = raidMoveOptions || {};\n        this.flinch = flinch || false;\n        this.hits = this.move.category === \"Status\" ? 0 : Math.max(this.moveData.minHits || 1, Math.min(this.moveData.maxHits || 1, this.options.hits || 1));\n        this.hits = this.raidState.raiders[this.userID].ability === \"Skill Link\" ? (this.moveData.maxHits || 1) : this.hits;\n    }\n\n    public result(): RaidMoveResult {\n        this.setOutputRaidState();\n        if (this._user.originalCurHP === 0) {\n            const output = this.output;\n            return output;\n        }\n        this._raidState.raiders[0].checkShield(); // check for shield activation\n        this.setAffectedPokemon();\n        if (this.flinch) {\n            this._desc[this.userID] = this._user.name + \" flinched!\";\n        } else {\n            this.setDoesNotEffect();\n            this.checkProtection();\n            this.applyProtection();\n            this.applyDamage();\n            this.applyDrain();\n            this.applyHealing();\n            this.applySelfDamage();\n            this.applyFlinch();\n            this.applyStatChanges();\n            this.applyAilment();\n            this.applyFieldChanges();\n            this.applyUniqueMoveEffects();\n        }\n        this.setEndOfTurnDamage();\n        this.applyEndOfTurnDamage();\n        this.applyEndOfMoveItemEffects();       \n        this._raidState.raiders[0].checkShield(); // check for shield breaking \n        this.setFlags();\n        // store move data and target\n        if (![\n                \"(No Move)\", \n                \"Attack Cheer\",\n                \"Defense Cheer\", \n                \"Heal Cheer\", \n                \"Remove Negative Effects\", \n                \"Clear Boosts / Abilities\",\n            ].includes(this.moveData.name)) { // don't store cheers or (No Move) for Instruct/Mimic/Copycat\n            this._user.lastMove = this.moveData;\n        }\n        this._user.lastTarget = this.moveData.target === \"user\" ? this.userID : this.targetID;\n        return this.output;\n    }\n\n    public get output(): RaidMoveResult {\n        return {\n            state: this._raidState,\n            userID: this.userID,\n            targetID: this.targetID,\n            damage: this._damage,\n            drain: this._drain,\n            healing: this._healing,\n            eot: this._eot,\n            desc: this._desc,\n            flags: this._flags,\n            causesFlinch: this._causesFlinch,\n        }\n    }\n\n    private setOutputRaidState() {\n        this._raidState = this.raidState.clone();\n        this._raiders = this._raidState.raiders;\n        this._fields = this._raidState.fields;\n        this._user = this._raiders[this.userID];\n\n        // initialize arrays\n        this._doesNotAffect = [undefined, undefined, undefined, undefined, undefined];\n        this._causesFlinch = [false, false, false, false, false];\n        this._damage = [0,0,0,0,0];\n        this._drain = [0,0,0,0,0];\n        this._healing = [0,0,0,0,0];\n        this._eot = [undefined, undefined, undefined, undefined];\n        this._desc = ['','','','',''];\n        this._flags=[[],[],[],[],[]];\n    }\n\n    private setAffectedPokemon() {\n        const targetType = this.moveData.target;\n        if (this.moveData.name === \"Heal Cheer\") { this._affectedIDs = [1,2,3,4]; }\n        else if (targetType === \"user\") { this._affectedIDs = [this.userID]; }\n        else if (targetType === \"selected-pokemon\" || targetType === \"all-opponents\") { this._affectedIDs = [this.targetID]; }\n        else if (targetType === \"all-allies\") { this._affectedIDs = [1,2,3,4].splice(this.userID, 1); }\n        else if (targetType === \"user-and-allies\") { this._affectedIDs = [1,2,3,4]; }\n        else { this._affectedIDs = [this.targetID]; }\n    }\n\n    private setDoesNotEffect() {\n        this._blockedBy= [\"\", \"\", \"\", \"\", \"\"];\n        const moveType = this.move.type;\n        const category = this.move.category;\n        const targetType = this.moveData.target\n        const moveName = this.move.name;\n        for (let id of this._affectedIDs) {\n            const pokemon = this.getPokemon(id);\n            const field = pokemon.field;\n            // Terrain-based failure\n            if (field.hasTerrain(\"Psychic\") && pokemonIsGrounded(pokemon, field) && this.move.priority > 0) {\n                this._doesNotAffect[id] = \"blocked by Psychic Terrain\";\n                continue;\n            }\n            // Ability-based immunities\n            if (this._user.ability !== \"Mold Breaker\") {\n                if (pokemon.ability === \"Good As Gold\" && category === \"Status\" && targetType !== \"user\") { \n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name + \" due to \" + pokemon.ability;\n                    continue; \n                }\n                if ([\"Dry Skin\", \"Water Absorb\"].includes(pokemon.ability || \"\") && moveType === \"Water\") { \n                    this._doesNotAffect[id] = \"heals \" + pokemon.name + \" due to \" + pokemon.ability; \n                    this._healing[id] = Math.floor(pokemon.maxHP() * 0.25);\n                    continue;\n                }\n                if (pokemon.ability === \"Volt Absorb\" && moveType === \"Electric\") { \n                    this._doesNotAffect[id] = \"heals \" + pokemon.name + \" due to \" + pokemon.ability; \n                    this._healing[id] = Math.floor(pokemon.maxHP() * 0.25);\n                    continue;\n                }\n                if (pokemon.ability === \"Earth Eater\" && moveType === \"Ground\") {\n                    this._doesNotAffect[id] = \"heals \" + pokemon.name + \" due to \" + pokemon.ability; \n                    this._healing[id] = Math.floor(pokemon.maxHP() * 0.25);\n                    continue;\n                }\n                if (pokemon.ability === \"Flash Fire\" && moveType === \"Fire\") { \n                    this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                    const boost = {spa: 1};\n                    this._raidState.applyStatChange(id, boost);\n                    continue;\n                }\n                if (pokemon.ability === \"Well-Baked Body\") {\n                    this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                    const boost = {def: 2};\n                    this._raidState.applyStatChange(id, boost);\n                    continue;\n                }\n                if (pokemon.ability === \"Sap Sipper\" && moveType === \"Grass\") {\n                    this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                    const boost = {atk: 1};\n                    this._raidState.applyStatChange(id, boost);\n                    continue;\n                }\n                if (pokemon.ability === \"Motor Drive\" && moveType === \"Electric\") {\n                    this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                    const boost = {spe: 1};\n                    this._raidState.applyStatChange(id, boost);\n                    continue;\n                }\n                if (pokemon.ability === \"Storm Drain\" && moveType === \"Water\") {\n                    this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                    const boost = {spa: 1};\n                    this._raidState.applyStatChange(id, boost);\n                    continue;\n                }\n                if (pokemon.ability === \"Lightning Rod\" && moveType === \"Electric\") {\n                    this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                    const boost = {spa: 1};\n                    this._raidState.applyStatChange(id, boost);\n                    continue;\n                }\n                if (pokemon.ability === \"Bulletproof\" && \n                    [   \"Acid Spray\",\n                        \"Aura Sphere\",\n                        \"Barrage\",\n                        \"Beak Blast\",\n                        \"Bullet Seed\",\n                        \"Egg Bomb\",\n                        \"Electro Ball\",\n                        \"Energy Ball\",\n                        \"Focus Blast\",\n                        \"Gyro Ball\",\n                        \"Ice Ball\",\n                        \"Magnet Bomb\",\n                        \"Mist Ball\",\n                        \"Mud Bomb\",\n                        \"Octazooka\",\n                        \"Pollen Puff\",\n                        \"Pyro Ball\",\n                        \"Rock Blast\",\n                        \"Rock Wrecker\",\n                        \"Searing Shot\",\n                        \"Seed Bomb\",\n                        \"Shadow Ball\",\n                        \"Sludge Bomb\",\n                        \"Weather Ball\",\n                        \"Zap Cannon\"\n                    ].includes(moveName)) \n                {\n                    this._doesNotAffect[id] = \"blocked by Bulletproof\";\n                    continue;\n                }\n                if (pokemon.ability === \"Levitate\" && !pokemonIsGrounded(pokemon, field) && moveType === \"Ground\") { \n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name + \" due to \" + pokemon.ability;\n                    continue;\n                }\n            }\n            // Type-based immunities\n            if (category !== \"Status\" && pokemon.item !== \"Ring Target\") {\n                if (moveType === \"Ground\" && !pokemonIsGrounded(pokemon, field)) { \n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (moveType === \"Electric\" && pokemon.types.includes(\"Ground\")) { \n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name; \n                    continue;\n                }\n                if ([\"Normal\", \"Fighting\"].includes(moveType || \"\") && pokemon.types.includes(\"Ghost\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (moveType === \"Ghost\" && pokemon.types.includes(\"Normal\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (moveType === \"Dragon\" && pokemon.types.includes(\"Fairy\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (moveType === \"Psychic\" && pokemon.types.includes(\"Dark\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n            }\n            if (moveName === \"Thunder Wave\" && pokemon.types.includes(\"Ground\") && pokemon.item !== \"Ring Target\") {\n                this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                continue;\n            }\n            if ((moveName.includes(\"Powder\") || moveName.includes(\"Spore\") && moveName !== \"Powder Snow\") && (pokemon.types.includes(\"Grass\") || pokemon.item === \"Safety Goggles\")) {\n                this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                continue;\n            }\n            if (id !== this.userID && this._user.ability === \"Prankster\" && category === \"Status\" && pokemon.types.includes(\"Dark\")) {\n                this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                continue;\n            }\n        }\n    }\n\n    private checkProtection() {\n        if (!bypassProtectMoves.includes(this.moveData.name)){\n            for (let id of this._affectedIDs) {\n                if (!this._doesNotAffect[id]) {\n                    const pokemon = this.getPokemon(id);\n                    const field = pokemon.field;\n                    if (field.attackerSide.isProtected) {\n                        this._blockedBy[id] = pokemon.lastMove!.name;\n                    } else if (field.attackerSide.isWideGuard && [\"all-pokemon\", \"all-other-pokemon\", \"all-opponents\"].includes(this.moveData.target || \"\")) {\n                        this._blockedBy[id] = \"Wide Guard\";\n                    } else if (field.attackerSide.isQuickGuard && (this.moveData.priority || 0) > 0) {\n                        this._blockedBy[id] = \"Quick Guard\";\n                    }\n                }\n            }\n        }\n    }\n\n    private applyProtection() {\n        const moveName = this.moveData.name;\n        if ([\"Protect\", \"Detect\", \"Spiky Shield\", \"Baneful Bunker\"].includes(moveName)) {\n            this._fields[this.userID].attackerSide.isProtected = true;\n        } else if (moveName === \"Wide Guard\")  {\n            if (this.userID === 0) {\n                this._fields[0].attackerSide.isWideGuard = true;\n            } else{\n                for (let i=1; i<5; i++)  {\n                    this._fields[i].attackerSide.isWideGuard = true;\n                }\n            }\n        } else if (moveName === \"Quick Guard\") {\n            if (this.userID === 0) {\n                this._fields[0].attackerSide.isQuickGuard = true;\n            } else{\n                for (let i=1; i<5; i++)  {\n                    this._fields[i].attackerSide.isQuickGuard = true;\n                }\n            }\n        }\n    }\n\n    private getMoveField(atkID:number, defID: number) {\n        const moveField = this._raidState.fields[atkID].clone();\n        moveField.defenderSide = this._raidState.fields[defID].attackerSide.clone();\n        return moveField;\n    }\n\n    private getPokemon(id: number) {\n        return this._raiders[id];\n    }\n\n    private applyDamage() {\n        const moveUser = this.getPokemon(this.userID);\n        if ((this._fields[this.userID].terrain === \"Electric\" && moveUser.ability === \"Quark Drive\")  ||\n            (this._fields[this.userID].weather === \"Sun\" && moveUser.ability === \"Protosynthesis\")\n        ) {\n            moveUser.abilityOn = true;\n            const qpStat = getQPBoostedStat(moveUser) as StatIDExceptHP;\n            moveUser.boostedStat = qpStat;\n        }\n        let hasCausedDamage = false;\n        for (let id of this._affectedIDs) {\n            if (this._doesNotAffect[id]) {\n                this._desc[id] = this.move.name + \" \" + this._doesNotAffect[id] + \"!\";\n            } else if (this._blockedBy[id] !== \"\")  {\n                this._desc[id] = this.move.name + \" was blocked by \" + this._blockedBy[id] + \"!\";\n            } else {\n                try {\n                    const target = this.getPokemon(id);\n                    const crit = this.options.crit || false;\n                    const roll = this.options.roll || \"avg\";\n                    const superEffective = isSuperEffective(this.move, target.field, this._user, target);\n                    let results = [];\n                    let damageResult: number | number[] | undefined = undefined;\n                    let totalDamage = 0;\n                    // calculate each hit from a multi-hit move\n                    for (let i=0; i<this.hits; i++) { \n                        const calcMove = this.move.clone();\n                        calcMove.hits = 1;\n                        calcMove.isCrit = crit;\n                        // handle moves that are affected by repeated use\n                        if (this._user.lastMove && (this.moveData.name === this._user.lastMove.name)) {\n                            this._user.moveRepeated = (this._user.moveRepeated || 0) + 1;\n                            calcMove.timesUsed = this._user.moveRepeated;\n                        } else {\n                            this._user.moveRepeated = 0;\n                        }\n                        calcMove.timesUsed = (this._user.moveRepeated || 0) + 1;\n                        if (this._user.item === \"Metronome\") {\n                            calcMove.timesUsedWithMetronome = calcMove.timesUsed;\n                        }\n                        // get calc result\n                        const moveField = this.getMoveField(this.userID, id);\n                        const result = calculate(9, moveUser, target, calcMove, moveField);\n                        results.push(result);\n                        if (damageResult === undefined) {\n                            // @ts-ignore\n                            damageResult = result.damage;\n                        } else if (typeof(damageResult) === \"number\") {\n                            damageResult = (damageResult as number) + (result.damage as number);\n                        } else {\n                            damageResult = (damageResult as number[]).map((val, i) => val + (result.damage as number[])[i]);\n                        }\n                        let hitDamage = 0;\n                        if (typeof(result.damage) === \"number\") {\n                            hitDamage = result.damage as number;\n                        } else {\n                            //@ts-ignore\n                            hitDamage = roll === \"max\" ? result.damage[result.damage.length-1] : roll === \"min\" ? result.damage[0] : result.damage[Math.floor(result.damage.length/2)];\n                        }\n                        this._raidState.applyDamage(id, hitDamage, 1, this.move.isCrit, superEffective, this.move.type);\n                        totalDamage += hitDamage;\n                    }\n                    // prepare desc from results\n                    const result = results[0];\n                    result.damage = damageResult as number | number[];\n                    result.rawDesc.hits = this.hits > 1 ? this.hits : undefined;\n                    this._damage[id] = totalDamage;\n                    this._desc[id] = result.desc();\n                    // for Fling / Symbiosis interactions, the Flinger should lose their item before the target recieves damage\n                    if (this.moveData.name === \"Fling\" && this._user.item) {\n                        this._flingItem = moveUser.item;\n                        this._raidState.loseItem(this.userID);\n                    }\n                    if (totalDamage > 0) {\n                        hasCausedDamage = true;\n                    }\n                } catch {\n                    this._desc[id] = this._user.name + \" \" + this.move.name + \" vs. \" + this.getPokemon(id).name ; // temporary fix\n                }\n            }\n        }\n        if (this.moveData.category?.includes(\"damage\")) {\n            this._fields[this.userID].attackerSide.isHelpingHand = false;\n            if (this.move.type === \"Electric\") { this._fields[this.userID].attackerSide.isCharged = false; }\n            if (hasCausedDamage) { this._user.teraCharge++; }\n        }\n    }\n\n    private applyDrain() { // this also accounts for recoil\n        const drainPercent = this.moveData.drain;\n        if (drainPercent) {\n            // draining moves should only ever hit a single target in raids\n            if (this._damage) {\n                this._drain[this.userID] = Math.floor(this._damage[this.targetID] * drainPercent/100);\n            }\n            if (this._drain[this.userID] && this._user.originalCurHP > 0) {\n                this._raidState.applyDamage(this.userID, -this._drain[this.userID])\n            }\n        }\n    }\n\n    private applyHealing() {\n        const healingPercent = this.moveData.healing;\n        for (let id of this._affectedIDs) {\n            if (this._doesNotAffect[id] || this._blockedBy[id] !== \"\") { continue; }\n            const target = this.getPokemon(id);\n            const maxHP = target.maxHP();\n            if (this.move.name === \"Heal Cheer\") {\n                const roll = this.options.roll || \"avg\";\n                this._healing[id] += roll === \"min\" ? Math.floor(maxHP * 0.2) : roll === \"max\" ? maxHP : Math.floor(maxHP * 0.6);\n                const pokemon = this.getPokemon(id);\n                pokemon.status = \"\";\n            } else {\n                const healAmount = Math.floor(target.maxHP() * (healingPercent || 0)/100 / ((target.bossMultiplier || 100) / 100));\n                this._healing[id] += healAmount;\n            }\n        }\n        for (let id=1; id<5; id++) {\n            if (this._healing[id] && this.getPokemon(id).originalCurHP > 0) {\n                this._raidState.applyDamage(id, -this._healing[id])\n            }\n        }\n    }\n\n    private applyFlinch() {\n        const flinchChance = this.moveData.flinchChance || 0;\n        if (flinchChance && (this.options.secondaryEffects || flinchChance === 100)) {\n            for (let id of this._affectedIDs) {\n                if (id === 0) { continue; }\n                if (this._doesNotAffect[id] || this._blockedBy[id] !== \"\") { continue; }\n                const target = this.getPokemon(id);\n                if (target.item === \"Covert Cloak\" || target.ability === \"Shield Dust\") { continue; }\n                if (target.ability === \"Inner Focus\" && this._user.ability !== \"Mold Breaker\") { continue; }\n                this._causesFlinch[id] = true;\n            }\n        }\n    }\n\n    private applyStatChanges() {\n        const category = this.moveData.category;\n        const affectedIDs = category === \"damage+raise\" ? [this.userID] : this._affectedIDs;\n        let statChanges = this.moveData.statChanges;\n        // handle Growth\n        if (this.move.name === \"Growth\" && this._fields[this.userID].weather?.includes(\"Sun\")) { statChanges = [{stat: \"atk\", change: 2}, {stat: \"spa\", change: 2}]; }\n        const chance = this.moveData.statChance || 100;\n        if (chance && (this.options.secondaryEffects || chance === 100 )) {\n            for (let id of affectedIDs) {\n                if (this._doesNotAffect[id] || this._blockedBy[id] !== \"\") { continue; }\n                const pokemon = this.getPokemon(id);\n                const field = pokemon.field;\n                if (id !== this.userID && this.moveData.category?.includes(\"damage\") && (pokemon.item === \"Covert Cloak\" || pokemon.ability === \"Shield Dust\")) { continue; }\n                const boost: Partial<StatsTable> = {};\n                for (let statChange of (statChanges || [])) {\n                    const stat = statChange.stat as StatIDExceptHP;\n                    let change = statChange.change;\n                    if (Number.isNaN(change)) {\n                        // apparently, I manually put some stat changes are stored under the \"value\" key rather than \"change\"\n                        // TODO: update the data files to fix this\n                        // @ts-ignore\n                        change = statChange.value;\n                    }\n                    if (Number.isNaN(change)) { console.log(\"Stat change info for \" + this.moveData.name + \" is missing.\"); continue; }\n                    if (change < 0 && id !== this.userID && (field.attackerSide.isProtected || (field.attackerSide.isMist && this._user.ability !== \"Infiltrator\"))) {\n                        continue;\n                    }\n                    boost[stat] = change;\n                }\n                this._raidState.applyStatChange(id, boost, true, id === this.userID)\n            }\n        }\n    }\n\n    private applyAilment() {\n        const ailment = this.moveData.ailment;\n        const chance = this.moveData.ailmentChance || 100;\n        if (ailment && (chance === 100 || this.options.secondaryEffects)) {\n            for (let id of this._affectedIDs) {\n                if (this._doesNotAffect[id] || this._blockedBy[id] !== \"\") { continue; }\n                const pokemon = this.getPokemon(id);\n                const field = pokemon.field;\n                const status = ailmentToStatus(ailment);\n                // Covert Cloak\n                if (id !== this.userID && this.moveData.category?.includes(\"damage\") && (pokemon.item === \"Covert Cloak\" || pokemon.ability === \"Shield Dust\")) { continue; }\n                // volatile status\n                if (status === \"\") {\n                    // Safeguard and Misty Terrain block confusion\n                    if (ailment === \"confusion\" && ((field.attackerSide.isSafeguard && this._user.ability !== \"Infiltrator\") || (field.hasTerrain(\"Misty\") && pokemonIsGrounded(pokemon, field)))) { continue; }\n                    // Aroma Veil\n                    if (field.attackerSide.isAromaVeil && [\"confusion\", \"taunt\", \"encore\", \"disable\", \"infatuation\"].includes(ailment)) {\n                        continue;\n                    // Own Tempo\n                    } else if (pokemon.ability === \"Own Tempo\" && ailment === \"confusion\") {\n                        continue;\n                    // Oblivious\n                    } else if (pokemon.ability === \"Oblivious\" && (ailment === \"taunt\" || ailment === \"infatuation\")) {\n                        continue;\n                    } else if (!pokemon.volatileStatus.includes(ailment)) {\n                        pokemon.volatileStatus.push!(ailment)\n                        if (ailment === \"ingrain\") {\n                            this._flags[id].push(pokemon.name + \" planted its roots!\");\n                            pokemon.isIngrain = true;\n                        } else {\n                            this._flags[id].push(ailment + \" inflicted\")\n                        }\n                    }\n                // non-volatile status\n                } else {\n                    // existing status cannot be overwritten\n                    if (!hasNoStatus(pokemon)) { continue; }\n                    // field-based immunities\n                    if (id !== this.userID && ((field.attackerSide.isSafeguard && this._user.ability !== \"Infiltrator\") || (field.hasTerrain(\"Misty\") && pokemonIsGrounded(pokemon, field)) || field.attackerSide.isProtected)) { continue; }\n                    if (status === \"slp\" && (field.hasTerrain(\"Electric\") && pokemonIsGrounded(pokemon, field))) { continue; }\n                    // type-based and ability-based immunities\n                    if (status === \"brn\" && pokemon.types.includes(\"Fire\")) { continue; }\n                    if (status === \"frz\" && (pokemon.types.includes(\"Ice\") || pokemon.ability === \"Magma Armor\")) { continue; }\n                    if ((status === \"psn\" || status === \"tox\") && (pokemon.ability === \"Immunity\" || (this._user.ability !== \"Corrosion\" && (pokemon.types.includes(\"Poison\") || pokemon.types.includes(\"Steel\"))))) { continue; }\n                    if ((status === \"par\" && (pokemon.types.includes(\"Electric\") || pokemon.ability === \"Limber\"))) { continue; }\n                    if (status === \"slp\" && [\"Insomnia\", \"Vital Spirit\"].includes(pokemon.ability as string)) { continue; }\n                    if (pokemon.field.hasWeather(\"Sun\") && pokemon.ability === \"Leaf Guard\") { continue; }\n                    this._raidState.applyStatus(id, status);\n                }\n            }\n        }\n    }\n\n    private applySelfDamage() {\n        const selfDamage = Math.floor(this._user.maxHP() * (this.moveData.selfDamage || 0) / 100) / ((this._user.bossMultiplier || 100) / 100); \n        if (selfDamage !== 0) {\n            const selfDamagePercent = this.moveData.selfDamage;\n            this._flags[this.userID].push!(selfDamagePercent + \"% self damage from \" + this.moveData.name + \".\")\n            this._raidState.applyDamage(this.userID, selfDamage);\n        }\n    }\n\n    private applyFieldChanges() {\n        /// Whole-Field Effects\n        // Weather\n        if (this.move.name === \"Rain Dance\") { this._raidState.applyWeather(\"Rain\", this._user.item === \"Damp Rock\" ? 32 : 20); }\n        if (this.move.name === \"Sunny Day\") { this._raidState.applyWeather(\"Sun\", this._user.item === \"Heat Rock\" ? 32 : 20); }\n        if (this.move.name === \"Sandstorm\") { this._raidState.applyWeather(\"Sand\", this._user.item === \"Smooth Rock\" ? 32 : 20); }\n        if (this.move.name === \"Snowscape\") { this._raidState.applyWeather(\"Snow\", this._user.item === \"Icy Rock\" ? 32 : 20); }\n        // Terrain\n        if (this.move.name === \"Electric Terrain\") { this._raidState.applyTerrain(\"Electric\", this._user.item === \"Terrain Extender\" ? 32 : 20); }\n        if (this.move.name === \"Grassy Terrain\") { this._raidState.applyTerrain(\"Grassy\", this._user.item === \"Terrain Extender\" ? 32 : 20); }\n        if (this.move.name === \"Misty Terrain\") { this._raidState.applyTerrain(\"Misty\", this._user.item === \"Terrain Extender\" ? 32 : 20); }\n        if (this.move.name === \"Psychic Terrain\") { this._raidState.applyTerrain(\"Psychic\", this._user.item === \"Terrain Extender\" ? 32 : 20); }\n        // Gravity\n        const gravity = this.move.name === \"Gravity\";\n        // Trick Room\n        const trickroom = this.move.name === \"Trick Room\";\n        // Magic Room\n        const magicroom = this.move.name === \"Magic Room\";\n        // Wonder Room\n        const wonderroom = this.move.name === \"Wonder Room\";\n        // apply effects\n        for (let field of this._fields) {\n            field.isGravity = (gravity && !field.isGravity) ? 20 : field.isGravity;\n            field.isTrickRoom = trickroom ? (field.isTrickRoom ? 0 : 20) : field.isTrickRoom;\n            field.isMagicRoom = magicroom ? (field.isMagicRoom ? 0 : 20) : field.isMagicRoom;\n            field.isWonderRoom = wonderroom ? (field.isWonderRoom ? 0 : 20) : field.isWonderRoom;\n        }\n        /// Side Effects\n        // Reflect\n        let reflect = this.move.name === \"Reflect\";\n        // Light Screen\n        let lightscreen = this.move.name === \"Light Screen\";\n        // Aurora Veil\n        let auroraveil = this.move.name === \"Aurora Veil\";\n        // Mist\n        let mist = this.move.name === \"Mist\";\n        // Safeguard\n        let safeguard = this.move.name === \"Safeguard\";\n        // Tailwind\n        let tailwind = this.move.name === \"Tailwind\";\n        // Attack Cheer\n        let attackcheer = this.move.name === \"Attack Cheer\";\n        // Defense Cheer\n        let defensecheer = this.move.name === \"Defense Cheer\";\n        // apply effects\n        const sideFieldIDs = this.userID === 0 ? [0] : [1,2,3,4];\n        for (let id of sideFieldIDs) {\n            const field = this._fields[id];\n            field.attackerSide.isReflect = (reflect && !field.attackerSide.isReflect) ? (this._user.item === \"Light Clay\" ? 32 : 20) : field.attackerSide.isReflect;\n            field.attackerSide.isLightScreen = (lightscreen && !field.attackerSide.isLightScreen) ? (this._user.item === \"Light Clay\" ? 32 : 20) : field.attackerSide.isLightScreen;\n            field.attackerSide.isAuroraVeil = (auroraveil && !field.attackerSide.isAromaVeil) ? (this._user.item === \"Light Clay\" ? 32 : 20) : field.attackerSide.isAuroraVeil;\n            field.attackerSide.isMist = (mist && !field.attackerSide.isMist) ? 20 : field.attackerSide.isMist;\n            field.attackerSide.isSafeguard = (safeguard && !field.attackerSide.isSafeguard) ? 20 : field.attackerSide.isSafeguard;\n            field.attackerSide.isTailwind = (tailwind && !field.attackerSide.isTailwind) ? 20 : field.attackerSide.isTailwind;\n            field.attackerSide.isAtkCheered = attackcheer ? 12 : field.attackerSide.isAtkCheered;\n            field.attackerSide.isDefCheered = defensecheer ? 12 : field.attackerSide.isDefCheered;\n        }\n\n        // Helping Hand\n        const helpinghand = this.move.name === \"Helping Hand\";\n        if (helpinghand) {\n            if (this._doesNotAffect[this.targetID]) {\n                this._desc[this.targetID] = this.move.name + \" \" + this._doesNotAffect[this.targetID] + \"!\";\n            } else {\n                this._fields[this.targetID].attackerSide.isHelpingHand = true;\n            }\n        }\n    }\n\n    private applyUniqueMoveEffects() {\n        /// Ability-affecting moves\n        const target = this.getPokemon(this.targetID);\n\n        const user_ability = this._user.ability as AbilityName;\n        const target_ability = target.ability as AbilityName;\n\n        switch (this.move.name) {\n            case \"Clear Boosts / Abilities\":\n                if (this.userID !== 0) {\n                    throw new Error(\"Only the Raid boss can remove stat boosts and abilities!\")\n                }\n                this._desc[this.targetID] = \"The Raid Boss nullified all stat boosts and abilities!\"\n                for (let i=1; i<5; i++) {\n                    const pokemon = this.getPokemon(i);\n                    pokemon.ability = \"(None)\" as AbilityName;\n                    pokemon.abilityOn = false;\n                    pokemon.abilityNullified = i === this.targetID ? 2 : 1;\n                    pokemon.field.attackerSide.isAtkCheered = 0; // clear active cheers\n                    pokemon.field.attackerSide.isDefCheered = 0;\n                    for (let stat in pokemon.boosts) {\n                        pokemon.boosts[stat as StatIDExceptHP] = Math.min(0, (pokemon.boosts[stat as StatIDExceptHP] || 0));\n                    }\n                }\n                break;\n            case \"Remove Negative Effects\":\n                if (this.userID !== 0) {\n                    throw new Error(\"Only the Raid boss can remove negative effects!\")\n                }\n                this._desc[this.targetID] = \"The Raid Boss removed all negative effects from itself!\"\n                const boss = this.getPokemon(0);\n                boss.status = \"\";\n                boss.volatileStatus = [];\n                for (let stat in boss.boosts) {\n                    boss.boosts[stat as StatIDExceptHP] = Math.max(0, boss.boosts[stat as StatIDExceptHP] || 0);\n                }\n                break;\n            case \"Skill Swap\": \n                if (\n                    !persistentAbilities[\"uncopyable\"].includes(user_ability) &&\n                    !persistentAbilities[\"uncopyable\"].includes(target_ability) &&\n                    !persistentAbilities[\"unreplaceable\"].includes(user_ability) &&\n                    !persistentAbilities[\"unreplaceable\"].includes(target_ability)\n                ) {\n                    const tempUserAbility = user_ability;\n                    this._user.ability = target.ability;\n                    target.ability = tempUserAbility;\n                }\n                break;\n            case \"Core Enforcer\":\n            case \"Gastro Acid\":\n                if (\n                    !persistentAbilities[\"unsuppressable\"].includes(target_ability)\n                ) {\n                    target.ability = undefined;\n                }\n                break;\n            case \"Entrainment\":\n                if (\n                    !persistentAbilities[\"uncopyable\"].includes(user_ability) &&\n                    !persistentAbilities[\"unreplaceable\"].includes(target_ability)\n                ) {\n                    target.ability = user_ability;\n                }\n                break;\n            case \"Worry Seed\":\n                if (\n                    !persistentAbilities[\"unreplaceable\"].includes(target_ability)\n                ) {\n                    target.ability = \"Insomnia\" as AbilityName;\n                }\n                break;\n            case \"Role Play\":\n                if (\n                    !persistentAbilities[\"uncopyable\"].includes(target_ability) &&\n                    !persistentAbilities[\"unreplaceable\"].includes(user_ability)\n                ) {\n                    this._user.ability = target_ability;\n                }\n                break;\n            case \"Simple Beam\":\n                if (\n                    !persistentAbilities[\"unreplaceable\"].includes(target_ability)\n                ) {\n                    target.ability = \"Simple\" as AbilityName;\n                }\n                break;\n        /// Type-affecting moves\n            case \"Soak\":\n                if (!target.isTera || !(target.teraType !== undefined || target.teraType !== \"???\") && !target.types.includes(\"Water\")) {\n                    target.types = [\"Water\"];\n                    target.changedTypes = [\"Water\"];\n                    this._desc[target.id] = this._user.name + \" Soak vs. \" + target.name + \" — Soak changed \" + target.name + \"'s type to Water!\";\n                } else {\n                    this._desc[target.id] = this._user.name + \" Soak vs. \" + target.name + \" — Soak failed!\";\n                }\n                break;\n            case \"Forest's Curse\":\n                if (!target.isTera || !(target.teraType !== undefined || target.teraType !== \"???\") && !target.types.includes(\"Grass\")) {\n                    if (target.types.length === 3) {\n                        target.types[2] = \"Grass\";\n                    } else {\n                        target.types.push(\"Grass\");\n                    }\n                    target.changedTypes = [...target.types];\n                    this._desc[target.id] = this._user.name + \" Forest's Curse vs. \" + target.name + \" — the Grass type was added to \" + target.name + \"!\";\n                } else {\n                    this._desc[target.id] = this._user.name + \" Forest's Curse vs. \" + target.name + \" — Forest's Curse failed!\";\n                } \n                break;\n            case \"Trick-or-Treat\":\n                if (!target.isTera || !(target.teraType !== undefined || target.teraType !== \"???\") && !target.types.includes(\"Ghost\")) {\n                    if (target.types.length === 3) {\n                        target.types[2] = \"Ghost\";\n                    } else {\n                        target.types.push(\"Ghost\");\n                    }\n                    target.changedTypes = [...target.types];\n                    this._desc[target.id] = this._user.name + \" Trick-or-Treat vs. \" + target.name + \" — the Ghost type was added to \" + target.name + \"!\";\n                } else {\n                    this._desc[target.id] = this._user.name + \" Trick-or-Treat vs. \" + target.name + \" — Trick-or-Treat failed!\";\n                } \n                break;\n            case \"Conversion\":\n                this._user.types = [this.move.type];\n                this._user.changedTypes = [this.move.type];\n                this._desc[this.userID] = this._user.name + \" Conversion vs. \" + target.name + \" — \" + this._user.name + \" transformed into the \" + this.move.type.toUpperCase() + \" type!\";\n                break;\n            case \"Reflect Type\":\n                if (!target.isTera || (target.teraType !== undefined || target.teraType !== \"???\")) {\n                    this._user.types = target.types;\n                    this._user.changedTypes = [...target.types];\n                    this._desc[this.userID] = this._user.name + \" Reflect Type vs. \" + target.name + \" — \" + this._user.name + \"'s types changed to match \" + target.name + \"'s!\";\n                } else {\n                    this._user.types = [target.teraType];\n                    this._user.changedTypes = [target.teraType];\n                }\n                this._desc[this.userID] = this._user.name + \" Reflect Type vs. \" + target.name + \" — \" + this._user.name + \"'s type changed to match \" + target.name + \"'s!\";\n                break;\n        /// Item-affecting moves\n            case \"Knock Off\":\n                this._raidState.loseItem(this.targetID);\n                break;\n            case \"Switcheroo\":\n            case \"Trick\":\n                // These moves don't work in Tera raids\n                // const tempUserItem = this._user.item;\n                // const tempTargetItem = target.item;\n                // this._raidState.recieveItem(this.targetID, tempUserItem);\n                // this._raidState.recieveItem(this.userID, tempTargetItem);\n                break;\n            case \"Fling\":\n                if (this._flingItem) {\n                    switch (this._flingItem) {\n                        case \"Light Ball\":\n                            if (hasNoStatus(target)) { target.status = \"par\"; }\n                            break;\n                        case \"Flame Orb\":\n                            if (!target.types.includes(\"Fire\") && hasNoStatus(target)) { target.status = \"brn\"; }\n                            break;\n                        case \"Toxic Orb\":\n                            if (!target.types.includes(\"Poison\") && hasNoStatus(target)) { target.status = \"tox\"; }\n                            break\n                        case \"Poison Barb\":\n                            if (!target.types.includes(\"Poison\") && hasNoStatus(target)) { target.status = \"psn\"; }\n                            break;\n                        case \"White Herb\":\n                            for (let stat in target.boosts) {\n                                const statId = stat as StatIDExceptHP;\n                                if ((target.boosts[statId] || 0) < 0) { target.boosts[statId] = 0; }\n                            }\n                            break;\n                        // Status-Curing Berries\n                        case \"Cheri Berry\":\n                            if (target.status === \"par\") { target.status = \"\"; }\n                            break;\n                        case \"Chesto Berry\":\n                            if (target.status === \"slp\") { target.status = \"\"; }\n                            break;\n                        case \"Pecha Berry\":\n                            if (target.status === \"psn\") { target.status = \"\"; }\n                            break;\n                        case \"Rawst Berry\":\n                            if (target.status === \"brn\") { target.status = \"\"; }\n                            break;\n                        case \"Aspear Berry\":\n                            if (target.status === \"frz\") { target.status = \"\"; }\n                            break;\n                        case \"Lum Berry\":\n                            if (target.status !== \"\") { target.status = \"\"; }\n                            if (target.volatileStatus.includes(\"confusion\")) { target.volatileStatus = target.volatileStatus.filter(status => status !== \"confusion\"); }\n                            break;\n                        // Stat-Boosting Berries\n                        case \"Liechi Berry\":\n                            this._raidState.applyStatChange(this.targetID, {atk: 1});\n                            break;\n                        case \"Ganlon Berry\":\n                            this._raidState.applyStatChange(this.targetID, {def: 1});\n                            break;\n                        case \"Petaya Berry\":\n                            this._raidState.applyStatChange(this.targetID, {spa: 1});\n                            break;\n                        case \"Apicot Berry\":\n                            this._raidState.applyStatChange(this.targetID, {spd: 1});\n                            break;\n                        case \"Salac Berry\":\n                            this._raidState.applyStatChange(this.targetID, {spe: 1});\n                            break;\n                        // Healing Berries (TO DO, other healing berries that confuse depending on nature)\n                        case \"Sitrus Berry\":\n                            this._healing[this.targetID] += Math.floor(target.maxHP() / 4);\n                            break;\n                        default: break;\n                    }\n                }\n                break;\n            // other\n            case \"Defog\":\n                const targetFields = this.userID === 0 ? this._fields.slice(1) : [this._fields[0]];\n                for (let field of this._fields) {\n                    field.attackerSide.isReflect = 0;\n                    field.attackerSide.isLightScreen = 0;\n                    field.attackerSide.isSafeguard = 0;\n                    field.attackerSide.isMist = 0;\n                    field.terrain = undefined;\n                }\n                for (let field of targetFields) {\n                    field.attackerSide.isAuroraVeil = 0;\n                }\n                break;\n            case \"Clear Smog\":\n                for (let stat in target.boosts) {\n                    const statId = stat as StatIDExceptHP;\n                    target.boosts[statId] = 0;\n                }\n                break;\n            case \"Haze\":\n                for (let id=0; id<5; id++) {\n                    const pokemon = this.getPokemon(id);\n                    for (let stat in pokemon.boosts) {\n                        const statId = stat as StatIDExceptHP\n                        pokemon.boosts[statId] = 0;\n                    }\n                }\n                break;\n            case \"Charge\":\n                this._fields[this.userID].attackerSide.isCharged = true;\n                break;\n            case \"Endure\":\n                this._user.isEndure = true;\n                break;\n            case \"Psych Up\":\n                for (let stat in target.boosts) {\n                    const statId = stat as StatIDExceptHP;\n                    this._user.boosts[statId] = target.boosts[statId] || 0;\n                }\n                break;\n            case \"Power Swap\":\n                const tempUserAtkBoosts = this._user.boosts;\n                this._user.boosts.atk = target.boosts.atk;\n                this._user.boosts.spa = target.boosts.spa;\n                target.boosts.atk = tempUserAtkBoosts.atk;\n                target.boosts.spa = tempUserAtkBoosts.spa;\n                break;\n            case \"Guard Swap\":\n                const tempUserDefBoosts = this._user.boosts;\n                this._user.boosts.def = target.boosts.def;\n                this._user.boosts.spd = target.boosts.spd;\n                target.boosts.def = tempUserDefBoosts.def;\n                target.boosts.spd = tempUserDefBoosts.spd;\n                break;\n            case \"Power Trick\":\n                const tempAtk = this._user.stats.atk;\n                this._user.stats.atk = this._user.stats.def;\n                this._user.stats.def = tempAtk;\n                break;\n            case \"Acupressure\":\n                target.randomBoosts += 2;\n                break;\n            case \"Rest\":\n                if ((this._user.status !== \"slp\")\n                    && !(isGrounded(this._user, this._user.field) && this._user.field.hasTerrain(\"Misty\") || this._user.field.hasTerrain(\"Electric\")) \n                    && ![\"Insomnia\", \"Purifying Salt\", \"Vital Spirit\"].includes(this._user.ability as string)\n                    && !(this._user.field.hasWeather(\"Sun\") && this._user.ability === \"Leaf Guard\")\n                ) {\n                    this._user.originalCurHP = this._user.maxHP();\n                    this._raidState.applyStatus(this.userID, \"slp\");\n                }\n                break;\n            case \"Ingrain\":\n                this._user.isIngrain = true;\n                break;\n            default: break;\n            }\n    }\n\n    public applyEndOfMoveItemEffects() {\n        /// Item-related effects that occur at the end of a move\n        // Choice-locking items\n        if (this._user.item === \"Choice Specs\" || this._user.item === \"Choice Band\" || this._user.item === \"Choice Scarf\") {\n            this._user.isChoiceLocked = true;\n        }\n    }\n\n    private setEndOfTurnDamage() {\n        // getEndOfTurn() calculates damage for a defending pokemon. \n        // Here, we'll evaluate end-of-turn damage for both the user and boss only when the move does not go first\n        // positive eot indicates healing\n        if (!this.movesFirst) {\n            const raider = this._raiders[this.raiderID];\n            const boss = this._raiders[0];\n            const raider_eot = getEndOfTurn(gen, boss, raider, dummyMove, this.getMoveField(0, this.raiderID));\n            const boss_eot = getEndOfTurn(gen, raider, boss, dummyMove, this.getMoveField(this.raiderID, 0));\n            raider_eot.damage = Math.floor(raider_eot.damage / ((raider.bossMultiplier || 100) / 100));\n            boss_eot.damage = Math.floor(boss_eot.damage / ((boss.bossMultiplier || 100) / 100));\n            this._eot[this.raiderID] = raider_eot;\n            this._eot[0] = boss_eot;\n        }\n    }\n\n    private applyEndOfTurnDamage() {\n        for (let i=0; i<5; i++) {\n            const damage = this._eot[i] ? -this._eot[i]!.damage : 0;\n            this._raidState.applyDamage(i, damage);\n        }\n    }\n\n    private setFlags() {\n        // check for shield changes\n        const initialShield = this.raidState.raiders[0].shieldActive;\n        const finalShield = this._raiders[0].shieldActive;\n        if (initialShield !== finalShield) {\n            if (finalShield) {\n                this._flags[0].push(\"Shield activated\");\n            } else {\n                this._flags[0].push(\"Shield broken\");\n            }\n        }\n        // check for fainting\n        for (let i=0; i<5; i++) {\n            if (this._raiders[i].originalCurHP <= 0 && this.raidState.raiders[i].originalCurHP > 0) {\n                this._flags[i].push(this._raiders[i].name + \" fainted!\");\n            }\n        }\n        // check for item changes\n        const initialItems = this.raidState.raiders.map(p => p.item);\n        const finalItems = this._raiders.map(p => p.item);\n        for (let i=0; i<5; i++) {\n            if (initialItems[i] !== finalItems[i]) {\n                if (finalItems[i] === undefined) {\n                    this._flags[i].push(initialItems[i] + \" lost\")\n                } else if (initialItems[i] === undefined) {\n                    this._flags[i].push(finalItems[i] + \" gained\")\n                } else {\n                    this._flags[i].push(initialItems[i] + \" replaced with \" + finalItems[i])\n                }\n            }\n        }\n        // check for ability changes\n        const initialAbilities = this.raidState.raiders.map(p => p.ability);\n        const finalAbilities = this._raiders.map(p => p.ability);\n        for (let i=0; i<5; i++) {\n            if (initialAbilities[i] !== finalAbilities[i])  {\n                if (finalAbilities[i] === \"(None)\" || finalAbilities[i] === undefined) {\n                    this._flags[i].push(initialAbilities[i] + \" nullified\")\n                } else {\n                    this._flags[i].push(\"ability changed to \" + finalAbilities[i])\n                }\n            }\n        }\n        // check for ability triggers\n        const initialAbilityOn = this.raidState.raiders.map(p => p.abilityOn);\n        const finalAbilityOn = this._raiders.map(p => p.abilityOn);\n        for (let i=0; i<5; i++) {\n            if (initialAbilityOn[i] !== finalAbilityOn[i]) {\n                if (finalAbilityOn[i]) {\n                    this._flags[i].push(this._raiders[i].ability + \" activated\");\n                } else {\n                    this._flags[i].push(this._raiders[i].ability + \" deactivated\");\n                }\n            }\n        }\n        // check for status changes\n        const initialStatus = this.raidState.raiders.map(p => p.status);\n        const finalStatus = this._raiders.map(p => p.status);\n        for (let i=0; i<5; i++) {\n            if (initialStatus[i] !== finalStatus[i]) {\n                if (finalStatus[i] === \"\" || finalStatus[i] === undefined) {\n                    this._flags[i].push(initialStatus[i] + \" cured\")\n                } else {\n                    this._flags[i].push(finalStatus[i] + \" inflicted\")\n                }\n            }\n        }\n        // check for stat changes\n        for (let i=0; i<5; i++) {\n            const pokemon = this.getPokemon(i);\n            const origPokemon = this.raidState.raiders[i];\n            let boostStr: string[] = [];\n            for (let stat in pokemon.boosts) {\n                //@ts-ignore\n                const origStat = origPokemon.boosts[stat] || 0;\n                //@ts-ignore\n                const newStat = pokemon.boosts[stat] === undefined ? origStat : pokemon.boosts[stat];\n                const diff = newStat - origStat;\n                if (diff !== 0) {\n                    boostStr.push(stat + \" \" + (origStat > 0 ? \"+\" : \"\") + origStat + \" → \" + (newStat > 0 ? \"+\" : \"\") + newStat);\n                }\n            }\n            // acupressure check\n            if (pokemon.randomBoosts !== origPokemon.randomBoosts) {\n                boostStr.push(\"random stat \" + (origPokemon.randomBoosts > 0 ? \"+\" : \"\") + origPokemon.randomBoosts + \" → \" + (pokemon.randomBoosts > 0 ? \"+\" : \"\") + pokemon.randomBoosts);\n            }\n            if (boostStr.length > 0) {\n                const displayStr = \"Stat changes: (\" + boostStr.join(\", \") + \")\";\n                this._flags[i].push(displayStr);\n            }\n        }\n        // check for HP changes\n        for (let i=0; i<5; i++) {\n            const initialHP = this.raidState.raiders[i].originalCurHP;\n            const finalHP = this._raiders[i].originalCurHP;\n            if (initialHP !== finalHP) {\n                const initialPercent = Math.floor(initialHP / this.raidState.raiders[i].maxHP() * 1000)/10;;\n                const finalPercent = Math.floor(finalHP / this._raiders[i].maxHP() * 1000)/10;\n                const hpStr = \"HP: \" + initialPercent + \"% → \" + finalPercent + \"%\";\n                this._flags[i].push(hpStr);\n            }\n        }\n    }\n}\n","import { Generations, Move, calculate } from \"../calc\";\nimport { MoveData, RaidMoveOptions, RaidTurnInfo, RaidMoveInfo } from \"./interface\";\nimport { RaidState } from \"./RaidState\";\nimport { Raider } from \"./Raider\";\nimport { RaidMove, RaidMoveResult } from \"./RaidMove\";\nimport pranksterMoves from \"../data/prankster_moves.json\"\nimport { AbilityName, MoveName } from \"../calc/data/interface\";\n\nconst gen = Generations.get(9);\n\nexport type RaidTurnResult = {\n    state: RaidState;\n    results: [RaidMoveResult, RaidMoveResult];\n    raiderMovesFirst: boolean;\n    raiderMoveUsed: string;\n    bossMoveUsed: string;\n    id: number;\n    group?: number;\n    moveInfo: RaidMoveInfo;\n    bossMoveInfo: RaidMoveInfo;\n    flags: string[][];\n    endFlags: string[];\n}\n\nexport class RaidTurn {\n    raidState:      RaidState; // We shouldn't mutate this state; it is the result from the previous turn\n    raiderID:       number;\n    targetID:       number;\n    raiderMoveData!: MoveData;\n    bossMoveData!:   MoveData;\n    raiderOptions:  RaidMoveOptions;\n    bossOptions:    RaidMoveOptions;\n    id:        number;\n    group?:     number;\n\n    _raiderMovesFirst!: boolean;\n    _raider!:           Raider;\n    _boss!:             Raider;  \n    _raiderMove!:       Move;\n    _bossMove!:         Move;\n    _raiderMoveData!:   MoveData;\n    _bossMoveData!:     MoveData;\n    _raiderMoveID!:     number;     // the id of the raider performing the move (affected by instruct)\n    _raiderMoveTarget!: number;\n    _raiderMoveUsed!:   string;\n    _bossMoveUsed!:     string;\n\n    _raidMove1!:      RaidMove;\n    _raidMove2!:      RaidMove;\n\n    _result1!:        RaidMoveResult;\n    _result2!:        RaidMoveResult;\n    _raidState!:      RaidState; // This tracks changes during this turn\n\n    _flags!:          string[][]; \n    _endFlags!:       string[];\n\n\n    constructor(raidState: RaidState, info: RaidTurnInfo) {\n        this.raidState = raidState;\n        this.raiderID = info.moveInfo.userID;\n        this.targetID = info.moveInfo.targetID;\n        this.raiderMoveData = info.moveInfo.moveData;\n        this.bossMoveData = info.bossMoveInfo.moveData;\n        this.id = info.id;\n        this.group = info.group;\n\n        this.raiderOptions = info.moveInfo.options || {};\n        this.bossOptions = info.bossMoveInfo.options || {};\n    }\n\n    public result(): RaidTurnResult {\n        // set up moves\n        this._raiderMove = new Move(9, this.raiderMoveData.name, this.raiderOptions);\n        if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n        if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        this._bossMove = new Move(9, this.bossMoveData.name, this.bossOptions);\n        if (this.bossOptions.crit) this._bossMove.isCrit = true;\n        if (this.bossOptions.hits !== undefined) this._bossMove.hits = this.bossOptions.hits;\n\n        // copy the raid state\n        this._raidState = this.raidState.clone();\n        this._flags = [[], [], [], [], []];\n        this._endFlags = [];\n\n        // switch-in if previously fainted\n        if (this._raidState.raiders[this.raiderID].curHP() === 0) {\n            this._flags[this.raiderID].push(\"Switched in\");\n            this._raidState.switchIn(this.raiderID);\n            // use dummy move to activate conditional items/abilities\n            const moveResult = new RaidMove(\n                {name: \"(No move)\" as MoveName, target: \"user\"}, \n                new Move(gen, \"(No move)\"), \n                this._raidState,\n                this.raiderID,\n                this.raiderID,\n                this.raiderID,\n                true,\n                ).result();\n            this._raidState = moveResult.state;\n            for (let i=0; i<5; i++) {\n                this._flags[i] = this._flags[i].concat(moveResult.flags[i]);\n            }\n        }\n\n        // activate Terastallization if specified\n        if (this.raiderOptions.activateTera) {\n            const activatedTera = this._raidState.activateTera(this.raiderID);\n            if (activatedTera) { this._flags[this.raiderID].push(\"Tera activated\"); }\n        }\n\n        // determine which move goes first\n        this.setTurnOrder();\n\n        this._raiderMoveID = this.raiderID;\n        this._raiderMoveTarget = this.targetID;\n        this._raiderMoveData = this.raiderMoveData;\n        this._bossMoveData = this.bossMoveData;\n        this._raiderMoveUsed = this._raiderMoveData.name;\n        this._bossMoveUsed = this._bossMoveData.name;\n\n        this.applyChangedMove();\n\n        // steal tera charge\n        if (this.bossOptions.stealTeraCharge) {\n            this._flags[0].push(\"The Raid Boss stole a Tera charge!\");\n            for (let i=1; i<5; i++) {\n                const pokemon = this._raidState.getPokemon(i);\n                pokemon.teraCharge = Math.max(0, (pokemon.teraCharge || 0) - 1);\n            }\n        }\n\n        // execute moves\n        if (this._raiderMovesFirst) {\n            this._raidMove1 = new RaidMove(\n                this._raiderMoveData,\n                this._raiderMove, \n                this._raidState, \n                this._raiderMoveID, \n                this._raiderMoveTarget,\n                this.raiderID,\n                this._raiderMovesFirst,\n                this.raiderOptions);\n            this._result1 = this._raidMove1.result();\n        this._raidState = this._result1.state;\n            this._raidMove2 = new RaidMove(\n                this._bossMoveData,\n                this._bossMove, \n                this._raidState, \n                0, \n                this.raiderID,\n                this.raiderID,\n                !this._raiderMovesFirst,\n                this.bossOptions,\n                this._result1.causesFlinch[0]);\n        } else {\n            this._raidMove1 = new RaidMove(\n                this._bossMoveData, \n                this._bossMove, \n                this._raidState, \n                0, \n                this.raiderID,\n                this.raiderID,\n                !this._raiderMovesFirst,\n                this.bossOptions);\n            this._result1 = this._raidMove1.result();\n            this._raidState = this._result1.state;\n            this._raidMove2 = new RaidMove(\n                this._raiderMoveData, \n                this._raiderMove, \n                this._raidState, \n                this._raiderMoveID, \n                this._raiderMoveTarget,\n                this.raiderID,\n                this._raiderMovesFirst,\n                this.raiderOptions,\n                this._result1.causesFlinch[this.raiderID]);\n        }\n        this._raidMove2.result();\n        this._result2 = this._raidMove2.output\n        this._raidState = this._result2.state;\n        // item effects\n        this.applyEndOfTurnItemEffects();\n        // Clear Endure (since side-attacks are not endured)\n        this._raidState.raiders[this.raiderID].isEndure = false;\n        this._raidState.raiders[0].isEndure = false; // I am unaware of any raid bosses that have endure\n        // remove protect / wide guard / quick guard effects\n        this.removeProtection();\n        this.countDownFieldEffects();\n        this.countDownAbilityNullification();\n\n        return {\n            state: this._raidState,\n            results: [this._result1, this._result2],\n            raiderMovesFirst: this._raiderMovesFirst,\n            raiderMoveUsed: this._raiderMoveUsed,\n            bossMoveUsed: this._bossMoveUsed,\n            id: this.id,\n            group: this.group,\n            moveInfo: {\n                userID: this.raiderID,\n                targetID: this.targetID,\n                moveData: this.raiderMoveData,\n                options: this.raiderOptions,\n            },\n            bossMoveInfo: {\n                userID: 0,\n                targetID: this.raiderID,\n                moveData: this.bossMoveData,\n                options: this.bossOptions,\n            },\n            flags: this._flags,\n            endFlags: this._endFlags,\n        }\n\n    }\n\n    private applyChangedMove() {\n        // For this option, pick the most damaging move based on the current field.\n        if (this.bossMoveData.name === \"(Most Damaging)\") {\n            const moveOptions = this._raidState.raiders[0].moves;\n            let bestMove = \"(No Move)\";\n            let bestDamage = 0;\n            for (const move of moveOptions) {\n                const testMove = new Move(9, move, this.bossOptions);\n                const testField = this._raidState.raiders[0].field;\n                testField.defenderSide = this._raidState.raiders[this.raiderID].field.attackerSide;\n                const result = calculate(9, this._raidState.raiders[0], this._raidState.raiders[this.raiderID], testMove, testField);\n                let damage: number = 0;\n                if (typeof(result.damage) === \"number\") {\n                    damage = result.damage;\n                } else {\n                    damage = (this.bossOptions.roll === \"min\" ? result.damage[0] :\n                              this.bossOptions.roll === \"max\" ? result.damage[result.damage.length - 1] : \n                              result.damage[Math.floor(result.damage.length / 2)]) as number;\n                }\n                if (damage > bestDamage) {\n                    bestMove = move;\n                    bestDamage = damage;\n                }\n            }\n            this._bossMoveData = this._raidState.raiders[0].moveData.find((move) => move.name === bestMove) || {name: bestMove} as MoveData;\n            this._bossMove = new Move(9, bestMove, this.bossOptions);\n            this._bossMoveUsed = bestMove;\n        }\n        if (this.raiderMoveData.name === \"(Most Damaging)\") {\n            const moveOptions = this._raidState.raiders[this.raiderID].moves;\n            let bestMove = \"(No Move)\";\n            let bestDamage = 0;\n            for (const move of moveOptions) {\n                const testMove = new Move(9, move, this.raiderOptions);\n                const testField = this._raidState.raiders[this.raiderID].field;\n                testField.defenderSide = this._raidState.raiders[this.targetID].field.attackerSide;\n                const result = calculate(9, this._raidState.raiders[this.raiderID], this._raidState.raiders[0], testMove, testField);\n                let damage: number = 0;\n                if (typeof(result.damage) === \"number\") {\n                    damage = result.damage;\n                } else {\n                    damage = (this.raiderOptions.roll === \"min\" ? result.damage[0] :\n                              this.raiderOptions.roll === \"max\" ? result.damage[result.damage.length - 1] : \n                              result.damage[Math.floor(result.damage.length / 2)]) as number;\n                }\n                if (damage > bestDamage) {\n                    bestMove = move;\n                    bestDamage = damage;\n                }\n            }\n            this._raiderMoveData = this._raidState.raiders[this.raiderID].moveData.find((move) => move.name === bestMove) || {name: bestMove} as MoveData;\n            this._raiderMove = new Move(9, bestMove, this.raiderOptions);\n            this._raiderMoveUsed = bestMove;\n        }\n        // Moves that cause different moves to be carried out (Instruct and Copycat, let's not worry about Metronome)\n        // Instruct\n        if (this.raiderMoveData.name === \"Instruct\" && this.raidState.raiders[this.targetID].lastMove !== undefined) {\n            this._raiderMoveID = this.targetID;\n            this._raiderMoveTarget = this.raidState.raiders[this._raiderMoveID].lastTarget!;\n            if (this._raiderMoveTarget === this.targetID) { this._raiderMoveTarget = this._raiderMoveID; }\n            this._raiderMoveData = this.raidState.raiders[this.targetID].lastMove!\n            this._raiderMove = new Move(9, this._raiderMoveData.name, this.raiderOptions);\n            if (this.raiderOptions.crit) { this._raiderMove.isCrit = true; }\n            if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        // Copycat\n        } else if (this.raiderMoveData.name === \"Copycat\") {\n            this._raiderMoveTarget = this.raidState.raiders[this._raiderMoveID].lastTarget!;\n            if (this._raiderMoveTarget === this.targetID) { this._raiderMoveTarget = this._raiderMoveID; }\n            this._raiderMoveData = this.raidState.raiders[this.targetID].lastMove!\n            this._raiderMove = new Move(9, this._raiderMoveData.name, this.raiderOptions);\n            if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n            if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        // Since we don't have access to choice lock in the UI, we'll just force the move to be the last move used\n        } else if (this._raider.isChoiceLocked) {\n            this._raiderMoveData = this.raidState.raiders[this.targetID].lastMove!\n            this._raiderMove = new Move(9, this._raiderMoveData.name, this.raiderOptions);\n            if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n            if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        } \n    }\n\n    private setTurnOrder() {\n        this._raider = this._raidState.raiders[this.raiderID];\n        this._boss = this._raidState.raiders[0];\n\n        this.modifyMovePriorityByAbility(this.raiderMoveData, this._raider);\n        this.modifyMovePriorityByAbility(this.bossMoveData, this._boss);\n\n        // first compare priority\n        const raiderPriority = this.raiderMoveData.priority || this._raiderMove.priority;\n        const bossPriority = this.bossMoveData.priority || this._bossMove.priority;\n        if (raiderPriority > bossPriority) {\n            this._raiderMovesFirst = true;\n        } else if (raiderPriority < bossPriority) {\n            this._raiderMovesFirst = false;\n        } else {\n            // if priority is the same, compare speed\n            const raiderSpeed = this._raider.effectiveSpeed;\n            const bossSpeed = this._boss.effectiveSpeed;\n\n            const bossField = this._raidState.fields[0];\n            this._raiderMovesFirst = bossField.isTrickRoom ? (raiderSpeed < bossSpeed) : (raiderSpeed > bossSpeed);\n        }\n    }\n\n    private modifyMovePriorityByAbility(moveData: MoveData, raider: Raider) {\n        const ability = raider.ability;\n\n        switch (ability) {\n            case \"Prankster\": // do dark-type prankster failure elsewhere\n                if (moveData.priority !== undefined && pranksterMoves.includes(moveData.name)) {\n                    moveData.priority += 1;\n                }\n                break;\n            case \"Gale Wings\":\n                if (moveData.priority !== undefined && raider.curHP() === raider.maxHP() && moveData.type === \"Flying\") {\n                    moveData.priority += 1;\n                }\n                break;\n            case \"Triage\": // Comfey's signature ability\n                break;\n            default:\n                break;\n        }\n    }\n\n    private applyEndOfTurnItemEffects() {\n        for (let id of [0, this.raiderID]) {\n            const pokemon = this._raidState.raiders[id];\n            // Ailment-inducing Items\n            if (pokemon.status === undefined || pokemon.status === \"\") {\n                switch (pokemon.item) {\n                    case \"Flame Orb\":\n                        if (!pokemon.types.includes(\"Fire\")) { \n                            pokemon.status = \"brn\";  \n                            this._result2.flags[id].push(\"brn inflicted\");\n                        }\n                        break;\n                    case \"Toxic Orb\":\n                        if (!pokemon.types.includes(\"Poison\")) { \n                            pokemon.status = \"tox\"; \n                            this._result2.flags[id].push(\"tox inflicted\");\n                        }\n                        break;\n                    case \"Poison Barb\":\n                        if (!pokemon.types.includes(\"Poison\")) { \n                            pokemon.status = \"psn\"; \n                            this._result2.flags[id].push(\"psn inflicted\");\n                        }\n                        break;\n                    default: break\n                }\n            }\n        }\n    }\n\n    private removeProtection() {\n        const fields = this._raidState.fields;\n        fields[this.raiderID].attackerSide.isProtected = false;\n        fields[this.raiderID].attackerSide.isWideGuard = false;\n        fields[this.raiderID].attackerSide.isQuickGuard = false;\n        fields[0].attackerSide.isProtected = false;\n        fields[0].attackerSide.isWideGuard = false;\n        fields[0].attackerSide.isQuickGuard = false;\n    }\n\n    private countDownFieldEffects() {\n        const fields = this._raidState.fields;\n        for (let field of fields) {\n            // global effects\n            field.terrainTurnsRemaining = Math.max(0, (field.terrainTurnsRemaining || 0) - 1);\n            field.terrain = field.terrainTurnsRemaining ? field.terrain : undefined;\n            field.weatherTurnsRemaining = Math.max(0, (field.weatherTurnsRemaining || 0) - 1);\n            field.weather = field.weatherTurnsRemaining ? field.weather : undefined;\n            field.isGravity = Math.max(0, field.isGravity - 1);\n            field.isTrickRoom = Math.max(0, field.isTrickRoom - 1);\n            field.isMagicRoom = Math.max(0, field.isMagicRoom - 1);\n            field.isWonderRoom = Math.max(0, field.isWonderRoom - 1);\n            // single-side effects\n            field.attackerSide.isReflect = Math.max(0, field.attackerSide.isReflect - 1);\n            field.attackerSide.isLightScreen = Math.max(0, field.attackerSide.isLightScreen - 1);\n            field.attackerSide.isAuroraVeil = Math.max(0, field.attackerSide.isAuroraVeil - 1);\n            field.attackerSide.isMist = Math.max(0, field.attackerSide.isMist - 1);\n            field.attackerSide.isSafeguard = Math.max(0, field.attackerSide.isSafeguard - 1);\n            field.attackerSide.isTailwind = Math.max(0, field.attackerSide.isTailwind - 1);\n            field.attackerSide.isAtkCheered = Math.max(0, field.attackerSide.isAtkCheered - 1);\n            field.attackerSide.isDefCheered = Math.max(0, field.attackerSide.isDefCheered - 1);\n        }\n        /// add flags for effects that have ended\n        // global\n        if (this.raidState.fields[0].weather && !fields[0].weather) { this._endFlags.push(this.raidState.fields[0].weather! + \" ended\"); }\n        if (this.raidState.fields[0].terrain && !fields[0].terrain) { this._endFlags.push(this.raidState.fields[0].terrain! + \" terrain ended\"); }\n        if (this.raidState.fields[0].isGravity && !fields[0].isGravity) { this._endFlags.push(\"Gravity ended\"); }\n        if (this.raidState.fields[0].isTrickRoom && !fields[0].isTrickRoom) { this._endFlags.push(\"Trick Room ended\"); }\n        if (this.raidState.fields[0].isMagicRoom && !fields[0].isMagicRoom) { this._endFlags.push(\"Magic Room ended\"); }\n        if (this.raidState.fields[0].isWonderRoom && !fields[0].isWonderRoom) { this._endFlags.push(\"Wonder Room ended\"); }\n        // boss\n        if (this.raidState.fields[0].attackerSide.isReflect && !fields[0].attackerSide.isReflect) { this._endFlags.push(\"Reflect ended\"); }\n        if (this.raidState.fields[0].attackerSide.isLightScreen && !fields[0].attackerSide.isLightScreen) { this._endFlags.push(\"Light Screen ended\"); }\n        if (this.raidState.fields[0].attackerSide.isAuroraVeil && !fields[0].attackerSide.isAuroraVeil) { this._endFlags.push(\"Aurora Veil ended\"); }\n        if (this.raidState.fields[0].attackerSide.isMist && !fields[0].attackerSide.isMist) { this._endFlags.push(\"Mist ended\"); }\n        if (this.raidState.fields[0].attackerSide.isSafeguard && !fields[0].attackerSide.isSafeguard) { this._endFlags.push(\"Safeguard ended\"); }\n        if (this.raidState.fields[0].attackerSide.isTailwind && !fields[0].attackerSide.isTailwind) { this._endFlags.push(\"Tailwind ended\"); }\n        // raiders\n        if (this.raidState.fields[1].attackerSide.isReflect && !fields[1].attackerSide.isReflect) { this._endFlags.push(\"Reflect ended\"); }\n        if (this.raidState.fields[1].attackerSide.isLightScreen && !fields[1].attackerSide.isLightScreen) { this._endFlags.push(\"Light Screen ended\"); }\n        if (this.raidState.fields[1].attackerSide.isAuroraVeil && !fields[1].attackerSide.isAuroraVeil) { this._endFlags.push(\"Aurora Veil ended\"); }\n        if (this.raidState.fields[1].attackerSide.isMist && !fields[1].attackerSide.isMist) { this._endFlags.push(\"Mist ended\"); }\n        if (this.raidState.fields[1].attackerSide.isSafeguard && !fields[1].attackerSide.isSafeguard) { this._endFlags.push(\"Safeguard ended\"); }\n        if (this.raidState.fields[1].attackerSide.isTailwind && !fields[1].attackerSide.isTailwind) { this._endFlags.push(\"Tailwind ended\"); }\n        if (this.raidState.fields[1].attackerSide.isAtkCheered && !fields[1].attackerSide.isAtkCheered) { this._endFlags.push(\"Attack Cheer ended\"); }\n        if (this.raidState.fields[1].attackerSide.isDefCheered && !fields[1].attackerSide.isDefCheered) { this._endFlags.push(\"Defense Cheer ended\"); }\n    }\n\n    private countDownAbilityNullification() {\n        // count down nullified ability counter\n        const pokemon = this._raidState.getPokemon(this.raiderID);\n        if (pokemon.abilityNullified) {\n            pokemon.abilityNullified!--;\n            if (pokemon.abilityNullified === 0) { // restore ability after a full turn\n                pokemon.ability = pokemon.originalAbility as AbilityName;\n                // Not sure if we need to do anything special here to trigger ability reactivation\n                if (pokemon.ability !== \"(None)\") {\n                    this._endFlags.push(pokemon.role + \" — \" + pokemon.originalAbility + \" restored\");\n                }\n            }\n        }\n    }\n}","import { Move, Generations } from \"../calc\";\nimport { MoveName } from \"../calc/data/interface\";\nimport { TurnGroupInfo } from \"./interface\";\nimport { RaidState } from \"./RaidState\";\nimport { RaidMove } from \"./RaidMove\";\nimport { RaidTurn, RaidTurnResult } from \"./RaidTurn\";\n\nconst gen = Generations.get(9);\n\nexport type RaidBattleInfo = {\n    name?: string;\n    notes?: string;\n    credits?: string;\n    startingState: RaidState;\n    groups: TurnGroupInfo[];\n}\n\nexport type RaidBattleResults = {\n    endState: RaidState;\n    turnResults: RaidTurnResult[]; \n    turnZeroFlags: string[][];\n    turnZeroOrder: number[];\n}\n\nexport class RaidBattle {\n    startingState: RaidState;\n    groups: TurnGroupInfo[];\n\n    _state!: RaidState;\n    _turnResults!: RaidTurnResult[];\n\n    _turnZeroFlags!: string[][];\n    _turnZeroOrder!: number[];\n\n    constructor(info: RaidBattleInfo) {\n        this.startingState = info.startingState;\n        this.groups = info.groups;\n    }\n\n    public result(): RaidBattleResults {\n        try {\n            this._state = this.startingState.clone();\n            this.calculateTurnZero();\n            this.calculateTurns();\n            return {\n                endState: this._state,\n                turnResults: this._turnResults,\n                turnZeroFlags: this._turnZeroFlags,\n                turnZeroOrder: this._turnZeroOrder\n            }\n        } catch (e) {\n            console.error(e);\n            return {\n                endState: this.startingState.clone(),\n                turnResults: [],\n                turnZeroFlags: [[],[],[],[],[],[],[],[],[],[]],\n                turnZeroOrder: [0,1,2,3,4]\n            }\n        }\n    }\n\n    private calculateTurns(){\n        this._turnResults = [];\n        for (let i = 0; i < this.groups.length; i++) {\n            const turns = this.groups[i].turns;\n            const repeats = this.groups[i].repeats || 1;\n            for (let j = 0; j < repeats; j++) {\n                for (let k = 0; k < turns.length; k++) {\n                    const turn = turns[k];\n                    const result = new RaidTurn(this._state, turn).result();\n                    this._turnResults.push(result);\n                    this._state = result.state;\n                }\n            }\n        }\n    }\n\n    private calculateTurnZero(){\n        this._turnZeroFlags = [[],[],[],[],[],[],[],[],[],[]];  // each pokemon gets two sets of flags, one for switch-in effects, one for item/ability effects as a result of the first round of effects\n        // sort pokemon by speed to see what happens first\n        const speeds = this._state.raiders.map(raider => raider.effectiveSpeed);\n        const speedOrder = speeds.map((speed, index) => [speed, index]).sort((a, b) => b[0] - a[0]).map(pair => pair[1]);\n        this._turnZeroOrder = speedOrder;\n        for (let id of speedOrder) {\n            const flags = this._state.switchIn(id);\n            for (let i=0; i<5; i++) {\n                this._turnZeroFlags[i] = this._turnZeroFlags[i].concat(flags[i]);\n            }\n        }\n        // check for item/ability activation by executing dummy moves\n        for (let id of speedOrder) {\n            const moveResult = new RaidMove(\n                {name: \"(No move)\" as MoveName, target: \"user\"}, \n                new Move(gen, \"(No move)\"), \n                this._state,\n                id,\n                id,\n                id,\n                true,\n                ).result();\n            this._state = moveResult.state;\n            for (let i=0; i<5; i++) {\n                this._turnZeroFlags[i+5] = this._turnZeroFlags[i+5].concat(moveResult.flags[i]);\n            }\n        } \n    }\n}","import { Field, Pokemon, Generations } from \"../calc\";\nimport { MoveName, StatsTable, StatIDExceptHP, AbilityName } from \"../calc/data/interface\";\nimport { extend } from '../calc/util';\nimport { safeStatStage, modifyPokemonSpeedByAbility, modifyPokemonSpeedByField, modifyPokemonSpeedByItem, modifyPokemonSpeedByQP, modifyPokemonSpeedByStatus } from \"./util\";\nimport * as State from \"./interface\";\nimport { getModifiedStat } from \"../calc/mechanics/util\";\n\nconst gen = Generations.get(9);\n\nexport class Raider extends Pokemon implements State.Raider {\n    id: number;\n    role: string;\n    shiny: boolean;\n    field: Field;               // each pokemon gets its own field to deal with things like Helping Hand and Protect\n    moveData: State.MoveData[];   \n    extraMoves?: MoveName[];    // for special boss actions\n    extraMoveData?: State.MoveData[];\n\n    isEndure?: boolean;         // store that a Pokemon can't faint until its next move\n    lastMove?: State.MoveData;  // stored for Instruct and Copycat\n    lastTarget?: number;        // stored for Instruct and Copycat\n    moveRepeated?: number;      // stored for boost from Metronome, Fury Cutter, etc\n    teraCharge: number;         // stored for Tera activation\n\n    shieldActivateHP?: number;\n    shieldBroken?: boolean;\n\n    abilityNullified?: number;  // indicates when the boss has nullified the ability of the Raider\n    originalAbility: AbilityName | \"(None)\";   // stores ability when nullified\n\n    constructor(\n        id: number, \n        role: string, \n        shiny: boolean | undefined, \n        field: Field, \n        pokemon: Pokemon, \n        moveData: State.MoveData[], \n        extraMoves: MoveName[] = [], \n        extraMoveData: State.MoveData[] = [], \n        isEndure: boolean = false, \n        lastMove: State.MoveData | undefined = undefined, \n        lastTarget: number | undefined = undefined, \n        moveRepeated: number | undefined = undefined,\n        teraCharge: number | undefined = 0, \n        shieldActivateHP: number | undefined = undefined, \n        shieldBroken: boolean | undefined = undefined, \n        abilityNullified: number | undefined = 0, \n        originalAbility: AbilityName | \"(None)\" | undefined = undefined,\n    ) {\n        super(pokemon.gen, pokemon.name, {...pokemon})\n        this.id = id;\n        this.role = role;\n        this.shiny = !!shiny;\n        this.field = field;\n        this.moveData = moveData;\n        this.extraMoves = extraMoves;\n        this.extraMoveData = extraMoveData;\n        this.isEndure = isEndure;\n        this.lastMove = lastMove;\n        this.lastTarget = lastTarget;\n        this.moveRepeated = moveRepeated;\n        this.teraCharge = teraCharge;\n        this.shieldActivateHP = shieldActivateHP;\n        this.shieldBroken = shieldBroken;\n        this.abilityNullified = abilityNullified;\n        this.originalAbility = originalAbility || pokemon.ability || \"(None)\";\n    }\n\n    clone(): Raider {\n        return new Raider(\n            this.id, \n            this.role, \n            this.shiny,\n            this.field.clone(),\n            new Pokemon(this.gen, this.name, {\n                level: this.level,\n                bossMultiplier: this.bossMultiplier,\n                statMultipliers: this.statMultipliers,\n                ability: this.ability,\n                abilityOn: this.abilityOn,\n                isDynamaxed: this.isDynamaxed,\n                dynamaxLevel: this.dynamaxLevel,\n                isSaltCure: this.isSaltCure,\n                alliesFainted: this.alliesFainted,\n                boostedStat: this.boostedStat,\n                usedBoosterEnergy: this.usedBoosterEnergy,\n                isIngrain: this.isIngrain,\n                item: this.item,\n                gender: this.gender,\n                nature: this.nature,\n                ivs: extend(true, {}, this.ivs),\n                evs: extend(true, {}, this.evs),\n                boosts: extend(true, {}, this.boosts),\n                randomBoosts: this.randomBoosts,\n                originalCurHP: this.originalCurHP,\n                status: this.status,\n                teraType: this.teraType,\n                isTera: this.isTera,\n                shieldData: this.shieldData,\n                shieldActive: this.shieldActive,\n                toxicCounter: this.toxicCounter,\n                hitsTaken: this.hitsTaken,\n                changedTypes: this.changedTypes,\n                moves: this.moves.slice(),\n                overrides: this.species,\n            }),\n            this.moveData,\n            this.extraMoves,\n            this.extraMoveData,\n            this.isEndure,\n            this.lastMove,\n            this.lastTarget,\n            this.moveRepeated,\n            this.teraCharge,\n            this.shieldActivateHP,\n            this.shieldBroken,\n            this.abilityNullified,\n            this.originalAbility,\n        )\n    }\n\n    public get boostCoefficient(): number {\n        const hasSimple = this.ability === \"Simple\";\n        const hasContrary = this.ability === \"Contrary\";\n        return hasSimple ? 2 : hasContrary ? -1 : 1;\n    }\n\n    public get effectiveSpeed(): number {\n        let speed = getModifiedStat(this.stats.spe, this.boosts.spe, gen);\n        speed = modifyPokemonSpeedByStatus(speed, this.status, this.ability);\n        speed = modifyPokemonSpeedByItem(speed, this.item);\n        speed = modifyPokemonSpeedByAbility(speed, this.ability, this.abilityOn, this.status);\n        speed = modifyPokemonSpeedByQP(speed, this.field, this.ability, this.item, this.boostedStat as StatIDExceptHP);\n        speed = modifyPokemonSpeedByField(speed, this.field);\n        return speed;\n    }\n\n    public applyDamage(damage: number): number { \n        this.originalCurHP = Math.min(this.maxHP(), Math.max(0, this.originalCurHP - damage));\n        if (this.isEndure && this.originalCurHP === 0) {\n            this.originalCurHP = 1;\n        }\n        return this.originalCurHP;\n    }\n\n    public applyStatChange(boosts: Partial<StatsTable>): StatsTable {\n        const diff: StatsTable = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0, acc: 0, eva: 0};\n        for (let stat in boosts) {\n            const statId = stat as StatIDExceptHP;\n            const originalStat = this.boosts[statId] || 0;\n            this.boosts[statId] = safeStatStage(originalStat + (boosts[statId] || 0) * this.boostCoefficient)\n            diff[statId] = (this.boosts[statId] || 0) - originalStat;\n        }\n        return diff;\n    }\n\n    public loseItem() {\n        // Unburden\n        if (this.ability === \"Unburden\" && this.item !== undefined) {\n            this.abilityOn = true;\n        }\n        this.item = undefined;\n    }\n\n    public activateTera(): boolean {\n        if (!this.isTera && this.teraCharge >= 3) {\n            this.isTera = true;\n            return true;\n        }\n        return false;\n    }\n\n    public checkShield() {\n        if (this.id !== 0) { return; }\n        if (!this.shieldData) { return; }\n        if (this.shieldBroken) { return; }\n        if (this.originalCurHP === 0) { return; }\n        if (this.shieldActivateHP === undefined) { // check for shield activation by damage\n            const activationHP = this.shieldData.hpTrigger / 100 * this.maxHP();\n            if (this.originalCurHP <= activationHP) {\n                this.shieldActive = true;\n                this.shieldActivateHP = this.originalCurHP;\n            }\n        } else { // check for shield breaking by damage\n            const breakHP = this.shieldActivateHP - (this.shieldData.shieldCancelDamage / 100 * this.maxHP());\n            if (this.originalCurHP < breakHP) {\n                this.shieldActive = false;\n                this.shieldBroken = true;\n                // TODO: adjust damage overflow from breaking shield?\n            }\n        }\n    }\n\n}","import { Field, Generations, Pokemon, StatsTable } from \"../calc\";\nimport { Raider } from \"./Raider\";\nimport { getModifiedStat, getQPBoostedStat } from \"../calc/mechanics/util\";\nimport * as State from \"./interface\";\nimport { AbilityName, ItemName, SpeciesName, StatIDExceptHP, StatusName, Terrain, TypeName, Weather } from \"../calc/data/interface\";\nimport { getBoostCoefficient, safeStatStage } from \"./util\";\n\nconst gen = Generations.get(9);\n\nexport class RaidState implements State.RaidState{\n    raiders: Raider[]; // raiders[0] is the boss, while raiders 1-5 are the players\n\n    constructor(raiders: Raider[]) {\n        this.raiders = raiders;\n    }\n\n    clone(): RaidState {\n        return new RaidState(\n            this.raiders.map(raider => raider.clone()) \n        )\n    }\n\n    public get fields(): Field[] {\n        return this.raiders.map(raider => raider.field);\n    }\n\n    public getPokemon(id: number): Raider {\n        return this.raiders[id];\n    }\n\n    public applyDamage(id: number, damage: number, nHits: number = 0, isCrit: boolean = false, isSuperEffective: boolean = false, moveType?: TypeName) {\n        const pokemon = this.getPokemon(id);\n        if (pokemon.originalCurHP === 0) { return; } // prevent healing KOd Pokemon, and there's no need to subtract damage from 0HP\n        const originalHP = pokemon.originalCurHP;\n        if (nHits > 0 && damage > 0) {\n            pokemon.applyDamage(damage * nHits); // damage is per-hit for multi-hit moves\n        } else {\n            pokemon.applyDamage(damage);\n        }\n        const maxHP = pokemon.maxHP();\n        const opponents = id === 0 ? [1,2,3,4] : [0];\n        let unnerve = false;\n        for (let i of opponents) {\n            if (this.getPokemon(i).ability === \"Unnerve\") { unnerve = true; break; }\n        }\n        if (nHits > 0 && damage > 0) { // checks that the pokemon was attacked, and that the damage was not due to recoil or chip damage\n            if (damage > 0) {\n                pokemon.hitsTaken = pokemon.hitsTaken + nHits;\n            }\n            // Item consumption triggered by damage\n            // Focus Sash\n            if (pokemon.item === \"Focus Sash\" || pokemon.ability === \"Sturdy\") {\n                if (pokemon.originalCurHP <= 0 && originalHP === maxHP) { \n                    pokemon.originalCurHP = 1;\n                    if (pokemon.ability !== \"Sturdy\") { this.loseItem(id); } \n                }\n            }\n\n            // Weakness Policy and Super-Effective reducing Berries\n            // TO DO - abilities that let users use berries more than once\n            if (damage > 0 && isSuperEffective) {\n                if (pokemon.item === \"Weakness Policy\") {\n                    this.applyStatChange(id, {atk: 2, spa: 2}, true, true)\n                    this.loseItem(id);\n                } else if (!unnerve) {\n                    switch (pokemon.item) {\n                        case \"Occa Berry\":  // the calc alread takes the berry into account, so we can just remove it here\n                            if (moveType === \"Fire\") { this.loseItem(id); }\n                            break;\n                        case \"Passho Berry\":\n                            if (moveType === \"Water\") { this.loseItem(id); }\n                            break;\n                        case \"Wacan Berry\":\n                            if (moveType === \"Electric\") { this.loseItem(id); }\n                            break;\n                        case \"Rindo Berry\":\n                            if (moveType === \"Grass\") { this.loseItem(id); }\n                            break;\n                        case \"Yache Berry\":\n                            if (moveType === \"Ice\") { this.loseItem(id); }\n                            break;\n                        case \"Chople Berry\":\n                            if (moveType === \"Fighting\") { this.loseItem(id); }\n                            break;\n                        case \"Kebia Berry\":\n                            if (moveType === \"Poison\") { this.loseItem(id); }\n                            break;\n                        case \"Shuca Berry\":\n                            if (moveType === \"Ground\") { this.loseItem(id); }\n                            break;\n                        case \"Coba Berry\":\n                            if (moveType === \"Flying\") { this.loseItem(id); }\n                            break;\n                        case \"Payapa Berry\":\n                            if (moveType === \"Psychic\") { this.loseItem(id); }\n                            break;\n                        case \"Tanga Berry\":\n                            if (moveType === \"Bug\") { this.loseItem(id); }\n                            break;\n                        case \"Charti Berry\":\n                            if (moveType === \"Rock\") { this.loseItem(id); }\n                            break;\n                        case \"Kasib Berry\":\n                            if (moveType === \"Ghost\") { this.loseItem(id); }\n                            break;\n                        case \"Haban Berry\":\n                            if (moveType === \"Dragon\") { this.loseItem(id); }\n                            break;\n                        case \"Colbur Berry\":\n                            if (moveType === \"Dark\") { this.loseItem(id); }\n                            break;\n                        case \"Babiri Berry\":\n                            if (moveType === \"Steel\") { this.loseItem(id); }\n                            break;\n                        case \"Roseli Berry\":\n                            if (moveType === \"Fairy\") { this.loseItem(id); }\n                            break;\n                        default: break;\n                    }\n                }\n            }\n            if (!unnerve && pokemon.item === \"Chiban Berry\" && moveType === \"Normal\") {\n                this.loseItem(id);\n            }\n            \n            // abilities triggered by damage\n            // Anger Point\n            if (isCrit && pokemon.ability === \"Anger Point\") { \n                const boost = {atk: 12};\n                this.applyStatChange(id, boost, true, true);\n            };\n            // Steam Engine\n            if ((moveType === \"Fire\" || moveType === \"Water\" ) && pokemon.ability === \"Steam Engine\") {\n                const boost = {spe: 6};\n                this.applyStatChange(id, boost, true, true);\n            }\n            // Water Compaction\n            if (moveType === \"Water\" && pokemon.ability === \"Water Compaction\") {\n                const boost = {def: 2 * nHits};\n                this.applyStatChange(id, boost, true, true);\n            }\n            // Justified\n            if (moveType === \"Dark\" && pokemon.ability === \"Justified\") {\n                const boost = {atk: nHits};\n                this.applyStatChange(id, boost, true, true);\n            }    \n            // Weak Armor\n            if (pokemon.ability === \"Weak Armor\") {\n                const boost = {def: -1 * nHits, spe: 2 * nHits};\n                this.applyStatChange(id, boost, true, true);\n            }\n            // Stamina\n            if (pokemon.ability === \"Stamina\") {\n                const boost = {def: nHits};\n                this.applyStatChange(id, boost, true, true);\n            }\n            // Anger Shell\n            if (pokemon.ability === \"Anger Shell\" && originalHP > maxHP/2 && pokemon.originalCurHP <= maxHP/2) {\n                const boost = {atk: 1, spa: 1, spe: 1};\n                this.applyStatChange(id, boost, true, true);\n            }\n            // Berserk\n            if (pokemon.ability === \"Berserk\" && originalHP > maxHP/2 && pokemon.originalCurHP <= maxHP/2) {\n                const boost = {spa: 1};\n                this.applyStatChange(id, boost, true, true);\n            }\n            // Electromorphosis\n            if (pokemon.ability ===  \"Electromorphosis\") {\n                pokemon.field.attackerSide.isCharged = true;\n            }\n            // Seed Sower\n            if (pokemon.ability === \"Seed Sower\") {\n                this.applyTerrain(\"Grassy\");\n            }\n        }\n        /// Berry Consumption triggered by damage\n        if (!unnerve && pokemon.item && pokemon.item?.includes(\"Berry\")) {\n            // 50% HP Berries\n            if (pokemon.originalCurHP <= maxHP / 2) {\n                if (pokemon.item === \"Sitrus Berry\") {\n                    pokemon.originalCurHP += Math.floor(maxHP / 4);\n                    this.loseItem(id);\n                } else if (pokemon.item === \"Oran Berry\") {\n                    pokemon.originalCurHP = Math.min(maxHP, pokemon.originalCurHP + 10);\n                    this.loseItem(id);\n                }\n            }\n            // 33% HP Berries\n            // TO DO\n            // if (pokemon.originalCurHP <= maxHP / 3) {\n            //     switch (pokemon.item) {\n\n            //     }\n            // }\n            // 25% HP Berries\n            if (pokemon.originalCurHP <= maxHP / 4) {\n                switch (pokemon.item) {\n                    case \"Liechi Berry\":\n                        this.applyStatChange(id, {atk: 1}, true, true);\n                        this.loseItem(id);\n                        break;\n                    case \"Ganlon Berry\":\n                        this.applyStatChange(id, {def: 1}, true, true);\n                        this.loseItem(id);\n                        break;\n                    case \"Petaya Berry\":\n                        this.applyStatChange(id, {spa: 1}, true, true);\n                        this.loseItem(id);\n                        break;\n                    case \"Apicot Berry\":\n                        this.applyStatChange(id, {spd: 1}, true, true);\n                        this.loseItem(id);\n                        break;\n                    case \"Salac Berry\":\n                        this.applyStatChange(id, {spe: 1}, true, true);\n                        this.loseItem(id);\n                        break;\n                }\n            }\n        }\n    }\n\n    public applyStatChange(id: number, boosts: Partial<StatsTable>, copyable: boolean = true, fromSelf: boolean = false): StatsTable {\n        const pokemon = this.getPokemon(id);\n        const diff = pokemon.applyStatChange(boosts);\n        // Defiant and Competitive\n        if (!fromSelf && (pokemon.ability === \"Defiant\" || pokemon.ability === \"Competitive\")) {\n            const numNegativeBoosts = Object.values(diff).reduce((p, c) => p + (c < 0 ? 1 : 0), 0);\n            if (numNegativeBoosts > 0) {\n                const boost = pokemon.ability === \"Defiant\" ? {atk: 2 * numNegativeBoosts} : {spa: 2 * numNegativeBoosts};\n                this.applyStatChange(id, boost, true, true);\n            }\n        }\n        // Mirror Herb and Opportunist\n        if (copyable) { // Stat changes that are being copied shouldn't be copied in turn\n            const opponentIds = id === 0 ? [1,2,3,4] : [0];\n            for (const opponentId of opponentIds) {\n                const opponent = this.getPokemon(opponentId);\n                const mirrorHerb = opponent.item === \"Mirror Herb\";\n                const opportunist = opponent.ability === \"Opportunist\";\n                if (mirrorHerb || opportunist)  {\n                    const both = mirrorHerb && opportunist;\n                    const positiveDiff = {...diff};\n                    let hasPositiveBoost = false;\n                    for (const stat in positiveDiff) {\n                        const statId = stat as StatIDExceptHP;\n                        if (both) {\n                            positiveDiff[statId] *= 2;\n                        }\n                        if ((positiveDiff[statId] || 0) <= 0) {\n                            positiveDiff[statId] = 0;\n                        } else {\n                            hasPositiveBoost = true;\n                        }\n                    }\n                    if (hasPositiveBoost) {\n                        this.applyStatChange(opponentId, positiveDiff, false, true);\n                        if (opponent.item === \"Mirror Herb\") { this.loseItem(opponentId); }\n                    }\n                }\n            }\n        }\n        // White Herb\n        if (pokemon.item === \"White Herb\") {\n            let used = false\n            for (const stat in pokemon.boosts) {\n                const statId = stat as StatIDExceptHP;\n                if ((pokemon.boosts[statId] || 0) < 0) {\n                    pokemon.boosts[statId] = 0;\n                    used = true;\n                }\n            }\n            if (used) { this.loseItem(id); }\n        }\n \n        return diff;\n    }\n\n    public applyStatus(id: number, status: StatusName) {\n        const pokemon = this.getPokemon(id);\n        if (pokemon.status === \"\" || pokemon.status === undefined) {\n            pokemon.status = status;\n        }\n        // Status curing berries\n        if (pokemon.item === \"Cheri Berry\" && pokemon.status === \"par\") { pokemon.status = \"\"; this.loseItem(id); }\n        if (pokemon.item === \"Chesto Berry\" && pokemon.status === \"slp\") { pokemon.status = \"\"; this.loseItem(id); }\n        if (pokemon.item === \"Pecha Berry\" && pokemon.status === \"psn\") { pokemon.status = \"\"; this.loseItem(id); }\n        if (pokemon.item === \"Rawst Berry\" && pokemon.status === \"brn\") { pokemon.status = \"\"; this.loseItem(id); }\n        if (pokemon.item === \"Aspear Berry\" && pokemon.status === \"frz\") { pokemon.status = \"\"; this.loseItem(id); }\n        if (pokemon.item === \"Lum Berry\" && pokemon.status !== \"\") { \n            pokemon.status = \"\"; \n            pokemon.volatileStatus = pokemon.volatileStatus.filter(status => status !== \"confusion\"); \n            this.loseItem(id); \n        }\n    }\n\n    public loseItem(id: number) {\n        const pokemon = this.getPokemon(id);\n        pokemon.loseItem();\n        // Symbiosis\n        if (id > 0) {\n            const symbiosisIds: number[] = []\n            for (let sid=1; sid<5; sid++) {\n                if (sid !== id && this.getPokemon(sid).ability === \"Symbiosis\" && this.getPokemon(sid).item !== undefined) {\n                    symbiosisIds.push(sid);\n                }\n            }\n            if (symbiosisIds.length > 0) {\n                // speed check for symbiosis\n                let fastestSymbId = symbiosisIds[0];\n                let fastestSymbPoke = this.getPokemon(fastestSymbId);\n                let fastestSymbSpeed = fastestSymbPoke.effectiveSpeed;\n                for (let i=1; i<symbiosisIds.length; i++) {\n                    const poke = this.getPokemon(symbiosisIds[i]);\n                    const speed = getModifiedStat(poke.stats.spe, poke.boosts.spe, gen);\n                    const field = poke.field;\n                    if ( (!field.isTrickRoom && speed > fastestSymbSpeed) || (field.isTrickRoom && speed < fastestSymbSpeed) ) {\n                        fastestSymbId = symbiosisIds[i];\n                        fastestSymbPoke = poke;\n                        fastestSymbSpeed = speed;\n                    } \n                }\n                // symbiosis item transfer\n                this.recieveItem(id, fastestSymbPoke.item!);\n                fastestSymbPoke.item = undefined; // don't call loseItem because it will trigger symbiosis again\n            }\n        }\n    }\n\n    public recieveItem(id: number, item: ItemName | undefined) {\n        const pokemon = this.getPokemon(id);\n        pokemon.item = item;\n        /// Items that activate upon reciept or switch in\n        // Booster Energy\n        if (pokemon.item === \"Booster Energy\" && (pokemon.ability === \"Protosynthesis\" || pokemon.ability === \"Quark Drive\") && !pokemon.abilityOn) {\n            pokemon.abilityOn = true;\n            const statId = getQPBoostedStat(pokemon, gen) as StatIDExceptHP;\n            pokemon.boostedStat = statId;\n            pokemon.usedBoosterEnergy = true;\n            this.loseItem(id)\n        }\n        // Terrain Seeds\n        if (item && item.includes(\"Seed\")) {\n            this.applyTerrain(pokemon.field.terrain, pokemon.field.terrainTurnsRemaining, [id]);\n        }\n        // Berries consumed immediately upon reciept (via Symbiosis, Trick, etc) if their conditions are met\n        this.applyDamage(id, 0, 0);\n    }\n\n    public applyTerrain(terrain: Terrain | undefined, turns: number = 20, ids: number[] = [0,1,2,3,4]) {\n        for (let id of ids) {\n            const pokemon = this.getPokemon(id);\n            pokemon.field.terrain = terrain;\n            pokemon.field.terrainTurnsRemaining = turns;\n            // Quark Drive\n            if (pokemon.ability === \"Quark Drive\" && !pokemon.usedBoosterEnergy) {\n                if (pokemon.field.terrain === \"Electric\" && !pokemon.abilityOn) {\n                    pokemon.abilityOn = true;\n                    const statId = getQPBoostedStat(pokemon, gen) as StatIDExceptHP;\n                    pokemon.boostedStat = statId;\n                } else if (pokemon.field.terrain !== \"Electric\" && pokemon.abilityOn) {\n                    pokemon.abilityOn = false;\n                    pokemon.boostedStat = undefined;\n                    if (pokemon.item === \"Booster Energy\") { this.recieveItem(id, \"Booster Energy\" as ItemName); }\n                }\n            }\n            // Terrain Seeds\n            if (pokemon.item === \"Electric Seed\" && pokemon.field.terrain === \"Electric\") {\n                this.applyStatChange(id, {def: 1}, true, true);\n                this.loseItem(id);\n            } else if (pokemon.item === \"Grassy Seed\" && pokemon.field.terrain === \"Grassy\") {\n                this.applyStatChange(id, {def: 1}, true, true);\n                this.loseItem(id);\n            } else if (pokemon.item === \"Psychic Seed\" && pokemon.field.terrain === \"Psychic\") {\n                this.applyStatChange(id, {spd: 1}, true, true);\n                this.loseItem(id);\n            } else if (pokemon.item === \"Misty Seed\" && pokemon.field.terrain === \"Misty\") {\n                this.applyStatChange(id, {spd: 1}, true, true);\n                this.loseItem(id);\n            }\n        }\n    }\n\n    public applyWeather(weather: Weather | undefined, turns = 20, ids: number[] = [0,1,2,3,4]) {\n        for (let id of ids) {\n            const pokemon = this.getPokemon(id);\n            pokemon.field.weather = weather;\n            pokemon.field.weatherTurnsRemaining = turns;\n            // Protosynthesis\n            if (pokemon.ability === \"Protosynthesis\" && !pokemon.usedBoosterEnergy) {\n                if ((pokemon.field.weather || \"\").includes(\"Sun\") && !pokemon.abilityOn) {\n                    pokemon.abilityOn = true;\n                    const statId = getQPBoostedStat(pokemon, gen) as StatIDExceptHP;\n                    pokemon.boostedStat = statId;\n                } else if ((pokemon.field.weather || \"\").includes(\"Sun\")  && pokemon.abilityOn) {\n                    pokemon.abilityOn = false;\n                    pokemon.boostedStat = undefined;\n                    if (pokemon.item === \"Booster Energy\") { this.recieveItem(id, \"Booster Energy\" as ItemName); }\n                }\n            }\n        }\n    }\n\n    public activateTera(id: number): boolean {\n        const pokemon = this.getPokemon(id);\n        return pokemon.activateTera();\n    }\n\n    public faint(id: number) {\n        let pokemon = this.getPokemon(id);\n        const ability = pokemon.ability;\n        // reset stats, status, etc, keeping a few things \n        this.raiders[id] = new Raider(\n            id,\n            pokemon.role,\n            pokemon.shiny,\n            pokemon.field,\n            new Pokemon(\n                gen,\n                pokemon.name,\n                {\n                    level: pokemon.level,\n                    ability: pokemon.originalAbility, // restore original ability\n                    item: pokemon.item,\n                    nature: pokemon.nature,\n                    ivs: pokemon.ivs,\n                    evs: pokemon.evs,\n                    hitsTaken: pokemon.hitsTaken,\n                    moves: pokemon.moves,\n                    originalCurHP: 0,\n                },\n            ),\n            pokemon.moveData,\n            pokemon.extraMoves,\n            pokemon.extraMoveData,\n            false,      // isEndure\n            pokemon.lastMove,\n            pokemon.lastTarget,\n            undefined,  // moveRepeated\n            pokemon.teraCharge,\n            pokemon.shieldActivateHP,\n            pokemon.shieldBroken,\n            0,          // abilityNullified\n            pokemon.originalAbility\n        );\n\n\n        \n        /// remove ability effects that are removed upon fainting\n        // on/off field-based abilties\n        if (ability === \"Cloud Nine\") {\n            if (\n                !this.raiders\n                .filter(r => r.id !== id && r.originalCurHP !== 0)\n                .map(r => r.ability).includes(\"Cloud Nine\" as AbilityName)\n            ) {\n                for (let field of this.fields) {\n                    field.isCloudNine = false;\n                }\n            }\n        } else if (ability === \"Sword of Ruin\") {\n            if (\n                !this.raiders\n                .filter(r => r.id !== id && r.originalCurHP !== 0)\n                .map(r => r.ability).includes(\"Sword of Ruin\" as AbilityName)\n            ) {\n                for (let field of this.fields) {\n                    field.isSwordOfRuin = false;\n                }\n            }\n        } else if (ability === \"Beads of Ruin\") {\n            if (\n                !this.raiders\n                .filter(r => r.id !== id && r.originalCurHP !== 0)\n                .map(r => r.ability).includes(\"Beads of Ruin\" as AbilityName)\n            ) {\n                for (let field of this.fields) {\n                    field.isBeadsOfRuin = false;\n                }\n            }\n        } else if (ability === \"Vessel of Ruin\") {\n            if (\n                !this.raiders\n                .filter(r => r.id !== id && r.originalCurHP !== 0)\n                .map(r => r.ability).includes(\"Vessel of Ruin\" as AbilityName)\n            ) {\n                for (let field of this.fields) {\n                    field.isVesselOfRuin = false;\n                }\n            }\n        } else if (ability === \"Tablets of Ruin\") {\n            if (\n                !this.raiders\n                .filter(r => r.id !== id && r.originalCurHP !== 0)\n                .map(r => r.ability).includes(\"Tablets of Ruin\" as AbilityName)\n            ) {\n                for (let field of this.fields) {\n                    field.isTabletsOfRuin = false;\n                }\n            }\n        // stackable abilities\n        } else if (ability === \"Steely Spirit\") {\n            if (id === 0) {\n                this.fields[0].attackerSide.steelySpirits -= 1;\n            } else {\n                for (let field of this.fields.slice(1)) {\n                    field.attackerSide.steelySpirits -= 1;\n                }\n            }\n        } else if (ability === \"Power Spot\") {\n            if (id === 0) {\n                this.fields[0].attackerSide.powerSpots -= 1;\n            } else {\n                for (let field of this.fields.slice(1)) {\n                    field.attackerSide.powerSpots -= 1;\n                }\n            }\n        } else if (ability === \"Friend Guard\") {\n            if (id !== 0) {\n                for (let fid=1; fid<5; fid++) {\n                    if (id !== fid) {\n                        this.fields[fid].attackerSide.friendGuards -= 1;\n                    }\n                }\n            }\n        // single-side field abilities\n        } else if (ability === \"Aroma Veil\") {\n            if (id === 0) {\n                this.fields[0].attackerSide.isAromaVeil = false;\n            } else if (\n                !this.raiders.slice(1)\n                .filter(r => r.id !== id && r.originalCurHP !== 0)\n                .map(r => r.ability).includes(\"Aroma Veil\" as AbilityName)\n            ) {\n                for (let field of this.fields.slice(1)) {\n                    field.attackerSide.isAromaVeil = false;\n                }\n            }\n        }\n    }\n\n    public switchIn(id: number): string[][] {\n        const pokemon = this.getPokemon(id);\n        const ability = pokemon.ability;\n        const flags: string[][] = [[],[],[],[],[]];\n        // reset HP\n        pokemon.originalCurHP = pokemon.maxHP();\n        //// Abilites That Take Effect upon switch-in\n        /// Weather Abilities\n        if (ability === \"Drought\") {\n            this.applyWeather(\"Sun\", pokemon.item === \"Heat Rock\" ? 32 : 20);\n            flags[id].push(\"Drought summons the Sun\");\n        } else if (ability === \"Drizzle\") {\n            this.applyWeather(\"Rain\", pokemon.item === \"Damp Rock\" ? 32 : 20);\n            flags[id].push(\"Drizzle summons the Rain\");\n        } else if (ability === \"Sand Stream\") {\n            this.applyWeather(\"Sand\", pokemon.item === \"Smooth Rock\" ? 32 : 20);\n            flags[id].push(\"Sand Stream summons a Sandstorm\");\n        } else if (ability === \"Snow Warning\") {\n            this.applyWeather(\"Snow\", pokemon.item === \"Icy Rock\" ? 32 : 20);\n            flags[id].push(\"Snow Warning summons a Snowstorm\");\n        } else if (ability === \"Orichalcum Pulse\") {\n            this.applyWeather(\"Sun\", pokemon.item === \"Heat Rock\" ? 32 : 20);\n            flags[id].push(\"Orichalcum Pulse summons the Sun\");\n        } else if (ability === \"Cloud Nine\" || ability === \"Air Lock\") {\n            for (let field of this.fields) {\n                field.isCloudNine = true;\n            }\n            flags[id].push(\"Cloud Nine negates the weather\");\n        /// Terrain Abilities\n        } else if (ability === \"Grassy Surge\") {\n            this.applyTerrain(\"Grassy\", pokemon.item === \"Terrain Extender\" ? 32 : 20);\n            flags[id].push(\"Grassy Surge summons Grassy Terrain\");\n        } else if (ability === \"Electric Surge\") {\n            this.applyTerrain(\"Electric\", pokemon.item === \"Terrain Extender\" ? 32 : 20);\n            flags[id].push(\"Electric Surge summons Electric Terrain\");\n        } else if (ability === \"Misty Surge\") {\n            this.applyTerrain(\"Misty\", pokemon.item === \"Terrain Extender\" ? 32 : 20);\n            flags[id].push(\"Misty Surge summons Misty Terrain\");\n        } else if (ability === \"Psychic Surge\") {\n            this.applyTerrain(\"Psychic\", pokemon.item === \"Terrain Extender\" ? 32 : 20);\n            flags[id].push(\"Psychic Surge summons Psychic Terrain\");\n        } else if (ability === \"Hadron Engine\") {\n            this.applyTerrain(\"Electric\", pokemon.item === \"Terrain Extender\" ? 32 : 20);\n            flags[id].push(\"Hadron Engine summons Electric Terrain\");\n        /// Ruin Abilities\n        } else if (ability === \"Sword of Ruin\") {\n            for (let field of this.fields) {\n                field.isSwordOfRuin = true;\n            }\n            flags[id].push(\"Sword of Ruin lowers Defenses\");\n        } else if (ability === \"Beads of Ruin\") {\n            for (let field of this.fields) {\n                field.isBeadsOfRuin = true;\n            }\n            flags[id].push(\"Beads of Ruin lowers Special Defenses\");\n        } else if (ability === \"Vessel of Ruin\") {\n            for (let field of this.fields) {\n                field.isVesselOfRuin = true;\n            }\n            flags[id].push(\"Vessel of Ruin lowers Special Attacks\");\n        } else if (ability === \"Tablets of Ruin\") {\n            for (let field of this.fields) {\n                field.isTabletsOfRuin = true;\n            }\n            flags[id].push(\"Tablets of Ruin lowers Attacks\");\n        /// Other Field-Related Abilities\n        // Steely Spirit\n        } else if (ability === \"Steely Spirit\") {\n            if (id === 0) {\n                this.fields[0].attackerSide.steelySpirits += 1;\n            }\n            else {\n                for (let field of this.fields.slice(1)) {\n                    field.attackerSide.steelySpirits += 1;\n                }\n            }\n            flags[id].push(\"Steely Spirit boosts Allies' Steel-type attacks\");\n        // Aroma Veil\n        } else if (ability === \"Aroma Veil\") {\n            if (id === 0) {\n                this.fields[0].attackerSide.isAromaVeil = true;\n            } else {\n                for (let field of this.fields.slice(1)) {\n                    field.attackerSide.isAromaVeil = true;\n                }\n            }\n            flags[id].push(\"Aroma Veil protects allies\");\n        // Power Spot\n        } else if (ability === \"Power Spot\") {\n            if (id === 0) {\n                this.fields[0].attackerSide.powerSpots += 1;\n            } else {\n                for (let field of this.fields.slice(1)) {\n                    field.attackerSide.powerSpots += 1;\n                }\n            }\n            flags[id].push(\"Power Spot boosts attack power\");\n        // Friend Guard\n        } else if (ability === \"Friend Guard\") {\n            if (id !== 0) {\n                for (let fid=1; fid<5; fid++) {\n                    if (id !== fid) {\n                        this.fields[fid].attackerSide.friendGuards += 1;\n                    }\n                }\n                this.fields[0].defenderSide.friendGuards += 1; // this shouldn't ever be used\n            }\n            flags[id].push(\"Friend Guard reduces allies' damage taken\");\n        // Protosynthesis and Quark Drive\n        } else if (ability === \"Protosynthesis\" || ability === \"Quark Drive\") {\n            if (pokemon.item === \"Booster Energy\" && !pokemon.abilityOn) {\n                this.recieveItem(id, \"Booster Energy\" as ItemName); // consume Booster Energy\n            }\n        // Intimidate\n        } else if (ability === \"Intimidate\") {\n            if (id === 0) {\n                for (let intdPokemon of this.raiders.slice(1)) {\n                    if (![\"Oblivious\", \"Own Tempo\", \"Inner Focus\", \"Scrappy\"].includes(pokemon.ability || \"\")) {\n                        const boostCoefficient = getBoostCoefficient(pokemon);\n                        const origAtk = intdPokemon.boosts.atk;\n                        intdPokemon.boosts.atk = safeStatStage(intdPokemon.boosts.atk - boostCoefficient);\n                        flags[intdPokemon.id].push(\"Atk: \" + origAtk + \"->\" + intdPokemon.boosts.atk + \" (Intimidate)\");\n                    }\n                }\n            } else {\n                const intdPokemon = this.raiders[0];\n                if (![\"Oblivious\", \"Own Tempo\", \"Inner Focus\", \"Scrappy\"].includes(intdPokemon.ability || \"\")) {\n                    const boostCoefficient = getBoostCoefficient(intdPokemon);\n                    const origAtk = intdPokemon.boosts.atk;\n                    intdPokemon.boosts.atk = safeStatStage(intdPokemon.boosts.atk - boostCoefficient);\n                    flags[id].push(\"Atk: \" + origAtk + \"->\" + intdPokemon.boosts.atk + \" (Intimidate)\");\n\n                }                \n            }\n        // Intrepid Sword\n        } else if (ability === \"Intrepid Sword\") {\n            const origAtk = pokemon.boosts.atk;\n            pokemon.boosts.atk += 1;\n            flags[id].push(\"Atk: \" + origAtk + \"->\" + pokemon.boosts.atk + \" (Intrepid Sword)\");\n        // Dauntless Shield\n        } else if (ability === \"Dauntless Shield\") {\n            const origDef = pokemon.boosts.def;\n            pokemon.boosts.def += 1;\n            flags[id].push(\"Def: \" + origDef + \"->\" + pokemon.boosts.def + \" (Dauntless Shield)\");\n        } else {\n            // \n        }\n        /// special interactions\n        // Mew stat boosts for Mewtwo event.\n        if (id !== 0 && pokemon.name === \"Mew\" && this.raiders[0].name === \"Mewtwo\") {\n            this.raiders[id] = new Raider(\n                id,\n                pokemon.role,\n                pokemon.shiny,\n                pokemon.field.clone(),\n                new Pokemon(\n                    gen,\n                    pokemon.name as SpeciesName,\n                    {\n                        ...pokemon,\n                        statMultipliers: {\n                            hp: 1.5,\n                            atk: 1.2,\n                            def: 1.2,\n                            spa: 1.2,\n                            spd: 1.2,\n                            spe: 1.2,\n                        }\n                    }\n                ),\n                [...pokemon.moveData],\n                [...(pokemon.extraMoves || [])],\n                [...(pokemon.extraMoveData || [])],\n\n            );\n            this.raiders[id].originalCurHP = this.raiders[id].maxHP();\n            flags[id].push(pokemon.name + \" is going to go all out against this formidable opponent!\")\n        }\n        return flags;\n    }\n}\n","import { RaidBattle, RaidBattleInfo } from \"../raidcalc/RaidBattle\";\nimport { TurnGroupInfo } from \"../raidcalc/interface\";\nimport { RaidState } from \"../raidcalc/RaidState\";\nimport { Raider } from \"../raidcalc/Raider\";\nimport { Field, Pokemon, Generations } from \"../calc\";\n\ndeclare var self: DedicatedWorkerGlobalScope;\nexport {};\n\nconst gen = Generations.get(9);\n\nself.onmessage = (event: MessageEvent<{raiders: Raider[], groups: TurnGroupInfo[]}>) => {\n    const raidersMessage = event.data.raiders;\n    const raiders = raidersMessage.map((r) => new Raider(r.id, r.role, r.shiny, new Field(), new Pokemon(gen, r.name, {\n        level: r.level,\n        bossMultiplier: r.bossMultiplier,\n        ability: r.ability,\n        nature: r.nature,\n        evs: r.evs,\n        ivs: r.ivs,\n        item: r.item,\n        teraType: r.teraType,\n        moves: r.moves,\n        shieldData: r.shieldData,\n    }), r.moveData, r.extraMoves, r.extraMoveData))\n\n    raiders[0].isTera = true; // ensure the boss is Tera'd on T0\n\n    const state = new RaidState(raiders);\n    const info: RaidBattleInfo = {\n        startingState: state,\n        groups: event.data.groups,\n    }\n\n    const battle = new RaidBattle(info);\n    const result = battle.result();\n    self.postMessage(result);    \n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [64], function() { return __webpack_require__(9518); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"67e0125d\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/tera-raid-builder/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t518: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunktera_raid_builder\"] = self[\"webpackChunktera_raid_builder\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(64).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["toID","text","toLowerCase","replace","error","err","msg","Error","console","log","assignWithout","a","b","exclude","key","Object","prototype","hasOwnProperty","call","has","class2Type","coreToString","toString","coreHasOwn","getType","obj","String","isPlainObject","nodeType","window","isWindow","constructor","e","extend","options","name","src","copy","copyIsArray","clone","target","arguments","length","undefined","i","deep","this","Array","isArray","ADV","DPP","concat","BW","XY","SM","SS","SV","ABILITIES","_Symbol$iterator","Symbol","iterator","Abilities","gen","_classCallCheck","_createClass","value","id","ABILITIES_BY_ID","_regeneratorRuntime","mark","_id","wrap","_context","prev","next","t0","keys","t1","done","get","stop","Ability","kind","_i","_ABILITIES","_step","abilities","map","_iterator","_createForOfIteratorHelper","s","n","f","push","GSC","MEGA_STONES","Absolite","Abomasite","Aerodactylite","Aggronite","Alakazite","Altarianite","Ampharosite","Audinite","Banettite","Beedrillite","Blastoisinite","Blazikenite","Cameruptite","Crucibellite","Diancite","Galladite","Garchompite","Gardevoirite","Gengarite","Glalitite","Gyaradosite","Heracronite","Houndoominite","Kangaskhanite","Latiasite","Latiosite","Lopunnite","Lucarionite","Manectite","Mawilite","Medichamite","Metagrossite","Pidgeotite","Pinsirite","Sablenite","Salamencite","Sceptilite","Scizorite","Sharpedonite","Slowbronite","Steelixite","Swampertite","Tyranitarite","Venusaurite","sort","filter","BERRIES","t","p","Berry","ITEMS","Items","ITEMS_BY_ID","Item","megaEvolves","isBerry","naturalGift","berry","basePower","type","_ITEMS","items","RBY","bp","category","Absorb","drain","Acid","Amnesia","Barrage","multihit","Bide","Bind","Bite","Blizzard","Bonemerang","Bubble","Clamp","Constrict","Conversion","Counter","Crabhammer","Dig","Disable","recoil","Earthquake","Explosion","Fissure","Fly","Glare","Growth","Guillotine","Gust","Haze","hasCrashDamage","Metronome","Mimic","Minimize","Mist","Psychic","Psywave","Rage","Recover","Reflect","Rest","Roar","Slash","Sludge","Stomp","Struggle","Submission","Substitute","Swift","Thrash","Thunder","Transform","Twineedle","Whirlwind","Wrap","Growl","Leer","Surf","Toxic","Flash","Hypnosis","Waterfall","Tackle","Barrier","Flamethrower","Lick","Screech","Sing","Smog","Spore","Supersonic","Thunderbolt","Kinesis","Meditate","Sharpen","Teleport","Agility","Confusion","Cut","Ember","Harden","Headbutt","Peck","Pound","Psybeam","priority","Scratch","Slam","Smokescreen","Splash","Strength","Withdraw","Aeroblast","Attract","Curse","Detect","Encore","Endure","Flail","Foresight","Moonlight","Nightmare","Outrage","Present","Protect","Pursuit","Reversal","Safeguard","Sandstorm","Sketch","Spikes","Spite","Swagger","Synthesis","Thief","Twister","Crunch","Whirlpool","Magnitude","Charm","Snore","Rollout","Frustration","Return","Megahorn","Octazooka","Spark","makesContact","isSound","Assist","Astonish","Block","Bounce","Camouflage","Charge","Covet","Dive","Extrasensory","Hail","Ingrain","Memento","Overheat","self","boosts","spa","Revenge","Stockpile","Swallow","Taunt","Tickle","Trick","Uproar","Aromatherapy","Endeavor","Imprison","Recycle","Snatch","Torment","Wish","Facade","Howl","Refresh","Eruption","Flatter","Grudge","Superpower","atk","def","Yawn","isPunch","struggleRecoil","isBite","Acupressure","Assurance","Avalanche","Chatter","Copycat","Defog","Embargo","Feint","breaksProtect","Fling","Gravity","Payback","Pluck","Roost","Switcheroo","Tailwind","Captivate","Judgment","Punishment","Brine","Discharge","secondaries","Autotomize","Bestow","Entrainment","willCrit","Hex","Hurricane","Incinerate","Round","ignoreDefensive","Scald","Snarl","Soak","Steamroller","Synchronoise","Telekinesis","Quash","Acrobatics","Bulldoze","Coil","Electroweb","overrideOffensivePokemon","Glaciate","Inferno","Psyshock","overrideDefensiveStat","Psystrike","Retaliate","Venoshock","isBullet","isPulse","Powder","Geomancy","Rototiller","Belch","Boomburst","Celebrate","Confide","Electrify","Infestation","Moonblast","Nuzzle","zp","isZ","Catastropika","Instruct","mindBlownRecoil","Spotlight","Accelerock","Leafage","Liquidation","Lunge","Purify","maxPower","overrideOffensiveStat","Decorate","Eternabeam","isMax","Obstruct","Octolock","Overdrive","Poltergeist","Teatime","_LGPE_MOVES","isSlicing","isWind","Comeuppance","Doodle","Pounce","Psyblade","Ruination","Shelter","Snowscape","Trailblaze","MOVES","Moves","MOVES_BY_ID","Move","data","flags","overrideDefensivePokemon","zMove","maxMove","contact","punch","bite","bullet","sound","pulse","slicing","wind","FLAGS","Set","_i2","_MOVES","moves","move","m","Arbok","types","bs","hp","at","df","sp","sl","weightkg","Arcanine","Articuno","Bellsprout","nfe","Chansey","Charizard","Charmander","Charmeleon","Clefable","Clefairy","Cloyster","Diglett","Ditto","Dragonair","Dragonite","Dratini","Drowzee","Dugtrio","Eevee","Ekans","Electrode","Flareon","Gastly","Gengar","Geodude","Golduck","Golem","Graveler","Grimer","Growlithe","Gyarados","Haunter","Hypno","Jigglypuff","Jolteon","Koffing","Magikarp","Magnemite","Magneton","Mankey","Meowth","Mew","Mewtwo","Moltres","Muk","Ninetales","Persian","Pikachu","Poliwag","Poliwhirl","Poliwrath","Primeape","Psyduck","Raichu","Sandshrew","Sandslash","Scyther","Shellder","Slowbro","Slowpoke","Snorlax","Tauros","Vaporeon","Venomoth","Venonat","Victreebel","Voltorb","Vulpix","Weepinbell","Weezing","Wigglytuff","Zapdos","sa","sd","gender","Aipom","Ampharos","Ariados","Azumarill","Blissey","Cleffa","Cyndaquil","Delibird","Donphan","Dunsparce","Espeon","Flaaffy","Forretress","Furret","Girafarig","Gligar","Heracross","Hoothoot","Hoppip","Houndoom","Houndour","Igglybuff","Jumpluff","Larvitar","Magcargo","Mareep","Marill","Misdreavus","Murkrow","Noctowl","Phanpy","Pichu","Piloswine","Pineco","Politoed","Pupitar","Quagsire","Quilava","Qwilfish","Scizor","Sentret","Skiploom","Slowking","Slugma","Sneasel","Spinarak","Stantler","Sudowoodo","Sunflora","Sunkern","Swinub","Teddiursa","Typhlosion","Tyranitar","Umbreon","Ursaring","Wooper","Yanma","Altaria","Azurill","Bagon","Banette","Barboach","Breloom","Cacnea","Cacturne","Camerupt","Chimecho","Corphish","Crawdaunt","Dusclops","Duskull","Feebas","Gardevoir","Glalie","Groudon","Grumpig","Gulpin","Hariyama","Illumise","Jirachi","Kirlia","Kyogre","Lombre","Lotad","Ludicolo","Luvdisc","Makuhita","Masquerain","Medicham","Meditite","Mightyena","Milotic","Nosepass","Numel","Nuzleaf","Pelipper","Poochyena","Ralts","Rayquaza","Sableye","Salamence","Seedot","Seviper","Shiftry","Shroomish","Shuppet","Slaking","Slakoth","Snorunt","Spoink","Surskit","Swablu","Swalot","Torkoal","Tropius","Vigoroth","Volbeat","Whiscash","Wingull","Zangoose","Abomasnow","Ambipom","Arceus","otherFormes","Azelf","Bonsly","Bronzong","Bronzor","Buizel","Chimchar","Chingling","Combee","Cresselia","Croagunk","Darkrai","Dialga","Drifblim","Drifloon","Dusknoir","Empoleon","Finneon","Floatzel","Froslass","Gabite","Gallade","Garchomp","Gastrodon","Gible","Giratina","baseSpecies","Glaceon","Gliscor","Grotle","Happiny","Heatran","Hippopotas","Hippowdon","Honchkrow","Infernape","Kricketot","Kricketune","Leafeon","Lucario","Lumineon","Luxio","Luxray","Magnezone","Mamoswine","Manaphy","Mesprit","Mismagius","Monferno","Munchlax","Pachirisu","Palkia","Phione","Piplup","Prinplup","Probopass","Riolu","Rotom","Shaymin","Shellos","Shinx","Skuntank","Snover","Spiritomb","Staraptor","Staravia","Starly","Stunky","Torterra","Toxicroak","Turtwig","Uxie","Vespiquen","Weavile","Yanmega","Alomomola","Amoonguss","Axew","Basculin","Beartic","Bisharp","Braviary","Chandelure","Conkeldurr","Cryogonal","Cubchoo","Deerling","Deino","Dewott","Ducklett","Eelektrik","Eelektross","Foongus","Gothita","Gothitelle","Gothorita","Gurdurr","Haxorus","Hydreigon","Krokorok","Krookodile","Lampent","Landorus","Larvesta","Leavanny","Lilligant","Litwick","Mandibuzz","Meloetta","Mienfoo","Mienshao","Oshawott","Pawniard","Petilil","Rufflet","Samurott","Sandile","Sawsbuck","Sewaddle","Swadloon","Swanna","Thundurus","Timburr","Tornadus","Tynamo","Volcarona","Vullaby","Zoroark","Zorua","Zweilous","Avalugg","Bergmite","Braixen","Carbink","Chesnaught","Chespin","Clauncher","Clawitzer","Diancie","Dedenne","Delphox","Dragalge","Fennekin","Flabébé","Fletchinder","Fletchling","Floette","Florges","Froakie","Frogadier","Gogoat","Goodra","Goomy","Greninja","Hawlucha","Hoopa","Klefki","Litleo","Noibat","Noivern","Phantump","Pyroar","Quilladin","Scatterbug","Skiddo","Skrelp","Sliggoo","Spewpa","Sylveon","Talonflame","Trevenant","Vivillon","Volcanion","Bruxish","Charjabug","Crabominable","Crabrawler","Cutiefly","Dartrix","Decidueye","Fomantis","Grubbin","Gumshoos","Komala","Lurantis","Lycanroc","Magearna","Mareanie","Mimikyu","Mudbray","Mudsdale","Oranguru","Oricorio","Palossand","Passimian","Ribombee","Rockruff","Rowlet","Salandit","Salazzle","Sandygast","Toxapex","Tsareena","Vikavolt","Yungoos","Appletun","Applin","Arrokuda","Barraskewda","Calyrex","Carkol","Chewtle","Cinderace","Coalossal","Copperajah","Corviknight","Corvisquire","Cramorant","Cufant","Dragapult","Drakloak","Drednaw","Dreepy","Drizzile","Eiscue","Eternatus","Falinks","Flapple","Frosmoth","Glastrier","Greedent","Grimmsnarl","Grookey","Hatenna","Hatterene","Hattrem","Impidimp","Indeedee","Inteleon","Morgrem","Morpeko","Perrserker","Pincurchin","Polteageist","Raboot","Regidrago","Regieleki","Rillaboom","Rolycoly","Rookidee","Sandaconda","Scorbunny","Silicobra","Sinistea","Skwovet","Snom","Sobble","Spectrier","Stonjourner","Thwackey","Toxel","Toxtricity","Urshifu","Zacian","Zamazenta","Zarude","SPECIES","Ursaluna","Annihilape","Arboliva","Arctibax","Armarouge","Baxcalibur","Bellibolt","Bombirdier","Brambleghast","Bramblin","Capsakid","Ceruledge","Cetitan","Cetoddle","Charcadet","Clodsire","Crocalor","Cyclizar","Dachsbun","Dipplin","Dolliv","Dondozo","Dudunsparce","Espathra","Farigiraf","Fezandipiti","Fidough","Finizen","Flamigo","Flittle","Floragato","Frigibax","Fuecoco","Garganacl","Gholdengo","Gimmighoul","Glimmet","Glimmora","Grafaiai","Greavard","Houndstone","Kilowattrel","Kingambit","Klawf","Koraidon","Lechonk","Lokix","Mabosstiff","Maschiff","Maushold","Meowscarada","Miraidon","Munkidori","Nacli","Naclstack","Nymble","Ogerpon","Oinkologne","Okidogi","Orthworm","Palafin","Pawmi","Pawmo","Pawmot","Poltchageist","Quaquaval","Quaxly","Quaxwell","Rabsca","Rellor","Revavroom","Scovillain","Shroodle","Sinistcha","Skeledirge","Smoliv","Spidops","Sprigatito","Squawkabilly","Tadbulb","Tandemaus","Tarountula","Tatsugiri","Tinkatink","Tinkaton","Tinkatuff","Toedscool","Toedscruel","Varoom","Veluza","Wattrel","Wiglett","Wugtrio","Basculegion","Enamorus","Kleavor","Overqwil","Sneasler","Wyrdeer","Species","SPECIES_BY_ID","Specie","baseStats","spd","spe","includes","endsWith","_toConsumableArray","EXCLUDE","_SPECIES","species","specie","Normal","Grass","Fire","Water","Electric","Ice","Flying","Bug","Poison","Ground","Rock","Fighting","Ghost","Dragon","Dark","Steel","Fairy","TYPE_CHART","Types","TYPES_BY_ID","Type","effectiveness","_TYPE_CHART","typeChart","_objectSpread","NATURES","Adamant","Bashful","Bold","Brave","Calm","Careful","Docile","Gentle","Hardy","Hasty","Impish","Jolly","Lax","Lonely","Mild","Modest","Naive","Naughty","Quiet","Quirky","Rash","Relaxed","Sassy","Serious","Timid","Natures","NATURES_BY_ID","Nature","_ref","_ref2","_slicedToArray","plus","minus","nature","Generations","_class","Generation","num","natures","Field","field","gameType","weather","weatherTurnsRemaining","terrain","terrainTurnsRemaining","isMagicRoom","isWonderRoom","isGravity","isAuraBreak","isFairyAura","isDarkAura","isBeadsOfRuin","isSwordOfRuin","isTabletsOfRuin","isVesselOfRuin","isTrickRoom","isCloudNine","attackerSide","defenderSide","Side","_len","weathers","_key","_len2","terrains","_key2","side","spikes","steelsurge","vinelash","wildfire","cannonade","volcalith","isSR","isReflect","isLightScreen","isDefCheered","isProtected","isWideGuard","isQuickGuard","isSeeded","isForesight","isTailwind","isHelpingHand","isAtkCheered","isFlowerGift","isFriendGuard","friendGuards","isAuroraVeil","isBattery","isPowerSpot","powerSpots","steelySpirits","isSwitching","isCharged","isMist","isSafeguard","isAromaVeil","SEED_BOOSTED_STAT","getItemBoostType","item","getBerryResistType","FLING_120","FLING_100","FLING_90","FLING_85","FLING_80","FLING_70","FLING_60","FLING_30","FLING_10","getFlingPower","getNaturalGift","_gen$items$get","gift","getTechnoBlast","HP_TYPES","HP","ivs","dvs","Stats","stat","IVToDV","spc","iv","Math","floor","dv","DVToIV","base","ev","level","calcStatRBY","calcStatADV","mods","nat","calcStatRBYFromDV","hpType","DVsToIVs","tr","bits","pow","atkDV","defDV","speDV","spcDV","power","hpTypeX","hpPowerX","EV_ITEMS","isGrounded","pokemon","hasItem","isIngrain","hasType","hasAbility","getModifiedStat","mod","min","max","modernGenBoostTable","OF16","computeFinalStats","attacker","defender","sides","stats","_sides","_sides$_i","getFinalSpeed","rawStats","speed","speedMods","abilityOn","status","isQPActive","getQPBoostedStat","apply","named","OF32","pokeRound","chainMods","hasStatus","getMoveEffectiveness","isGhostRevealed","isRingTarget","checkAirLock","checkForecast","checkItem","magicRoomActive","checkWonderRoom","wonderRoomActive","checkIntimidate","source","blocked","checkDownload","checkIntrepidSword","checkDauntlessShield","checkInfiltrator","affectedSide","checkSeedBoost","terrainSeed","substring","indexOf","hasTerrain","checkMultihitBoost","desc","usedWhiteHerb","attackerItem","defenderAbility","ability","attackerAbility","defenderItem","simple","dropsStats","lowerBound","upperBound","_step2","M","_iterator2","getBaseDamage","attack","defense","boostedStat","bestStat","_arr","getFinalDamage","baseAmount","isBurned","stabMod","finalMod","protect","damageAmount","getShellSideArmCategory","getWeightFactor","countBoosts","randomBoosts","sum","_i3","_STATS","boost","getEVDescriptionText","natureName","evs","displayStat","handleFixedDamageMoves","ceil","display","damage","rawDesc","notation","_damageRange","damageRange","_damageRange2","minDamage","maxDamage","hits","minDisplay","toDisplay","maxHP","maxDisplay","description","_getDescriptionLevels","elide","getDescriptionLevels","_getDescriptionLevels2","attackerLevel","defenderLevel","output","attackBoost","appendIfSet","attackEVs","rivalry","alliesFainted","attackerTera","attackerName","isDefCheeredBodyPress","isFlowerGiftAttacker","moveName","moveBP","moveType","moveTurns","defenseBoost","HPEVs","defenseEVs","isDefenderDynamaxed","defenderTera","defenderName","isFlowerGiftDefender","isCritical","shieldActive","buildDescription","damageText","bossMultiplier","dp","parseFloat","toFixed","getBossMultiplierDesc","koChanceText","getKOChance","getRecovery","_damageRange5","_damageRange6","minD","maxD","recovery","ignoresShellBell","round","percentHealed","range","j","drained","trunc","minHealthRecovered","maxHealthRecovered","getRecoil","_damageRange7","_damageRange8","damageOverflow","curHP","minRecoilDamage","maxRecoilDamage","genMultiplier","gen4CrashDamage","slice","d","combined","combine","isNaN","chance","timesUsed","timesUsedWithMetronome","hazards","texts","rockType","steelType","getHazards","eot","getEndOfTurn","toxicCounter","qualifier","r","val","squashMultihit","hazardsText","serializeText","afterText","computeKOChance","predictTotal","TRAPPING","hasWeather","loseItem","isSaltCure","isWaterOrSteel","teraType","toxicDamage","lastc","c","arr","str","toAppend","Result","fullDesc","_damageRange3","_damageRange4","recoveryText","recoilText","displayMove","calculateRBYGSC","result","fixedDamage","typeEffectivenessPrecedenceRules","firstDefenderType","secondDefenderType","type1Effectiveness","type2Effectiveness","typeEffectiveness","isCrit","isPhysical","attackStat","defenseStat","ignoreMods","lv","lookup","baseDamage","itemBoostType","getSimpleModifiedStat","simpleMod","calculateBWXY","_gen$species$get","isAerilate","isPixilate","isRefrigerate","isNormalize","noTypeChange","normal","resistedKnockOffDamage","turnOrder","switching","w","wr","bpMods","aura","isAttackerAura","isDefenderAura","isUserAuraBreak","isFieldAuraBreak","isFieldFairyAura","isFieldDarkAura","attackSource","atMods","startsWith","hitsPhysical","dfMods","isSpread","applyBurn","finalMods","childDamage","child","simpleMultiplier","hasWhiteHerb","dropCount","_loop","times","newAttack","damageMultiplier","affectedAmount","newFinalDamage","calculateSMSSSV","atkTeraType","isTera","defTeraType","isDynamaxed","defenderIgnoresAbility","attackerIgnoresAbility","moveIgnoresAbility","holdingUmbrella","getMultiAttack","hasAteAbilityTypeChange","isGalvanize","isLiquidVoice","weightBasedMove","zLostHP","lostHP","_attacker$item","hitsTaken","terrainMultiplier","auraBreak","ii","powMod","calculateBPModsSMSSSV","calculateBasePowerSMSSSV","atkSourceTeraType","isTabletsOfRuinActive","isVesselOfRuinActive","calculateAtModsSMSSSV","calculateAttackSMSSSV","isSwordOfRuinActive","isBeadsOfRuinActive","calculateDfModsSMSSSV","calculateDefenseSMSSSV","hasOriginalType","calculateFinalModsSMSSSV","shieldData","damageCoef","shieldDamageRateTera","shieldDamageRateTeraChange","shieldDamageRate","dmg","dmg2","MECHANICS","screenMultiplier","rawAttack","rawDefense","filterMod","ebeltMod","tintedMod","berryMod","STATS","SPC","Pokemon","_this$species$abiliti","statMultipliers","dynamaxLevel","isQP","usedBoosterEnergy","originalCurHP","volatileStatus","isChoiceLocked","changedTypes","overrides","withDefault","getHPDV","calcStat","_len3","statuses","_key3","_len4","_key4","_types","_len5","_key5","_types2","_len6","names","_key6","speciesName","current","match","cur","SPECIAL","_data$zMove","_data$self","originalName","useZ","useMax","maxMoveName","pokemonSpecies","isStatus","pokemonAbility","MAXMOVES_TYPING","getMaxMoveName","zMoveName","ZMOVES_TYPING","getZMoveName","typelessDamage","abs","State","calculate","A","_A$Move","_inherits","_super","_createSuper","_A$Pokemon","_super2","getForme","ailmentToStatus","ailment","hasNoStatus","isSuperEffective","pokemonIsGrounded","grounded","lastMove","getBoostCoefficient","hasSimple","hasContrary","safeStatStage","dummyMove","RaidMove","moveData","raidState","userID","targetID","raiderID","movesFirst","raidMoveOptions","flinch","_raidState","_raiders","_user","_affectedIDs","_fields","_doesNotAffect","_causesFlinch","_blockedBy","_flingItem","_damage","_healing","_drain","_eot","_desc","_flags","minHits","maxHits","raiders","setOutputRaidState","checkShield","setAffectedPokemon","setDoesNotEffect","checkProtection","applyProtection","applyDamage","applyDrain","applyHealing","applySelfDamage","applyFlinch","applyStatChanges","applyAilment","applyFieldChanges","applyUniqueMoveEffects","setEndOfTurnDamage","applyEndOfTurnDamage","applyEndOfMoveItemEffects","setFlags","lastTarget","state","healing","causesFlinch","fields","targetType","splice","getPokemon","applyStatChange","bypassProtectMoves","atkID","defID","moveField","_this$moveData$catego","_this","moveUser","qpStat","_step3","hasCausedDamage","_iterator3","crit","roll","superEffective","results","damageResult","totalDamage","calcMove","moveRepeated","getMoveField","hitDamage","_unused","teraCharge","drainPercent","_step4","healingPercent","_iterator4","healAmount","flinchChance","secondaryEffects","_step5","_iterator5","_this$_fields$this$us","affectedIDs","statChanges","change","statChance","_step6","_iterator6","_this$moveData$catego2","_step7","_iterator7","statChange","Number","ailmentChance","_step8","_iterator8","_this$moveData$catego3","applyStatus","selfDamage","selfDamagePercent","applyWeather","applyTerrain","_step9","gravity","trickroom","magicroom","wonderroom","_iterator9","reflect","lightscreen","auroraveil","mist","safeguard","tailwind","attackcheer","defensecheer","_sideFieldIDs","user_ability","target_ability","abilityNullified","boss","persistentAbilities","tempUserAbility","toUpperCase","statId","_step10","targetFields","_iterator10","_step11","_iterator11","isEndure","tempUserAtkBoosts","tempUserDefBoosts","tempAtk","raider","raider_eot","boss_eot","initialShield","finalShield","initialItems","finalItems","initialAbilities","finalAbilities","initialAbilityOn","finalAbilityOn","initialStatus","finalStatus","origPokemon","boostStr","origStat","newStat","displayStr","join","initialHP","finalHP","hpStr","RaidTurn","info","raiderMoveData","bossMoveData","raiderOptions","bossOptions","group","_raiderMovesFirst","_raider","_boss","_raiderMove","_bossMove","_raiderMoveData","_bossMoveData","_raiderMoveID","_raiderMoveTarget","_raiderMoveUsed","_bossMoveUsed","_raidMove1","_raidMove2","_result1","_result2","_endFlags","moveInfo","bossMoveInfo","switchIn","moveResult","activateTera","setTurnOrder","applyChangedMove","stealTeraCharge","applyEndOfTurnItemEffects","removeProtection","countDownFieldEffects","countDownAbilityNullification","raiderMovesFirst","raiderMoveUsed","bossMoveUsed","endFlags","moveOptions","bestMove","bestDamage","testMove","testField","find","modifyMovePriorityByAbility","raiderPriority","bossPriority","raiderSpeed","effectiveSpeed","bossSpeed","bossField","pranksterMoves","originalAbility","role","RaidBattle","startingState","groups","_state","_turnResults","_turnZeroFlags","_turnZeroOrder","calculateTurnZero","calculateTurns","endState","turnResults","turnZeroFlags","turnZeroOrder","turns","repeats","k","turn","speedOrder","index","pair","Raider","_Pokemon","shiny","extraMoves","extraMoveData","shieldActivateHP","shieldBroken","modifyPokemonSpeedByStatus","modifyPokemonSpeedByItem","modifyPokemonSpeedByAbility","_field$weather","_field$weather2","_field$weather3","_field$weather4","_field$terrain","modifyPokemonSpeedByField","qpBoostedStat","modifyPokemonSpeedByQP","diff","acc","eva","originalStat","boostCoefficient","activationHP","hpTrigger","breakHP","shieldCancelDamage","RaidState","_pokemon$item","nHits","originalHP","unnerve","_opponents","copyable","fromSelf","numNegativeBoosts","values","reduce","_opponentIds","opponentId","opponent","mirrorHerb","opportunist","both","positiveDiff","hasPositiveBoost","used","symbiosisIds","sid","fastestSymbId","fastestSymbPoke","fastestSymbSpeed","poke","recieveItem","ids","fid","_step12","_iterator12","_step13","_iterator13","_step14","_iterator14","_step15","_iterator15","_step16","_iterator16","_step17","_iterator17","_step18","_iterator18","_step19","_iterator19","intdPokemon","origAtk","origDef","onmessage","event","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","x","__webpack_exports__","O","deferred","chunkIds","fn","notFulfilled","Infinity","fulfilled","every","definition","o","defineProperty","enumerable","chunkId","Promise","all","promises","u","miniCssF","prop","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}