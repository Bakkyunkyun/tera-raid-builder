{"version":3,"file":"static/js/901.9c34e05e.chunk.js","mappings":"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,OAAOA,EAAI,MAAQA,EAAI,MAAQA,CACjC,CAGO,SAASiE,EAAKjE,GACnB,OAAOA,EAAI,WAAaA,EAAI,WAAaA,CAC3C,C,mCC1gBMgJ,GAAM,CACV,WACA,aACA,eACA,QACA,cACA,aACA,aACA,eACA,gBACA,aACA,UACA,OACA,UACA,aACA,eACA,aACA,aACA,WACA,OACA,aACA,SACA,eACA,aACA,WACA,cACA,WACA,aACA,WACA,WACA,gBACA,SACA,cACA,cACA,cACA,eACA,QACA,eACA,YACA,WACA,YACA,SACA,OACA,eACA,WACA,aACA,YACA,YACA,aACA,WACA,cACA,YACA,eACA,aACA,YACA,cACA,cACA,aACA,cACA,SACA,SACA,cACA,SACA,eACA,QACA,aACA,cACA,YACA,UACA,QACA,SACA,eACA,cACA,eACA,aACA,cACA,gBAGIC,GAAMD,GAAItK,OAAO,CACrB,eACA,YACA,cACA,eACA,aACA,WACA,WACA,SACA,cACA,WACA,QACA,WACA,YACA,eACA,YACA,WACA,YACA,QACA,aACA,cACA,eACA,cACA,cACA,YACA,WACA,YACA,aACA,cACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,aACA,SACA,aACA,eACA,cACA,aACA,QACA,YACA,cACA,aACA,eACA,aACA,cACA,UACA,aAGIwK,GAAKD,GAAIvK,OAAO,CACpB,WACA,YACA,WACA,cACA,YACA,UACA,cACA,eACA,UACA,SACA,cACA,WACA,WACA,cACA,aACA,cACA,YACA,eACA,QACA,QACA,aACA,QACA,WACA,aACA,eACA,YACA,UACA,cACA,aACA,YACA,aACA,cACA,YACA,WACA,cACA,aACA,UACA,eACA,aACA,cACA,aAGIyK,GAAKD,GAAGxK,OAAO,CACnB,WACA,aACA,aACA,cACA,cACA,cACA,YACA,eACA,gBACA,aACA,cACA,WACA,aACA,QACA,aACA,WACA,gBACA,gBACA,WACA,iBACA,UACA,cACA,gBACA,aACA,aACA,YACA,gBAGI0K,GAAKD,GAAGzK,OAAO,CACnB,UACA,cACA,cACA,UACA,WACA,YACA,SACA,WACA,WACA,iBACA,iBACA,SACA,kBACA,YACA,eACA,cACA,eACA,aACA,YACA,cACA,aACA,kBACA,mBACA,cACA,gBACA,kBACA,aACA,WACA,YACA,gBACA,eACA,aACA,UACA,WACA,cACA,aACA,eACA,gBACA,SACA,eACA,mBACA,aAGI2K,GAAKD,GAAG1K,OAAO,CACnB,qBACA,qBACA,aACA,iBACA,cACA,mBACA,mBACA,eACA,kBACA,aACA,eACA,gBACA,WACA,aACA,iBACA,SACA,UACA,eACA,mBACA,cACA,cACA,aACA,iBACA,YACA,aACA,QACA,YACA,iBACA,WACA,eACA,gBACA,aACA,cACA,qBAGI4K,GAAKD,GAAG3K,OAAO,CACnB,cACA,aACA,gBACA,YACA,SACA,WACA,cACA,mBACA,eACA,YACA,gBACA,kBACA,iBACA,cACA,mBACA,iBACA,iBACA,cACA,gBACA,aACA,YACA,mBACA,gBACA,kBACA,mBACA,eACA,iBACA,kBACA,aACA,aACA,iBAGW6K,GAAY,CAAC,GAtUJ,GAEA,GAoUkBP,GAAKC,GAAKC,GAAIC,GAAIC,GAAIC,GAAIC,IAAIE,EAalEC,OAAOC,SAqBX,IAhCO,I,GAAMC,GAAS,WAGpB,SAAAA,EAAYzK,IAAsBZ,EAAAA,EAAAA,GAAA,KAAAqL,GAAA,KAFjBzK,SAAG,EAGlB3C,KAAK2C,IAAMA,CACb,CAUC,OAVAX,EAAAA,EAAAA,GAAAoL,EAAA,EAAApP,IAAA,MAAAiE,MAED,SAAIoL,GACF,OAAOC,GAAgBtN,KAAK2C,KAAK0K,EACnC,GAAC,CAAArP,IAAAiP,EAAAhL,OAAAsL,EAAAA,EAAAA,KAAAC,MAED,SAAAvL,IAAA,IAAAwL,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmBT,GAAgBtN,KAAK2C,MAAI,WAAAgL,EAAAK,GAAAL,EAAAG,MAAAtH,KAAC,CAADmH,EAAAE,KAAA,QACxC,OADSR,EAAEM,EAAAK,GAAA/L,MAAA0L,EAAAE,KAAA,EACL7N,KAAKsD,IAAI+J,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAM,OAAA,GAAAhM,EAAA,YAE9BmL,CAAA,CAfmB,GAkBhBc,IAAOlM,EAAAA,EAAAA,IAKX,SAAAkM,EAAY7O,IAAc0C,EAAAA,EAAAA,GAAA,KAAAmM,GAAA,KAJjBC,UAAI,OACJd,QAAE,OACFhO,UAAI,EAGXW,KAAKmO,KAAO,UACZnO,KAAKqN,GAAKnQ,EAAKmC,GACfW,KAAKX,KAAOA,CACd,IAGIiO,GAAkD,GAExDtH,GAAA,EAAAoI,GAAwBpB,GAAShH,GAAAoI,GAAAxO,OAAAoG,KAAE,CAA9B,IAE4BE,GAFtBmI,GAASD,GAAApI,IACZsI,GAA+B,CAAC,EAAEhI,IAAAC,EAAAA,EAAAA,GAClB8H,IAAS,IAA/B,IAAA/H,GAAA9B,MAAA0B,GAAAI,GAAA7C,KAAA+C,MAAiC,CAAC,IAC1B3I,GAAI,IAAIqQ,GADEhI,GAAAjE,OAEhBqM,GAAIzQ,GAAEwP,IAAMxP,EACd,CAAC,OAAAN,IAAA+I,GAAApH,EAAA3B,GAAA,SAAA+I,GAAAM,GAAA,CACD0G,GAAgBpG,KAAKoH,GACvB,CC/WA,IAEMC,GAAM,CAKV,aACA,gBACA,gBAEA,WACA,cAEA,YACA,aACA,aACA,cAEA,aACA,aACA,aAEA,cACA,aACA,YACA,aACA,aACA,YAEA,YACA,SAEA,cACA,aAIA,eACA,YACA,aAEA,eACA,iBAEA,cAEA,WAIA,aACA,cACA,aACA,aACA,gBACA,YACA,YACA,aAEA,YAEA,gBACA,gBACA,aAEA,eAGIC,GAAW,CACf,QACA,eACA,eACA,cACA,YACA,aACA,gBACA,gBACA,iBACA,aACA,WACA,eACA,iBACA,gBAGI/B,GAAM8B,GAAIE,QAAO,SAAA3O,GAAC,OAAK0O,GAASpH,SAAStH,EAAE,IAAEqC,OAAO,CACxD,cACA,eACA,eACA,cACA,aACA,cACA,eACA,cAEA,cAGA,YAEA,cACA,eACA,aACA,eACA,cAEA,eACA,eACA,eACA,eACA,cACA,cACA,eACA,YACA,cAEA,aACA,eACA,cACA,cACA,YACA,WACA,cAEA,aACA,eACA,cACA,eACA,eAEA,cACA,eACA,eAEA,cACA,aACA,cAEA,cACA,cACA,aACA,aACA,eAEA,eACA,cACA,eACA,aACA,eACA,eACA,aACA,eAGIuK,GAAMD,GAAItK,OAAO,CACrB,cAEA,eACA,WACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,aACA,eACA,eACA,YACA,aACA,eACA,cACA,cAEA,YACA,aACA,cAEA,cACA,aACA,YACA,cACA,aACA,eACA,YACA,eACA,cACA,YACA,YACA,eACA,WACA,eACA,YACA,aACA,eACA,cACA,cACA,eACA,WACA,aACA,eAEA,eACA,YACA,cACA,aACA,cACA,aACA,cACA,aACA,YACA,eACA,eACA,eACA,aACA,aACA,eACA,aACA,aACA,eAEA,aAEA,YACA,aAGA,cACA,eACA,eACA,cACA,aACA,cACA,cAEA,YACA,cACA,eACA,eACA,cACA,cACA,cACA,YACA,cACA,cACA,eACA,YACA,eACA,cACA,YACA,cAGIwK,GAAKD,GAAIvK,OAAO,CACpB,cACA,cACA,eAGA,eAMA,aACA,eAEA,WAGA,cAMA,aAKA,WACA,cAEA,iBAMWuM,GAA2C,CACtDC,SAAU,QACVC,UAAW,YACXC,cAAe,aACfC,UAAW,SACXC,UAAW,WACXC,YAAa,UACbC,YAAa,WACbC,SAAU,SACVC,UAAW,UACXC,YAAa,WACbC,cAAe,YACfC,YAAa,WACbC,YAAa,WACb,iBAAkB,YAClB,iBAAkB,YAClBC,aAAc,aACdC,SAAU,UACVC,UAAW,UACXC,YAAa,WACbC,aAAc,YACdC,UAAW,SACXC,UAAW,SACXC,YAAa,WACbC,YAAa,YACbC,cAAe,WACfC,cAAe,aACfC,UAAW,SACXC,UAAW,SACXC,UAAW,UACXC,YAAa,UACbC,UAAW,YACXC,SAAU,SACVC,YAAa,WACbC,aAAc,YACd,eAAgB,SAChB,eAAgB,SAChBC,WAAY,UACZC,UAAW,SACXC,UAAW,UACXC,YAAa,YACbC,WAAY,WACZC,UAAW,SACXC,aAAc,WACdC,YAAa,UACbC,WAAY,UACZC,YAAa,WACbC,aAAc,YACdC,YAAa,YAGT1E,GAAKD,GAAGxK,OACZ,CAEE,eAIA,YACA,gBACA,gBACA,cAEA,eAEA,iBAEA,WACA,mBAEAoP,QAGE1E,GAAKD,GAAG6B,QAAO,SAAA3O,GAAC,MAAU,cAANA,CAAiB,IAAEqC,OAAO,CAClD,iBAEA,aACA,aAUA,gBAeA,cAIA,YASA,aAOA,kBAEA,eASA,qBAMI2K,GAAKD,GAAG1K,OAAO,CAEnB,iBACA,cAEA,cACA,aAMA,gBACA,kBACA,mBAIA,eACA,gBACA,eAGA,cACA,aACA,iBASF2K,GAAG5F,KAAK,oBAIR4F,GAAG5F,KAAIM,MAAPsF,GAAW0B,GAAQrM,OAAA,CAAE,eAErB,IAAM4K,GAAKD,GAAG3K,OAAO,CACnB,kBACA,mBACA,iBACA,iBACA,eACA,eACA,cACA,kBACA,cACA,iBACA,iBACA,gBACA,iBAGIqP,GAAyD,CAC7D,cAAe,CAACC,EAAG,SAAUC,EAAG,IAChC,eAAgB,CAACD,EAAG,SAAUC,EAAG,KACjC,eAAgB,CAACD,EAAG,MAAOC,EAAG,IAC9B,eAAgB,CAACD,EAAG,QAASC,EAAG,IAChC,cAAe,CAACD,EAAG,WAAYC,EAAG,KAClCC,MAAO,CAACF,EAAG,SAAUC,EAAG,IACxB,eAAgB,CAACD,EAAG,SAAUC,EAAG,IACjC,aAAc,CAACD,EAAG,OAAQC,EAAG,IAC7B,cAAe,CAACD,EAAG,MAAOC,EAAG,IAC7B,eAAgB,CAACD,EAAG,OAAQC,EAAG,IAC/B,cAAe,CAACD,EAAG,OAAQC,EAAG,IAC9B,eAAgB,CAACD,EAAG,QAASC,EAAG,IAChC,eAAgB,CAACD,EAAG,SAAUC,EAAG,IACjC,eAAgB,CAACD,EAAG,WAAYC,EAAG,IACnC,aAAc,CAACD,EAAG,SAAUC,EAAG,IAC/B,eAAgB,CAACD,EAAG,OAAQC,EAAG,IAC/B,cAAe,CAACD,EAAG,MAAOC,EAAG,IAC7B,eAAgB,CAACD,EAAG,QAASC,EAAG,KAChC,cAAe,CAACD,EAAG,QAASC,EAAG,KAC/B,eAAgB,CAACD,EAAG,MAAOC,EAAG,KAC9B,aAAc,CAACD,EAAG,MAAOC,EAAG,IAC5B,eAAgB,CAACD,EAAG,MAAOC,EAAG,KAC9B,aAAc,CAACD,EAAG,UAAWC,EAAG,IAChC,cAAe,CAACD,EAAG,SAAUC,EAAG,IAChC,cAAe,CAACD,EAAG,SAAUC,EAAG,IAChC,eAAgB,CAACD,EAAG,SAAUC,EAAG,IACjC,eAAgB,CAACD,EAAG,OAAQC,EAAG,IAC/B,YAAa,CAACD,EAAG,QAASC,EAAG,IAC7B,eAAgB,CAACD,EAAG,SAAUC,EAAG,KACjC,cAAe,CAACD,EAAG,QAASC,EAAG,IAC/B,cAAe,CAACD,EAAG,SAAUC,EAAG,IAChC,YAAa,CAACD,EAAG,QAASC,EAAG,KAC7B,eAAgB,CAACD,EAAG,WAAYC,EAAG,IACnC,eAAgB,CAACD,EAAG,SAAUC,EAAG,KACjC,cAAe,CAACD,EAAG,WAAYC,EAAG,IAClC,eAAgB,CAACD,EAAG,QAASC,EAAG,KAChC,YAAa,CAACD,EAAG,SAAUC,EAAG,IAC9B,aAAc,CAACD,EAAG,QAASC,EAAG,IAC9B,eAAgB,CAACD,EAAG,OAAQC,EAAG,IAC/B,gBAAiB,CAACD,EAAG,OAAQC,EAAG,KAChC,cAAe,CAACD,EAAG,OAAQC,EAAG,KAC9B,aAAc,CAACD,EAAG,QAASC,EAAG,IAC9B,gBAAiB,CAACD,EAAG,SAAUC,EAAG,IAClC,gBAAiB,CAACD,EAAG,WAAYC,EAAG,IACpC,cAAe,CAACD,EAAG,QAASC,EAAG,IAC/B,cAAe,CAACD,EAAG,SAAUC,EAAG,IAChC,aAAc,CAACD,EAAG,OAAQC,EAAG,IAC7B,aAAc,CAACD,EAAG,SAAUC,EAAG,IAC/B,eAAgB,CAACD,EAAG,QAASC,EAAG,IAChC,eAAgB,CAACD,EAAG,QAASC,EAAG,IAChC,eAAgB,CAACD,EAAG,UAAWC,EAAG,IAClC,cAAe,CAACD,EAAG,WAAYC,EAAG,IAClC,eAAgB,CAACD,EAAG,SAAUC,EAAG,IACjC,eAAgB,CAACD,EAAG,SAAUC,EAAG,KACjC,cAAe,CAACD,EAAG,QAASC,EAAG,IAC/B,cAAe,CAACD,EAAG,MAAOC,EAAG,IAC7B,iBAAkB,CAACD,EAAG,OAAQC,EAAG,IACjC,iBAAkB,CAACD,EAAG,WAAYC,EAAG,IACrC,eAAgB,CAACD,EAAG,SAAUC,EAAG,IACjC,eAAgB,CAACD,EAAG,QAASC,EAAG,IAChC,cAAe,CAACD,EAAG,QAASC,EAAG,IAC/B,aAAc,CAACD,EAAG,QAASC,EAAG,IAC9B,cAAe,CAACD,EAAG,QAASC,EAAG,IAC/B,eAAgB,CAACD,EAAG,QAASC,EAAG,IAChC,cAAe,CAACD,EAAG,OAAQC,EAAG,KAC9B,cAAe,CAACD,EAAG,WAAYC,EAAG,KAClC,cAAe,CAACD,EAAG,SAAUC,EAAG,IAChC,eAAgB,CAACD,EAAG,UAAWC,EAAG,IAClC,eAAgB,CAACD,EAAG,OAAQC,EAAG,IAC/B,cAAe,CAACD,EAAG,UAAWC,EAAG,KACjC,eAAgB,CAACD,EAAG,UAAWC,EAAG,IAClC,cAAe,CAACD,EAAG,MAAOC,EAAG,IAC7B,cAAe,CAACD,EAAG,WAAYC,EAAG,IAClC,eAAgB,CAACD,EAAG,OAAQC,EAAG,KAC/B,eAAgB,CAACD,EAAG,WAAYC,EAAG,IACnC,aAAc,CAACD,EAAG,OAAQC,EAAG,IAC7B,cAAe,CAACD,EAAG,MAAOC,EAAG,KAGlBE,GAAQ,CAAC,GAxjBA,GAwjBSrD,GAAK9B,GAAKC,GAAKC,GAAIC,GAAIC,GAAIC,GAAIC,IAAIE,GAa9DC,OAAOC,SAkCX,IA7CO,I,GAAM0E,GAAK,WAGhB,SAAAA,EAAYlP,IAAsBZ,EAAAA,EAAAA,GAAA,KAAA8P,GAAA,KAFjBlP,SAAG,EAGlB3C,KAAK2C,IAAMA,CACb,CAUC,OAVAX,EAAAA,EAAAA,GAAA6P,EAAA,EAAA7T,IAAA,MAAAiE,MAED,SAAIoL,GACF,OAAOyE,GAAY9R,KAAK2C,KAAK0K,EAC/B,GAAC,CAAArP,IAAAiP,GAAAhL,OAAAsL,EAAAA,EAAAA,KAAAC,MAED,SAAAvL,IAAA,IAAAwL,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmB+D,GAAY9R,KAAK2C,MAAI,WAAAgL,EAAAK,GAAAL,EAAAG,MAAAtH,KAAC,CAADmH,EAAAE,KAAA,QACpC,OADSR,EAAEM,EAAAK,GAAA/L,MAAA0L,EAAAE,KAAA,EACL7N,KAAKsD,IAAI+J,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAM,OAAA,GAAAhM,EAAA,YAE9B4P,CAAA,CAfe,GAkBZE,IAAI/P,EAAAA,EAAAA,IAQR,SAAA+P,EAAY1S,EAAcsD,IAAaZ,EAAAA,EAAAA,GAAA,KAAAgQ,GAAA,KAP9B5D,UAAI,OACJd,QAAE,OACFhO,UAAI,OACJ2S,iBAAW,OACXC,aAAO,OACPC,iBAAW,EAGlBlS,KAAKmO,KAAO,OACZnO,KAAKqN,GAAKnQ,EAAKmC,GACfW,KAAKX,KAAOA,EACZW,KAAKgS,YAActD,GAAYrP,GAC/B,IAAM8S,EAAQX,GAAQnS,GAClB8S,IACFnS,KAAKiS,SAAU,EACfjS,KAAKkS,YAAc,CACjBpH,UAAWnI,EAAM,EAAIwP,EAAMT,EAAI,GAAKS,EAAMT,EAC1CtN,KAAM+N,EAAMV,GAGlB,IAGIK,GAA2C,GAE7CnP,GAAM,EACVqD,GAAA,EAAAoM,GAAoBR,GAAK5L,GAAAoM,GAAAxS,OAAAoG,KAAE,CAAtB,IAEqBE,GAFfmM,GAAKD,GAAApM,IACRsI,GAA4B,CAAC,EAAEhI,IAAAC,EAAAA,EAAAA,GAClB8L,IAAK,IAAxB,IAAA/L,GAAA9B,MAAA0B,GAAAI,GAAA7C,KAAA+C,MAA0B,CAAC,IACnB1G,GAAI,IAAIiS,GADD7L,GAAAjE,MACYU,IACzB2L,GAAIxO,GAAEuN,IAAMvN,EACd,CAAC,OAAAvC,IAAA+I,GAAApH,EAAA3B,GAAA,SAAA+I,GAAAM,GAAA,CACDkL,GAAY5K,KAAKoH,IACjB3L,IACF,CCtkBA,IAAM2P,GAAkC,CACtC,YAAa,CAACC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC/CoO,OAAQ,CAACD,GAAI,GAAInO,KAAM,QAASqO,MAAO,CAAC,EAAG,IAC3CC,KAAM,CAACH,GAAI,GAAInO,KAAM,UACrBuO,QAAS,CAACJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC3C,cAAe,CAACmO,GAAI,GAAInO,KAAM,OAC9BwO,QAAS,CAACL,GAAI,GAAInO,KAAM,SAAUyO,SAAU,CAAC,EAAG,IAChDC,KAAM,CAACP,GAAI,EAAGnO,KAAM,OACpB2O,KAAM,CAACR,GAAI,GAAInO,KAAM,UACrB4O,KAAM,CAACT,GAAI,GAAInO,KAAM,UACrB6O,SAAU,CAACV,GAAI,IAAKnO,KAAM,OAC1B8O,WAAY,CAACX,GAAI,GAAInO,KAAM,SAAUyO,SAAU,GAC/CM,OAAQ,CAACZ,GAAI,GAAInO,KAAM,SACvB,cAAe,CAACmO,GAAI,GAAInO,KAAM,SAC9BgP,MAAO,CAACb,GAAI,GAAInO,KAAM,SACtB,cAAe,CAACmO,GAAI,GAAInO,KAAM,SAAUyO,SAAU,CAAC,EAAG,IACtDQ,UAAW,CAACd,GAAI,GAAInO,KAAM,UAC1BkP,WAAY,CAACf,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC9CmP,QAAS,CAAChB,GAAI,EAAGnO,KAAM,YACvBoP,WAAY,CAACjB,GAAI,GAAInO,KAAM,SAC3B,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAClDqP,IAAK,CAAClB,GAAI,IAAKnO,KAAM,UACrBsP,QAAS,CAACnB,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3C,cAAe,CAACmO,GAAI,GAAInO,KAAM,UAC9B,cAAe,CAACmO,GAAI,IAAKnO,KAAM,SAAUuP,OAAQ,CAAC,GAAI,MACtD,cAAe,CAACpB,GAAI,GAAInO,KAAM,WAAYyO,SAAU,GACpD,cAAe,CAACN,GAAI,GAAInO,KAAM,SAAUyO,SAAU,CAAC,EAAG,IACtD,cAAe,CAACN,GAAI,EAAGnO,KAAM,UAC7B,cAAe,CAACmO,GAAI,IAAKnO,KAAM,UAAWqO,MAAO,CAAC,EAAG,IACrDmB,WAAY,CAACrB,GAAI,IAAKnO,KAAM,UAC5ByP,UAAW,CAACtB,GAAI,IAAKnO,KAAM,UAC3B,aAAc,CAACmO,GAAI,IAAKnO,KAAM,QAC9B,YAAa,CAACmO,GAAI,GAAInO,KAAM,QAC5B0P,QAAS,CAACvB,GAAI,EAAGnO,KAAM,UACvB2P,IAAK,CAACxB,GAAI,GAAInO,KAAM,UACpB,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAClD,cAAe,CAACmO,GAAI,GAAInO,KAAM,SAAUyO,SAAU,CAAC,EAAG,IACtD,cAAe,CAACN,GAAI,GAAInO,KAAM,SAAUyO,SAAU,CAAC,EAAG,IACtDmB,MAAO,CAACzB,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACzC6P,OAAQ,CAAC1B,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1C8P,WAAY,CAAC3B,GAAI,EAAGnO,KAAM,UAC1B+P,KAAM,CAAC5B,GAAI,GAAInO,KAAM,UACrBgQ,KAAM,CAAC7B,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OACxC,iBAAkB,CAACmO,GAAI,GAAInO,KAAM,WAAYiQ,gBAAgB,GAC7D,aAAc,CAAC9B,GAAI,EAAGnO,KAAM,UAC5B,aAAc,CAACmO,GAAI,IAAKnO,KAAM,UAC9B,YAAa,CAACmO,GAAI,GAAInO,KAAM,WAAYiQ,gBAAgB,GACxD,cAAe,CAAC9B,GAAI,GAAInO,KAAM,UAC9B,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAChD,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAClDkQ,UAAW,CAAC/B,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7CmQ,MAAO,CAAChC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACzCoQ,SAAU,CAACjC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC5C,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjDqQ,KAAM,CAAClC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OACxC,cAAe,CAACmO,GAAI,EAAGnO,KAAM,SAC7B,cAAe,CAACmO,GAAI,GAAInO,KAAM,SAC9B,cAAe,CAACmO,GAAI,GAAInO,KAAM,MAAOyO,SAAU,CAAC,EAAG,IACnD,eAAgB,CAACN,GAAI,GAAInO,KAAM,UAC/B3C,QAAS,CAAC8Q,GAAI,GAAInO,KAAM,WACxBsQ,QAAS,CAACnC,GAAI,EAAGnO,KAAM,WACvBuQ,KAAM,CAACpC,GAAI,GAAInO,KAAM,UACrB,aAAc,CAACmO,GAAI,GAAInO,KAAM,SAC7B,aAAc,CAACmO,GAAI,GAAInO,KAAM,UAC7BwQ,QAAS,CAACrC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3CyQ,QAAS,CAACtC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC3C0Q,KAAM,CAACvC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WACxC2Q,KAAM,CAACxC,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACxC,aAAc,CAACmO,GAAI,GAAInO,KAAM,QAC7B,aAAc,CAACmO,GAAI,GAAInO,KAAM,QAC7B,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjD,eAAgB,CAACmO,GAAI,EAAGnO,KAAM,YAC9B,gBAAiB,CAACmO,GAAI,IAAKnO,KAAM,UACjC,aAAc,CAACmO,GAAI,IAAKnO,KAAM,UAC9B4Q,MAAO,CAACzC,GAAI,GAAInO,KAAM,UACtB6Q,OAAQ,CAAC1C,GAAI,GAAInO,KAAM,UACvB,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjD,aAAc,CAACmO,GAAI,IAAKnO,KAAM,SAC9B,aAAc,CAACmO,GAAI,EAAGnO,KAAM,UAC5B,eAAgB,CAACmO,GAAI,GAAInO,KAAM,SAAUyO,SAAU,CAAC,EAAG,IACvDqC,MAAO,CAAC3C,GAAI,GAAInO,KAAM,UACtB+Q,SAAU,CAAC5C,GAAI,GAAInO,KAAM,SAAUuP,OAAQ,CAAC,EAAG,IAC/C,aAAc,CAACpB,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAChDgR,WAAY,CAAC7C,GAAI,GAAInO,KAAM,WAAYuP,OAAQ,CAAC,EAAG,IACnD0B,WAAY,CAAC9C,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC9C,aAAc,CAACmO,GAAI,EAAGnO,KAAM,UAC5BkR,MAAO,CAAC/C,GAAI,GAAInO,KAAM,UACtB,YAAa,CAACmO,GAAI,GAAInO,KAAM,SAAUuP,OAAQ,CAAC,EAAG,IAClD4B,OAAQ,CAAChD,GAAI,GAAInO,KAAM,UACvBoR,QAAS,CAACjD,GAAI,IAAKnO,KAAM,YACzB,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,YAClDqR,UAAW,CAAClD,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7C,aAAc,CAACmO,GAAI,GAAInO,KAAM,UAC7BsR,UAAW,CAACnD,GAAI,GAAInO,KAAM,MAAOyO,SAAU,GAC3C8C,UAAW,CAACpD,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7C,cAAe,CAACmO,GAAI,GAAInO,KAAM,UAC9BwR,KAAM,CAACrD,GAAI,GAAInO,KAAM,UACrByR,MAAO,CAACtD,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACzC0R,KAAM,CAACvD,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACxC,WAAY,CAACmO,GAAI,GAAInO,KAAM,YAC3B,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChD,gBAAiB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACnD,aAAc,CAACmO,GAAI,IAAKnO,KAAM,UAC9B,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OACjD2R,KAAM,CAACxD,GAAI,GAAInO,KAAM,SACrB,YAAa,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC/C4R,MAAO,CAACzD,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACzC6R,MAAO,CAAC1D,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACzC8R,SAAU,CAAC3D,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC5C,aAAc,CAACmO,GAAI,GAAInO,KAAM,MAAOqO,MAAO,CAAC,EAAG,IAC/C,aAAc,CAACF,GAAI,GAAInO,KAAM,QAASqO,MAAO,CAAC,EAAG,IACjD,YAAa,CAACF,GAAI,GAAInO,KAAM,SAC5B+R,UAAW,CAAC5D,GAAI,GAAInO,KAAM,SAC1BgS,OAAQ,CAAC7D,GAAI,GAAInO,KAAM,UACvB,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChDiS,QAAS,CAAC9D,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC3C,YAAa,CAACmO,GAAI,GAAInO,KAAM,UAC5BkS,aAAc,CAAC/D,GAAI,GAAInO,KAAM,QAC7B,aAAc,CAACmO,GAAI,IAAKnO,KAAM,SAC9B,WAAY,CAACmO,GAAI,GAAInO,KAAM,OAC3BmS,KAAM,CAAChE,GAAI,GAAInO,KAAM,SACrBoS,QAAS,CAACjE,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3CqS,KAAM,CAAClE,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACxC,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAClDsS,KAAM,CAACnE,GAAI,GAAInO,KAAM,UACrBuS,MAAO,CAACpE,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SACzCwS,WAAY,CAACrE,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC9C,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAClDyS,YAAa,CAACtE,GAAI,GAAInO,KAAM,YAC5B,YAAa,CAACmO,GAAI,GAAInO,KAAM,UAC5B,WAAY,CAACmO,GAAI,IAAKnO,KAAM,UAC5B,aAAc,CAACmO,GAAI,GAAInO,KAAM,UAC7B0S,QAAS,CAACvE,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC3C,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjD2S,SAAU,CAACxE,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC5C,eAAgB,CAACmO,GAAI,GAAInO,KAAM,YAC/B4S,QAAS,CAACzE,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3C6S,SAAU,CAAC1E,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC5C8S,QAAS,CAAC3E,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC3C,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SACjD+S,UAAW,CAAC5E,GAAI,GAAInO,KAAM,WAC1BgT,IAAK,CAAC7E,GAAI,GAAInO,KAAM,UACpB,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjD,aAAc,CAACmO,GAAI,GAAInO,KAAM,UAC7BiT,MAAO,CAAC9E,GAAI,GAAInO,KAAM,QACtB,aAAc,CAACmO,GAAI,GAAInO,KAAM,QAC7BkT,OAAQ,CAAC/E,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1CmT,SAAU,CAAChF,GAAI,GAAInO,KAAM,UACzB,cAAe,CAACmO,GAAI,GAAInO,KAAM,UAC9B,YAAa,CAACmO,GAAI,GAAInO,KAAM,OAC5B,YAAa,CAACmO,GAAI,IAAKnO,KAAM,UAC7B,aAAc,CAACmO,GAAI,GAAInO,KAAM,UAC7B,aAAc,CAACmO,GAAI,GAAInO,KAAM,QAC7B,UAAW,CAACmO,GAAI,GAAInO,KAAM,UAC1BoT,KAAM,CAACjF,GAAI,GAAInO,KAAM,UACrBqT,MAAO,CAAClF,GAAI,GAAInO,KAAM,UACtBsT,QAAS,CAACnF,GAAI,GAAInO,KAAM,WACxB,eAAgB,CAACmO,GAAI,GAAInO,KAAM,SAAUuT,SAAU,GACnDC,QAAS,CAACrF,GAAI,GAAInO,KAAM,UACxB,gBAAiB,CAACmO,GAAI,GAAInO,KAAM,SAChCyT,KAAM,CAACtF,GAAI,GAAInO,KAAM,UACrB0T,YAAa,CAACvF,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC/C2T,OAAQ,CAACxF,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1C4T,SAAU,CAACzF,GAAI,GAAInO,KAAM,UACzB,gBAAiB,CAACmO,GAAI,GAAInO,KAAM,YAChC,gBAAiB,CAACmO,GAAI,GAAInO,KAAM,YAChC,YAAa,CAACmO,GAAI,GAAInO,KAAM,UAC5B,YAAa,CAACmO,GAAI,GAAInO,KAAM,SAC5B6T,SAAU,CAAC1F,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UA8HxCmK,GAAkCpP,GAAO,EAAM,CAAC,EAAGmT,GA3HE,CACzDQ,KAAM,CAAC1O,KAAM,UACbmP,QAAS,CAAChB,GAAI,GACdkB,IAAK,CAAClB,GAAI,IACV,cAAe,CAACA,GAAI,KACpBsB,UAAW,CAACtB,GAAI,KAChB4B,KAAM,CAAC/P,KAAM,UACb,cAAe,CAACA,KAAM,YACtBsQ,QAAS,CAACnC,GAAI,GACd,gBAAiB,CAACA,GAAI,KACtB4C,SAAU,CAACxB,OAAQ,CAAC,EAAG,IACvB,cAAe,CAACpB,GAAI,GACpBS,KAAM,CAAC5O,KAAM,QACb,cAAe,CAACmO,GAAI,GACpB,cAAe,CAACnO,KAAM,UACtB,eAAgB,CAACmO,GAAI,GACrB,aAAc,CAACA,GAAI,GACnB,aAAc,CAACA,GAAI,GACnB,cAAe,CAACA,GAAI,IACpB2F,UAAW,CAAC3F,GAAI,IAAKnO,KAAM,UAC3B+T,QAAS,CAAC5F,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3C,UAAW,CAACmO,GAAI,GAAInO,KAAM,QAC1B,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChD,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAClD,aAAc,CAACmO,GAAI,IAAKnO,KAAM,YAC9BgU,MAAO,CAAC7F,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OACzC,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAClDiU,OAAQ,CAAC9F,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAAYuT,SAAU,GAChEW,OAAQ,CAAC/F,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1CmU,OAAQ,CAAChG,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAAUuT,SAAU,GAC9Da,MAAO,CAACjG,GAAI,EAAGnO,KAAM,UACrBqU,UAAW,CAAClG,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7C,eAAgB,CAACmO,GAAI,GAAInO,KAAM,WAC/B,YAAa,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC/C,WAAY,CAACmO,GAAI,GAAInO,KAAM,OAC3B,UAAW,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7C,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjD,cAAe,CAACmO,GAAI,EAAGnO,KAAM,WAC7BsU,UAAW,CAACnG,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7C,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjDuU,UAAW,CAACpG,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAC7CwU,QAAS,CAACrG,GAAI,GAAInO,KAAM,UACxB,cAAe,CAACmO,GAAI,GAAInO,KAAM,OAC9ByU,QAAS,CAACtG,GAAI,EAAGnO,KAAM,UACvB0U,QAAS,CAACvG,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAAUuT,SAAU,GAC/D,WAAY,CAACpF,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC9C2U,QAAS,CAACxG,GAAI,GAAInO,KAAM,QACxB,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAChD4U,SAAU,CAACzG,GAAI,EAAGnO,KAAM,YACxB6U,UAAW,CAAC1G,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7C8U,UAAW,CAAC3G,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAC7C+U,OAAQ,CAAC5G,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1C,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChDgV,OAAQ,CAAC7G,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1CiV,MAAO,CAAC9G,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SACzC,YAAa,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAC/CkV,QAAS,CAAC/G,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3C,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjDmV,UAAW,CAAChH,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAC7CoV,MAAO,CAACjH,GAAI,GAAInO,KAAM,QACtB,cAAe,CAACmO,GAAI,GAAInO,KAAM,WAAYyO,SAAU,CAAC,EAAG,IACxD4G,QAAS,CAAClH,GAAI,GAAInO,KAAM,UACxB,gBAAiB,CAACmO,GAAI,GAAInO,KAAM,QAChC,YAAa,CAACmO,GAAI,GAAInO,KAAM,SAAUyO,SAAU,CAAC,EAAG,IACpD6G,OAAQ,CAACnH,GAAI,GAAInO,KAAM,QACvB,eAAgB,CAACmO,GAAI,GAAInO,KAAM,QAC/B,aAAc,CAACmO,GAAI,GAAInO,KAAM,QAASqO,MAAO,CAAC,EAAG,IACjD,eAAgB,CAACF,GAAI,EAAGnO,KAAM,UAC9B,YAAa,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC/C,aAAc,CAACmO,GAAI,GAAInO,KAAM,UAC7B,aAAc,CAACmO,GAAI,GAAInO,KAAM,YAC7B,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OAChDuV,UAAW,CAACpH,GAAI,GAAInO,KAAM,SAC1B,aAAc,CAACmO,GAAI,IAAKnO,KAAM,YAC9B,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAClD,gBAAiB,CAACmO,GAAI,GAAInO,KAAM,SAAUuT,SAAU,GACpD,cAAe,CAACpF,GAAI,GAAInO,KAAM,OAC9BwV,UAAW,CAACrH,GAAI,EAAGnO,KAAM,UACzB,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChD,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChDyV,MAAO,CAACtH,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACzC,mBAAoB,CAACmO,GAAI,GAAInO,KAAM,OACnC,oBAAqB,CAACmO,GAAI,GAAInO,KAAM,QACpC,sBAAuB,CAACmO,GAAI,GAAInO,KAAM,UACtC,wBAAyB,CAACmO,GAAI,GAAInO,KAAM,YACxC,wBAAyB,CAACmO,GAAI,GAAInO,KAAM,YACxC,oBAAqB,CAACmO,GAAI,GAAInO,KAAM,QACpC,sBAAuB,CAACmO,GAAI,GAAInO,KAAM,UACtC,qBAAsB,CAACmO,GAAI,GAAInO,KAAM,SACrC,qBAAsB,CAACmO,GAAI,GAAInO,KAAM,SACrC,sBAAuB,CAACmO,GAAI,GAAInO,KAAM,UACtC,mBAAoB,CAACmO,GAAI,GAAInO,KAAM,OACnC,sBAAuB,CAACmO,GAAI,GAAInO,KAAM,UACtC,uBAAwB,CAACmO,GAAI,GAAInO,KAAM,WACvC,oBAAqB,CAACmO,GAAI,GAAInO,KAAM,QACpC,qBAAsB,CAACmO,GAAI,GAAInO,KAAM,SACrC,qBAAsB,CAACmO,GAAI,GAAInO,KAAM,SACrC,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjD0V,MAAO,CAACvH,GAAI,GAAInO,KAAM,UACtB,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChD2V,QAAS,CAACxH,GAAI,GAAInO,KAAM,QACxB4V,YAAa,CAACzH,GAAI,EAAGnO,KAAM,UAC3B6V,OAAQ,CAAC1H,GAAI,EAAGnO,KAAM,UACtB,cAAe,CAACmO,GAAI,IAAKnO,KAAM,QAC/B,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChD,gBAAiB,CAACmO,GAAI,GAAInO,KAAM,UAChC,gBAAiB,CAACmO,GAAI,IAAKnO,KAAM,YACjC,cAAe,CAACmO,GAAI,GAAInO,KAAM,UAC9B,cAAe,CAACmO,GAAI,GAAInO,KAAM,QAC9B,YAAa,CAACmO,GAAI,IAAKnO,KAAM,SAC7B,aAAc,CAACmO,GAAI,GAAInO,KAAM,WAAYuT,SAAU,GACnDuC,SAAU,CAAC3H,GAAI,IAAKnO,KAAM,OAC1B,aAAc,CAACmO,GAAI,GAAInO,KAAM,SAC7B,WAAY,CAACmO,GAAI,GAAInO,KAAM,UAC3B+V,UAAW,CAAC5H,GAAI,GAAInO,KAAM,SAC1B,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAChD,cAAe,CAACmO,GAAI,GAAInO,KAAM,SAC9B,cAAe,CAACmO,GAAI,GAAInO,KAAM,UAC9BgW,MAAO,CAAC7H,GAAI,GAAInO,KAAM,YACtB,aAAc,CAACmO,GAAI,GAAInO,KAAM,SAC7B,cAAe,CAACmO,GAAI,GAAInO,KAAM,cAwO1BqI,GAAkCtN,GAAO,EAAM,CAAC,EAAGoP,GAnOE,CACzDmE,KAAM,CAAChT,OAAQ,mBACf,gBAAiB,CAAC2a,cAAc,GAChCvH,KAAM,CAACuH,cAAc,GACrBtH,KAAM,CAACsH,cAAc,GACrBpH,SAAU,CAACvT,OAAQ,mBACnB0T,MAAO,CAACiH,cAAc,GACtB,cAAe,CAACA,cAAc,GAC9B9G,QAAS,CAAC8G,cAAc,GACxBX,OAAQ,CAACW,cAAc,GACvBhC,OAAQ,CAACV,SAAU,GACnBY,OAAQ,CAACZ,SAAU,GACnBmB,QAAS,CAACnB,SAAU,GACpBlE,IAAK,CAAC4G,cAAc,GACpB,cAAe,CAACA,cAAc,GAC9B,cAAe,CAACA,cAAc,GAC9BxG,UAAW,CAACnU,OAAQ,eACpB8Y,MAAO,CAAC6B,cAAc,GACtBtG,IAAK,CAACsG,cAAc,GACpB,cAAe,CAACA,cAAc,GAC9B,cAAe,CAACA,cAAc,GAC9B,iBAAkB,CAACA,cAAc,GACjC,YAAa,CAACA,cAAc,GAC5B,aAAc,CAACA,cAAc,GAC7BzB,QAAS,CAACyB,cAAc,GACxB,cAAe,CAACA,cAAc,GAC9BtB,QAAS,CAACsB,cAAc,GACxB1F,KAAM,CAAC0F,cAAc,GACrB,aAAc,CAACA,cAAc,GAC7B,aAAc,CAAC3a,OAAQ,mBACvBsZ,SAAU,CAACqB,cAAc,GACzB,aAAc,CAACA,cAAc,GAC7B,gBAAiB,CAAC3a,OAAQ,eAC1B,aAAc,CAAC2a,cAAc,GAC7BnF,MAAO,CAACmF,cAAc,GACtBlF,SAAU,CAACkF,cAAc,GACzBtE,KAAM,CAACrW,OAAQ,mBACf8Z,MAAO,CAACa,cAAc,GACtB9E,OAAQ,CAAC8E,cAAc,GACvB,cAAe,CAACA,cAAc,EAAMxH,SAAU,GAC9C,YAAa,CAACwH,cAAc,GAC5BlE,UAAW,CAACkE,cAAc,GAC1BzE,KAAM,CAACyE,cAAc,GACrB7G,WAAY,CAAC6G,cAAc,GAC3B,cAAe,CAAC1G,OAAQ,CAAC,EAAG,GAAI0G,cAAc,GAC9CzG,WAAY,CAAClU,OAAQ,eACrB,gBAAiB,CAAC2a,cAAc,GAChC,cAAe,CAACA,cAAc,GAC9B,YAAa,CAACC,SAAS,GACvBV,UAAW,CAACla,OAAQ,eACpBqV,KAAM,CAACuF,SAAS,GAChBlF,WAAY,CAACiF,cAAc,GAC3BjE,OAAQ,CAACiE,cAAc,GACvB,YAAa,CAACA,cAAc,GAC5BZ,QAAS,CAAC/Z,OAAQ,mBAClB,YAAa,CAAC2a,cAAc,GAC5BlH,OAAQ,CAACzT,OAAQ,mBACjBmW,MAAO,CAACyE,SAAS,EAAM5a,OAAQ,mBAC/B6W,KAAM,CAAC8D,cAAc,GACrB,cAAe,CAACC,SAAS,GACzB9D,QAAS,CAAC8D,SAAS,GACnB7D,KAAM,CAAC6D,SAAS,GAChBR,MAAO,CAACQ,SAAS,GACjB,cAAe,CAAC5a,OAAQ,mBACxBkX,WAAY,CAAC0D,SAAS,GACtB,cAAe,CAAC5a,OAAQ,mBACxBqa,QAAS,CAACM,cAAc,GACxBhH,UAAW,CAACgH,cAAc,GAC1B,cAAe,CAACA,cAAc,GAC9BL,YAAa,CAACK,cAAc,GAC5B,aAAc,CAACA,cAAc,GAC7B,cAAe,CAACA,cAAc,GAC9B,WAAY,CAAC9H,GAAI,EAAG8H,cAAc,GAClCJ,OAAQ,CAACI,cAAc,GACvB,eAAgB,CAACA,cAAc,GAC/BrH,KAAM,CAACqH,cAAc,GACrB,aAAc,CAACA,cAAc,GAC7BjD,IAAK,CAACiD,cAAc,GACpB,aAAc,CAACA,cAAc,GAC7B,gBAAiB,CAACA,cAAc,GAChC,cAAe,CAACA,cAAc,GAC9B,aAAc,CAACA,cAAc,GAC7B,cAAe,CAACA,cAAc,GAC9BnG,WAAY,CAACmG,cAAc,GAC3B9C,SAAU,CAAC8C,cAAc,GACzB,cAAe,CAACA,cAAc,GAC9B,aAAc,CAACA,cAAc,GAC7B,YAAa,CAACA,cAAc,GAC5B,WAAY,CAAC3a,OAAQ,mBACrB,YAAa,CAAC2a,cAAc,GAC5BvE,KAAM,CAACpW,OAAQ,mBACf,aAAc,CAAC2a,cAAc,GAC7BH,SAAU,CAACG,cAAc,GACzB,YAAa,CAACA,cAAc,GAC5B,aAAc,CAACA,cAAc,GAC7B,aAAc,CAACA,cAAc,GAC7B7C,KAAM,CAAC6C,cAAc,GACrB5C,MAAO,CAAC4C,cAAc,GACtB,cAAe,CAAC3a,OAAQ,mBACxB,eAAgB,CAAC2a,cAAc,GAC/B,aAAc,CAAC3a,OAAQ,mBACvB,aAAc,CAACA,OAAQ,mBACvBkY,QAAS,CAACyC,cAAc,GACxB,eAAgB,CAACA,cAAc,GAC/B,gBAAiB,CAACA,cAAc,GAChCxC,KAAM,CAACwC,cAAc,GACrBrF,MAAO,CAACqF,cAAc,GACtBD,MAAO,CAACC,cAAc,GACtB,aAAc,CAACA,cAAc,GAC7BrC,SAAU,CAACqC,cAAc,GACzB,aAAc,CAACA,cAAc,GAC7B/E,MAAO,CAAC5V,OAAQ,mBAChB,YAAa,CAACA,OAAQ,mBACtB,gBAAiB,CAAC2a,cAAc,GAChC,YAAa,CAACA,cAAc,GAC5B,cAAe,CAACA,cAAc,GAC9B,cAAe,CAACA,cAAc,GAC9B,aAAc,CACZ9H,GAAI,GACJnO,KAAM,WACNyO,SAAU,CAAC,EAAG,GACdwH,cAAc,GAEhBE,OAAQ,CAAChI,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1CoW,SAAU,CAACjI,GAAI,GAAInO,KAAM,QAASiW,cAAc,GAChDI,MAAO,CAAClI,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACzCsW,OAAQ,CAACnI,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GAC/C,cAAe,CAAC9H,GAAI,GAAInO,KAAM,QAASyO,SAAU,CAAC,EAAG,IACrD8H,WAAY,CAACpI,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC9CwW,OAAQ,CAACrI,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,YAC1CyW,MAAO,CAACtI,GAAI,GAAInO,KAAM,UACtB0W,KAAM,CAACvI,GAAI,GAAInO,KAAM,QAASiW,cAAc,GAC5C,cAAe,CAAC9H,GAAI,IAAKnO,KAAM,SAC/B2W,aAAc,CAACxI,GAAI,GAAInO,KAAM,WAC7B,WAAY,CAACmO,GAAI,GAAInO,KAAM,SAAUuT,SAAU,GAC/C,YAAa,CAACpF,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAAUuT,SAAU,GACnEqD,KAAM,CAACzI,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OACxC,eAAgB,CAACmO,GAAI,GAAInO,KAAM,MAAOyO,SAAU,CAAC,EAAG,IACpDoI,QAAS,CAAC1I,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAC3C,YAAa,CAACmO,GAAI,GAAInO,KAAM,OAAQiW,cAAc,GAClD,aAAc,CAAC9H,GAAI,GAAInO,KAAM,QAASiW,cAAc,GACpD,aAAc,CAAC9H,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAAWuT,SAAU,GACrEuD,QAAS,CAAC3I,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAC3C,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAClD,aAAc,CAACmO,GAAI,GAAInO,KAAM,QAASiW,cAAc,GACpD,cAAe,CAAC9H,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACjD+W,SAAU,CAAC5I,GAAI,IAAKnO,KAAM,OAAQgX,KAAM,CAACzU,OAAQ,CAAC7F,KAAM,IAAKuZ,cAAc,GAC3EgB,QAAS,CAAC9I,GAAI,GAAInO,KAAM,WAAYiW,cAAc,GAClD,aAAc,CAAC9H,GAAI,GAAInO,KAAM,OAAQyO,SAAU,CAAC,EAAG,IACnD,YAAa,CAACN,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC/C,YAAa,CAACmO,GAAI,GAAInO,KAAM,UAC5B,aAAc,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAChD,iBAAkB,CAACmO,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GACzD,UAAW,CAAC9H,GAAI,EAAGnO,KAAM,UACzBkX,UAAW,CAAC/I,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC7CmX,QAAS,CAAChJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3CoX,MAAO,CAACjJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QACzC,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAAU1E,OAAQ,eACpE+b,OAAQ,CAAClJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC1CsX,MAAO,CAACnJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WACzCuX,OAAQ,CAACpJ,GAAI,GAAInO,KAAM,SAAUkW,SAAS,GAC1C,cAAe,CAAC/H,GAAI,IAAKnO,KAAM,WAAYuP,OAAQ,CAAC,EAAG,GAAI0G,cAAc,GACzE,eAAgB,CAAC9H,GAAI,GAAInO,KAAM,UAC/BwX,aAAc,CAACrJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAChD,cAAe,CAACmO,GAAI,GAAInO,KAAM,WAAYiW,cAAc,GACxDwB,SAAU,CAACtJ,GAAI,EAAGnO,KAAM,SAAUiW,cAAc,GAChD,cAAe,CAAC9H,GAAI,IAAKnO,KAAM,WAAYiW,cAAc,GACzDyB,SAAU,CAACvJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC5C,YAAa,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC/C2X,QAAS,CAACxJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3C,eAAgB,CAACmO,GAAI,GAAInO,KAAM,UAC/B,eAAgB,CAACmO,GAAI,GAAInO,KAAM,WAAYiW,cAAc,GACzD,YAAa,CAAC9H,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC/C4X,OAAQ,CAACzJ,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OAAQuT,SAAU,GAC5D,YAAa,CAACpF,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,OAC/C6X,QAAS,CAAC1J,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAC3C,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SACjD8X,KAAM,CAAC3J,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACxC,aAAc,CAACmO,GAAI,GAAInO,KAAM,SAAU1E,OAAQ,mBAC/Cyc,OAAQ,CAAC5J,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GAC/C,gBAAiB,CAAC9H,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAASkW,SAAS,GACrE,YAAa,CAAC/H,GAAI,IAAKnO,KAAM,OAAQ1E,OAAQ,mBAC7C,cAAe,CAAC6S,GAAI,GAAInO,KAAM,SAAUkW,SAAS,EAAM5a,OAAQ,mBAC/D,cAAe,CAAC6S,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAASkW,SAAS,GACnE,cAAe,CAAC/H,GAAI,IAAKnO,KAAM,QAASiW,cAAc,GACtD,cAAe,CAAC9H,GAAI,GAAInO,KAAM,QAAS1E,OAAQ,mBAC/C,cAAe,CAAC6S,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GACtD,YAAa,CAAC9H,GAAI,GAAInO,KAAM,QAC5B,cAAe,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QACjD,WAAY,CAACmO,GAAI,GAAInO,KAAM,MAAOiW,cAAc,GAChD,aAAc,CAAC9H,GAAI,EAAGnO,KAAM,OAC5BgY,KAAM,CAAC7J,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACxC,eAAgB,CAACmO,GAAI,GAAInO,KAAM,WAC/B,YAAa,CAACmO,GAAI,GAAInO,KAAM,WAC5B,eAAgB,CAACmO,GAAI,IAAKnO,KAAM,UAAWgX,KAAM,CAACzU,OAAQ,CAAC7F,KAAM,KACjEub,QAAS,CAAC9J,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAC3C,cAAe,CAACmO,GAAI,GAAInO,KAAM,OAC9B,cAAe,CAACmO,GAAI,GAAInO,KAAM,OAC9B,aAAc,CAACmO,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GACrD,aAAc,CAAC9H,GAAI,IAAKnO,KAAM,QAC9B,aAAc,CAACmO,GAAI,GAAInO,KAAM,OAAQiW,cAAc,GACnD,UAAW,CAAC9H,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,YAC7C,YAAa,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAC/C,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,WAClD,aAAc,CAACmO,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GACrD,cAAe,CAAC9H,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GACtD,eAAgB,CAAC9H,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UAClDkY,SAAU,CAAC/J,GAAI,IAAKnO,KAAM,OAAQ1E,OAAQ,mBAC1C,aAAc,CAAC6S,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAChD,gBAAiB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,UACnDmY,QAAS,CAAChK,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,QAC3C,eAAgB,CAACmO,GAAI,IAAKnO,KAAM,SAChCoY,OAAQ,CAACjK,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAC1C,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAAUuT,SAAU,GACtE,eAAgB,CAACpF,GAAI,IAAKnO,KAAM,SAChC,eAAgB,CAACmO,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,SAClD,eAAgB,CAACmO,GAAI,GAAInO,KAAM,SAC/B,WAAY,CAACmO,GAAI,GAAInO,KAAM,UAC3B,cAAe,CAACmO,GAAI,GAAInO,KAAM,SAAUiW,cAAc,GACtD,eAAgB,CAAC9H,GAAI,GAAInO,KAAM,QAASiW,cAAc,GACtD,aAAc,CAAC9H,GAAI,GAAInO,KAAM,YAC7BqY,WAAY,CAAClK,GAAI,IAAKnO,KAAM,WAAYgX,KAAM,CAACzU,OAAQ,CAACpG,KAAM,EAAGC,KAAM,IAAK6Z,cAAc,GAC1F,cAAe,CAAC9H,GAAI,GAAInO,KAAM,SAC9B,cAAe,CAACmO,GAAI,IAAKnO,KAAM,QAAS1E,OAAQ,mBAChDgd,KAAM,CAACnK,GAAI,EAAGhI,SAAU,SAAUnG,KAAM,YAgmBpCsI,GAAkCvN,GAAO,EAAM,CAAC,EAAGsN,GA3lBE,CACzD+F,OAAQ,CAACjI,SAAU,WACnB,aAAc,CAACA,SAAU,YACzBqI,QAAS,CAACrI,SAAU,YACpB,UAAW,CAACA,SAAU,YACtBuI,KAAM,CAAC6E,SAAU,EAAGpN,SAAU,YAC9BwI,KAAM,CAACxI,SAAU,YACjB,YAAa,CAACA,SAAU,YACxB2I,WAAY,CAAC3I,SAAU,YACvBmQ,OAAQ,CAACnQ,SAAU,YACnB,cAAe,CAACA,SAAU,YAC1B,cAAe,CAACA,SAAU,YAC1B6I,MAAO,CAAC7I,SAAU,YAClB,cAAe,CAACoS,SAAS,EAAMpS,SAAU,YACzCgJ,QAAS,CAAChJ,SAAU,YACpBsQ,MAAO,CAACR,cAAc,EAAM9P,SAAU,YACtCiJ,WAAY,CAACjJ,SAAU,YACvBkJ,IAAK,CAAClB,GAAI,GAAIhI,SAAU,YACxBuQ,KAAM,CAACvI,GAAI,GAAIhI,SAAU,YACzB,cAAe,CAACA,SAAU,WAC1B,cAAe,CAACA,SAAU,YAC1B,cAAe,CAACA,SAAU,YAC1B,cAAe,CAACA,SAAU,YAC1B,cAAe,CAACA,SAAU,WAC1BqJ,WAAY,CAACrJ,SAAU,YACvBsR,SAAU,CAACtR,SAAU,YACrBsJ,UAAW,CAACtJ,SAAU,YACtB,gBAAiB,CAACA,SAAU,YAC5B,WAAY,CAAC8P,cAAc,EAAM9P,SAAU,YAC3C,YAAa,CAACA,SAAU,WACxBiO,MAAO,CAACjO,SAAU,YAClBwJ,IAAK,CAACxB,GAAI,GAAIhI,SAAU,YACxB,cAAe,CAACoS,SAAS,EAAMpS,SAAU,YACzC,cAAe,CAACA,SAAU,YAC1B,cAAe,CAACA,SAAU,YAC1B,cAAe,CAACA,SAAU,YAC1B,eAAgB,CAACA,SAAU,WAC3B,aAAc,CAACA,SAAU,WACzB4J,KAAM,CAAC5J,SAAU,WACjB,iBAAkB,CAACgI,GAAI,IAAKhI,SAAU,YACtC,eAAgB,CAACA,SAAU,YAC3B,YAAa,CAACgI,GAAI,GAAIhI,SAAU,YAChC,YAAa,CAACA,SAAU,YACxB,aAAc,CAACA,SAAU,YACzBqP,UAAW,CAACrP,SAAU,YACtB,aAAc,CAACA,SAAU,WACzB,cAAe,CAACA,SAAU,WAC1BqO,QAAS,CAACrG,GAAI,IAAKhI,SAAU,YAC7B,cAAe,CAACgI,GAAI,GAAIhI,SAAU,WAClC,cAAe,CAACA,SAAU,YAC1BmK,QAAS,CAACnK,SAAU,WACpBwO,QAAS,CAACxO,SAAU,YACpB,aAAc,CAACA,SAAU,YACzB,aAAc,CAACA,SAAU,WACzB8Q,QAAS,CAAC9Q,SAAU,YACpByO,SAAU,CAACzO,SAAU,YACrB,aAAc,CAACA,SAAU,YACzB,YAAa,CAACA,SAAU,YACxB,eAAgB,CAACA,SAAU,YAC3B,gBAAiB,CAACA,SAAU,YAC5B,eAAgB,CAACoS,SAAS,EAAMpS,SAAU,YAC1C,iBAAkB,CAACA,SAAU,YAC7B,aAAc,CAACA,SAAU,WACzB,eAAgB,CAACA,SAAU,YAC3B,UAAW,CAACA,SAAU,WACtB2K,MAAO,CAAC3K,SAAU,YAClB4K,SAAU,CAAC5K,SAAU,WAAYqS,gBAAgB,GACjDxH,WAAY,CAAC7K,SAAU,YACvBwL,KAAM,CAACrW,OAAQ,cAAe6K,SAAU,WACxC6L,OAAQ,CAAC7L,SAAU,YACnB,YAAa,CAACA,SAAU,YACxBiP,MAAO,CAACjP,SAAU,YAClBgL,OAAQ,CAAChL,SAAU,YACnBiL,QAAS,CAACjL,SAAU,WACpB,cAAe,CAACA,SAAU,YAC1BmL,UAAW,CAACnL,SAAU,YACtBkP,QAAS,CAAClP,SAAU,WACpBoR,OAAQ,CAACpR,SAAU,WACnB,cAAe,CAACA,SAAU,YAC1BoP,UAAW,CAACpP,SAAU,WACtBqL,KAAM,CAACrL,SAAU,YACjB,aAAc,CAACA,SAAU,WACzB0I,SAAU,CAAC1I,SAAU,WACrB,YAAa,CAACA,SAAU,YACxB4I,OAAQ,CAAC5I,SAAU,WACnBwQ,aAAc,CAACxQ,SAAU,WACzB4R,OAAQ,CAAC5R,SAAU,YACnB,aAAc,CAACA,SAAU,WACzB+L,aAAc,CAAC/L,SAAU,WACzB,YAAa,CAACA,SAAU,WACxB,eAAgB,CAACA,SAAU,WAC3B,mBAAoB,CAACA,SAAU,WAC/B,oBAAqB,CAACA,SAAU,WAChC,sBAAuB,CAACA,SAAU,WAClC,wBAAyB,CAACA,SAAU,WACpC,wBAAyB,CAACA,SAAU,WACpC,oBAAqB,CAACA,SAAU,WAChC,sBAAuB,CAACA,SAAU,WAClC,qBAAsB,CAACA,SAAU,WACjC,qBAAsB,CAACA,SAAU,WACjC,sBAAuB,CAACA,SAAU,WAClC,mBAAoB,CAACA,SAAU,WAC/B,sBAAuB,CAACA,SAAU,WAClC,uBAAwB,CAACA,SAAU,WACnC,oBAAqB,CAACA,SAAU,WAChC,qBAAsB,CAACA,SAAU,WACjC,qBAAsB,CAACA,SAAU,WACjC,aAAc,CAACA,SAAU,WACzB,cAAe,CAACA,SAAU,WAC1B,WAAY,CAACA,SAAU,WACvBgM,KAAM,CAAChM,SAAU,YACjB,cAAe,CAACoS,SAAS,EAAMpS,SAAU,YACzC,cAAe,CAACA,SAAU,WAC1B4Q,SAAU,CAAC5Q,SAAU,UAAW8P,cAAc,GAC9C,cAAe,CAACwC,QAAQ,EAAMtS,SAAU,YACxC,YAAa,CAACA,SAAU,YACxB,aAAc,CAACA,SAAU,YACzBmM,KAAM,CAACnM,SAAU,WACjBuP,MAAO,CAACvP,SAAU,WAClBsM,YAAa,CAACtM,SAAU,WACxB,YAAa,CAACA,SAAU,YACxB,eAAgB,CAACA,SAAU,WAC3B,WAAY,CAACA,SAAU,YACvBwP,QAAS,CAACxP,SAAU,YACpB,aAAc,CAACA,SAAU,WACzB2N,UAAW,CAAC3N,SAAU,WACtB,YAAa,CAACA,SAAU,YACxB8I,UAAW,CAAC9I,SAAU,YACtB,cAAe,CAACoS,SAAS,EAAMpS,SAAU,YACzC,cAAe,CAACA,SAAU,WAC1B,WAAY,CAACA,SAAU,YACvB,eAAgB,CAAC8P,cAAc,EAAM9P,SAAU,YAC/CyP,YAAa,CAACzP,SAAU,YACxB,aAAc,CAACsS,QAAQ,EAAMtS,SAAU,YACvC,cAAe,CAACA,SAAU,YAC1B,WAAY,CAACA,SAAU,YACvB,eAAgB,CAACA,SAAU,WAC3B,YAAa,CAACA,SAAU,WACxB,aAAc,CAACA,SAAU,YACzB,eAAgB,CAACA,SAAU,WAC3BoK,KAAM,CAACpK,SAAU,YACjB0P,OAAQ,CAAC1P,SAAU,YACnB,eAAgB,CAACA,SAAU,YAC3B,cAAe,CAACA,SAAU,YAC1B,cAAe,CAACA,SAAU,WAC1B,cAAe,CAACA,SAAU,WAC1B,aAAc,CAACA,SAAU,WACzBmI,KAAM,CAACnI,SAAU,WACjB,aAAc,CAACA,SAAU,YACzB,gBAAiB,CAACA,SAAU,UAAW8P,cAAc,GACrDG,SAAU,CAACjQ,SAAU,YACrB,cAAe,CAACA,SAAU,WAC1ByI,KAAM,CAAC6J,QAAQ,EAAMtS,SAAU,YAC/B,aAAc,CAACA,SAAU,WACzB,aAAc,CAACA,SAAU,YACzB,cAAe,CAACA,SAAU,WAC1B4M,UAAW,CAAC5M,SAAU,WACtB,aAAc,CAACA,SAAU,YACzBmP,OAAQ,CAACmD,QAAQ,EAAMtS,SAAU,YACjC,aAAc,CAACA,SAAU,YACzB6M,IAAK,CAAC7M,SAAU,YAChB,gBAAiB,CAACA,SAAU,WAC5B,cAAe,CAACA,SAAU,YAC1B,aAAc,CAACA,SAAU,YACzB,gBAAiB,CAACoS,SAAS,EAAMpS,SAAU,YAC3C8M,MAAO,CAAC9M,SAAU,WAClB+R,SAAU,CAAC/R,SAAU,WACrB,cAAe,CAACA,SAAU,YAC1B,aAAc,CAACoS,SAAS,EAAMpS,SAAU,YACxCuJ,QAAS,CAACvJ,SAAU,YACpB,cAAe,CAACA,SAAU,YAC1B,eAAgB,CAACA,SAAU,WAC3B2J,WAAY,CAAC3J,SAAU,YACvBgN,SAAU,CAAChN,SAAU,YACrB,cAAe,CAACA,SAAU,YAC1B,aAAc,CAACA,SAAU,YACzB,eAAgB,CAACA,SAAU,WAC3B,aAAc,CAACA,SAAU,WACzB,YAAa,CAACoS,SAAS,EAAMpS,SAAU,YACvC,WAAY,CAACA,SAAU,WACvB,YAAa,CAACA,SAAU,YACxB,aAAc,CAACgI,GAAI,GAAIhI,SAAU,YACjC,aAAc,CAACoS,SAAS,EAAMpS,SAAU,YACxC,eAAgB,CAACA,SAAU,WAC3B2P,SAAU,CAAC3P,SAAU,YACrB,YAAa,CAACA,SAAU,YACxB,aAAc,CAACoS,SAAS,EAAMpS,SAAU,YACxC,aAAc,CAACA,SAAU,YACzB,WAAY,CAACA,SAAU,WACvB,WAAY,CAACA,SAAU,WACvB,cAAe,CAACA,SAAU,WAC1B4P,UAAW,CAAC5P,SAAU,WACtB,aAAc,CAACA,SAAU,WACzB,UAAW,CAACA,SAAU,YACtBiN,KAAM,CAACjN,SAAU,YACjB,eAAgB,CAACA,SAAU,YAC3B,cAAe,CAACA,SAAU,YAC1BkN,MAAO,CAAClN,SAAU,YAClB,cAAe,CAACA,SAAU,WAC1BsO,QAAS,CAACtO,SAAU,YACpBmN,QAAS,CAACnN,SAAU,WACpB9I,QAAS,CAAC8I,SAAU,WACpB,eAAgB,CAACA,SAAU,YAC3B,aAAc,CAACA,SAAU,YACzB,aAAc,CAACA,SAAU,YACzB,aAAc,CAACgI,GAAI,GAAIhI,SAAU,YACjC,aAAc,CAACA,SAAU,YACzBqN,QAAS,CAACrN,SAAU,YACpB,eAAgB,CAACA,SAAU,YAC3B,cAAe,CAACA,SAAU,WAC1B,eAAgB,CAACoS,SAAS,EAAMpS,SAAU,YAC1C,gBAAiB,CAACA,SAAU,YAC5B,aAAc,CAACA,SAAU,WACzB,aAAc,CAACA,SAAU,YACzBsN,KAAM,CAACtN,SAAU,YACjByK,MAAO,CAACzK,SAAU,YAClB0K,OAAQ,CAAC1K,SAAU,WACnB,cAAe,CAACA,SAAU,WAC1B6P,MAAO,CAAC7P,SAAU,YAClB,aAAc,CAACA,SAAU,YACzByN,SAAU,CAACzN,SAAU,YACrB,aAAc,CAACA,SAAU,YACzBkS,WAAY,CAAClS,SAAU,YACvB+K,MAAO,CAAC/K,SAAU,WAClB,gBAAiB,CAACoS,SAAS,EAAMpS,SAAU,YAC3C,gBAAiB,CAACA,SAAU,WAC5B,aAAc,CAACA,SAAU,WACzB,YAAa,CAACA,SAAU,YACxB,cAAe,CAACA,SAAU,YAC1B4L,UAAW,CAAC5L,SAAU,YACtB,YAAa,CAACA,SAAU,WACxB,cAAe,CAACA,SAAU,WAC1B,cAAe,CAACA,SAAU,WAC1B,cAAe,CAACA,SAAU,YAC1B,aAAc,CAACgI,GAAI,IAAKhI,SAAU,WAClCuS,YAAa,CAACvK,GAAI,EAAGnO,KAAM,UAC3B,YAAa,CAACmO,GAAI,EAAGnO,KAAM,SAC3B2Y,UAAW,CACTxK,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,YAEZyS,UAAW,CACTzK,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CACZgI,GAAI,IACJnO,KAAM,SACNuP,OAAQ,CAAC,EAAG,GACZ0G,cAAc,EACd9P,SAAU,YAEZ,WAAY,CACVgI,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACd9P,SAAU,YAEZ0S,QAAS,CAAC1K,GAAI,GAAInO,KAAM,SAAUkW,SAAS,EAAM/P,SAAU,WAC3D2S,QAAS,CAAC3K,GAAI,EAAGnO,KAAM,UACvB,aAAc,CACZmO,GAAI,EACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ4S,MAAO,CAAC5K,GAAI,EAAGnO,KAAM,UACrB,aAAc,CACZmO,GAAI,GACJnO,KAAM,SACNyO,SAAU,EACVwH,cAAc,EACd9P,SAAU,YAEZ,cAAe,CACbgI,GAAI,GACJnO,KAAM,WACNqO,MAAO,CAAC,EAAG,GACX4H,cAAc,EACdsC,SAAS,EACTpS,SAAU,YAEZ6S,QAAS,CAAC7K,GAAI,EAAGnO,KAAM,QACvBiZ,MAAO,CACL9K,GAAI,GACJnO,KAAM,SACNuT,SAAU,EACV2F,eAAe,EACf/S,SAAU,YAEZ,YAAa,CACXgI,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACdwC,QAAQ,EACRtS,SAAU,YAEZ,cAAe,CACbgI,GAAI,IACJnO,KAAM,OACNuP,OAAQ,CAAC,EAAG,GACZ0G,cAAc,EACd9P,SAAU,YAEZgT,MAAO,CAAChL,GAAI,EAAGnO,KAAM,OAAQmG,SAAU,YACvCiT,QAAS,CAACjL,GAAI,EAAGnO,KAAM,WACvB,aAAc,CACZmO,GAAI,IACJnO,KAAM,OACNuP,OAAQ,CAAC,EAAG,GACZ0G,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,EAAGnO,KAAM,UAAW1E,OAAQ,mBAC/C,eAAgB,CAAC6S,GAAI,EAAGnO,KAAM,WAC9B,aAAc,CAACmO,GAAI,EAAGnO,KAAM,OAC5B,cAAe,CACbmO,GAAI,IACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,cAAe,CAACgI,GAAI,EAAGnO,KAAM,UAC7B,cAAe,CAACmO,GAAI,EAAGnO,KAAM,WAC7B,cAAe,CAACmO,GAAI,IAAKnO,KAAM,OAAQmG,SAAU,WACjD,cAAe,CAACgI,GAAI,EAAGnO,KAAM,YAC7B,WAAY,CAACmO,GAAI,EAAGnO,KAAM,UAC1B,cAAe,CAACmO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,YAChD,cAAe,CAACgI,GAAI,EAAGnO,KAAM,WAC7B,eAAgB,CAACmO,GAAI,EAAGnO,KAAM,SAAUmG,SAAU,YAClDkT,QAAS,CACPlL,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,YAEZmT,MAAO,CACLnL,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,cAAe,CAACgI,GAAI,EAAGnO,KAAM,WAC7BuZ,MAAO,CAACpL,GAAI,EAAGnO,KAAM,UACrB,eAAgB,CAACmO,GAAI,EAAGnO,KAAM,QAC9B,eAAgB,CACdmO,GAAI,GACJnO,KAAM,OACNuT,SAAU,EACV0C,cAAc,EACd9P,SAAU,YAEZqT,WAAY,CAACrL,GAAI,EAAGnO,KAAM,QAC1ByZ,SAAU,CAACtL,GAAI,EAAGnO,KAAM,UACxB,eAAgB,CAACmO,GAAI,EAAGnO,KAAM,UAC9B,aAAc,CAACmO,GAAI,EAAGnO,KAAM,WAC5B,SAAU,CACRmO,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,YAEZ,cAAe,CACbgI,GAAI,IACJnO,KAAM,QACNuP,OAAQ,CAAC,EAAG,GACZ0G,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,EAAGnO,KAAM,SAC5B,YAAa,CACXmO,GAAI,EACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WAEZ,YAAa,CAACgI,GAAI,GAAInO,KAAM,SAAUmG,SAAU,WAChD,cAAe,CAACgI,GAAI,GAAInO,KAAM,WAAYmG,SAAU,WACpD,WAAY,CAACgI,GAAI,GAAInO,KAAM,MAAOkW,SAAS,EAAM/P,SAAU,WAC3D,eAAgB,CAACgI,GAAI,IAAKnO,KAAM,SAAUgX,KAAM,CAACzU,OAAQ,CAAC7F,KAAM,IAAKyJ,SAAU,WAC/E,eAAgB,CAACgI,GAAI,GAAInO,KAAM,SAAUmG,SAAU,WACnD,cAAe,CACbgI,GAAI,IACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,cAAe,CAACgI,GAAI,GAAInO,KAAM,QAASmG,SAAU,WACjD,YAAa,CAACgI,GAAI,IAAKnO,KAAM,SAAUmG,SAAU,YACjD,YAAa,CACXgI,GAAI,EACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,IAAKnO,KAAM,QAASgX,KAAM,CAACzU,OAAQ,CAAC7F,KAAM,IAAKyJ,SAAU,WAC5E,YAAa,CAACgI,GAAI,GAAInO,KAAM,OAAQmG,SAAU,WAC9C,eAAgB,CAACgI,GAAI,EAAGnO,KAAM,WAC9B,eAAgB,CACdmO,GAAI,IACJnO,KAAM,QACNkZ,eAAe,EACfjD,cAAc,EACd9P,SAAU,YAEZ,YAAa,CAACgI,GAAI,EAAGnO,KAAM,OAAQ1E,OAAQ,mBAC3C,cAAe,CAAC6S,GAAI,EAAGnO,KAAM,UAC7B0Z,UAAW,CAACvL,GAAI,EAAGnO,KAAM,SAAU1E,OAAQ,mBAC3C,aAAc,CACZ6S,GAAI,EACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WAEZ,aAAc,CAACgI,GAAI,EAAGnO,KAAM,WAC5B2Z,SAAU,CAACxL,GAAI,IAAKnO,KAAM,SAAUmG,SAAU,WAC9C,cAAe,CAACgI,GAAI,GAAInO,KAAM,QAASmG,SAAU,YACjD,cAAe,CAACgI,GAAI,GAAInO,KAAM,QAASmG,SAAU,WACjD,WAAY,CAACgI,GAAI,GAAInO,KAAM,SAAUmG,SAAU,WAC/C,eAAgB,CAACgI,GAAI,GAAInO,KAAM,QAASmG,SAAU,WAClDyT,WAAY,CACVzL,GAAI,EACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CAACgI,GAAI,IAAKnO,KAAM,SAAUmG,SAAU,WACpD,aAAc,CACZgI,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,IAAKnO,KAAM,QAASmG,SAAU,WACjD,eAAgB,CAACgI,GAAI,IAAKnO,KAAM,SAAUmG,SAAU,WACpD,aAAc,CACZgI,GAAI,EACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WAEZ,WAAY,CACVgI,GAAI,GACJnO,KAAM,QACNuT,SAAU,EACV0C,cAAc,EACd9P,SAAU,YAEZ,YAAa,CACXgI,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CAACgI,GAAI,GAAInO,KAAM,MAAOmG,SAAU,YAChD0T,MAAO,CAAC1L,GAAI,GAAInO,KAAM,QAASmG,SAAU,WACzC,eAAgB,CACdgI,GAAI,GACJnO,KAAM,QACNuT,SAAU,EACV0C,cAAc,EACdsC,SAAS,EACTpS,SAAU,YAEZ,cAAe,CAACgI,GAAI,GAAInO,KAAM,WAAYmG,SAAU,WACpD,eAAgB,CACdgI,GAAI,IACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,GAAInO,KAAM,OAAQmG,SAAU,WAC/C,eAAgB,CAACgI,GAAI,EAAGnO,KAAM,OAC9B8Z,UAAW,CACT3L,GAAI,GACJnO,KAAM,WACN1E,OAAQ,cACR6K,SAAU,WAEZ,cAAe,CAACgI,GAAI,GAAInO,KAAM,SAAUmG,SAAU,WAClD,eAAgB,CAACgI,GAAI,GAAInO,KAAM,QAASmG,SAAU,WAClD,cAAe,CAACgI,GAAI,IAAKnO,KAAM,WAAYmG,SAAU,WACrD,aAAc,CACZgI,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,YAEZ,cAAe,CACbgI,GAAI,IACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,EAAGnO,KAAM,WAC5B,aAAc,CACZmO,GAAI,IACJnO,KAAM,WACNiW,cAAc,EACdsC,SAAS,EACTpS,SAAU,YAEZ,WAAY,CACVgI,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACdwC,QAAQ,EACRtS,SAAU,YAEZ,YAAa,CAACgI,GAAI,GAAInO,KAAM,MAAOuT,SAAU,EAAGpN,SAAU,YAC1D,YAAa,CACXgI,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CACZgI,GAAI,GACJnO,KAAM,OACN1E,OAAQ,cACR6K,SAAU,WAEZ,aAAc,CAACgI,GAAI,EAAGnO,KAAM,QAC5B,cAAe,CACbmO,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CACZgI,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,EAAGnO,KAAM,WAC5B,aAAc,CACZmO,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,GAAInO,KAAM,UAAWmG,SAAU,YAClD,cAAe,CAACgI,GAAI,EAAGnO,KAAM,QAC7B,eAAgB,CAACmO,GAAI,IAAKnO,KAAM,OAAQmG,SAAU,YAClD,YAAa,CAACgI,GAAI,GAAInO,KAAM,QAASmG,SAAU,YAC/C,cAAe,CACbgI,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,QACNuT,SAAU,EACV0C,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,IAAKnO,KAAM,OAAQmG,SAAU,YAChD,eAAgB,CACdgI,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACdwC,QAAQ,EACRtS,SAAU,YAEZ,cAAe,CACbgI,GAAI,GACJnO,KAAM,WACNuT,SAAU,EACVpN,SAAU,WAEZ,YAAa,CACXgI,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,UACNiW,cAAc,EACd9P,SAAU,cA2fRoC,GAAiCxN,GAAO,EAAM,CAAC,EAAGuN,GArfE,CACxD,YAAa,CAACyR,aAAa,GAC3BlL,SAAU,CAACkL,aAAa,GACxB,YAAa,CAACA,aAAa,GAC3BzD,OAAQ,CAACyD,aAAa,GACtBhL,OAAQ,CAACgL,aAAa,GACtB,aAAc,CAACxK,OAAQ,CAAC,GAAI,MAC5B,WAAY,CAACwK,aAAa,GAC1BlB,QAAS,CAACkB,aAAa,GACvBtD,MAAO,CAACtI,GAAI,IACZ,cAAe,CAAC4L,aAAa,GAC7B,cAAe,CAAC5L,GAAI,IACpB,cAAe,CAAC4L,aAAa,GAC7BpD,aAAc,CAACoD,aAAa,GAC5Bd,MAAO,CAAC9K,GAAI,IACZ8F,OAAQ,CAACV,SAAU,GACnB,cAAe,CAAChE,OAAQ,CAAC,GAAI,MAC7BmF,QAAS,CAACnB,SAAU,GACpB,aAAc,CAACwG,aAAa,GAC5B,YAAa,CAAC5L,GAAI,IAClB+D,aAAc,CAAC6H,aAAa,GAC5B,cAAe,CAAC5L,GAAI,IACpB,eAAgB,CAACA,GAAI,IAAKnO,KAAM,WAChC,aAAc,CAACmO,GAAI,IACnB,YAAa,CAAC4L,aAAa,GAC3B,YAAa,CAACA,aAAa,GAC3B,WAAY,CAACA,aAAa,GAC1B5H,KAAM,CAAC4H,aAAa,GACpB,cAAe,CAACA,aAAa,GAC7B,cAAe,CAACA,aAAa,GAC7BhD,SAAU,CAAC,EACX,cAAe,CAACgD,aAAa,GAC7B,aAAc,CAACze,OAAQ,mBACvB,YAAa,CAACye,aAAa,GAC3B,YAAa,CAAC5L,GAAI,IAClB,eAAgB,CAAC4L,aAAa,GAC9BzH,KAAM,CAACyH,aAAa,GACpBrE,MAAO,CAACqE,aAAa,GACrBjJ,MAAO,CAACiJ,aAAa,GACrB3I,QAAS,CAAC2I,aAAa,GACvBtH,YAAa,CAACsH,aAAa,GAC3BxC,OAAQ,CAACpJ,GAAI,IACboH,UAAW,CAACpH,GAAI,IAChB,cAAe,CAACA,GAAI,KACpB6D,OAAQ,CAAC7D,GAAI,IACbgD,OAAQ,CAAChD,GAAI,KACb,YAAa,CAAC4L,aAAa,GAC3B9K,UAAW,CAAC8K,aAAa,GACzB,cAAe,CAACA,aAAa,GAC7B,aAAc,CAACA,aAAa,GAC5B,YAAa,CAAC5L,GAAI,KAClB,eAAgB,CAAC4L,aAAa,GAC9B,cAAe,CAACA,aAAa,GAC7B,YAAa,CAACA,aAAa,GAC3B,WAAY,CAACA,aAAa,GAC1B,aAAc,CAACA,aAAa,GAC5B,eAAgB,CAACA,aAAa,GAC9B,aAAc,CAACA,aAAa,GAC5B,eAAgB,CAACA,aAAa,GAC9B,cAAe,CAACA,aAAa,GAC7B,aAAc,CAACA,aAAa,GAC5B,cAAe,CAACA,aAAa,GAC7B,cAAe,CAACA,aAAa,GAC7BzI,UAAW,CAACyI,aAAa,GACzBzL,KAAM,CAACyL,aAAa,GACpB,gBAAiB,CAACA,aAAa,GAC/B3D,SAAU,CAAC2D,aAAa,GACxB,cAAe,CAACA,aAAa,GAC7B,UAAW,CAAC5L,GAAI,GAChBS,KAAM,CAACmL,aAAa,GACpB,aAAc,CAACA,aAAa,GAC5B,cAAe,CAACA,aAAa,GAC7B,cAAe,CAAC5L,GAAI,IACpB,cAAe,CAAC4L,aAAa,GAC7BhH,UAAW,CAACgH,aAAa,GACzB,eAAgB,CAACA,aAAa,GAC9BzE,OAAQ,CAACyE,aAAa,GACtB,aAAc,CAACA,aAAa,GAC5B/F,MAAO,CAAChU,KAAM,SACd,aAAc,CAAC+Z,aAAa,GAC5BD,UAAW,CAACC,aAAa,GACzB,cAAe,CAAC5L,GAAI,KACpB,gBAAiB,CAAC4L,aAAa,GAC/B,gBAAiB,CAACA,aAAa,GAC/B,cAAe,CAACA,aAAa,GAC7B,gBAAiB,CAACxG,SAAU,GAC5BN,MAAO,CAAC8G,aAAa,GACrB,WAAY,CAACA,aAAa,EAAMxG,SAAU,GAC1C,YAAa,CAACwG,aAAa,GAC3B,aAAc,CAACA,aAAa,GAC5B,cAAe,CAACA,aAAa,GAC7B,cAAe,CAACA,aAAa,EAAMxK,OAAQ,CAAC,GAAI,MAChD,eAAgB,CAACwK,aAAa,GAC9B,cAAe,CAACA,aAAa,GAC7B,aAAc,CAACA,aAAa,GAC5B5G,SAAU,CAAC4G,aAAa,GACxB,iBAAkB,CAAC5L,GAAI,KACvB,WAAY,CAAC4L,aAAa,GAC1B,YAAa,CAACA,aAAa,GAC3B,eAAgB,CAAC5L,GAAI,IACrB,WAAY,CAAC4L,aAAa,GAC1B,YAAa,CAACA,aAAa,GAC3B,YAAa,CAACA,aAAa,GAC3B,cAAe,CAAC5L,GAAI,KACpB,aAAc,CAAC4L,aAAa,GAC5B,aAAc,CAACA,aAAa,GAC5B,WAAY,CAACA,aAAa,GAC1B,WAAY,CAACA,aAAa,GAC1BhE,UAAW,CAACgE,aAAa,GACzB,aAAc,CAACA,aAAa,GAC5B,aAAc,CAACA,aAAa,GAC5B,eAAgB,CAACA,aAAa,GAC9B,cAAe,CAACA,aAAa,GAC7B,cAAe,CAACA,aAAa,GAC7BzG,QAAS,CAACyG,aAAa,GACvB1c,QAAS,CAAC0c,aAAa,GACvB,aAAc,CAACA,aAAa,GAC5B,aAAc,CAACA,aAAa,GAC5B,cAAe,CAACA,aAAa,GAC7B,gBAAiB,CAACA,aAAa,GAC/B,aAAc,CAACA,aAAa,GAC5BlJ,OAAQ,CAACkJ,aAAa,GACtB,cAAe,CAACA,aAAa,GAC7B/D,MAAO,CAAC+D,aAAa,GACrB,aAAc,CAACA,aAAa,GAC5B,eAAgB,CAACA,aAAa,GAC9B,gBAAiB,CAACA,aAAa,GAC/B,gBAAiB,CAACA,aAAa,GAC/B,aAAc,CAACA,aAAa,GAC5B1E,QAAS,CAAC0E,aAAa,GACvB,cAAe,CAACA,aAAa,EAAMxK,OAAQ,CAAC,GAAI,MAChD,cAAe,CAACA,OAAQ,CAAC,GAAI,MAC7BwC,UAAW,CAACgI,aAAa,GACzB,cAAe,CAACA,aAAa,GAC7B,aAAc,CAACA,aAAa,GAC5B,eAAgB,CAACA,aAAa,GAC9BC,WAAY,CAAC7L,GAAI,EAAGnO,KAAM,SAC1Bia,OAAQ,CAAC9L,GAAI,EAAGnO,KAAM,UACtB,eAAgB,CAACmO,GAAI,GAAInO,KAAM,SAAUkW,SAAS,EAAM/P,SAAU,WAClE,eAAgB,CAACgI,GAAI,EAAGnO,KAAM,WAAYmG,SAAU,WACpD+T,YAAa,CAAC/L,GAAI,EAAGnO,KAAM,UAC3B,eAAgB,CACdmO,GAAI,EACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WAEZ,cAAe,CAACgI,GAAI,GAAInO,KAAM,OAAQmG,SAAU,WAChD,eAAgB,CAACgI,GAAI,GAAInO,KAAM,MAAOma,UAAU,EAAMhU,SAAU,WAChE,eAAgB,CAACgI,GAAI,GAAInO,KAAM,QAASmG,SAAU,WAClD,aAAc,CAACgI,GAAI,EAAGnO,KAAM,WAC5B,aAAc,CACZmO,GAAI,EACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,YAEZiU,IAAK,CAACjM,GAAI,GAAInO,KAAM,QAASmG,SAAU,WACvC,aAAc,CACZgI,GAAI,GACJnO,KAAM,QACNqO,MAAO,CAAC,EAAG,GACX4H,cAAc,EACd9P,SAAU,YAEZkU,UAAW,CACTlM,GAAI,IACJnO,KAAM,SACNmG,SAAU,UACV4T,aAAa,GAEfO,WAAY,CAACnM,GAAI,GAAInO,KAAM,OAAQ1E,OAAQ,kBAAmB6K,SAAU,WACxE,YAAa,CACXgI,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEf,aAAc,CAAC5L,GAAI,EAAGnO,KAAM,WAC5B,cAAe,CAACmO,GAAI,EAAGnO,KAAM,WAAYuT,SAAU,GACnD,cAAe,CAACpF,GAAI,EAAGnO,KAAM,MAAOuT,SAAU,GAC9C,aAAc,CACZpF,GAAI,GACJnO,KAAM,SACNkW,SAAS,EACT5a,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,GAEfQ,MAAO,CAACpM,GAAI,GAAInO,KAAM,SAAUkW,SAAS,EAAM/P,SAAU,WACzD,eAAgB,CACdgI,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACVqU,iBAAiB,GAEnBC,MAAO,CACLtM,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACV4T,aAAa,GAEf,cAAe,CAAC5L,GAAI,EAAGnO,KAAM,UAC7B,WAAY,CACVmO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZuU,MAAO,CACLvM,GAAI,GACJnO,KAAM,OACNkW,SAAS,EACT5a,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,GAEfY,KAAM,CAACxM,GAAI,EAAGnO,KAAM,SACpB4a,YAAa,CACXzM,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEf,cAAe,CACb5L,GAAI,GACJnO,KAAM,WACNma,UAAU,EACVlE,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,MACN1E,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,GAEfc,aAAc,CACZ1M,GAAI,GACJnO,KAAM,UACN1E,OAAQ,cACR6K,SAAU,WAEZ,eAAgB,CAACgI,GAAI,GAAInO,KAAM,SAAUmG,SAAU,WACnD2U,YAAa,CAAC3M,GAAI,EAAGnO,KAAM,WAC3B,eAAgB,CAACmO,GAAI,GAAInO,KAAM,QAASmG,SAAU,WAClD,aAAc,CAACgI,GAAI,EAAGnO,KAAM,OAAQuT,SAAU,GAC9C,cAAe,CAACpF,GAAI,EAAGnO,KAAM,WAC7B,cAAe,CAACmO,GAAI,EAAGnO,KAAM,UAAWuT,SAAU,GAClD,cAAe,CAACpF,GAAI,GAAInO,KAAM,OAAQmG,SAAU,WAChD,aAAc,CACZgI,GAAI,EACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CAACgI,GAAI,EAAGnO,KAAM,UAC9B,cAAe,CAACmO,GAAI,GAAInO,KAAM,WAAYmG,SAAU,WACpD,YAAa,CACXgI,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACVqU,iBAAiB,GAEnB,cAAe,CACbrM,GAAI,GACJnO,KAAM,OACNmG,SAAU,UACV4T,aAAa,GAEf,cAAe,CACb5L,GAAI,IACJnO,KAAM,SACNuP,OAAQ,CAAC,EAAG,GACZ0G,cAAc,EACd9P,SAAU,YAEZ,cAAe,CACbgI,GAAI,GACJnO,KAAM,UACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEfgB,MAAO,CAAC5M,GAAI,EAAGnO,KAAM,QACrB,eAAgB,CACdmO,GAAI,IACJnO,KAAM,OACN1E,OAAQ,cACR6K,SAAU,UACV4T,aAAa,GAEf,aAAc,CACZ5L,GAAI,GACJnO,KAAM,SACNmG,SAAU,UACV4T,aAAa,GAEfiB,WAAY,CACV7M,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,YAAa,CAACgI,GAAI,EAAGnO,KAAM,UAC3B,aAAc,CACZmO,GAAI,IACJnO,KAAM,OACNmG,SAAU,UACV4T,aAAa,GAEf,cAAe,CACb5L,GAAI,IACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEfkB,SAAU,CACR9M,GAAI,GACJnO,KAAM,SACN1E,OAAQ,cACR6K,SAAU,WACV4T,aAAa,GAEf,eAAgB,CACd5L,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,GAAInO,KAAM,SAAUmG,SAAU,WACjD+U,KAAM,CAAC/M,GAAI,EAAGnO,KAAM,UACpB,eAAgB,CAACmO,GAAI,EAAGnO,KAAM,SAC9B,cAAe,CACbmO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,YAAa,CACXgI,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,YAAa,CACXgI,GAAI,GACJnO,KAAM,SACNyO,SAAU,EACVwH,cAAc,EACd9P,SAAU,YAEZgV,WAAY,CACVhN,GAAI,GACJnO,KAAM,WACN1E,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,GAEf,eAAgB,CACd5L,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEf,YAAa,CACX5L,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACViV,yBAA0B,UAE5B,eAAgB,CACdjN,GAAI,IACJnO,KAAM,MACNmG,SAAU,WACV4T,aAAa,GAEf,cAAe,CAAC5L,GAAI,IAAKnO,KAAM,WAAYmG,SAAU,YACrD,eAAgB,CAACgI,GAAI,IAAKnO,KAAM,OAAQmG,SAAU,WAClD,aAAc,CACZgI,GAAI,GACJnO,KAAM,QACNyO,SAAU,EACVwH,cAAc,EACd9P,SAAU,YAEZkV,SAAU,CACRlN,GAAI,GACJnO,KAAM,MACN1E,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,GAEf,cAAe,CAAC5L,GAAI,EAAGnO,KAAM,WAC7B,aAAc,CAACmO,GAAI,EAAGnO,KAAM,QAC5B,WAAY,CACVmO,GAAI,IACJnO,KAAM,MACNmG,SAAU,UACV4T,aAAa,GAEf,eAAgB,CACd5L,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACV4T,aAAa,GAEfuB,QAAS,CACPnN,GAAI,IACJnO,KAAM,OACNmG,SAAU,UACV4T,aAAa,GAEf,eAAgB,CACd5L,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACV4T,aAAa,GAEf,aAAc,CACZ5L,GAAI,GACJnO,KAAM,OACNmG,SAAU,UACV4T,aAAa,GAEf,cAAe,CAAC5L,GAAI,EAAGnO,KAAM,WAC7Bub,SAAU,CACRpN,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACVqV,sBAAuB,OAEzBC,UAAW,CACTtN,GAAI,IACJnO,KAAM,UACNmG,SAAU,UACVqV,sBAAuB,OAEzB,eAAgB,CAACrN,GAAI,EAAGnO,KAAM,OAC9B,cAAe,CACbmO,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEf2B,UAAW,CACTvN,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,WACNmG,SAAU,UACVqV,sBAAuB,OAEzB,cAAe,CAACrN,GAAI,EAAGnO,KAAM,UAC7B,aAAc,CAACmO,GAAI,EAAGnO,KAAM,SAC5B,cAAe,CACbmO,GAAI,GACJnO,KAAM,SACN1E,OAAQ,cACR6K,SAAU,UACV4T,aAAa,GAEf,aAAc,CAAC5L,GAAI,GAAInO,KAAM,OAAQmG,SAAU,YAC/C,eAAgB,CAACgI,GAAI,GAAInO,KAAM,UAAWmG,SAAU,WACpD,YAAa,CACXgI,GAAI,GACJnO,KAAM,SACNyO,SAAU,CAAC,EAAG,GACdwH,cAAc,EACd9P,SAAU,YAEZ,WAAY,CACVgI,GAAI,IACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,YAEZwV,UAAW,CAACxN,GAAI,GAAInO,KAAM,SAAUmG,SAAU,WAC9C,cAAe,CACbgI,GAAI,GACJnO,KAAM,WACNuP,OAAQ,CAAC,EAAG,GACZ0G,cAAc,EACd9P,SAAU,YAEZ,UAAW,CAACgI,GAAI,EAAGnO,KAAM,mBAKpBuI,GAAG,gBAs6EV,IAp6EA,IAqSMC,GAAiCzN,GAAO,EAAM,CAAC,EAAGwN,GArSE,CACxD,WAAY,CAACqT,UAAU,GACvB,YAAa,CAACzN,GAAI,IAClBiH,MAAO,CAACjH,GAAI,IACZK,QAAS,CAACoN,UAAU,GACpB7M,OAAQ,CAACZ,GAAI,IACb0K,QAAS,CAAC1K,GAAI,IACd,WAAY,CAACyN,UAAU,GACvB,YAAa,CAACrI,SAAU,GACxB8G,UAAW,CAAClM,GAAI,KAChB,eAAgB,CAACA,GAAI,IACrB,mBAAoB,CAACA,GAAI,IACzB,oBAAqB,CAACA,GAAI,IAC1B,sBAAuB,CAACA,GAAI,IAC5B,wBAAyB,CAACA,GAAI,IAC9B,wBAAyB,CAACA,GAAI,IAC9B,oBAAqB,CAACA,GAAI,IAC1B,sBAAuB,CAACA,GAAI,IAC5B,qBAAsB,CAACA,GAAI,IAC3B,qBAAsB,CAACA,GAAI,IAC3B,sBAAuB,CAACA,GAAI,IAC5B,mBAAoB,CAACA,GAAI,IACzB,sBAAuB,CAACA,GAAI,IAC5B,uBAAwB,CAACA,GAAI,IAC7B,oBAAqB,CAACA,GAAI,IAC1B,qBAAsB,CAACA,GAAI,IAC3B,qBAAsB,CAACA,GAAI,IAC3B,cAAe,CAACA,GAAI,KACpB,cAAe,CAACyN,UAAU,GAC1B,YAAa,CAACA,UAAU,GACxBtH,UAAW,CAACtU,KAAM,SAClB,WAAY,CAAC4b,UAAU,GACvB,eAAgB,CAACA,UAAU,GAC3B,iBAAkB,CAACzN,GAAI,IACvB0M,aAAc,CAAC1M,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrBiD,QAAS,CAACjD,GAAI,KACd,eAAgB,CAACA,GAAI,IACrB,aAAc,CAACyN,UAAU,GACzB,aAAc,CAACzN,GAAI,IACnB,gBAAiB,CAAC,EAClBwK,UAAW,CAACxK,GAAI,IAChB,cAAe,CAACA,GAAI,GAAIyN,UAAU,EAAMC,SAAS,GACjDhN,SAAU,CAACV,GAAI,KACf,cAAe,CAACyN,UAAU,GAC1BnG,MAAO,CAACzV,KAAM,SACd,eAAgB,CAAC1E,OAAQ,mBACzB8T,WAAY,CAACjB,GAAI,KACjB,aAAc,CAAC0N,SAAS,GACxB,eAAgB,CAAC1N,GAAI,KACrB,eAAgB,CAACA,GAAI,GAAI0N,SAAS,GAClC,eAAgB,CAACD,UAAU,GAC3B,cAAe,CAACzN,GAAI,GAAIyN,UAAU,GAClC,eAAgB,CAAC3F,cAAc,GAC/B,aAAc,CAAC9H,GAAI,KACnB,cAAe,CAACA,GAAI,IACpB+D,aAAc,CAAC/D,GAAI,IACnB,cAAe,CAACyN,UAAU,GAC1B,eAAgB,CAACzN,GAAI,IACrB,cAAe,CAACA,GAAI,IACpB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,IACrB,YAAa,CAACyN,UAAU,GACxB,aAAc,CAACC,SAAS,GACxB,YAAa,CAAC1N,GAAI,IAClBiM,IAAK,CAACjM,GAAI,IACV,aAAc,CAACA,GAAI,KACnB,WAAY,CAACA,GAAI,IACjBmM,WAAY,CAACnM,GAAI,IACjB,aAAc,CAACA,GAAI,KACnBgE,KAAM,CAAChE,GAAI,IACX,YAAa,CAACA,GAAI,IAClB,cAAe,CAACA,GAAI,IACpB,cAAe,CAACA,GAAI,IACpB4H,UAAW,CAAC6F,UAAU,GACtB7E,SAAU,CAAC5I,GAAI,KACf,cAAe,CAACA,GAAI,IACpB,YAAa,CAACA,GAAI,IAClB,cAAe,CAACoF,SAAU,GAC1B,YAAa,CAACpF,GAAI,IAClB,eAAgB,CAACyN,UAAU,GAC3B,YAAa,CAACA,UAAU,GACxB,cAAe,CAACA,UAAU,GAC1B,aAAc,CAACzN,GAAI,KACnB,cAAe,CAACyN,UAAU,GAC1BtJ,KAAM,CAACnE,GAAI,IACXuH,MAAO,CAACvH,GAAI,IACZ,cAAe,CAACA,GAAI,IACpB,eAAgB,CAACA,GAAI,IACrBwD,KAAM,CAACxD,GAAI,IACX,aAAc,CAACnO,KAAM,SACrByS,YAAa,CAACtE,GAAI,IAClB,YAAa,CAACA,GAAI,IAClB,eAAgB,CAACA,GAAI,IACrB,cAAe,CAAC0N,SAAS,GACzB,eAAgB,CAACD,UAAU,GAC3B,aAAc,CAACA,UAAU,GACzB,gBAAiB,CACfzN,GAAI,IACJnO,KAAM,OACN1E,OAAQ,kBACR6K,SAAU,WACV4T,aAAa,GAEf,eAAgB,CACd5L,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACd9P,SAAU,YAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,YAEZ,kBAAmB,CACjBgI,GAAI,IACJnO,KAAM,OACNkZ,eAAe,EACf/S,SAAU,YAEZ,kBAAmB,CACjBgI,GAAI,GACJnO,KAAM,UACNkZ,eAAe,EACf/S,SAAU,WAEZ,gBAAkB,CAACgI,GAAI,EAAGnO,KAAM,QAASuT,SAAU,GACnD,gBAAiB,CAACpF,GAAI,EAAGnO,KAAM,SAC/B,gBAAiB,CACfmO,GAAI,GACJnO,KAAM,OACNmG,SAAU,UACV4T,aAAa,GAEf,mBAAoB,CAClB5L,GAAI,GACJnO,KAAM,WACNqO,MAAO,CAAC,EAAG,GACX/S,OAAQ,cACR6K,SAAU,WAEZ,eAAgB,CAACgI,GAAI,EAAGnO,KAAM,OAAQkW,SAAS,GAC/C,gBAAiB,CACf/H,GAAI,GACJnO,KAAM,QACNkZ,eAAe,EACfjD,cAAc,EACd9P,SAAU,YAEZ2V,OAAQ,CAAC3N,GAAI,EAAGnO,KAAM,MAAOuT,SAAU,GACvC,eAAgB,CAACpF,GAAI,EAAGnO,KAAM,QAASuT,SAAU,GACjD,kBAAmB,CAACpF,GAAI,GAAInO,KAAM,SAAU1E,OAAQ,kBAAmB6K,SAAU,YACjF,iBAAkB,CAACgI,GAAI,GAAInO,KAAM,SAAU1E,OAAQ,kBAAmB6K,SAAU,YAChF,iBAAkB,CAChBgI,GAAI,GACJnO,KAAM,QACNyO,SAAU,CAAC,EAAG,GACd8E,SAAU,EACVpN,SAAU,YAEZ,gBAAiB,CACfgI,GAAI,IACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,mBAAoB,CAACgI,GAAI,EAAGnO,KAAM,YAClC+b,SAAU,CAAC5N,GAAI,EAAGnO,KAAM,SACxB,iBAAkB,CAACmO,GAAI,EAAGnO,KAAM,SAChC,aAAc,CAACmO,GAAI,EAAGnO,KAAM,WAAYuT,SAAU,GAClD,eAAiB,CAACpF,GAAI,GAAInO,KAAM,SAAU1E,OAAQ,kBAAmB6K,SAAU,YAC/E,gBAAiB,CAACgI,GAAI,IAAKnO,KAAM,QAASuP,OAAQ,CAAC,EAAG,GAAIpJ,SAAU,WACpE,gBAAiB,CACfgI,GAAI,GACJnO,KAAM,SACNqO,MAAO,CAAC,EAAG,GACXlI,SAAU,WAEZ,eAAgB,CACdgI,GAAI,IACJnO,KAAM,QACN1E,OAAQ,kBACR6K,SAAU,UACV0V,SAAS,GAEX,mBAAoB,CAClB1N,GAAI,IACJnO,KAAM,SACN1E,OAAQ,kBACR6K,SAAU,YAEZ6V,WAAY,CAAC7N,GAAI,EAAGnO,KAAM,UAC1B,iBAAkB,CAChBmO,GAAI,IACJnO,KAAM,QACNmG,SAAU,UACV4T,aAAa,GAEf,gBAAiB,CAAC5L,GAAI,EAAGnO,KAAM,SAC/B,iBAAkB,CAACmO,GAAI,EAAGnO,KAAM,QAASuT,SAAU,GACnD0I,MAAO,CAAC9N,GAAI,IAAKnO,KAAM,SAAUmG,SAAU,WAC3C+V,UAAW,CACT/N,GAAI,IACJnO,KAAM,SACNkW,SAAS,EACT5a,OAAQ,cACR6K,SAAU,WAEZgW,UAAW,CAAChO,GAAI,EAAGnO,KAAM,UACzBoc,QAAS,CAACjO,GAAI,EAAGnO,KAAM,SAAUkW,SAAS,GAC1C,gBAAiB,CAAC/H,GAAI,EAAGnO,KAAM,QAASuT,SAAU,GAClD,iBAAkB,CAACpF,GAAI,GAAInO,KAAM,QAAS1E,OAAQ,kBAAmB6K,SAAU,WAC/E,kBAAmB,CACjBgI,GAAI,GACJnO,KAAM,QACNkW,SAAS,EACT5a,OAAQ,kBACR6K,SAAU,WAEZ,gBAAiB,CACfgI,GAAI,GACJnO,KAAM,QACNqO,MAAO,CAAC,EAAG,GACX4H,cAAc,EACd9P,SAAU,WAEZ,gBAAiB,CAACgI,GAAI,EAAGnO,KAAM,YAC/Bqc,UAAW,CAAClO,GAAI,EAAGnO,KAAM,YACzB,aAAc,CAACmO,GAAI,EAAGnO,KAAM,SAC5B,aAAc,CAACmO,GAAI,GAAInO,KAAM,QAASmG,SAAU,WAChD,gBAAiB,CAACgI,GAAI,EAAGnO,KAAM,SAC/B,iBAAmB,CAACmO,GAAI,EAAGnO,KAAM,SACjC,aAAc,CACZmO,GAAI,GACJnO,KAAM,MACNmG,SAAU,UACV4T,aAAa,GAEf,aAAc,CAAC5L,GAAI,EAAGnO,KAAM,UAC5B,YAAa,CACXmO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,YAEZ,aAAc,CAACgI,GAAI,EAAGnO,KAAM,UAC5Bsc,YAAa,CAACnO,GAAI,GAAInO,KAAM,MAAOiW,cAAc,EAAM9P,SAAU,WACjE,gBAAiB,CAACgI,GAAI,EAAGnO,KAAM,YAC/B,YAAa,CAACmO,GAAI,EAAGnO,KAAM,YAC3Buc,UAAW,CACTpO,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACV4T,aAAa,GAEf,aAAc,CAAC5L,GAAI,EAAGnO,KAAM,SAAUkW,SAAS,GAC/CsG,OAAQ,CACNrO,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,GACJnO,KAAM,QACN1E,OAAQ,cACR6K,SAAU,YAEZ,YAAa,CAACgI,GAAI,EAAGnO,KAAM,UAC3B,aAAc,CACZmO,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACdsC,SAAS,EACTpS,SAAU,WACV4T,aAAa,GAEf,aAAc,CAAC5L,GAAI,EAAGnO,KAAM,OAC5B,cAAe,CAACmO,GAAI,EAAGnO,KAAM,QAC7B,iBAAkB,CAACmO,GAAI,EAAGnO,KAAM,SAChC,eAAgB,CAACmO,GAAI,EAAGnO,KAAM,SAAU1E,OAAQ,qBA+1B5CmN,GAAiC1N,GAAO,EAAM,CAAC,EAAGyN,GA11BE,CACxD,cAAe,CAAC+K,SAAU,GAC1BO,UAAW,CAAC2I,GAAI,KAChBjO,QAAS,CAACiO,GAAI,KACd/N,KAAM,CAAC+N,GAAI,KACX,YAAa,CAACA,GAAI,KAClB3N,WAAY,CAAC2N,GAAI,KACjB1N,OAAQ,CAAC0N,GAAI,KACb5D,QAAS,CAAC4D,GAAI,KACd,YAAa,CAACA,GAAI,KAClBzN,MAAO,CAACyN,GAAI,KACZ,cAAe,CAACA,GAAI,KACpBxN,UAAW,CAACwN,GAAI,KAChB,aAAc,CAACA,GAAI,KACnB,gBAAiB,CAACA,GAAI,KACtB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,gBAAiB,CAACA,GAAI,KACtB,cAAe,CAACA,GAAI,KACpB,WAAY,CAACA,GAAI,KACjB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB7G,YAAa,CAAC6G,GAAI,KAClB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnBpC,UAAW,CAACoC,GAAI,KAChB,eAAgB,CAACA,GAAI,KACrB,mBAAoB,CAACA,GAAI,KACzB,oBAAqB,CAACA,GAAI,KAC1B,sBAAuB,CAACA,GAAI,KAC5B,wBAAyB,CAACA,GAAI,KAC9B,wBAAyB,CAACA,GAAI,KAC9B,oBAAqB,CAACA,GAAI,KAC1B,sBAAuB,CAACA,GAAI,KAC5B,qBAAsB,CAACA,GAAI,KAC3B,qBAAsB,CAACA,GAAI,KAC3B,sBAAuB,CAACA,GAAI,KAC5B,mBAAoB,CAACA,GAAI,KACzB,sBAAuB,CAACA,GAAI,KAC5B,uBAAwB,CAACA,GAAI,KAC7B,oBAAqB,CAACA,GAAI,KAC1B,qBAAsB,CAACA,GAAI,KAC3B,qBAAsB,CAACA,GAAI,KAC3B,aAAc,CAACA,GAAI,KACnB,kBAAmB,CAACA,GAAI,KACxB,kBAAmB,CAACA,GAAI,KACxB,WAAY,CAACA,GAAI,KACjB9C,SAAU,CAAC8C,GAAI,KACf,YAAa,CAACA,GAAI,KAClB,cAAe,CAACA,GAAI,KACpB,YAAa,CAACA,GAAI,KAClB,eAAiB,CAACA,GAAI,KACtB,gBAAiB,CAACA,GAAI,KACtB,WAAY,CAACA,GAAI,KACjB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpBjH,UAAW,CAACiH,GAAI,KAChB,cAAe,CAACA,GAAI,KACpB,YAAa,CAACA,GAAI,KAClB,WAAY,CAACA,GAAI,KACjB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,gBAAiB,CAACA,GAAI,KACtB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,mBAAoB,CAACA,GAAI,KACzB,eAAgB,CAACA,GAAI,KACrBnM,QAAS,CAACmM,GAAI,KACd7C,WAAY,CAAC6C,GAAI,KACjB9H,QAAS,CAAC8H,GAAI,KACdlM,KAAM,CAACkM,GAAI,KACX,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB5G,OAAQ,CAAC4G,GAAI,KACb,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,WAAY,CAACA,GAAI,KACjB,eAAgB,CAACA,GAAI,KACrB,iBAAkB,CAACA,GAAI,KACvB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,iBAAkB,CAACA,GAAI,KACvB7B,YAAa,CAAC6B,GAAI,KAClB5B,aAAc,CAAC4B,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,kBAAmB,CAACA,GAAI,KACxB,iBAAkB,CAACA,GAAI,KACvB,aAAc,CAACA,GAAI,KACnBrL,QAAS,CAACqL,GAAI,KACdnL,UAAW,CAACmL,GAAI,KAChB,eAAgB,CAACA,GAAI,KACrB,YAAa,CAACA,GAAI,KAClBrO,OAAQ,CAACqO,GAAI,KACbnO,KAAM,CAACmO,GAAI,KACX,aAAc,CAACA,GAAI,KACnBzB,WAAY,CAACyB,GAAI,KACjB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClB,gBAAiB,CAACA,GAAI,KACtB,WAAY,CAACA,GAAI,KACjB,YAAa,CAACA,GAAI,KAClB,aAAc,CAACA,GAAI,KACnB9D,UAAW,CAAC8D,GAAI,KAChBrG,SAAU,CAACqG,GAAI,KACf,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB7D,UAAW,CAAC6D,GAAI,KAChB,UAAW,CAACA,GAAI,KAChBR,MAAO,CAACQ,GAAI,KACZ9N,KAAM,CAAC8N,GAAI,KACX7N,KAAM,CAAC6N,GAAI,KACX,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB5N,SAAU,CAAC4N,GAAI,KACf,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClB,cAAe,CAACA,GAAI,KACpB,YAAa,CAACA,GAAI,KAClBP,UAAW,CAACO,GAAI,KAChBnG,OAAQ,CAACmG,GAAI,KACb,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB5C,MAAO,CAAC4C,GAAI,KACZ,cAAe,CAACA,GAAI,KACpB,WAAY,CAACA,GAAI,KACjB,WAAY,CAACA,GAAI,KACjBxB,SAAU,CAACwB,GAAI,KACf,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB1J,UAAW,CAAC0J,GAAI,KAChBtN,QAAS,CAACsN,GAAI,KACdhG,MAAO,CAACgG,GAAI,KACZrN,WAAY,CAACqN,GAAI,KACjB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrBnH,OAAQ,CAACmH,GAAI,KACb,aAAc,CAACA,GAAI,KACnBzJ,IAAK,CAACyJ,GAAI,KACV,aAAc,CAACA,GAAI,KACnB,iBAAkB,CAACA,GAAI,KACvBpN,IAAK,CAACoN,GAAI,KACV,kBAAmB,CAACA,GAAI,KACxB3C,UAAW,CAAC2C,GAAI,KAChB/F,KAAM,CAAC+F,GAAI,KACX,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrB,gBAAiB,CAACA,GAAI,KACtB,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,gBAAiB,CAACA,GAAI,KACtB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClB,YAAa,CAACA,GAAI,KAClB,gBAAiB,CAACA,GAAI,KACtB,cAAe,CAACA,GAAI,KACpBjN,WAAY,CAACiN,GAAI,KACjB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrBtB,WAAY,CAACsB,GAAI,KACjBxJ,MAAO,CAACwJ,GAAI,KACZhF,SAAU,CAACgF,GAAI,KACf,cAAe,CAACA,GAAI,KACpBvE,SAAU,CAACuE,GAAI,KACfhN,UAAW,CAACgN,GAAI,KAChB9F,aAAc,CAAC8F,GAAI,KACnB,gBAAiB,CAACA,GAAI,KACtB1E,OAAQ,CAAC0E,GAAI,KACb,aAAc,CAACA,GAAI,KACnB,WAAY,CAACA,GAAI,KACjB,cAAe,CAACA,GAAI,KACpBxD,MAAO,CAACwD,GAAI,KACZ,eAAgB,CAACtO,GAAI,GAAIsO,GAAI,KAC7B,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClB/M,QAAS,CAAC+M,GAAI,KACdrI,MAAO,CAACqI,GAAI,KACZ,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpBvK,aAAc,CAACuK,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrBtD,MAAO,CAACsD,GAAI,KACZ9M,IAAK,CAAC8M,GAAI,KACV,eAAgB,CAACtO,GAAI,IAAKsO,GAAI,KAC9B,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpBpB,SAAU,CAACoB,GAAI,KACf,eAAgB,CAACA,GAAI,KACrB3M,WAAY,CAAC2M,GAAI,KACjB,YAAa,CAACA,GAAI,KAClB1M,KAAM,CAAC0M,GAAI,KACX,YAAa,CAACA,GAAI,KAClB,aAAc,CAACA,GAAI,KACnBtJ,SAAU,CAACsJ,GAAI,KACf,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClBrC,IAAK,CAACqC,GAAI,KACV,iBAAkB,CAACA,GAAI,KACvB,YAAa,CAACA,GAAI,KAClB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB,WAAY,CAACA,GAAI,KACjB,WAAY,CAACA,GAAI,KACjB,WAAY,CAACA,GAAI,KACjB,YAAa,CAACA,GAAI,KAClB,YAAa,CAACA,GAAI,KAClB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,WAAY,CAACA,GAAI,KACjBnC,WAAY,CAACmC,GAAI,KACjBnB,QAAS,CAACmB,GAAI,KACdH,YAAa,CAACG,GAAI,KAClB,YAAa,CAACA,GAAI,KAClB,YAAa,CAACA,GAAI,KAClB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACtO,GAAI,GAAIsO,GAAI,KAC3BtK,KAAM,CAACsK,GAAI,KACX,YAAa,CAACA,GAAI,KAClB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB3G,SAAU,CAAC2G,GAAI,KACf,YAAa,CAACA,GAAI,KAClB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpBF,UAAW,CAACE,GAAI,KAChB,WAAY,CAACA,GAAI,KACjB,WAAY,CAACA,GAAI,KACjB,cAAe,CAACA,GAAI,KACpB,gBAAiB,CAACtO,GAAI,GAAIsO,GAAI,KAC9B,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpBD,OAAQ,CAACC,GAAI,KACb1G,UAAW,CAAC0G,GAAI,KAChBjI,QAAS,CAACiI,GAAI,KACd1F,SAAU,CAAC0F,GAAI,KACf,aAAc,CAACA,GAAI,KACnB,mBAAoB,CAACtO,GAAI,GAAIsO,GAAI,KACjCpD,QAAS,CAACoD,GAAI,KACd,UAAW,CAACA,GAAI,KAChBrJ,KAAM,CAACqJ,GAAI,KACX,iBAAkB,CAACA,GAAI,KACvB,cAAe,CAACA,GAAI,KACpB,gBAAiB,CAACA,GAAI,KACtB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnBnD,MAAO,CAACmD,GAAI,KACZ,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpBpJ,MAAO,CAACoJ,GAAI,KACZ,cAAe,CAACA,GAAI,KACpB,YAAa,CAACA,GAAI,KAClB,iBAAkB,CAACA,GAAI,KACvB,aAAc,CAACA,GAAI,KACnBhI,QAAS,CAACgI,GAAI,KACdnJ,QAAS,CAACmJ,GAAI,KACdpf,QAAS,CAACof,GAAI,KACd,aAAc,CAACA,GAAI,KACnBlB,SAAU,CAACkB,GAAI,KACfhB,UAAW,CAACgB,GAAI,KAChB,eAAgB,CAACA,GAAI,KACrB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpBf,UAAW,CAACe,GAAI,KAChBxF,QAAS,CAACwF,GAAI,KACd7H,SAAU,CAAC6H,GAAI,KACf,aAAc,CAACb,UAAU,EAAMa,GAAI,KACnC,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,YAAa,CAACA,GAAI,KAClB,eAAgB,CAACA,GAAI,KACrB9G,QAAS,CAAC8G,GAAI,KACdlC,MAAO,CAACkC,GAAI,KACZ,eAAgB,CAACA,GAAI,KACrB,YAAa,CAACA,GAAI,KAClBhC,MAAO,CAACgC,GAAI,KACZjJ,QAAS,CAACiJ,GAAI,KACd,eAAgB,CAACA,GAAI,KACrB,YAAa,CAACA,GAAI,KAClB,eAAgB,CAACA,GAAI,KACrB,gBAAiB,CAACA,GAAI,KACtB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrB,eAAgB,CAACA,GAAI,KACrB,gBAAiB,CAACA,GAAI,KACtB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnB,aAAc,CAACA,GAAI,KACnBhJ,KAAM,CAACgJ,GAAI,KACX7L,MAAO,CAAC6L,GAAI,KACZ5L,OAAQ,CAAC4L,GAAI,KACb,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,aAAc,CAACA,GAAI,KACnBnK,KAAM,CAACmK,GAAI,KACX/B,MAAO,CAAC+B,GAAI,KACZ/G,MAAO,CAAC+G,GAAI,KACZzG,MAAO,CAACyG,GAAI,KACZ,UAAW,CAACA,GAAI,KAChB,aAAc,CAACA,GAAI,KACnB3L,MAAO,CAAC2L,GAAI,KACZ,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB7I,SAAU,CAAC6I,GAAI,KACf,eAAgB,CAACA,GAAI,KACrBzL,WAAY,CAACyL,GAAI,KACjB,eAAgB,CAACtO,GAAI,GAAIsO,GAAI,KAC7B,aAAc,CAACA,GAAI,KACnBpE,WAAY,CAACoE,GAAI,KACjB9K,KAAM,CAAC8K,GAAI,KACXvL,MAAO,CAACuL,GAAI,KACZzK,OAAQ,CAAC7D,GAAI,GAAIsO,GAAI,KACrB,YAAa,CAACA,GAAI,KAClB,YAAa,CAACA,GAAI,KAClBrH,MAAO,CAACqH,GAAI,KACZtL,OAAQ,CAACsL,GAAI,KACbhK,YAAa,CAACgK,GAAI,KAClB,eAAgB,CAACA,GAAI,KACrB,gBAAiB,CAACA,GAAI,KACtB,gBAAiB,CAACA,GAAI,KACtB,aAAc,CAACA,GAAI,KACnB,cAAe,CAACA,GAAI,KACpBpH,QAAS,CAACoH,GAAI,KACd,SAAU,CAACA,GAAI,KACflF,OAAQ,CAACkF,GAAI,KACb,cAAe,CAACA,GAAI,KACpB,WAAY,CAACA,GAAI,KACjBd,UAAW,CAACc,GAAI,KAChB,YAAa,CAACA,GAAI,KAClB,YAAa,CAACA,GAAI,KAClB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB1K,UAAW,CAAC0K,GAAI,KAChB,YAAa,CAACA,GAAI,KAClB,eAAgB,CAACA,GAAI,KACrB,cAAe,CAACA,GAAI,KACpB,iBAAkB,CAACtW,SAAU,UAAWsW,GAAI,KAC5C,cAAe,CAACA,GAAI,KACpB,eAAgB,CAACA,GAAI,KACrBlH,UAAW,CAACkH,GAAI,KAChB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpB,cAAe,CAACA,GAAI,KACpBjL,KAAM,CAACiL,GAAI,KACX,YAAa,CAACA,GAAI,KAClB,aAAc,CAACA,GAAI,KACnB,eAAgB,CAACA,GAAI,KACrB,8BAA+B,CAACtO,GAAI,IAAKnO,KAAM,WAAYmG,SAAU,UAAWuW,KAAK,GACrF,gBAAiB,CAACvO,GAAI,EAAGnO,KAAM,SAAUmG,SAAU,WAAYuW,KAAK,GACpE,oBAAqB,CAACvO,GAAI,EAAGnO,KAAM,WAAYmG,SAAU,WAAYuW,KAAK,GAC1E,YAAa,CAACvO,GAAI,GAAInO,KAAM,OAAQmG,SAAU,UAAWsW,GAAI,KAC7D,iBAAkB,CAACtO,GAAI,EAAGnO,KAAM,SAAUuT,SAAU,GACpD,aAAc,CACZpF,GAAI,IACJnO,KAAM,SACNmG,SAAU,WACVyV,UAAU,EACVa,GAAI,KAEN,qBAAsB,CAACtO,GAAI,EAAGnO,KAAM,OAAQmG,SAAU,WAAYuW,KAAK,GACvE,aAAc,CAACvO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,WAAYuW,KAAK,GAChE,gBAAiB,CACfvO,GAAI,GACJnO,KAAM,QACNqO,MAAO,CAAC,EAAG,GACXlI,SAAU,UACVsW,GAAI,KAEN,kBAAmB,CAACtO,GAAI,EAAGnO,KAAM,SAAUmG,SAAU,WAAYuW,KAAK,GACtE,aAAc,CACZvO,GAAI,GACJnO,KAAM,WACNmG,SAAU,UACV4T,aAAa,EACb0C,GAAI,KAENE,aAAc,CACZxO,GAAI,IACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACVuW,KAAK,GAEP,uBAAwB,CACtBvO,GAAI,IACJnO,KAAM,SACNkW,SAAS,EACT5a,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,EACb2C,KAAK,GAEP,oBAAqB,CAACvO,GAAI,EAAGnO,KAAM,OAAQmG,SAAU,WAAYuW,KAAK,GACtE,gBAAiB,CACfvO,GAAI,IACJnO,KAAM,SACN1E,OAAQ,kBACR6K,SAAU,UACVsW,GAAI,KAEN,kBAAmB,CAACtO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,WAAYuW,KAAK,GACrE,oBAAqB,CAACvO,GAAI,EAAGnO,KAAM,SAAUmG,SAAU,WAAYuW,KAAK,GACxE,mBAAoB,CAClBvO,GAAI,GACJnO,KAAM,QACNyO,SAAU,EACVwH,cAAc,EACdsC,SAAS,EACTpS,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,gBAAiB,CACftO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,mBAAoB,CAACtO,GAAI,EAAGnO,KAAM,SAAU0c,KAAK,GACjD,eAAgB,CACdvO,GAAI,IACJnO,KAAM,QACNgX,KAAM,CAACzU,OAAQ,CAAC7F,KAAM,IACtByJ,SAAU,UACVsW,GAAI,KAEN,iBAAkB,CAACtO,GAAI,EAAGnO,KAAM,SAChC,eAAgB,CAACmO,GAAI,GAAInO,KAAM,MAAOmG,SAAU,UAAWsW,GAAI,KAC/D,oBAAqB,CACnBtO,GAAI,IACJnO,KAAM,UACNmG,SAAU,UACV4T,aAAa,EACb2C,KAAK,GAEP,iBAAkB,CAACvO,GAAI,EAAGnO,KAAM,WAAYmG,SAAU,WAAYuW,KAAK,GACvE,cAAe,CAACvO,GAAI,GAAInO,KAAM,UAAWmG,SAAU,UAAWsW,GAAI,KAClE,oBAAqB,CAACtO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,UAAWuW,KAAK,GACtE,eAAgB,CAACvO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,WAAYuW,KAAK,GAClE,aAAc,CACZvO,GAAI,IACJnO,KAAM,MACNiW,cAAc,EACdsC,SAAS,EACTpS,SAAU,WACVsW,GAAI,KAEN,oBAAqB,CAACtO,GAAI,EAAGnO,KAAM,OAAQmG,SAAU,WAAYuW,KAAK,GACtEE,SAAU,CAACzO,GAAI,EAAGnO,KAAM,WACxB,wBAA0B,CACxBmO,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVuW,KAAK,GAEP,2BAA4B,CAC1BvO,GAAI,IACJnO,KAAM,UACNmG,SAAU,UACVuW,KAAK,GAEP,sBAAuB,CACrBvO,GAAI,IACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACVuW,KAAK,GAEP,8BAA+B,CAACvO,GAAI,IAAKnO,KAAM,QAASmG,SAAU,UAAWuW,KAAK,GAClF,aAAc,CACZvO,GAAI,IACJnO,KAAM,OACN6c,iBAAiB,EACjBvhB,OAAQ,cACR6K,SAAU,UACVsW,GAAI,KAEN,eAAgB,CACdtO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,mBAAqB,CAACtO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,UAAWsW,GAAI,KACrE,yBAA0B,CAACtO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,WAAYuW,KAAK,GAC5E,mBAAoB,CAACvO,GAAI,IAAKnO,KAAM,QAASmG,SAAU,UAAWuW,KAAK,GACvE,kBAAmB,CAACvO,GAAI,EAAGnO,KAAM,WACjC,sBAAuB,CACrBmO,GAAI,IACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACVuW,KAAK,GAEP,mBAAoB,CAACvO,GAAI,GAAInO,KAAM,SAAUmG,SAAU,UAAWsW,GAAI,KACtE,aAAc,CAACtO,GAAI,GAAInO,KAAM,QAASmG,SAAU,WAAYsW,GAAI,KAChE,kBAAmB,CAACtO,GAAI,EAAGnO,KAAM,MAAOmG,SAAU,WAAYuW,KAAK,GACnE,wBAAyB,CACvBvO,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVuW,KAAK,GAEP,cAAe,CACbvO,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,mBAAoB,CAACtO,GAAI,EAAGnO,KAAM,UAAWmG,SAAU,WAAYuW,KAAK,GACxE,WAAY,CAACvO,GAAI,EAAGnO,KAAM,UAC1B,sBAAuB,CAACmO,GAAI,IAAKnO,KAAM,QAASmG,SAAU,WAAYuW,KAAK,GAC3E,eAAgB,CACdvO,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,cAAe,CACbtO,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,8BAA+B,CAC7BtO,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVuW,KAAK,GAEP,gBAAiB,CAACvO,GAAI,GAAInO,KAAM,QAASmG,SAAU,UAAWsW,GAAI,KAClE,yBAA0B,CAACtO,GAAI,IAAKnO,KAAM,OAAQmG,SAAU,WAAYuW,KAAK,GAC7EI,UAAW,CAAC3O,GAAI,EAAGnO,KAAM,SAAUuT,SAAU,GAC7C,qBAAsB,CACpBpF,GAAI,IACJnO,KAAM,WACNmG,SAAU,UACV4T,aAAa,EACb2C,KAAK,GAEP,kBAAmB,CAACvO,GAAI,EAAGnO,KAAM,MAAOmG,SAAU,WAAYuW,KAAK,GACnE,uBAAwB,CAACvO,GAAI,EAAGnO,KAAM,SAAUmG,SAAU,WAAYuW,KAAK,GAC3E,gBAAiB,CAACvO,GAAI,EAAGnO,KAAM,SAAUmG,SAAU,WAAYuW,KAAK,GACpE,cAAe,CACbvO,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,eAAgB,CAACtO,GAAI,EAAGnO,KAAM,UAC9B,iBAAkB,CAACmO,GAAI,EAAGnO,KAAM,QAASmG,SAAU,WAAYuW,KAAK,GACpE,YAAa,CACXvO,GAAI,GACJnO,KAAM,WACNma,UAAU,EACV5G,SAAU,EACV0C,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAENM,WAAY,CACV5O,GAAI,GACJnO,KAAM,OACNuT,SAAU,EACV0C,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,cAAe,CACbtO,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,cAAe,CAACtO,GAAI,EAAGnO,KAAM,OAC7B,eAAgB,CACdmO,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd3a,OAAQ,cACR6K,SAAU,WACVsW,GAAI,KAEN,UAAW,CAACtO,GAAI,IAAKnO,KAAM,OAAQmG,SAAU,UAAWsW,GAAI,KAC5D,kBAAmB,CACjBtO,GAAI,IACJnO,KAAM,SACNkW,SAAS,EACT5a,OAAQ,kBACR6K,SAAU,UACVsW,GAAI,KAEN,iBAAkB,CAChBtO,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACVqU,iBAAiB,EACjBiC,GAAI,KAEN,YAAa,CACXtO,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,mBAAoB,CAClBtO,GAAI,GACJnO,KAAM,MACNuT,SAAU,EACV0C,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,cAAe,CACbtO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,UAAW,CAACtO,GAAI,EAAGnO,KAAM,SACzB,kBAAmB,CACjBmO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,cAAe,CAACtO,GAAI,EAAGnO,KAAM,UAC7Bgd,QAAS,CAAC7O,GAAI,GAAInO,KAAM,QAASmG,SAAU,WAAYsW,GAAI,KAC3DQ,YAAa,CACX9O,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAENS,MAAO,CACL/O,GAAI,GACJnO,KAAM,MACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,iBAAkB,CAACtO,GAAI,IAAKnO,KAAM,QAASmG,SAAU,UAAWsW,GAAI,KACpE,gBAAiB,CACftO,GAAI,IACJnO,KAAM,UACNmG,SAAU,UACVsW,GAAI,KAEN,aAAc,CAACtO,GAAI,EAAGnO,KAAM,WAAYmG,SAAU,UAAWsW,GAAI,KACjE,eAAgB,CACdtO,GAAI,IACJnO,KAAM,WACNiW,cAAc,EACdsC,SAAS,EACTpS,SAAU,WACVsW,GAAI,KAEN,cAAe,CACbtO,GAAI,GACJnO,KAAM,MACNmG,SAAU,UACVyV,UAAU,EACVa,GAAI,KAEN,aAAc,CACZtO,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,kBAAmB,CAACtO,GAAI,IAAKnO,KAAM,UAAWmG,SAAU,UAAWsW,GAAI,KACvE,gBAAiB,CACftO,GAAI,GACJnO,KAAM,UACNiW,cAAc,EACdwC,QAAQ,EACRtS,SAAU,WACVsW,GAAI,KAENU,OAAQ,CAAChP,GAAI,EAAGnO,KAAM,UACtB,aAAc,CACZmO,GAAI,IACJnO,KAAM,OACN1E,OAAQ,kBACR6K,SAAU,UACVsW,GAAI,KAEN,eAAgB,CACdtO,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,iBAAkB,CAChBtO,GAAI,GACJnO,KAAM,QACNkW,SAAS,EACT5a,OAAQ,cACR6K,SAAU,UACV4T,aAAa,EACb0C,GAAI,KAEN,iBAAkB,CAChBtO,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,aAAc,CAACtO,GAAI,EAAGnO,KAAM,WAC5B,iBAAkB,CAChBmO,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,iBAAkB,CAChBtO,GAAI,GACJnO,KAAM,QACN1E,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,EACb0C,GAAI,KAEN,mBAAoB,CAClBtO,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,eAAgB,CAACtO,GAAI,EAAGnO,KAAM,SAC9B,kBAAmB,CACjBmO,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,eAAgB,CAACtO,GAAI,EAAGnO,KAAM,UAC9B,YAAa,CACXmO,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,KAEN,gBAAiB,CACftO,GAAI,EACJnO,KAAM,SACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,KAEN,WAAY,CACVtO,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,OAsxCF/T,GAAiC3N,GAAO,EAAM,CAAC,EAAG0N,GAhxCE,CACxD,aAAc,CACZ0F,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,IACJnO,KAAM,QACNmG,SAAU,UACV7K,OAAQ,kBACRmhB,GAAI,IACJW,SAAU,KAEZ,aAAc,CACZjP,GAAI,IACJnO,KAAM,WACNmG,SAAU,WACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,IACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,aAAc,CACZjP,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACVkX,sBAAuB,MACvBZ,GAAI,IACJW,SAAU,IAEZ,YAAa,CACXjP,GAAI,GACJnO,KAAM,WACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,IACJW,SAAU,IAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,SACNiW,cAAc,EACd3a,OAAQ,kBACR6K,SAAU,WACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,OACN1E,OAAQ,kBACR6K,SAAU,UACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,kBAAmB,CAACjP,GAAI,EAAGnO,KAAM,SAAUkW,SAAS,GACpD,SAAY,CACV/H,GAAI,EACJnO,KAAM,WACNmG,SAAU,UAEZ,gBAAiB,CACfgI,GAAI,EACJnO,KAAM,SACNmG,SAAU,SACV7K,OAAQ,eAEV,eAAgB,CAAC6S,GAAI,EAAGnO,KAAM,UAC9Bsd,SAAU,CAACnP,GAAI,EAAGnO,KAAM,SACxB,eAAgB,CACdmO,GAAI,GACJnO,KAAM,SACNyO,SAAU,EACVtI,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,IACJnO,KAAM,SACNmG,SAAU,UACV7K,OAAQ,kBACRmhB,GAAI,IACJW,SAAU,KAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACV8P,cAAc,EACdxH,SAAU,EACVgO,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,IACJnO,KAAM,SACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACV+P,SAAS,EACT6D,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZG,WAAY,CACVpP,GAAI,IACJnO,KAAM,SACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,UACV7K,OAAQ,kBACRye,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACdwC,QAAQ,EACRtS,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,YAAa,CACXjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACV8P,cAAc,EACdwG,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,IACJnO,KAAM,MACNmG,SAAU,WACV7K,OAAQ,kBACRmhB,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,WACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,IACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,UACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,cAAe,CACbjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,WACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,mBAAoB,CAClBjP,GAAI,GACJnO,KAAM,WACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACV8P,cAAc,EACdwG,GAAI,IACJW,SAAU,KAEZ,aAAc,CACZjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,WAAY,CACVjP,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACdwC,QAAQ,EACRtS,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,EACJnO,KAAM,QACNmG,SAAU,UAEZ,WAAY,CACVgI,GAAI,GACJnO,KAAM,OACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,WAAY,CAACjP,GAAI,EAAGnO,KAAM,SAC1B,eAAgB,CAACmO,GAAI,EAAGnO,KAAM,WAC9B,gBAAiB,CACfmO,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,YAAa,CACXjP,GAAI,IACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,aAAc,CACZjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,YAAa,CAACjP,GAAI,EAAGnO,KAAM,SAAUuT,SAAU,EAAGiK,OAAO,GACzD,gBAAiB,CACfrP,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,cAAe,CACbjP,GAAI,GACJnO,KAAM,WACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,WACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,UACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,WAAY,CACVjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,YAAa,CACXjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,aAAc,CACZjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVqX,OAAO,EACPJ,SAAU,GAEZ,iBAAkB,CAChBjP,GAAI,IACJnO,KAAM,WACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,IACJnO,KAAM,OACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,kBAAmB,CACjBjP,GAAI,IACJnO,KAAM,QACNmG,SAAU,UACV7K,OAAQ,cACRmhB,GAAI,IACJW,SAAU,KAEZ,aAAc,CAACjP,GAAI,EAAGnO,KAAM,YAC5Byd,SAAU,CAACtP,GAAI,EAAGnO,KAAM,OAAQuT,SAAU,GAC1CmK,SAAU,CAACvP,GAAI,EAAGnO,KAAM,YACxB2d,UAAW,CACTxP,GAAI,GACJnO,KAAM,WACNkW,SAAS,EACT5a,OAAQ,kBACR6K,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZQ,YAAa,CACXzP,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,YAAa,CACXjP,GAAI,IACJnO,KAAM,OACNmG,SAAU,WACV4T,aAAa,EACb6B,UAAU,EACVa,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,WACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,aAAc,CACZjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVsI,SAAU,CAAC,EAAG,GACdgO,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,UACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,IAEZ,YAAa,CACXjP,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACVsW,GAAI,IACJW,SAAU,IAEZ,aAAc,CACZjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,UACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACV8P,cAAc,EACd8D,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,QACNiW,cAAc,EACd9P,SAAU,WACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,aAAc,CACZjP,GAAI,IACJnO,KAAM,QACN6c,iBAAiB,EACjB1W,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,eAAgB,CACdjP,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACV8P,cAAc,EACdwG,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACV4T,aAAa,EACb0C,GAAI,IACJW,SAAU,KAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACV8P,cAAc,EACdkE,UAAU,EACV5B,SAAS,EACT9J,SAAU,EACVgO,GAAI,IACJW,SAAU,KAEZ,gBAAiB,CACfjP,GAAI,GACJnO,KAAM,SACNmG,SAAU,UACV0V,SAAS,EACTY,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACV8P,cAAc,EACdxH,SAAU,EACVgO,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACV8P,cAAc,EACdkE,UAAU,EACV5B,SAAS,EACTkE,GAAI,IACJW,SAAU,KAEZ,eAAgB,CAACjP,GAAI,EAAGnO,KAAM,UAC9B,WAAY,CAACmO,GAAI,EAAGnO,KAAM,QAC1B6d,QAAS,CAAC1P,GAAI,EAAGnO,KAAM,UACvB,eAAgB,CACdmO,GAAI,GACJnO,KAAM,WACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,kBAAmB,CACjBjP,GAAI,GACJnO,KAAM,WACNmG,SAAU,WACV4T,aAAa,EACb9D,cAAc,EACdwG,GAAI,IACJW,SAAU,IAEZ,8BAA+B,CAACA,SAAU,GAC1ChP,OAAQ,CAACgP,SAAU,IACnBL,WAAY,CAACK,SAAU,IACvB9O,KAAM,CAAC8O,SAAU,IACjB,gBAAiB,CAACA,SAAU,GAC5B,aAAc,CAACA,SAAU,IACzBpC,WAAY,CAACoC,SAAU,KACvB,aAAc,CAACA,SAAU,KACzBtJ,UAAW,CAACsJ,SAAU,KACtB,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,KACxB,oBAAqB,CAACA,SAAU,GAChC,cAAe,CAACA,SAAU,KAC1B,gBAAiB,CAACA,SAAU,KAC5B,WAAY,CAACA,SAAU,IACvB,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,IACzBzE,UAAW,CAACyE,SAAU,KACtBhH,SAAU,CAACgH,SAAU,IACrB,eAAgB,CAACA,SAAU,KAC3B,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,KAC1BxE,UAAW,CAACwE,SAAU,KACtB5O,QAAS,CAAC4O,SAAU,IACpB,aAAc,CAACA,SAAU,KACzB,UAAW,CAACA,SAAU,KACtBnB,MAAO,CAACmB,SAAU,IAClB1O,KAAM,CAAC0O,SAAU,KACjBzO,KAAM,CAACyO,SAAU,IACjBxO,KAAM,CAACwO,SAAU,KACjB,qBAAsB,CAACA,SAAU,GACjC,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzBvO,SAAU,CAACuO,SAAU,KACrB,aAAc,CAACA,SAAU,GACzB,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,KACxB,cAAe,CAACA,SAAU,KAC1B,YAAa,CAACA,SAAU,KACxBtO,WAAY,CAACsO,SAAU,KACvB,YAAa,CAACA,SAAU,KACxBlB,UAAW,CAACkB,SAAU,KACtB9G,OAAQ,CAAC8G,SAAU,KACnB,aAAc,CAACA,SAAU,KACzB,kBAAmB,CAACA,SAAU,GAC9B,cAAe,CAACA,SAAU,IAC1BvD,MAAO,CAACuD,SAAU,KAClB,eAAgB,CAACA,SAAU,KAC3BrO,OAAQ,CAACqO,SAAU,IACnB,cAAe,CAACA,SAAU,KAC1B,WAAY,CAACA,SAAU,KACvB,WAAY,CAACA,SAAU,KACvBnC,SAAU,CAACmC,SAAU,KACrB,eAAgB,CAACA,SAAU,IAC3B,cAAe,CAACA,SAAU,KAC1B,UAAW,CAACA,SAAU,KACtBT,aAAc,CAACS,SAAU,GACzB,cAAe,CAACA,SAAU,KAC1BvE,QAAS,CAACuE,SAAU,KACpB,YAAa,CAACA,SAAU,KACxB,eAAgB,CAACA,SAAU,IAC3BpO,MAAO,CAACoO,SAAU,IAClB,kBAAmB,CAACA,SAAU,KAC9B,uBAAwB,CAACA,SAAU,GACnC,aAAc,CAACA,SAAU,IACzB,eAAgB,CAACA,SAAU,IAC3B,cAAe,CAACA,SAAU,KAC1BrK,UAAW,CAACqK,SAAU,KACtBnO,UAAW,CAACmO,SAAU,IACtB,oBAAqB,CAACA,SAAU,GAChC,gBAAiB,CAACA,SAAU,KAC5B,kBAAmB,CAACA,SAAU,GAC9BjO,QAAS,CAACiO,SAAU,IACpB3G,MAAO,CAAC2G,SAAU,KAClBhO,WAAY,CAACgO,SAAU,KACvB,aAAc,CAACA,SAAU,IACzB,eAAgB,CAACA,SAAU,IAC3B9H,OAAQ,CAAC8H,SAAU,KACnB,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzBpK,IAAK,CAACoK,SAAU,KAChB,iBAAkB,CAACA,SAAU,KAC7B,aAAc,CAACA,SAAU,KACzB,iBAAkB,CAACA,SAAU,KAC7B,oBAAqB,CAACA,SAAU,GAChC,gBAAiB,CAACA,SAAU,KAC5B/N,IAAK,CAAC+N,SAAU,KAChB,kBAAmB,CAACA,SAAU,IAC9BtD,UAAW,CAACsD,SAAU,KACtB1G,KAAM,CAAC0G,SAAU,KACjB,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,mBAAoB,CAACA,SAAU,KAC/B,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,IAC1B,eAAgB,CAACA,SAAU,KAC3B,gBAAiB,CAACA,SAAU,KAC5B,gBAAiB,CAACA,SAAU,KAC5B,cAAe,CAACA,SAAU,KAC1B,gBAAiB,CAACA,SAAU,KAC5B,eAAgB,CAACA,SAAU,KAC3B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,gBAAiB,CAACA,SAAU,KAC5B,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,KACxB,YAAa,CAACA,SAAU,KACxB,gBAAiB,CAACA,SAAU,IAC5B,cAAe,CAACA,SAAU,KAC1B5N,WAAY,CAAC4N,SAAU,KACvB,eAAgB,CAACA,SAAU,IAC3B,WAAY,CAACA,SAAU,KACvB,eAAgB,CAACA,SAAU,KAC3BjC,WAAY,CAACiC,SAAU,KACvBnK,MAAO,CAACmK,SAAU,IAClB3F,SAAU,CAAC2F,SAAU,KACrB,cAAe,CAACA,SAAU,KAC1BlF,SAAU,CAACkF,SAAU,KACrB3N,UAAW,CAAC2N,SAAU,KACtBzG,aAAc,CAACyG,SAAU,KACzB,gBAAiB,CAACA,SAAU,KAC5BrF,OAAQ,CAACqF,SAAU,KACnB,aAAc,CAACA,SAAU,IACzB,WAAY,CAACA,SAAU,IACvB,cAAe,CAACA,SAAU,IAC1BnE,MAAO,CAACmE,SAAU,IAClB,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3B,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,KACxB,YAAa,CAACA,SAAU,KACxB,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,IACxB,mBAAoB,CAACA,SAAU,KAC/B1N,QAAS,CAAC0N,SAAU,KACpBhJ,MAAO,CAACgJ,SAAU,KAClB,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,KAC3B,cAAe,CAACA,SAAU,KAC1BlL,aAAc,CAACkL,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3BjE,MAAO,CAACiE,SAAU,KAClBzN,IAAK,CAACyN,SAAU,KAChB,eAAgB,CAACA,SAAU,IAC3B,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,IACzB,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3BxH,YAAa,CAACwH,SAAU,KACxB,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,KACzB,oBAAqB,CAACA,SAAU,GAChC,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,iBAAkB,CAACA,SAAU,GAC7B/B,SAAU,CAAC+B,SAAU,KACrB,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,KAC3B,oBAAqB,CAACA,SAAU,GAChCtN,WAAY,CAACsN,SAAU,KACvB,YAAa,CAACA,SAAU,IACxBrN,KAAM,CAACqN,SAAU,IACjB,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,IACzBjK,SAAU,CAACiK,SAAU,KACrB,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,KACzBhD,IAAK,CAACgD,SAAU,KAChB,eAAgB,CAACA,SAAU,KAC3B,mBAAoB,CAACA,SAAU,KAC/B,oBAAqB,CAACA,SAAU,KAChC,sBAAuB,CAACA,SAAU,KAClC,wBAAyB,CAACA,SAAU,KACpC,wBAAyB,CAACA,SAAU,IACpC,oBAAqB,CAACA,SAAU,KAChC,sBAAuB,CAACA,SAAU,KAClC,qBAAsB,CAACA,SAAU,KACjC,qBAAsB,CAACA,SAAU,KACjC,sBAAuB,CAACA,SAAU,KAClC,mBAAoB,CAACA,SAAU,KAC/B,sBAAuB,CAACA,SAAU,IAClC,uBAAwB,CAACA,SAAU,KACnC,oBAAqB,CAACA,SAAU,KAChC,qBAAsB,CAACA,SAAU,KACjC,qBAAsB,CAACA,SAAU,KACjC,kBAAmB,CAACA,SAAU,KAC9B,iBAAkB,CAACA,SAAU,IAC7B,YAAa,CAACA,SAAU,IACxB,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzBpF,KAAM,CAAC9B,SAAS,GAChBmE,UAAW,CAAC+C,SAAU,KACtB,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,GAC3B,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB,kBAAmB,CAACA,SAAU,KAC9B,kBAAmB,CAACA,SAAU,KAC9B,cAAe,CAACA,SAAU,KAC1B,WAAY,CAACA,SAAU,IACvB,WAAY,CAACA,SAAU,KACvB,WAAY,CAACA,SAAU,KACvB,WAAY,CAACA,SAAU,KACvB,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,KACxB,YAAa,CAACA,SAAU,IACxB,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3B,WAAY,CAACA,SAAU,KACvB9C,WAAY,CAAC8C,SAAU,KACvB9B,QAAS,CAAC8B,SAAU,KACpB,oBAAqB,CAACA,SAAU,GAChCd,YAAa,CAACc,SAAU,IACxB,YAAa,CAACA,SAAU,KACxB,YAAa,CAACA,SAAU,KACxBzD,SAAU,CAACyD,SAAU,KACrB,YAAa,CAACA,SAAU,IACxB,cAAe,CAACA,SAAU,IAC1B,YAAa,CAACA,SAAU,KACxB,eAAiB,CAACA,SAAU,KAC5B,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzBJ,QAAS,CAACI,SAAU,IACpB,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,KACzB,wBAA0B,CAACA,SAAU,GACrCjL,KAAM,CAACiL,SAAU,IACjB,gBAAiB,CAACA,SAAU,KAC5B,2BAA4B,CAACA,SAAU,GACvCH,YAAa,CAACG,SAAU,KACxB,WAAY,CAACA,SAAU,KACvB,YAAa,CAACA,SAAU,IACxBF,MAAO,CAACE,SAAU,KAClB,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,IACzB,eAAgB,CAACA,SAAU,KAC3B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B5H,UAAW,CAAC4H,SAAU,KACtB,sBAAuB,CAACA,SAAU,GAClC,aAAc,CAACA,SAAU,IACzBtH,SAAU,CAACsH,SAAU,KACrB,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,KACzB,8BAA+B,CAACA,SAAU,GAC1C,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,YAAa,CAACA,SAAU,KACxBb,UAAW,CAACa,SAAU,KACtB,iBAAkB,CAACA,SAAU,KAC7B,WAAY,CAACA,SAAU,KACvB,WAAY,CAACA,SAAU,KACvB,WAAY,CAACA,SAAU,IACvB,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACjP,GAAI,IAAKiP,SAAU,IACpC,gBAAiB,CAACA,SAAU,KAC5B,eAAgB,CAACA,SAAU,KAC3B,mBAAqB,CAACA,SAAU,KAChC,aAAc,CAACA,SAAU,KACzB,yBAA0B,CAACA,SAAU,GACrC,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1BZ,OAAQ,CAACY,SAAU,IACnB,gBAAiB,CAACA,SAAU,KAC5B,mBAAoB,CAACA,SAAU,GAC/BrH,UAAW,CAACqH,SAAU,KACtB,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3B5I,QAAS,CAAC4I,SAAU,KACpBrG,SAAU,CAACqG,SAAU,KACrB,aAAc,CAACA,SAAU,KACzB,mBAAoB,CAACA,SAAU,KAC/B/D,QAAS,CAAC+D,SAAU,KACpB,UAAW,CAACA,SAAU,IACtBhK,KAAM,CAACgK,SAAU,IACjB,iBAAkB,CAACA,SAAU,KAC7B,cAAe,CAACA,SAAU,KAC1B,gBAAiB,CAACA,SAAU,KAC5B,gBAAiB,CAACA,SAAU,KAC5B,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,KACzB9D,MAAO,CAAC8D,SAAU,KAClB,cAAe,CAACA,SAAU,IAC1B,aAAc,CAACA,SAAU,IACzB,eAAgB,CAACA,SAAU,IAC3B,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,KAC1B/J,MAAO,CAAC+J,SAAU,IAClB,cAAe,CAACA,SAAU,IAC1B,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,KACzB,iBAAkB,CAACA,SAAU,IAC7B,aAAc,CAACA,SAAU,KACzB,mBAAoB,CAACA,SAAU,KAC/B3I,QAAS,CAAC2I,SAAU,KACpB,kBAAmB,CAACA,SAAU,KAC9B9J,QAAS,CAAC8J,SAAU,KACpB/f,QAAS,CAAC+f,SAAU,KACpB,gBAAiB,CAACA,SAAU,KAC5B,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,KACzB7B,SAAU,CAAC6B,SAAU,KACrB3B,UAAW,CAAC2B,SAAU,KACtB9M,QAAS,CAAC8M,SAAU,KACpB,sBAAuB,CAACA,SAAU,GAClCxD,WAAY,CAACwD,SAAU,KACvBzI,QAAS,CAACyI,SAAU,IACpB,eAAgB,CAACA,SAAU,IAC3B7M,KAAM,CAAC6M,SAAU,IACjB,aAAc,CAACjP,GAAI,GAAI4L,aAAa,EAAMqD,SAAU,KACpD,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB1B,UAAW,CAAC0B,SAAU,KACtBvH,OAAQ,CAACuH,SAAU,KACnB,mBAAoB,CAACA,SAAU,KAC/BnG,QAAS,CAACmG,SAAU,IACpBxI,SAAU,CAACwI,SAAU,KACrB,eAAgB,CAACA,SAAU,KAC3B,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,IACzB,aAAc,CAACA,SAAU,KACzB,YAAa,CAACA,SAAU,KACxB,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,IAC3BzH,QAAS,CAACyH,SAAU,IACpB7C,MAAO,CAAC6C,SAAU,KAClB,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,IAC3B,YAAa,CAACA,SAAU,IACxB,kBAAmB,CAACA,SAAU,GAC9B3C,MAAO,CAAC2C,SAAU,KAClB5J,QAAS,CAAC4J,SAAU,IACpB,eAAgB,CAACA,SAAU,KAC3B,wBAAyB,CAACA,SAAU,GACpC,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,IAC3B,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,IAC3B,gBAAiB,CAACA,SAAU,KAC5B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,KAC3B,eAAgB,CAACA,SAAU,IAC3B,gBAAiB,CAACA,SAAU,KAC5B,mBAAoB,CAACA,SAAU,GAC/B,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,sBAAuB,CAACA,SAAU,GAClC,aAAc,CAACA,SAAU,KACzB,aAAc,CAACA,SAAU,KACzB,WAAY,CAACA,SAAU,KACvB,eAAgB,CAACA,SAAU,IAC3B3J,KAAM,CAAC2J,SAAU,KACjBxM,MAAO,CAACwM,SAAU,KAClBvM,OAAQ,CAACuM,SAAU,IACnB,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,IAC1B,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,KAC3B,iBAAkB,CAACA,SAAU,KAC7B9K,KAAM,CAAC8K,SAAU,IACjB1C,MAAO,CAAC0C,SAAU,KAClB1H,MAAO,CAAC0H,SAAU,KAClB,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,KAC1B,aAAc,CAACA,SAAU,KACzB,8BAA+B,CAACA,SAAU,GAC1C,eAAgB,CAACA,SAAU,KAC3BpH,MAAO,CAACoH,SAAU,KAClB,iBAAkB,CAACA,SAAU,KAC7B,iBAAkB,CAACA,SAAU,KAC7B,eAAgB,CAACA,SAAU,KAC3B,iBAAkB,CAACA,SAAU,KAC7B,UAAW,CAACA,SAAU,KACtB,yBAA0B,CAACA,SAAU,GACrC,iBAAkB,CAACA,SAAU,KAC7BxC,YAAa,CAACwC,SAAU,KACxB,aAAc,CAACA,SAAU,KACzB,qBAAsB,CAACA,SAAU,GACjCtM,MAAO,CAACsM,SAAU,KAClB,mBAAoB,CAACA,SAAU,KAC/B,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,KAC3B,cAAe,CAACA,SAAU,IAC1BxJ,SAAU,CAACwJ,SAAU,KACrB,eAAgB,CAACA,SAAU,KAC3BpM,WAAY,CAACoM,SAAU,IACvB,kBAAmB,CAACA,SAAU,GAC9B,eAAgB,CAACA,SAAU,KAC3B,kBAAmB,CAACA,SAAU,KAC9B,aAAc,CAACA,SAAU,KACzB/E,WAAY,CAAC+E,SAAU,IACvB,uBAAwB,CAACA,SAAU,GACnCzL,KAAM,CAACyL,SAAU,KACjBlM,MAAO,CAACkM,SAAU,KAClBvC,aAAc,CAACuC,SAAU,KACzBpL,OAAQ,CAACoL,SAAU,IACnB,YAAa,CAACA,SAAU,KACxB,YAAa,CAACA,SAAU,KACxB,eAAgB,CAACA,SAAU,KAC3B,gBAAiB,CAACA,SAAU,GAC5BhI,MAAO,CAACgI,SAAU,KAClB,kBAAmB,CAACA,SAAU,KAC9B,iBAAkB,CAACA,SAAU,KAC7BjM,OAAQ,CAACiM,SAAU,KACnB,cAAe,CAACA,SAAU,KAC1BhM,QAAS,CAACgM,SAAU,KACpB3K,YAAa,CAAC2K,SAAU,KACxB,eAAgB,CAACA,SAAU,KAC3B,gBAAiB,CAACA,SAAU,KAC5B,gBAAiB,CAACA,SAAU,IAC5B,aAAc,CAACA,SAAU,KACzB,cAAe,CAACA,SAAU,IAC1B,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,KACzB9L,UAAW,CAAC8L,SAAU,KACtB,iBAAkB,CAACA,SAAU,GAC7B/H,QAAS,CAAC+H,SAAU,IACpB,SAAU,CAACA,SAAU,KACrB7F,OAAQ,CAAC6F,SAAU,KACnB,cAAe,CAACA,SAAU,IAC1B,WAAY,CAACA,SAAU,KACvBzB,UAAW,CAACyB,SAAU,IACtB,YAAa,CAACA,SAAU,KACxB,YAAa,CAACA,SAAU,KACxB,cAAe,CAACA,SAAU,IAC1B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,IAC3BrL,UAAW,CAACqL,SAAU,KACtB,YAAa,CAACA,SAAU,IACxB,eAAgB,CAACA,SAAU,KAC3B,cAAe,CAACA,SAAU,KAC1B,iBAAkB,CAACA,SAAU,IAC7B,cAAe,CAACA,SAAU,KAC1B,eAAgB,CAACA,SAAU,KAC3B7H,UAAW,CAAC6H,SAAU,IACtB,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B,cAAe,CAACA,SAAU,KAC1B5L,KAAM,CAAC4L,SAAU,IACjB,YAAa,CAACA,SAAU,KACxB,YAAa,CAACA,SAAU,KACxB,aAAc,CAACA,SAAU,KACzB,eAAgB,CAACA,SAAU,KAC3B,WAAY,CAACA,SAAU,OAoBzBxb,GAAA,EAAAkc,GAfmB,CACjB,YACA,gBACA,aACA,eACA,cACA,aACA,eACA,gBACA,YACA,cACA,aACA,iBACA,iBAEwBlc,GAAAkc,GAAAtiB,OAAAoG,KAAE,QACnB8G,GADGoV,GAAAlc,IAEZ,CAEA,IAumBM+G,GAAiC5N,GAAO,EAAM,CAAC,EAAG2N,GAvmBE,CACxD,aAAc,CAACqV,WAAW,GAC1B,aAAc,CAACA,WAAW,EAAMC,QAAQ,GACxC,YAAa,CAACD,WAAW,GACzB,iBAAkB,CAACA,WAAW,GAC9BlP,SAAU,CAACmP,QAAQ,GACnB,eAAgB,CAACD,WAAW,GAC5B/K,IAAK,CAAC+K,WAAW,GACjB,aAAc,CAACC,QAAQ,GACvB,cAAe,CAACD,WAAW,GAC3B,gBAAiB,CAAC5P,GAAI,IAAKsO,GAAI,KAC/B,eAAgB,CAACtO,GAAI,GAAIsO,GAAI,IAAKW,SAAU,KAC5CrN,KAAM,CAACiO,QAAQ,GACf,YAAa,CAACA,QAAQ,GACtB3D,UAAW,CAAC2D,QAAQ,GACpB,WAAY,CAACA,QAAQ,GACrB,aAAc,CAACD,WAAW,GAC1B,cAAe,CAACA,WAAW,GAC3B,iBAAkB,CAACC,QAAQ,GAC3B,aAAc,CAACD,WAAW,GAC1B,aAAc,CAACA,WAAW,GAC1B,cAAe,CAACA,WAAW,GAC3B,eAAgB,CAACA,WAAW,GAC5BjJ,UAAW,CAACkJ,QAAQ,GACpBpN,MAAO,CAACmN,WAAW,GACnB,cAAe,CAACA,WAAW,GAC3BtE,SAAU,CAACuE,QAAQ,GACnB3I,QAAS,CAAC2I,QAAQ,GAClBzM,UAAW,CAACyM,QAAQ,GACpB,cAAe,CAAC7P,GAAI,GAAIsO,GAAI,KAC5B,YAAa,CAACsB,WAAW,GACzB,cAAe,CACb5P,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVW,WAAW,GAEb,YAAa,CACX5P,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,EACb9D,cAAc,GAEhB,eAAgB,CACd9H,GAAI,IACJnO,KAAM,OACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,WAAY,CACVjP,GAAI,IACJnO,KAAM,WACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVrD,aAAa,EACb9J,gBAAgB,EAChBgG,cAAc,GAEhB,eAAgB,CACd9H,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVrD,aAAa,GAEf,eAAgB,CACd5L,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd8H,WAAW,EACX1P,MAAO,CAAC,EAAG,IAEb,gBAAiB,CACfF,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,kBAAmB,CACjB5L,GAAI,IACJnO,KAAM,SACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,EACbiE,QAAQ,EACR1iB,OAAQ,mBAEV,iBAAkB,CAChB6S,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd8H,WAAW,EACXhE,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,mBAAoB,CAClB5L,GAAI,EACJnO,KAAM,MACNmG,SAAU,UAEZ,YAAe,CACbgI,GAAI,IACJnO,KAAM,QACN6c,iBAAiB,EACjB1W,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,mBAAoB,CAClBjP,GAAI,IACJnO,KAAM,WACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVnH,cAAc,GAEhB,gBAAiB,CACf9H,GAAI,IACJnO,KAAM,WACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVrD,aAAa,GAEfkE,YAAa,CACX9P,GAAI,EACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,GAEhBiI,OAAQ,CACN/P,GAAI,EACJnO,KAAM,SACNmG,SAAU,UAEZ,eAAgB,CACdgI,GAAI,IACJnO,KAAM,WACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,GAEhB,YAAa,CACX9H,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVnH,cAAc,EACd8D,aAAa,GAEf,gBAAiB,CACf5L,GAAI,IACJnO,KAAM,WACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,GAEhB,aAAc,CACZ9H,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,cAAe,CACb5L,GAAI,EACJnO,KAAM,SACNmG,SAAU,UAEZ,eAAgB,CACdgI,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVgU,UAAU,EACVsC,GAAI,IACJW,SAAU,KAEZ,iBAAkB,CAChBjP,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,IACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,GAEhB,gBAAiB,CACf9H,GAAI,IACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACdsC,SAAS,GAEX,cAAe,CACbpK,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,cAAe,CACbjP,GAAI,IACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACdiD,eAAe,GAEjB,cAAe,CACb/K,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,GAEhB,kBAAmB,CACjB9H,GAAI,GACJnO,KAAM,QACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,YAAa,CACX5L,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACdsC,SAAS,EACThF,SAAU,GAGZ,gBAAiB,CACfpF,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd8H,WAAW,GAEb,gBAAiB,CACf5P,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,eAAgB,CACdjP,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,EACJnO,KAAM,UACNmG,SAAU,UAEZ,iBAAkB,CAChBgI,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,eAAgB,CACd5L,GAAI,IACJnO,KAAM,QACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACV9hB,OAAQ,kBACR0b,KAAM,CAACzU,OAAQ,CAAC7F,KAAM,KAExB,cAAe,CACbyR,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVnH,cAAc,EACd8D,aAAa,EACbze,OAAQ,mBAEV,gBAAiB,CACf6S,GAAI,IACJnO,KAAM,MACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,IACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVrD,aAAa,GAEf,WAAY,CACV5L,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVvB,SAAS,GAGX,kBAAmB,CACjB1N,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVnH,cAAc,EACd8H,WAAW,EACXtP,SAAU,CAAC,EAAG,KAEhB0P,OAAQ,CACNhQ,GAAI,GACJnO,KAAM,MACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd8D,aAAa,GAEf,cAAe,CACb5L,GAAI,EACJnO,KAAM,SACNmG,SAAU,UAEZiY,SAAU,CACRjQ,GAAI,GACJnO,KAAM,UACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd8H,WAAW,GAEb,iBAAkB,CAChB5P,GAAI,GACJnO,KAAM,UACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd8D,aAAa,GAEf,YAAa,CACX5L,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACdsC,SAAS,GAEX,cAAe,CACbpK,GAAI,GACJnO,KAAM,SACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,GAEhB,cAAe,CACb9H,GAAI,IACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,KAEZ,mBAAoB,CAClBjP,GAAI,EACJnO,KAAM,SACNmG,SAAU,UAEZkY,UAAW,CACTlQ,GAAI,EACJnO,KAAM,OACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,YAAa,CACXjP,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVrD,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,IACJnO,KAAM,SACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,EACbiE,QAAQ,EACR1iB,OAAQ,mBAEV,YAAa,CACX6S,GAAI,EACJnO,KAAM,SACNmG,SAAU,UAEZmY,QAAS,CACPnQ,GAAI,EACJnO,KAAM,QACNmG,SAAU,UAEZ,YAAa,CACXgI,GAAI,EACJnO,KAAM,MACNmG,SAAU,SACVoN,SAAU,GAEZgL,UAAW,CACTpQ,GAAI,EACJnO,KAAM,MACNmG,SAAU,UAEZ,gBAAiB,CACfgI,GAAI,EACJnO,KAAM,QACNmG,SAAU,UAEZ,WAAY,CACVgI,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,GAEhB,mBAAoB,CAClB9H,GAAI,IACJnO,KAAM,QACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,EACbiE,QAAQ,EACR1iB,OAAQ,mBAEV,YAAa,CACX6S,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd8H,WAAW,EACXhE,aAAa,GAEf,aAAc,CACZ5L,GAAI,EACJnO,KAAM,UACNmG,SAAU,UAEZ,aAAc,CACZgI,GAAI,GACJnO,KAAM,SACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,KAEZ,UAAW,CACTjP,GAAI,EACJnO,KAAM,SACNmG,SAAU,UAEZ,aAAc,CACZgI,GAAI,GACJnO,KAAM,OACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,EACb7D,SAAS,GAEXsI,WAAY,CACVrQ,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,EACb9D,cAAc,GAEhB,gBAAiB,CACf9H,GAAI,GACJnO,KAAM,WACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVrD,aAAa,GAEf,cAAe,CACb5L,GAAI,GACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,GACVnH,cAAc,EACdxH,SAAU,GAEZ,YAAa,CACXN,GAAI,GACJnO,KAAM,UACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,GACV3O,SAAU,GAEZ,gBAAiB,CACfN,GAAI,EACJnO,KAAM,WACNmG,SAAU,UAEZ,aAAc,CACZgI,GAAI,IACJnO,KAAM,QACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVnH,cAAc,EACd1G,OAAQ,CAAC,GAAI,MAEf,gBAAiB,CACfpB,GAAI,GACJnO,KAAM,OACNmG,SAAU,WACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,GAEf,iBAAkB,CAChB5L,GAAI,IACJnO,KAAM,WACNmG,SAAU,UACVsW,GAAI,IACJW,SAAU,IACVrD,aAAa,EACbiE,QAAQ,EACR1iB,OAAQ,qBA0BCmjB,GAAQ,CAAC,CAAC,EAAGvQ,GAAK/D,GAAK9B,GAAKC,GAAKC,GAAIC,GAAIC,GAAIC,GAAIC,GAFrB5N,GAAO,EAAM,CAAC,EAAG4N,GAlBS,CACjE,eAAgB,CACdwF,GAAI,EACJnO,KAAM,MACNmG,SAAU,UAEZ,gBAAiB,CACfgI,GAAI,EACJnO,KAAM,MACNmG,SAAU,UAEZ,aAAc,CACZgI,GAAI,EACJnO,KAAM,MACNmG,SAAU,aAM0D0C,GAapEC,OAAOC,SAXJ,IAAM2V,GAAK,WAGhB,SAAAA,EAAYngB,IAAsBZ,EAAAA,EAAAA,GAAA,KAAA+gB,GAAA,KAFjBngB,SAAG,EAGlB3C,KAAK2C,IAAMA,CACb,CAUC,OAVAX,EAAAA,EAAAA,GAAA8gB,EAAA,EAAA9kB,IAAA,MAAAiE,MAED,SAAIoL,GACF,OAAO0V,GAAY/iB,KAAK2C,KAAK0K,EAC/B,GAAC,CAAArP,IAAAiP,GAAAhL,OAAAsL,EAAAA,EAAAA,KAAAC,MAED,SAAAvL,IAAA,IAAAwL,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmBgV,GAAY/iB,KAAK2C,MAAI,WAAAgL,EAAAK,GAAAL,EAAAG,MAAAtH,KAAC,CAADmH,EAAAE,KAAA,QACpC,OADSR,EAAEM,EAAAK,GAAA/L,MAAA0L,EAAAE,KAAA,EACL7N,KAAKsD,IAAI+J,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAM,OAAA,GAAAhM,EAAA,YAE9B6gB,CAAA,CAfe,GAkBZE,IAAIhhB,EAAAA,EAAAA,IAkDR,SAAAghB,EAAY3jB,EAAc4jB,EAAgBtgB,IAAaZ,EAAAA,EAAAA,GAAA,KAAAihB,GAAA,KAjD9C7U,UAAI,OACJd,QAAE,OACFhO,UAAI,OACJyL,eAAS,OACT1G,UAAI,OACJmG,cAAQ,OACR2Y,WAAK,OACL/E,iBAAW,OACXze,YAAM,OACNiU,YAAM,OACNU,oBAAc,OACd4M,qBAAe,OACfrE,oBAAc,OACd2B,cAAQ,OACR9L,WAAK,OACLkF,cAAQ,OACRyD,UAAI,OACJwD,qBAAe,OACf6C,2BAAqB,OACrB7B,2BAAqB,OACrBJ,8BAAwB,OACxB2D,8BAAwB,OACxB7F,mBAAa,OACbwD,SAAG,OACHsC,WAAK,OAGLxB,WAAK,OACLyB,aAAO,OAGPxC,QAAE,OACFW,cAAQ,OACR3O,cAAQ,EAiBf7S,KAAKmO,KAAO,OACZnO,KAAKqN,GAAKnQ,EAAKmC,GACfW,KAAKX,KAAOA,EAGZW,KAAKkjB,MAAQ,CAAC,EACVD,EAAK5I,eAAcra,KAAKkjB,MAAMI,QAAU,GACxCL,EAAKtG,UAAS3c,KAAKkjB,MAAMK,MAAQ,GACjCN,EAAKpG,SAAQ7c,KAAKkjB,MAAMM,KAAO,GAC/BP,EAAKjD,WAAUhgB,KAAKkjB,MAAMO,OAAS,GACnCR,EAAK3I,UAASta,KAAKkjB,MAAMQ,MAAQ,GACjCT,EAAKhD,UAASjgB,KAAKkjB,MAAMS,MAAQ,GACjCV,EAAKd,YAAWniB,KAAKkjB,MAAMU,QAAU,GACrCX,EAAKb,SAAQpiB,KAAKkjB,MAAMW,KAAO,GAEnCjmB,EAAcoC,KAAMijB,EAAMD,EAAKc,OAE/B9jB,KAAK8K,UAAYmY,EAAK1Q,GAClB0Q,EAAKpC,KAAI7gB,KAAKojB,MAAQ,CAACtY,UAAWmY,EAAKpC,KACvCoC,EAAKzB,WAAUxhB,KAAKqjB,QAAU,CAACvY,UAAWmY,EAAKzB,YAE9CxhB,KAAKuK,UAAY5H,GAAO,IAAG3C,KAAKuK,SAAW,UAC5CvK,KAAK4c,uBAAwB5c,KAAa2T,MAChD,IA1EIqP,GAoCoBc,MAAQ,IAAIC,IAAI,CACtC,KACA,eACA,UACA,SACA,WACA,UACA,UACA,KACA,WACA,YACA,WAiCJ,IAHA,IAAMhB,GAA2C,GAE7CpgB,GAAM,EACVwI,GAAA,EAAA6Y,GAAoBnB,GAAK1X,GAAA6Y,GAAApkB,OAAAuL,KAAE,CAAtB,IAAM8Y,GAAKD,GAAA7Y,IACRmD,GAA4B,CAAC,EACnC,IAAK,IAAMvG,MAAQkc,GAAO,CACxB,IACMC,GAAI,IAAIlB,GAAKjb,GADNkc,GAAMlc,IACYpF,IAC/B2L,GAAI4V,GAAE7W,IAAM6W,EACd,CACAnB,GAAY7b,KAAKoH,IACjB3L,IACF,C,kBC1wJM2P,GAAqC,CAkBzC6R,SAAU,CACRjc,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,KAEZC,SAAU,CACRxc,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAKC,GAAI,GAAIC,GAAI,KAC1CC,SAAU,MAmCZE,QAAS,CACPzc,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,KACxCC,SAAU,MAEZG,UAAW,CACT1c,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAC1CC,SAAU,MAEZI,WAAY,CACV3c,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,IACVK,KAAK,GAEPC,WAAY,CACV7c,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GASPE,SAAU,CACR9c,MAAO,CAAC,QAAS,OACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAKC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,OAaZQ,QAAS,CACP/c,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GAEPI,MAAO,CAAChd,MAAO,CAAC,UAAWkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,SAAU,GAYnFU,UAAW,CACTjd,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,KACVK,KAAK,GAEPM,UAAW,CACTld,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC1CC,SAAU,KAEZY,QAAS,CACPnd,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,IACVK,KAAK,GAEPQ,QAAS,CACPpd,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,KACVK,KAAK,GAEPS,QAAS,CACPrd,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAC1CC,SAAU,MAEZe,MAAO,CACLtd,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,IACVK,KAAK,GAaPW,UAAW,CACTvd,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAC1CC,SAAU,MAuBZiB,QAAS,CAACxd,MAAO,CAAC,QAASkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAAMC,SAAU,IACrFkB,OAAQ,CACNzd,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACzCC,SAAU,GACVK,KAAK,GAEPc,OAAQ,CACN1d,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,KAC1CC,SAAU,MAyBZoB,QAAS,CAAC3d,MAAO,CAAC,SAAUkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,SAAU,MAYpFqB,OAAQ,CACN5d,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GAEPiB,UAAW,CACT7d,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GAEPkB,SAAU,CACR9d,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC1CC,SAAU,KAEZwB,QAAS,CACP/d,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACzCC,SAAU,GACVK,KAAK,GAkBPoB,MAAO,CACLhe,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACzCC,SAAU,MAQZ0B,WAAY,CACVje,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,IACVK,KAAK,GAEPsB,QAAS,CACPle,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,KAC1CC,SAAU,MA2EZ4B,SAAU,CACRne,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GAOPwB,UAAW,CACTpe,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,EACVK,KAAK,GAEPyB,SAAU,CACRre,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACzCC,SAAU,IAEZ+B,OAAQ,CACNte,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GAGP2B,OAAQ,CACNve,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,IACVK,KAAK,GAQP4B,IAAK,CACHxe,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,KAC7CC,SAAU,GAEZkC,OAAQ,CACNze,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,IAAKC,GAAI,KAC5CC,SAAU,KAEZmC,QAAS,CACP1e,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC1CC,SAAU,IAOZoC,IAAK,CAAC3e,MAAO,CAAC,UAAWkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,SAAU,IAyEnFqC,QAAS,CAAC5e,MAAO,CAAC,UAAWkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAAKC,SAAU,IAkBtFsC,QAAS,CACP7e,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,EACVK,KAAK,GA+BPkC,SAAU,CACR9e,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,IAEZwC,QAAS,CACP/e,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,KACVK,KAAK,GAEPoC,OAAQ,CACNhf,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAC1CC,SAAU,IAEZ0C,SAAU,CAACjf,MAAO,CAAC,QAASkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAAKC,SAAU,IACtF2C,SAAU,CACRlf,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,MAEZ4C,QAAS,CACPnf,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,IACVK,KAAK,GAwBPwC,QAAS,CACPpf,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAC3CC,SAAU,IAUZ8C,SAAU,CACRrf,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAKC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,EACVK,KAAK,GAEP0C,QAAS,CACPtf,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAKC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,MAEZgD,SAAU,CACRvf,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GAmCP4C,OAAQ,CACNxf,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAC3CC,SAAU,MAaZkD,SAAU,CACRzf,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC1CC,SAAU,IAEZmD,SAAU,CACR1f,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,MAEZoD,QAAS,CACP3f,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzCC,SAAU,GACVK,KAAK,GAiBPgD,QAAS,CACP5f,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,IAC1CC,SAAU,KACVK,KAAK,GA+BPiD,WAAY,CACV7f,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,IAEZuD,OAAQ,CACN9f,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKC,GAAI,KAC1CC,SAAU,OAsrBRlW,GAAqCpP,GAAO,EAAM,CAAC,EAAGmT,GA5qBE,CAM5D6R,SAAU,CAACC,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAC7BxD,SAAU,CAACN,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAAMC,OAAQ,KAO1CxD,QAAS,CAACP,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAAMpD,KAAK,GACtCF,UAAW,CAACR,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAC9BrD,WAAY,CAACT,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC9BnD,WAAY,CAACX,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAG9BlD,SAAU,CAACZ,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAG5BjD,QAAS,CAACb,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC3BhD,MAAO,CAACd,GAAI,CAAC6D,GAAI,GAAIC,GAAI,IAAKC,OAAQ,KAGtChD,UAAW,CAACf,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC7B9C,UAAW,CAAChB,GAAI,CAAC6D,GAAI,IAAKC,GAAI,MAC9B7C,QAAS,CAACjB,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC3B5C,QAAS,CAAClB,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC3B3C,QAAS,CAACnB,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC3B1C,MAAO,CAACpB,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAGzBzC,UAAW,CAACrB,GAAI,CAAC6D,GAAI,GAAIC,GAAI,IAAKC,OAAQ,KAK1CzC,QAAS,CAACtB,GAAI,CAAC6D,GAAI,GAAIC,GAAI,MAC3BvC,OAAQ,CAACvB,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAC3BtC,OAAQ,CAACxB,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAK3BrC,QAAS,CAACzB,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAG3BpC,OAAQ,CAAC1B,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC1BnC,UAAW,CAAC3B,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC7BlC,SAAU,CAAC5B,GAAI,CAAC6D,GAAI,GAAIC,GAAI,MAC5BjC,QAAS,CAAC7B,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAI5BhC,MAAO,CAAC9B,GAAI,CAAC6D,GAAI,GAAIC,GAAI,MAEzB/B,WAAY,CAAC/B,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC9B9B,QAAS,CAAChC,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAe5B7B,SAAU,CAACjC,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAE5B5B,UAAW,CAACpe,MAAO,CAAC,WAAY,SAAUkc,GAAI,CAAC6D,GAAI,GAAIC,GAAI,IAAKC,OAAQ,KACxE5B,SAAU,CAACre,MAAO,CAAC,WAAY,SAAUkc,GAAI,CAAC6D,GAAI,IAAKC,GAAI,IAAKC,OAAQ,KACxE3B,OAAQ,CAACpC,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAE1BzB,OAAQ,CAACrC,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAE1BxB,IAAK,CAACtC,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAAMC,OAAQ,KACtCxB,OAAQ,CAACvC,GAAI,CAAC6D,GAAI,IAAKC,GAAI,IAAKC,OAAQ,KACxCvB,QAAS,CAACxC,GAAI,CAAC6D,GAAI,IAAKC,GAAI,IAAKC,OAAQ,KACzC,WAAY,CAAC/D,GAAI,CAAC6D,GAAI,IAAKC,GAAI,MAC/BrB,IAAK,CAACzC,GAAI,CAAC6D,GAAI,GAAIC,GAAI,MAcvBpB,QAAS,CAAC1C,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAI3BnB,QAAS,CAAC3C,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAO3BlB,SAAU,CAAC5C,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC5BjB,QAAS,CAAC7C,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC3BhB,OAAQ,CAAC9C,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAQ1BZ,QAAS,CAAClD,GAAI,CAAC6D,GAAI,GAAIC,GAAI,IAAKpD,KAAK,GAIrCyC,SAAU,CAACnD,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC5BV,QAAS,CAACpD,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAC5BT,SAAU,CAACrD,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAO5BR,OAAQ,CAACtD,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAG1BP,SAAU,CAACvD,GAAI,CAAC6D,GAAI,IAAKC,GAAI,KAC7BN,SAAU,CAACxD,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC5BL,QAAS,CAACzD,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAI3BJ,QAAS,CAAC1D,GAAI,CAAC6D,GAAI,GAAIC,GAAI,IAAKC,OAAQ,KAMxCJ,WAAY,CAAC3D,GAAI,CAAC6D,GAAI,GAAIC,GAAI,KAC9BF,OAAQ,CAAC5D,GAAI,CAAC6D,GAAI,IAAKC,GAAI,IAAKC,OAAQ,KAIxCC,SAAU,CACRlgB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,MAOZ4D,UAAW,CACTngB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,MAaZ6D,QAAS,CACPpgB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,MA0CZ8D,UAAW,CACTrgB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,GAEP0D,SAAU,CACRtgB,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IAEZgE,QAAS,CACPvgB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KAEZiE,UAAW,CACTxgB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IAcZkE,OAAQ,CACNzgB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,MAOZmE,QAAS,CACP1gB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,GAEP+D,WAAY,CACV3gB,MAAO,CAAC,MAAO,SACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,OAGZqE,UAAW,CACT5gB,MAAO,CAAC,SAAU,WAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,MAYZsE,UAAW,CACT7gB,MAAO,CAAC,MAAO,YACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IAmBZuE,OAAQ,CACN9gB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,GAEPmE,SAAU,CACR/gB,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IAEZyE,SAAU,CACRhhB,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,GAEPqE,UAAW,CACTjhB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,GAEPsE,SAAU,CACRlhB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GAYZ4E,SAAU,CACRnhB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,GAmCPwE,OAAQ,CACNphB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,GAEPyE,OAAQ,CACNrhB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,GAYP0E,WAAY,CACVthB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GAEZgF,QAAS,CACPvhB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KAkBZiF,OAAQ,CACNxhB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,GAEP6E,MAAO,CACLzhB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,GAOP8E,OAAQ,CACN1hB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,GAaP+E,QAAS,CACP3hB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,GAEPgF,SAAU,CACR5hB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IAEZsF,QAAS,CACP7hB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,GAEPkF,SAAU,CACR9hB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KAcZwF,OAAQ,CACN/hB,MAAO,CAAC,MAAO,SACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KAkBZyF,SAAU,CACRhiB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,GAEPqF,SAAU,CACRjiB,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,MAeZ2F,QAAS,CACPliB,MAAO,CAAC,OAAQ,OAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,IAcZ4F,SAAU,CACRniB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,MAOZ6F,UAAW,CACTpiB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IAQZ8F,SAAU,CACRriB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KAEZ+F,QAAS,CACPtiB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,GAQP2F,UAAW,CACTviB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,GAmBP4F,WAAY,CACVxiB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,MAEZkG,UAAW,CACTziB,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,KAQZmG,QAAS,CAAC1iB,MAAO,CAAC,QAASkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAAKE,SAAU,IAO7FoG,SAAU,CACR3iB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,OAOZqG,OAAQ,CACN5iB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,KAorCHrY,GAAqCtN,GAAO,EAAM,CAAC,EAAGoP,GArqCE,CAM5D4V,SAAU,CAAC9V,UAAW,CAAC,EAAG,eAC1BqW,SAAU,CAACrW,UAAW,CAAC,EAAG,aAO1BsW,QAAS,CAACtW,UAAW,CAAC,EAAG,iBACzBuW,UAAW,CAACvW,UAAW,CAAC,EAAG,UAC3BwW,WAAY,CAACxW,UAAW,CAAC,EAAG,UAC5B0W,WAAY,CAAC1W,UAAW,CAAC,EAAG,UAG5B2W,SAAU,CAAC3W,UAAW,CAAC,EAAG,gBAG1B4W,QAAS,CAAC5W,UAAW,CAAC,EAAG,cACzB6W,MAAO,CAAC7W,UAAW,CAAC,EAAG,WAGvB8W,UAAW,CAAC9W,UAAW,CAAC,EAAG,cAC3B+W,UAAW,CAAC/W,UAAW,CAAC,EAAG,gBAC3BgX,QAAS,CAAChX,UAAW,CAAC,EAAG,cACzBiX,QAAS,CAACjX,UAAW,CAAC,EAAG,aACzBkX,QAAS,CAAClX,UAAW,CAAC,EAAG,cACzBmX,MAAO,CAACnX,UAAW,CAAC,EAAG,aAGvBoX,UAAW,CAACpX,UAAW,CAAC,EAAG,eAK3BqX,QAAS,CAACrX,UAAW,CAAC,EAAG,eACzBsX,OAAQ,CAACtX,UAAW,CAAC,EAAG,aACxBuX,OAAQ,CAACvX,UAAW,CAAC,EAAG,aAKxBwX,QAAS,CAACxX,UAAW,CAAC,EAAG,SAGzByX,OAAQ,CAACzX,UAAW,CAAC,EAAG,WACxB0X,UAAW,CAAC1X,UAAW,CAAC,EAAG,eAC3B2X,SAAU,CAAC3X,UAAW,CAAC,EAAG,eAC1B4X,QAAS,CAAC5X,UAAW,CAAC,EAAG,aAIzB6X,MAAO,CAAC7X,UAAW,CAAC,EAAG,aAEvB8X,WAAY,CAAC9X,UAAW,CAAC,EAAG,eAC5B+X,QAAS,CAAC/X,UAAW,CAAC,EAAG,gBAezBgY,SAAU,CAAChY,UAAW,CAAC,EAAG,eAE1BiY,UAAW,CAACjY,UAAW,CAAC,EAAG,gBAC3BkY,SAAU,CAAClY,UAAW,CAAC,EAAG,gBAC1BmY,OAAQ,CAACnY,UAAW,CAAC,EAAG,iBAExBoY,OAAQ,CAACpY,UAAW,CAAC,EAAG,WAExBqY,IAAK,CAACrY,UAAW,CAAC,EAAG,gBACrBsY,OAAQ,CAACtY,UAAW,CAAC,EAAG,aACxBuY,QAAS,CAACvY,UAAW,CAAC,EAAG,aAEzBwY,IAAK,CAACxY,UAAW,CAAC,EAAG,WAcrByY,QAAS,CAACzY,UAAW,CAAC,EAAG,WAIzB0Y,QAAS,CAAC1Y,UAAW,CAAC,EAAG,WAOzB2Y,SAAU,CAAC3Y,UAAW,CAAC,EAAG,iBAC1B4Y,QAAS,CAAC5Y,UAAW,CAAC,EAAG,SACzB6Y,OAAQ,CAAC7Y,UAAW,CAAC,EAAG,WAQxBiZ,QAAS,CAACjZ,UAAW,CAAC,EAAG,UAIzBkZ,SAAU,CAAClZ,UAAW,CAAC,EAAG,gBAC1BmZ,QAAS,CAACnZ,UAAW,CAAC,EAAG,cACzBoZ,SAAU,CAACpZ,UAAW,CAAC,EAAG,cAO1BqZ,OAAQ,CAACrZ,UAAW,CAAC,EAAG,eAGxBsZ,SAAU,CAACtZ,UAAW,CAAC,EAAG,iBAC1BuZ,SAAU,CAACvZ,UAAW,CAAC,EAAG,gBAC1BwZ,QAAS,CAACxZ,UAAW,CAAC,EAAG,kBAIzByZ,QAAS,CAACzZ,UAAW,CAAC,EAAG,eAMzB0Z,WAAY,CAAC1Z,UAAW,CAAC,EAAG,eAC5B2Z,OAAQ,CAAC3Z,UAAW,CAAC,EAAG,aAIxB+Z,SAAU,CAAC/Z,UAAW,CAAC,EAAG,WAE1Bga,UAAW,CAACha,UAAW,CAAC,EAAG,cAG3Bia,QAAS,CAACja,UAAW,CAAC,EAAG,iBAQzBka,UAAW,CAACla,UAAW,CAAC,EAAG,UAC3Bma,SAAU,CAACna,UAAW,CAAC,EAAG,iBAC1Boa,QAAS,CAACpa,UAAW,CAAC,EAAG,WACzBqa,UAAW,CAACra,UAAW,CAAC,EAAG,iBAG3Bsa,OAAQ,CAACta,UAAW,CAAC,EAAG,gBAExBua,QAAS,CAACva,UAAW,CAAC,EAAG,WACzBwa,WAAY,CAACxa,UAAW,CAAC,EAAG,WAE5Bya,UAAW,CAACza,UAAW,CAAC,EAAG,gBAG3B0a,UAAW,CAAC1a,UAAW,CAAC,EAAG,UAI3B2a,OAAQ,CAAC3a,UAAW,CAAC,EAAG,gBACxB4a,SAAU,CAAC5a,UAAW,CAAC,EAAG,eAC1B6a,SAAU,CAAC7a,UAAW,CAAC,EAAG,eAC1B8a,UAAW,CAAC9a,UAAW,CAAC,EAAG,eAC3B+a,SAAU,CAAC/a,UAAW,CAAC,EAAG,gBAG1Bgb,SAAU,CAAChb,UAAW,CAAC,EAAG,SAO1Bib,OAAQ,CAACjb,UAAW,CAAC,EAAG,WACxBkb,OAAQ,CAAClb,UAAW,CAAC,EAAG,cAGxBmb,WAAY,CAACnb,UAAW,CAAC,EAAG,aAC5Bob,QAAS,CAACpb,UAAW,CAAC,EAAG,aAIzBqb,OAAQ,CAACrb,UAAW,CAAC,EAAG,WACxBsb,MAAO,CAACtb,UAAW,CAAC,EAAG,WAEvBub,OAAQ,CAACvb,UAAW,CAAC,EAAG,WAGxBwb,QAAS,CAACxb,UAAW,CAAC,EAAG,cACzByb,SAAU,CAACzb,UAAW,CAAC,EAAG,SAC1B0b,QAAS,CAAC1b,UAAW,CAAC,EAAG,UACzB2b,SAAU,CAAC3b,UAAW,CAAC,EAAG,iBAG1B4b,OAAQ,CAAC5b,UAAW,CAAC,EAAG,UAIxB6b,SAAU,CAAC7b,UAAW,CAAC,EAAG,gBAC1B8b,SAAU,CAAC9b,UAAW,CAAC,EAAG,cAI1B+b,QAAS,CAAC/b,UAAW,CAAC,EAAG,gBAGzBgc,SAAU,CAAChc,UAAW,CAAC,EAAG,eAE1Bic,UAAW,CAACjc,UAAW,CAAC,EAAG,WAE3Bkc,SAAU,CAAClc,UAAW,CAAC,EAAG,gBAC1Bmc,QAAS,CAACnc,UAAW,CAAC,EAAG,gBAEzBoc,UAAW,CAACpc,UAAW,CAAC,EAAG,WAI3Bqc,WAAY,CAACrc,UAAW,CAAC,EAAG,UAC5Bsc,UAAW,CAACtc,UAAW,CAAC,EAAG,gBAE3Buc,QAAS,CAACvc,UAAW,CAAC,EAAG,gBAEzBwc,SAAU,CAACxc,UAAW,CAAC,EAAG,SAE1Byc,OAAQ,CAACzc,UAAW,CAAC,EAAG,SAgBxB0c,QAAS,CACP7iB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,iBAsBjB2c,QAAS,CACP9iB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjB4c,MAAO,CACL/iB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAUjB6c,QAAS,CACPhjB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAEjB8c,SAAU,CACRjjB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAsBjB+c,QAAS,CACPljB,MAAO,CAAC,QAAS,YACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,iBAEjBgd,OAAQ,CACNnjB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjBid,SAAU,CACRpjB,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cAEjBkd,SAAU,CACRrjB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBA6KjBmd,UAAW,CACTtjB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBAEjBod,OAAQ,CACNvjB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,MACVpW,UAAW,CAAC,EAAG,gBAQjBqd,QAAS,CACPxjB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACrDE,SAAU,IACVpW,UAAW,CAAC,EAAG,WACf8Z,OAAQ,KASVwD,QAAS,CACPzjB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cAEjBud,OAAQ,CACN1jB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAEjBwd,SAAU,CACR3jB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,MACVpW,UAAW,CAAC,EAAG,cA2BjByd,OAAQ,CACN5jB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAEjB0d,OAAQ,CACN7jB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,IACVpW,UAAW,CAAC,EAAG,WACf8Z,OAAQ,KAoEV6D,QAAS,CACP9jB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eAEjB4d,SAAU,CACR/jB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAejB6d,WAAY,CACVhkB,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eAQjB8d,SAAU,CACRjkB,MAAO,CAAC,WAAY,WACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjB+d,SAAU,CACRlkB,MAAO,CAAC,WAAY,WACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eA6DjBge,MAAO,CACLnkB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cASjBie,SAAU,CACRpkB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aAejBke,MAAO,CACLrkB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAEjBme,SAAU,CACRtkB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,MACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,KAmCVsE,QAAS,CACPvkB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aAEjBqe,UAAW,CACTxkB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,MACVpW,UAAW,CAAC,EAAG,eAsBjBse,QAAS,CACPzkB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cA4BjBue,UAAW,CACT1kB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAEjBwe,QAAS,CACP3kB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aAgBjBye,QAAS,CACP5kB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACpDE,SAAU,MACVpW,UAAW,CAAC,EAAG,WAEjB0e,QAAS,CACP7kB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,GAEPkI,QAAS,CACP9kB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAsBjB4e,OAAQ,CACN/kB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjB6e,QAAS,CACPhlB,MAAO,CAAC,MAAO,SACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAEjB8e,OAAQ,CACNjlB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAEjB+e,OAAQ,CACNllB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBA4BjBgf,QAAS,CACPnlB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBAgBjBif,QAAS,CACPplB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBASjBkf,SAAU,CACRrlB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBACfyW,KAAK,GA2BP0I,SAAU,CACRtlB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cASjBof,QAAS,CACPvlB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aAgBjBqf,SAAU,CACRxlB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAwmCb3B,GAAqCvN,GAAO,EAAM,CAAC,EAAGsN,GA3lCE,CAO5D8Z,SAAU,CAACzB,KAAK,GAChB0E,WAAY,CAAC1E,KAAK,GAClB2E,QAAS,CAAC3E,KAAK,GAOfsF,QAAS,CAACtF,KAAK,GAIf6I,UAAW,CACTzlB,MAAO,CAAC,QAAS,OACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,MACVpW,UAAW,CAAC,EAAG,iBAQjBuf,OAAQ,CACN1lB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACtDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aACf8Z,OAAQ,IACR0F,YAAa,IAyJfC,MAAO,CACL5lB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,KAqBV4F,OAAQ,CACN7lB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,WASjB2f,SAAU,CACR9lB,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,aAEjB4f,QAAS,CACP/lB,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLqD,OAAQ,IACR9Z,UAAW,CAAC,EAAG,aASjB6f,OAAQ,CACNhmB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAqEjB8f,OAAQ,CACNjmB,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBASjB+f,UAAW,CACTlmB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAEjBggB,SAAU,CACRnmB,MAAO,CAAC,SAAU,YAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAejBigB,OAAQ,CACNpmB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACtDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,aAejBkgB,SAAU,CACRrmB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cAEjBmgB,SAAU,CACRtmB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAwCjBogB,QAAS,CACPvmB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eASjBqgB,SAAU,CACRxmB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjBsgB,SAAU,CACRzmB,MAAO,CAAC,MAAO,SACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjBugB,OAAQ,CACN1mB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjBwgB,QAAS,CACP3mB,MAAO,CAAC,UAAW,YACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cAEjBygB,SAAU,CACR5mB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cAEjB0gB,UAAW,CACT7mB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBAEjB2gB,MAAO,CACL9mB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjB4gB,SAAU,CACR/mB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACtDE,SAAU,IACV0D,OAAQ,IACR0F,YAAa,CAAC,mBACdxf,UAAW,CAAC,EAAG,aAEjB,kBAAmB,CACjBnG,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACtDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,YACf6gB,YAAa,YAEfC,QAAS,CACPjnB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAsBjB+gB,QAAS,CACPlnB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,EAAGC,GAAI,EAAG2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAChDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAEjBghB,QAAS,CACPnnB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eAEjBihB,WAAY,CACVpnB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAEjBkhB,UAAW,CACTrnB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBAEjBmhB,UAAW,CACTtnB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAcjBohB,UAAW,CACTvnB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjBqhB,WAAY,CACVxnB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,UAQjBshB,QAAS,CACPznB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAcjBuhB,QAAS,CACP1nB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cAEjBwhB,SAAU,CACR3nB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAEjByhB,MAAO,CACL5nB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YAEjB0hB,OAAQ,CACN7nB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YAQjB2hB,UAAW,CACT9nB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAsBjB4hB,QAAS,CACP/nB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,KASV+H,UAAW,CACThoB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aAoCjB8hB,UAAW,CACTjoB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aAEjB+hB,OAAQ,CACNloB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACrDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,aAEjBgiB,OAAQ,CACNnoB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aACf8Z,OAAQ,KA4EVmI,UAAW,CACTpoB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACrDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf8Z,OAAQ,KAcVoI,MAAO,CACLroB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAQjBmiB,MAAO,CACLtoB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,IACR0F,YAAa,CAAC,YAAa,cAAe,aAAc,YAAa,eAEvE,YAAa,CACX3lB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,IACR+G,YAAa,SAEf,cAAe,CACbhnB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,IACR+G,YAAa,SAEf,aAAc,CACZhnB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,IACR+G,YAAa,SAEf,YAAa,CACXhnB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,IACR+G,YAAa,SAEf,aAAc,CACZhnB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,IACR+G,YAAa,SAkBfuB,QAAS,CACPvoB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBASjBqiB,MAAO,CACLxoB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YASjBsiB,SAAU,CACRzoB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,WAEjBuiB,OAAQ,CACN1oB,MAAO,CAAC,QAAS,OACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAEjBwiB,UAAW,CACT3oB,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aAEjByiB,UAAW,CACT5oB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjB0iB,SAAU,CACR7oB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAEjB2iB,OAAQ,CACN9oB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aASjB4iB,OAAQ,CACN/oB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,WAyCjB6iB,UAAW,CACThpB,MAAO,CAAC,SAAU,YAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,iBASjB8iB,KAAM,CACJjpB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,KAEViJ,UAAW,CACTlpB,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAejBgjB,QAAS,CACPnpB,MAAO,CAAC,OAAQ,OAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAquCb1B,GAAoCxN,GAAO,EAAM,CAAC,EAAGuN,GApsCE,CAC3D,YAAa,CAACxE,MAAO,CAAC,WAAY,WAClC,cAAe,CAACA,MAAO,CAAC,WAAY,QACpC,aAAc,CAACA,MAAO,CAAC,WAAY,SACnC,YAAa,CAACA,MAAO,CAAC,WAAY,UAClC,aAAc,CAACA,MAAO,CAAC,WAAY,UAOnCopB,UAAW,CACTppB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,WAEjBkjB,UAAW,CACTrpB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,iBAkCjBmjB,KAAM,CACJtpB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YAEjBojB,SAAU,CACRvpB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfwf,YAAa,CAAC,0BAEhB,wBAAyB,CACvB3lB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACf6gB,YAAa,YAEfwC,QAAS,CACPxpB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eAQjBsjB,QAAS,CACPzpB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YA6BjBujB,SAAU,CACR1pB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aAiEjBwjB,UAAW,CACT3pB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,KAEV2J,QAAS,CACP5pB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eA8BjB0jB,SAAU,CACR7pB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAEjB2jB,MAAO,CACL9pB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,GAEPmN,OAAQ,CACN/pB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YA0CjB6jB,UAAW,CACThqB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEPqN,WAAY,CACVjqB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aA8CjB+jB,QAAS,CACPlqB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAyFjBgkB,QAAS,CACPnqB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,UAEjBikB,WAAY,CACVpqB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,UAEjBkkB,UAAW,CACTrqB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,UASjBmkB,QAAS,CACPtqB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,MACVpW,UAAW,CAAC,EAAG,YAejBokB,UAAW,CACTvqB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aA6DjBqkB,SAAU,CACRxqB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAEjBskB,WAAY,CACVzqB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAiCjBukB,SAAU,CACR1qB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACfwf,YAAa,CAAC,qBAEhB,mBAAoB,CAClB3lB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,YAEf2D,SAAU,CACR3qB,MAAO,CAAC,MAAO,QACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAcjBykB,UAAW,CACT5qB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBAsBjB0kB,UAAW,CACT7qB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cAQjB,gBAAiB,CACfnG,MAAO,CAAC,SAAU,WAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBACfwf,YAAa,CAAC,sBACd1F,OAAQ,KAEV,qBAAsB,CACpBjgB,MAAO,CAAC,SAAU,YAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBACf6gB,YAAa,gBACb/G,OAAQ,KAsDV6K,SAAU,CACR9qB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YAqCjB4kB,SAAU,CACR/qB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YAEjB6kB,QAAS,CACPhrB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBA2CjB8kB,QAAS,CACPjrB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aAEjB+kB,SAAU,CACRlrB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YAEjBglB,QAAS,CACPnrB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAQjBilB,SAAU,CACRprB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBAsJjBklB,UAAW,CACTrrB,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACfwf,YAAa,CAAC,sBAEhB,oBAAqB,CACnB3lB,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,aAsBfsE,SAAU,CACRtrB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACfwf,YAAa,CAAC,qBAEhB,mBAAoB,CAClB3lB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,YAuBfuE,OAAQ,CACNvrB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAiDP4O,UAAW,CACTxrB,MAAO,CAAC,MAAO,QACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAuDjBslB,QAAS,CACPzrB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAEjBulB,MAAO,CACL1rB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEP+O,SAAU,CACR3rB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,YAOFnY,GAAU,MAAEkhB,YAGnB,IAsoCMjhB,GAAoCzN,GAAO,EAAM,CAAC,EAAGwN,GAtoCE,CAS3D0b,UAAW,CAACngB,MAAO,CAAC,QAAS,SAAUkc,GAAI,CAAC6D,GAAI,KAChD+C,QAAS,CAAC9iB,MAAO,CAAC,SAAU,UA2B5BihB,UAAW,CAACjhB,MAAO,CAAC,SAAU,UAC9Bie,WAAY,CAACje,MAAO,CAAC,SAAU,UAC/BkhB,SAAU,CAAChF,GAAI,CAAC8D,GAAI,KAEpB4D,OAAQ,CAAC5jB,MAAO,CAAC,UAAW,UAC5ByqB,WAAY,CAACvO,GAAI,CAACE,GAAI,KAQtBiF,OAAQ,CAACrhB,MAAO,CAAC,QAAS,UAE1BikB,SAAU,CAAC0B,YAAa,CAAC,kBAQzB9G,QAAS,CACP3C,GAAI,CAACE,GAAI,GAAI4D,GAAI,KAYnBhB,OAAQ,CAAC9C,GAAI,CAACG,GAAI,MAClBgI,MAAO,CAACrkB,MAAO,CAAC,UAAW,UAY3B4oB,UAAW,CAAC1M,GAAI,CAAC8D,GAAI,KAarBH,WAAY,CAAC7f,MAAO,CAAC,SAAU,SAAUkc,GAAI,CAAC6D,GAAI,KAiDlD6L,QAAS,CACP5rB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cAQjB0lB,SAAU,CACR7rB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cA8BjB2lB,QAAS,CACP9rB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,eAEjB4lB,WAAY,CACV/rB,MAAO,CAAC,QAAS,YACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aAEjB6lB,QAAS,CACPhsB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aAEjB8lB,UAAW,CACTjsB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,iBACfyW,KAAK,GAEPsP,UAAW,CACTlsB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,kBASjBgmB,QAAS,CACPnsB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACfwf,YAAa,CAAC,gBACd1F,OAAQ,KAEVmM,QAAS,CACPpsB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBAEjBkmB,QAAS,CACPrsB,MAAO,CAAC,OAAQ,WAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,UAejBmmB,SAAU,CACRtsB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,iBASjBomB,SAAU,CACRvsB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,UAEjBqmB,sBAAW,CACTxsB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAEjBsmB,YAAa,CACXzsB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAEjBumB,WAAY,CACV1sB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cASjBwmB,QAAS,CACP3sB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EAELzW,UAAW,CAAC,EAAG,gBASjBymB,QAAS,CACP5sB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBAEjB0mB,QAAS,CACP7sB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YAEjB2mB,UAAW,CACT9sB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YAQjB4mB,OAAQ,CACN/sB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAEjB6mB,OAAQ,CACNhtB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,MACVpW,UAAW,CAAC,EAAG,eAEjB8mB,MAAO,CACLjtB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eA8BjB+mB,SAAU,CACRltB,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YAEjBgnB,SAAU,CACRntB,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,WAsBjBinB,MAAO,CACLptB,MAAO,CAAC,UAAW,SACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,EACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,YACfwf,YAAa,CAAC,kBAEhB,gBAAiB,CACf3lB,MAAO,CAAC,UAAW,QACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,YACf6gB,YAAa,SAefqG,OAAQ,CACNrtB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,cAEjBmnB,OAAQ,CACNttB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YAwXjBonB,OAAQ,CACNvtB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,UAEjBqnB,QAAS,CACPxtB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,UA6HjBsnB,OAAQ,CACNztB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YAEjBunB,UAAW,CACT1tB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aAEjBwnB,WAAY,CACV3tB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAEjBynB,OAAQ,CACN5tB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAEjB0nB,OAAQ,CACN7tB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAEjB2nB,QAAS,CACP9tB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,KACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAejB4nB,OAAQ,CACN/tB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAgBjB6nB,QAAS,CACPhuB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjB8nB,WAAY,CACVjuB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAqBjB+nB,SAAU,CACRluB,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACfwf,YAAa,CAAC,iBAAkB,sBAElC,iBAAkB,CAChB3lB,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,YAEf,oBAAqB,CACnBhnB,MAAO,CAAC,MAAO,UACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,YAEfmH,UAAW,CACTnuB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAi0CbxB,GAAoC1N,GAAO,EAAM,CAAC,EAAGyN,GAtxCE,CAI3D8kB,QAAS,CAACtN,GAAI,CAACC,GAAI,MAKnBwN,UAAW,CAACzN,GAAI,CAACjjB,GAAI,GAAImjB,GAAI,KAE7BW,QAAS,CAAC4I,YAAa,CAAC,kBAIxBpI,UAAW,CAACrB,GAAI,CAACG,GAAI,MAGrBqB,OAAQ,CAACvX,UAAW,CAAC,EAAG,gBAIxB+mB,SAAU,CAACvH,YAAa,CAAC,iBACzB/H,OAAQ,CAAC+H,YAAa,CAAC,iBAMvB3B,WAAY,CAAC9H,GAAI,CAAC6D,GAAI,IAAK1D,GAAI,KAC/BkC,OAAQ,CAACoH,YAAa,CAAC,iBACvBhH,IAAK,CAACgH,YAAa,CAAC,cAKpBvB,SAAU,CAAClI,GAAI,CAAC6D,GAAI,KACpBnB,QAAS,CAAC+G,YAAa,CAAC,kBAaxB7D,SAAU,CAAC5F,GAAI,CAACE,GAAI,KACpB4C,OAAQ,CAAC2G,YAAa,CAAC,iBAoDvByI,QAAS,CACPpuB,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aA0DjBkoB,aAAc,CACZruB,MAAO,CAAC,WAAY,OACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,iBAEjBmoB,WAAY,CACVtuB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAgBjBooB,UAAW,CACTvuB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAsBjB,gBAAiB,CACfnG,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVyK,YAAa,UACbpK,KAAK,EACLzW,UAAW,CAAC,EAAG,cA4CjBqoB,SAAU,CACRxuB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eA+BjB,eAAgB,CACdnG,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVyK,YAAa,SACbpK,KAAK,EACLzW,UAAW,CAAC,EAAG,iBAEjB,eAAgB,CACdnG,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,YASfyH,SAAU,CACRzuB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KAEVpW,UAAW,CAAC,EAAG,aAyDjBuoB,OAAQ,CACN1uB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aA8BjBwoB,SAAU,CACR3uB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KAEVpW,UAAW,CAAC,EAAG,eASjByoB,SAAU,CACR5uB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVoJ,YAAa,CAAC,gBAAiB,qBAC/Bxf,UAAW,CAAC,EAAG,aAEjB,gBAAiB,CACfnG,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,YAEf,oBAAqB,CACnBhnB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVyK,YAAa,WACb7gB,UAAW,CAAC,EAAG,aAEjB0oB,SAAU,CACR7uB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,KACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,eAEjB2oB,SAAU,CACR9uB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAuCjB,eAAgB,CACdnG,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVyK,YAAa,SACbpK,KAAK,EACLzW,UAAW,CAAC,EAAG,WAEjB4oB,QAAS,CACP/uB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,GACVoJ,YAAa,CAAC,kBACdxf,UAAW,CAAC,EAAG,aAEjB,iBAAkB,CAChBnG,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,GACVyK,YAAa,UACb7gB,UAAW,CAAC,EAAG,aAuCjB6oB,QAAS,CACPhvB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjB8oB,SAAU,CACRjvB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cAEjB,YAAa,CACXnG,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACpDE,SAAU,GACVyK,YAAa,MACb7gB,UAAW,CAAC,EAAG,iBA8DjB+oB,SAAU,CACRlvB,MAAO,CAAC,SAAU,WAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBAEjB,iBAAkB,CAChBnG,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACfwf,YAAa,CAAC,gBAAkB,mBAAoB,mBAEtD,gBAAkB,CAChB3lB,MAAO,CAAC,UAAW,UACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACf6gB,YAAa,kBAEf,mBAAoB,CAClBhnB,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACf6gB,YAAa,kBAEf,iBAAkB,CAChBhnB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACf6gB,YAAa,kBAQfmI,UAAW,CACTnvB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,qBAEjBipB,UAAW,CACTpvB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAEjB,gBAAiB,CACfnG,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACVyK,YAAa,UACb7gB,UAAW,CAAC,EAAG,aAmGjB,eAAgB,CACdnG,MAAO,CAAC,WAAY,WACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACVyK,YAAa,SACb7gB,UAAW,CAAC,EAAG,iBAsCjBkpB,SAAU,CACRrvB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aAEjBmpB,OAAQ,CACNtvB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,aAEjBopB,SAAU,CACRvvB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,cAEjBqpB,SAAU,CACRxvB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVoJ,YAAa,CAAC,kBACdxf,UAAW,CAAC,EAAG,cAwBjBspB,UAAW,CACTzvB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,qBA8RjBupB,QAAS,CACP1vB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cASjBwpB,SAAU,CACR3vB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAkEjBypB,QAAS,CACP5vB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,eAkwCbvB,GAAoC3N,GAAO,EAAM,CAAC,EAAG0N,GA9tCE,CAI3D6X,SAAU,CAACmJ,YAAa,CAAC,mBAmBzBpH,OAAQ,CAACoH,YAAa,CAAC,eAAgB,iBACvCjH,QAAS,CAACiH,YAAa,CAAC,kBAkBxBrG,QAAS,CAACqG,YAAa,CAAC,kBACxB1D,SAAU,CAAC0D,YAAa,CAAC,mBACzBpG,SAAU,CAACoG,YAAa,CAAC,mBAOzB7F,OAAQ,CAAC6F,YAAa,CAAC,iBAgBvBkK,SAAU,CACR7vB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,SACfwf,YAAa,CAAC,kBAShBmK,OAAQ,CACN9vB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,SACfyW,KAAK,GAgBPmT,SAAU,CACR/vB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEP,iBAAkB,CAChB5c,MAAO,CAAC,UAAW,UACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eACf8Z,OAAQ,IACR+G,YAAa,YAQfgJ,YAAa,CACXhwB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eA6BjB8pB,QAAS,CACPjwB,MAAO,CAAC,UAAW,SACnBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,WACf8Z,OAAQ,IACR0F,YAAa,CAAC,cAAe,mBAE/B,cAAe,CACb3lB,MAAO,CAAC,UAAW,OACnBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,MACVpW,UAAW,CAAC,EAAG,sBACf8Z,OAAQ,IACR+G,YAAa,WAEf,iBAAkB,CAChBhnB,MAAO,CAAC,UAAW,SACnBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACpDE,SAAU,KACVpW,UAAW,CAAC,EAAG,sBACf8Z,OAAQ,IACR+G,YAAa,WAEfkJ,OAAQ,CACNlwB,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBACfyW,KAAK,GAuBPuT,QAAS,CACPnwB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GASPwT,UAAW,CACTpwB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,SACfwf,YAAa,CAAC,mBAgBhB0K,UAAW,CACTrwB,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,MACVpW,UAAW,CAAC,EAAG,gBACfwf,YAAa,CAAC,mBAShB2K,WAAY,CACVtwB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eACfwf,YAAa,CAAC,oBAiBhB4K,YAAa,CACXvwB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfwf,YAAa,CAAC,qBAShB6K,YAAa,CACXxwB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAuBP6T,OAAQ,CACNzwB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eACfyW,KAAK,GAmDP8T,UAAW,CACT1wB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAEjBwqB,SAAU,CACR3wB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEPgU,QAAS,CACP5wB,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,MACVpW,UAAW,CAAC,EAAG,cACfwf,YAAa,CAAC,iBAShBkL,OAAQ,CACN7wB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAoCPkU,OAAQ,CACN9wB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfwf,YAAa,CAAC,iBAEhB,eAAgB,CACd3lB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf6gB,YAAa,UAQf+J,UAAW,CACT/wB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,YACf8Z,OAAQ,IACR0F,YAAa,CAAC,wBAUhBqL,QAAS,CACPhxB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBACf8Z,OAAQ,KAUVgR,QAAS,CACPjxB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,EACVpW,UAAW,CAAC,EAAG,SACfwf,YAAa,CAAC,iBAShBuL,SAAU,CACRlxB,MAAO,CAAC,MAAO,OACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBAgBjBgrB,UAAW,CACTnxB,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,IACVpW,UAAW,CAAC,EAAG,kBACf8Z,OAAQ,KAeVmR,SAAU,CACRpxB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,EACVpW,UAAW,CAAC,EAAG,gBAEjBkrB,WAAY,CACVrxB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACfwf,YAAa,CAAC,oBAShB2L,QAAS,CACPtxB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEP2U,QAAS,CACPvxB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,GAEP4U,UAAW,CACTxxB,MAAO,CAAC,UAAW,SACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACfwf,YAAa,CAAC,mBAShB8L,QAAS,CACPzxB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,GAEP8U,SAAU,CACR1xB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aACfyW,KAAK,GAEP,aAAc,CACZ5c,MAAO,CAAC,UAAW,UACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACfwf,YAAa,CAAC,eAEhB,aAAc,CACZ3lB,MAAO,CAAC,UAAW,UACnBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACf6gB,YAAa,cAEf2K,SAAU,CACR3xB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YAiBjB,MAAS,CACPnG,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,gBAyCjB,eAAgB,CACdnG,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,EACLoK,YAAa,UA6Bf,gBAAiB,CACfhnB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,WACf8Z,OAAQ,IACR+G,YAAa,WAEf4K,QAAS,CACP5xB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aACfyW,KAAK,GAyDPiV,WAAY,CACV7xB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,iBAgBjB2rB,WAAY,CACV9xB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,EACVpW,UAAW,CAAC,EAAG,kBAEjB4rB,YAAa,CACX/xB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cAEf8Z,OAAQ,KAkBV+R,OAAQ,CACNhyB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,SACfyW,KAAK,GASPqV,UAAW,CACTjyB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBACf8Z,OAAQ,KAEViS,UAAW,CACTlyB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf8Z,OAAQ,KAEVkS,UAAW,CACTnyB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfwf,YAAa,CAAC,mBAShByM,SAAU,CACRpyB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBACfyW,KAAK,GAEPyV,SAAU,CACRryB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAqBP0V,WAAY,CACVtyB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aACfwf,YAAa,CAAC,oBAShB4M,UAAW,CACTvyB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,SACfyW,KAAK,GAEP4V,UAAW,CACTxyB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aACfyW,KAAK,GAEP6V,SAAU,CACRzyB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,EAELqD,OAAQ,KAwBVyS,QAAS,CACP1yB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eACfyW,KAAK,GAEP,gBAAiB,CACf5c,MAAO,CAAC,SAAU,WAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,WAEf,iBAAkB,CAChBhnB,MAAO,CAAC,SAAU,WAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,oBACf6gB,YAAa,YAEf,iBAAkB,CAChBhnB,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVK,KAAK,EACLzW,UAAW,CAAC,EAAG,YACf6gB,YAAa,YASf2L,KAAM,CACJ3yB,MAAO,CAAC,MAAO,OACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eACfyW,KAAK,GASPgW,OAAQ,CACN5yB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,WACfyW,KAAK,GAEPiW,UAAW,CACT7yB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACf8Z,OAAQ,KAEV6S,YAAa,CACX9yB,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eAejB4sB,SAAU,CACR/yB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEPoW,MAAO,CACLhzB,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,WACfyW,KAAK,GAEP,mBAAoB,CAClB5c,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACfwf,YAAa,CAAC,kBAAmB,uBASnC,qBAAsB,CACpB3lB,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACf6gB,YAAa,oBAEf,wBAAyB,CACvBhnB,MAAO,CAAC,WAAY,QACpBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eACfwf,YAAa,CAAC,eAAgB,uBAAwB,8BAExD,uBAAwB,CACtB3lB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,yBAoEfiM,OAAQ,CACNjzB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,kBACf8Z,OAAQ,IACR0F,YAAa,CAAC,mBAEhB,iBAAkB,CAChB3lB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,kBACf6gB,YAAa,SACb/G,OAAQ,KAEViT,UAAW,CACTlzB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,oBACf8Z,OAAQ,IACR0F,YAAa,CAAC,sBAEhB,oBAAqB,CACnB3lB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,oBACf6gB,YAAa,YACb/G,OAAQ,KAEV,eAAgB,CACdjgB,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,WACf8Z,OAAQ,IACR+G,YAAa,UAEfmM,OAAQ,CACNnzB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACpDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACf8Z,OAAQ,IACR0F,YAAa,CAAC,gBAEhB,cAAe,CACb3lB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACpDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,SACb/G,OAAQ,OA+gCCmT,GAAU,CAAC,CAAC,EAAGhpB,GAAK/D,GAAK9B,GAAKC,GAAKC,GAAIC,GAAIC,GAAIC,GAFlB3N,GAAO,EAAM,CAAC,EAAG2N,GA1xBE,CAC3D6kB,QAAS,CAAC7M,KAAK,GACfsJ,UAAW,CAAChK,GAAI,CAACE,GAAI,IAAK4D,GAAI,MAC9BQ,UAAW,CAAC5D,KAAK,GACjBgE,UAAW,CAAChE,KAAK,GACjBkC,SAAU,CAAClC,KAAK,GAChB4C,OAAQ,CAACmG,YAAa,CAAC,2BAA4B,4BAA6B,+BAChF/C,OAAQ,CAAC+C,YAAa,CAAC,kBACvBsN,OAAQ,CAAC/W,GAAI,CAACC,GAAI,MAClB,iBAAkB,CAACD,GAAI,CAACC,GAAI,MAC5B+W,UAAW,CAAChX,GAAI,CAACC,GAAI,MACrB,oBAAqB,CAACD,GAAI,CAACC,GAAI,IAAKC,GAAI,IAAK4D,GAAI,MACjDqT,WAAY,CACVrzB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,iBAEjBmtB,SAAU,CACRtzB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjBotB,SAAU,CACRvzB,MAAO,CAAC,SAAU,OAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,oBACfyW,KAAK,GAEP4W,UAAW,CACTxzB,MAAO,CAAC,OAAQ,WAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAEjBstB,WAAY,CACVzzB,MAAO,CAAC,SAAU,OAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,qBAEjButB,UAAW,CACT1zB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,qBAEjBwtB,WAAY,CACV3zB,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cAEjBytB,aAAc,CACZ5zB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,EACVpW,UAAW,CAAC,EAAG,eAEjB0tB,SAAU,CACR7zB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEP,eAAgB,CACd5c,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjB2tB,SAAU,CACR9zB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,eACfyW,KAAK,GAEPmX,UAAW,CACT/zB,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAEjB6tB,QAAS,CACPh0B,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cAEjB8tB,SAAU,CACRj0B,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACfyW,KAAK,GAEPsX,UAAW,CACTl0B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEP,SAAU,CACR5c,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,kBAEjB,YAAa,CACXnG,MAAO,CAAC,OAAQ,OAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,MACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,kBAEjBguB,SAAU,CACRn0B,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,iBAEjBiuB,SAAU,CACRp0B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,SACfyW,KAAK,GAEPyX,SAAU,CACRr0B,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cAEjBmuB,SAAU,CACRt0B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,oBAEjBouB,OAAQ,CACNv0B,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEP4X,QAAS,CACPx0B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,YAEjBsuB,YAAa,CACXz0B,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBACfwf,YAAa,CAAC,8BAEhB,4BAA6B,CAC3B3lB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBACf6gB,YAAa,eAEf0N,SAAU,CACR10B,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBAEjBwuB,UAAW,CACT30B,MAAO,CAAC,SAAU,WAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aAEjByuB,QAAS,CACP50B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aACfyW,KAAK,GAEPiY,QAAS,CACP70B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEPkY,QAAS,CACP90B,MAAO,CAAC,SAAU,YAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YAEjB4uB,QAAS,CACP/0B,MAAO,CAAC,WACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBACfyW,KAAK,GAEPoY,UAAW,CACTh1B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEP,eAAgB,CACd5c,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,EACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjB8uB,SAAU,CACRj1B,MAAO,CAAC,SAAU,OAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,oBACfyW,KAAK,GAEPsY,QAAS,CACPl1B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,SACfyW,KAAK,GAEPuY,UAAW,CACTn1B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,mBAEjBivB,UAAW,CACTp1B,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,iBAEjBkvB,WAAY,CACVr1B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,WACfyW,KAAK,EACL+I,YAAa,CAAC,uBAEhB,qBAAsB,CACpB3lB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,YACfyW,KAAK,EACLoK,YAAa,cAEfsO,QAAS,CACPt1B,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,EACVpW,UAAW,CAAC,EAAG,gBACfyW,KAAK,GAEP2Y,SAAU,CACRv1B,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,iBAEjBqvB,SAAU,CACRx1B,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAEjB,aAAc,CACZnG,MAAO,CAAC,SAAU,YAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjBsvB,SAAU,CACRz1B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,GAEP8Y,WAAY,CACV11B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cAEjB,cAAe,CACbnG,MAAO,CAAC,MAAO,SACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjB,aAAc,CACZnG,MAAO,CAAC,WAAY,YACpBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,MACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjB,eAAgB,CACdnG,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjB,cAAe,CACbnG,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjB,YAAa,CACXnG,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjB,cAAe,CACbnG,MAAO,CAAC,OAAQ,YAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjB,cAAe,CACbnG,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjB,eAAgB,CACdnG,MAAO,CAAC,QAAS,YACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBAEjBwvB,YAAa,CACX31B,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjByvB,UAAW,CACT51B,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,YAEjB0vB,MAAO,CACL71B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBAEjB2vB,SAAU,CACR91B,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACrDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,qBAEjB4vB,QAAS,CACP/1B,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEPoZ,MAAO,CACLh2B,MAAO,CAAC,MAAO,QACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,UAEjB8vB,WAAY,CACVj2B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eAEjB+vB,SAAU,CACRl2B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEPuZ,SAAU,CACRn2B,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,gBACfwf,YAAa,CAAC,kBAEhByQ,YAAa,CACXp2B,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAEjBkwB,SAAU,CACRr2B,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACrDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,kBAEjBmwB,MAAO,CACLt2B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,kBACfyW,KAAK,GAEP2Z,UAAW,CACTv2B,MAAO,CAAC,QACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,kBACfyW,KAAK,GAEP4Z,OAAQ,CACNx2B,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,SACfyW,KAAK,GAEP6Z,WAAY,CACVz2B,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,mBACfwf,YAAa,CAAC,iBAEhB,eAAgB,CACd3lB,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,cAEf0P,SAAU,CACR12B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBAEjBwwB,QAAS,CACP32B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBACfwf,YAAa,CAAC,iBAEhB,eAAgB,CACd3lB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACpDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBACf6gB,YAAa,WAEf4P,MAAO,CACL52B,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,UACfyW,KAAK,GAEPia,MAAO,CACL72B,MAAO,CAAC,WAAY,YACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,eACfyW,KAAK,GAEPka,OAAQ,CACN92B,MAAO,CAAC,WAAY,YACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBAEjB4wB,UAAW,CACT/2B,MAAO,CAAC,QAAS,YACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YAEjB6wB,OAAQ,CACNh3B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,WACfyW,KAAK,GAEPqa,SAAU,CACRj3B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,WACfyW,KAAK,GAEPsa,OAAQ,CACNl3B,MAAO,CAAC,MAAO,WACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBAEjBgxB,OAAQ,CACNn3B,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,iBACfyW,KAAK,GAEPwa,UAAW,CACTp3B,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,aAEjB,eAAgB,CACdnG,MAAO,CAAC,SAAU,QAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACpDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjB,eAAgB,CACdnG,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjBkxB,WAAY,CACVr3B,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,gBAEjB,cAAe,CACbnG,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KACnDE,SAAU,EACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjBmxB,SAAU,CACRt3B,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEP2a,WAAY,CACVv3B,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,MACVpW,UAAW,CAAC,EAAG,UAEjB,eAAgB,CACdnG,MAAO,CAAC,MAAO,YACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjBqxB,OAAQ,CACNx3B,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEP6a,QAAS,CACPz3B,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,aAEjBuxB,WAAY,CACV13B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEP+a,aAAc,CACZ33B,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACfwf,YAAa,CAAC,oBAAqB,qBAAsB,wBAE3D,oBAAqB,CACnB3lB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,gBAEf,qBAAsB,CACpBhnB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,gBAEf,sBAAuB,CACrBhnB,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,gBAEf4Q,QAAS,CACP53B,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aACfyW,KAAK,GAEPib,UAAW,CACT73B,MAAO,CAAC,UACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEPkb,WAAY,CACV93B,MAAO,CAAC,OACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,EACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEPmb,UAAW,CACT/3B,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,EACVpW,UAAW,CAAC,EAAG,cAEjB,2BAA4B,CAC1BnG,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,UAEf,4BAA6B,CAC3BhnB,MAAO,CAAC,WAAY,QACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,UAEf,6BAA8B,CAC5BhnB,MAAO,CAAC,YACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,UAEf,UAAW,CACThnB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,MACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjB6xB,UAAW,CACTh4B,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBACfyW,KAAK,GAEPqb,SAAU,CACRj4B,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,MACVpW,UAAW,CAAC,EAAG,iBAEjB+xB,UAAW,CACTl4B,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,gBACfyW,KAAK,GAEPub,UAAW,CACTn4B,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,kBACfyW,KAAK,GAEPwb,WAAY,CACVp4B,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,mBAEjBkyB,OAAQ,CACNr4B,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACfyW,KAAK,GAEP0b,OAAQ,CACNt4B,MAAO,CAAC,QAAS,WACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,iBAEjB,eAAgB,CACdnG,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,mBAEjBoyB,QAAS,CACPv4B,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACfyW,KAAK,GAEP4b,QAAS,CACPx4B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,SACfyW,KAAK,GAEP,WAAY,CACV5c,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IACnDE,SAAU,KACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,oBAEjB,gBAAiB,CACfnG,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBACf6gB,YAAa,SACbpK,KAAK,GAEP6b,QAAS,CACPz4B,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,WAx/B2C,CAC5D8V,SAAU,CAAC0J,YAAa,CAAC,mBACzBiG,QAAS,CAACjG,YAAa,CAAC,kBACxB,SAAY,CAACA,YAAa,CAAC,wBAAyB,2BACpD+D,SAAU,CAAC/D,YAAa,CAAC,mBACzB4I,UAAW,CAAC5I,YAAa,CAAC,oBAC1BS,OAAQ,CAACT,YAAa,CAAC,kBACvBpI,UAAW,CAACoI,YAAa,CAAC,oBAC1BqH,OAAQ,CAACrH,YAAa,CAAC,iBACvB9H,UAAW,CAAC8H,YAAa,CAAC,oBAC1BiF,UAAW,CAACjF,YAAa,CAAC,oBAC1BuC,OAAQ,CAACvC,YAAa,CAAC,kBACvB7D,SAAU,CAAC6D,YAAa,CAAC,mBACzBuF,SAAU,CAACvF,YAAa,CAAC,mBACzBmI,QAAS,CAACnI,YAAa,CAAC,kBACxBzD,QAAS,CAACyD,YAAa,CAAC,kBACxBxD,SAAU,CAACvF,KAAK,GAChB4F,WAAY,CAACmD,YAAa,CAAC,qBAC3BhD,SAAU,CAAC/F,KAAK,GAChBgD,QAAS,CAAC+F,YAAa,CAAC,kBACxB8F,QAAS,CAAC9F,YAAa,CAAC,kBACxB+F,MAAO,CAAC/F,YAAa,CAAC,gBACtB,iBAAkB,CAChB3lB,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,YAEf,gBAAiB,CACfhnB,MAAO,CAAC,MAAO,QACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,MACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,WAEf,gBAAiB,CACfhnB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACfwf,YAAa,CAAC,kBAEhB,gBAAiB,CACf3lB,MAAO,CAAC,QAAS,SACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,IACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,iBAEf,yBAA0B,CACxBhnB,MAAO,CAAC,SACRkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,WACf6gB,YAAa,WACbpK,KAAK,GAEP,iBAAkB,CAChB5c,MAAO,CAAC,UAAW,UACnBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YACf6gB,YAAa,YAEf,kBAAmB,CACjBhnB,MAAO,CAAC,QAAS,YACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf6gB,YAAa,aAEf,gBAAiB,CACfhnB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACtDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,YACf6gB,YAAa,UAEf,kBAAmB,CACjBhnB,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,cACf6gB,YAAa,aAEf0R,SAAU,CACR14B,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,cACfwf,YAAa,CAAC,qBAEhB,mBAAoB,CAClB3lB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf6gB,YAAa,YAEf,eAAgB,CACdhnB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,IACrDE,SAAU,MACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,UAEf,kBAAmB,CACjBhnB,MAAO,CAAC,OAAQ,QAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,YACbpK,KAAK,GAEP+b,QAAS,CACP34B,MAAO,CAAC,MAAO,QACfkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,UAEjB,kBAAmB,CACjBnG,MAAO,CAAC,QAAS,YACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,aAEf4R,SAAU,CACR54B,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,IACVpW,UAAW,CAAC,EAAG,iBAEjB,gBAAiB,CACfnG,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,IAAKC,GAAI,IAAK3D,GAAI,KACrDE,SAAU,IACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,YACf6gB,YAAa,UAEf,iBAAkB,CAChBhnB,MAAO,CAAC,OAAQ,UAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,IACVpW,UAAW,CAAC,EAAG,gBACf6gB,YAAa,WACbpK,KAAK,GAEP,iBAAkB,CAChB5c,MAAO,CAAC,QAAS,QACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACnDE,SAAU,KACVpW,UAAW,CAAC,EAAG,WACf6gB,YAAa,YAEf,gBAAiB,CACfhnB,MAAO,CAAC,QAAS,UACjBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,IAAK3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,cACf6gB,YAAa,UACbpK,KAAK,GAEP,gBAAiB,CACf5c,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACVpW,UAAW,CAAC,EAAG,eACf6gB,YAAa,UACbpK,KAAK,GAEPic,SAAU,CACR74B,MAAO,CAAC,WAAY,UACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KAClDE,SAAU,GACVpW,UAAW,CAAC,EAAG,aAEjB,mBAAoB,CAClBnG,MAAO,CAAC,OAAQ,SAChBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IAClDE,SAAU,KACVpW,UAAW,CAAC,EAAG,SACf6gB,YAAa,cAEf8R,SAAU,CACR94B,MAAO,CAAC,SAAU,UAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,IAAK2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,IACVpW,UAAW,CAAC,EAAG,SAEjB,gBAAiB,CACfnG,MAAO,CAAC,WAAY,SACpBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,KACjDE,SAAU,GACV0D,OAAQ,IACR9Z,UAAW,CAAC,EAAG,cACf6gB,YAAa,UACbpK,KAAK,GAEPmc,QAAS,CACP/4B,MAAO,CAAC,SAAU,WAClBkc,GAAI,CAACjjB,GAAI,IAAKkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,IACpDE,SAAU,KACVpW,UAAW,CAAC,EAAG,eAEjB,gBAAiB,CACfnG,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,IAAKC,GAAI,GAAI2D,GAAI,IAAKC,GAAI,GAAI3D,GAAI,KACnDE,SAAU,GACVpW,UAAW,CAAC,EAAG,YACf6gB,YAAa,WAEf,cAAe,CACbhnB,MAAO,CAAC,SAAU,SAClBkc,GAAI,CAACjjB,GAAI,GAAIkjB,GAAI,GAAIC,GAAI,GAAI2D,GAAI,GAAIC,GAAI,GAAI3D,GAAI,IACjDE,SAAU,KACVpW,UAAW,CAAC,EAAG,YACf6gB,YAAa,QACbpK,KAAK,MAgyB2D7X,GAahEC,OAAOC,SAXJ,IAAM+zB,GAAO,WAGlB,SAAAA,EAAYv+B,IAAsBZ,EAAAA,EAAAA,GAAA,KAAAm/B,GAAA,KAFjBv+B,SAAG,EAGlB3C,KAAK2C,IAAMA,CACb,CAUC,OAVAX,EAAAA,EAAAA,GAAAk/B,EAAA,EAAAljC,IAAA,MAAAiE,MAED,SAAIoL,GACF,OAAO8zB,GAAcnhC,KAAK2C,KAAK0K,EACjC,GAAC,CAAArP,IAAAiP,GAAAhL,OAAAsL,EAAAA,EAAAA,KAAAC,MAED,SAAAvL,IAAA,IAAAwL,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmBozB,GAAcnhC,KAAK2C,MAAI,WAAAgL,EAAAK,GAAAL,EAAAG,MAAAtH,KAAC,CAADmH,EAAAE,KAAA,QACtC,OADSR,EAAEM,EAAAK,GAAA/L,MAAA0L,EAAAE,KAAA,EACL7N,KAAKsD,IAAI+J,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAM,OAAA,GAAAhM,EAAA,YAE9Bi/B,CAAA,CAfiB,GAkBdE,IAAMp/B,EAAAA,EAAAA,IAeV,SAAAo/B,EAAY/hC,EAAc4jB,IAAmBlhB,EAAAA,EAAAA,GAAA,KAAAq/B,GAAA,KAdpCjzB,UAAI,OACJd,QAAE,OACFhO,UAAI,OACJ6I,WAAK,OACLm5B,eAAS,OACT5c,cAAQ,EAAW,KACnBK,SAAG,OACHqD,YAAM,OACN0F,iBAAW,OACXqB,iBAAW,OACX7gB,eAAS,EAKhBrO,KAAKmO,KAAO,UACZnO,KAAKqN,GAAKnQ,EAAKmC,GACfW,KAAKX,KAAOA,EAEZ,IAAMgiC,EAAmC,CAAC,EAC1CA,EAAUlgC,GAAK8hB,EAAKmB,GAAGjjB,GACvBkgC,EAAU9gC,IAAM0iB,EAAKmB,GAAGC,GACxBgd,EAAU7gC,IAAMyiB,EAAKmB,GAAGE,GACxB+c,EAAUvgC,IAAM6B,IAAO,EAAIsgB,EAAKmB,GAAG6D,GAAKhF,EAAKmB,GAAGI,GAChD6c,EAAU5gC,IAAMkC,IAAO,EAAIsgB,EAAKmB,GAAG8D,GAAKjF,EAAKmB,GAAGI,GAChD6c,EAAUrgC,IAAMiiB,EAAKmB,GAAGG,GACxBvkB,KAAKqhC,UAAYA,EAEbpe,EAAK4K,cACP7tB,KAAK6tB,YAAc5K,EAAK4K,YACpBlrB,IAAO,IAAM,CAAC,aAAc,WAAWyE,SAASpH,KAAKqN,MACvDrN,KAAK6tB,YAAc7tB,KAAK6tB,YAAYpf,QAAO,SAAA7H,GAAC,OAAKA,EAAE06B,SAAS,QAAQ,IAC/DthC,KAAK6tB,YAAYjuB,SAAQI,KAAK6tB,iBAAchuB,GAC7CG,KAAK6tB,cAAa7tB,KAAK6tB,aAAW0T,EAAAA,GAAAA,GAAO,IAAIxd,IAAI/jB,KAAK6tB,iBAI9DjwB,EAAcoC,KAAMijB,EAAMme,EAAOI,QACnC,IAvCIJ,GAaoBI,QAAU,IAAIzd,IAAI,CAAC,KAAM,gBA+BnD,IAHA,I,GAAMod,GAA+C,GAEjDx+B,GAAM,EACVqD,GAAA,EAAAy7B,GAAsBnG,GAAOt1B,GAAAy7B,GAAA7hC,OAAAoG,KAAE,CAA1B,IAAM07B,GAAOD,GAAAz7B,IACVsI,GAA8B,CAAC,EACrC,IAAK,IAAMqzB,MAAUD,GAAS,CACxB/+B,IAAO,GAAK++B,GAAQC,IAAQvd,GAAGI,WAAWkd,GAAQC,IAAQvd,GAAGI,GACjE,IAAMN,GAAI,IAAIkd,GAAOO,GAAQD,GAAQC,KACrCrzB,GAAI4V,GAAE7W,IAAM6W,EACd,CACAid,GAAcj6B,KAAKoH,IACnB3L,IACF,CCxmTA,IAAM2P,GAAiB,CACrB,MAAO,CACLsvB,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,GAEVghC,OAAQ,CACN,MAAO,EACPA,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,GACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,GAEVS,MAAO,CACL,MAAO,EACPugC,OAAQ,EACRvgC,MAAO,GACPJ,KAAM,GACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,GACRb,IAAK,GACLmB,OAAQ,GACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,IAEVK,KAAM,CACJ,MAAO,EACP2gC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,GACNW,MAAO,GACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,GACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,IAEVgB,MAAO,CACL,MAAO,EACPggC,OAAQ,EACRvgC,MAAO,GACPJ,KAAM,EACNW,MAAO,GACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,IAEVC,SAAU,CACR,MAAO,EACP+gC,OAAQ,EACRvgC,MAAO,GACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,GACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,IAEVW,IAAK,CACH,MAAO,EACPqgC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,GACPf,SAAU,EACVU,IAAK,GACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,GAEVM,OAAQ,CACN,MAAO,EACP0gC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,GACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,GACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,GAEVP,IAAK,CACH,MAAO,EACPuhC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,GACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,GACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,GACVU,QAAS,EACTL,MAAO,GACPR,OAAQ,GAEVY,OAAQ,CACN,MAAO,EACPogC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,GACRF,OAAQ,GACRI,KAAM,GACNX,SAAU,EACVU,QAAS,EACTL,MAAO,GACPR,OAAQ,GAEVU,OAAQ,CACN,MAAO,EACPsgC,OAAQ,EACRvgC,MAAO,GACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,GACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,GAEVc,KAAM,CACJ,MAAO,EACPkgC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,GACRI,KAAM,EACNX,SAAU,GACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,GAEVG,SAAU,CACR,MAAO,EACP6gC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,GACRb,IAAK,GACLmB,OAAQ,GACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,GACTL,MAAO,EACPR,OAAQ,GAEVa,QAAS,CACP,MAAO,EACPmgC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,GACTL,MAAO,EACPR,OAAQ,GAEVQ,MAAO,CACL,MAAO,EACPwgC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,GAEVA,OAAQ,CACN,MAAO,EACPghC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,IAIN2N,GAAiBpP,GAAO,EAAM,CAAC,EAAGmT,GAAK,CAC3C,MAAO,CAAC3R,KAAM,EAAGgB,MAAO,GACxBigC,OAAQ,CAACjhC,KAAM,EAAGgB,MAAO,IACzBN,MAAO,CAACV,KAAM,EAAGgB,MAAO,IACxBV,KAAM,CAACN,KAAM,EAAGgB,MAAO,GACvBC,MAAO,CAACjB,KAAM,EAAGgB,MAAO,GACxBd,SAAU,CAACF,KAAM,EAAGgB,MAAO,GAC3BJ,IAAK,CAACN,KAAM,GAAKN,KAAM,EAAGgB,MAAO,IACjCT,OAAQ,CAACP,KAAM,EAAGgB,MAAO,IACzBtB,IAAK,CAACmB,OAAQ,GAAKb,KAAM,EAAGgB,MAAO,IACnCH,OAAQ,CAACnB,IAAK,EAAGM,KAAM,EAAGgB,MAAO,GACjCL,OAAQ,CAACX,KAAM,EAAGgB,MAAO,GACzBD,KAAM,CAACf,KAAM,EAAGgB,MAAO,IACvBZ,SAAU,CAACJ,KAAM,EAAGgB,MAAO,GAC3BF,QAAS,CAACd,KAAM,EAAGgB,MAAO,IAC1BP,MAAO,CAACK,QAAS,EAAGd,KAAM,GAAKgB,MAAO,IACtCf,OAAQ,CAACD,KAAM,EAAGgB,MAAO,IACzBhB,KAAM,CACJ,MAAO,EACPihC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,EACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,GACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,EACRD,KAAM,GACNgB,MAAO,IAETA,MAAO,CACL,MAAO,EACPigC,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,GACNW,MAAO,GACPf,SAAU,GACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,EACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,EACRD,KAAM,EACNgB,MAAO,MAIL8K,GAAM8B,GAEN7B,GAAM6B,GAEN5B,GAAK4B,GAEL3B,GAAgBzN,GAAO,EAAM,CAAC,EAAGoP,GAAK,CAC1C,MAAO,CAACszB,MAAO,GACfD,OAAQ,CAACC,MAAO,GAChBxgC,MAAO,CAACwgC,MAAO,GACf5gC,KAAM,CAAC4gC,MAAO,GACdjgC,MAAO,CAACigC,MAAO,GACfhhC,SAAU,CAACghC,MAAO,GAClBtgC,IAAK,CAACsgC,MAAO,GACb3gC,OAAQ,CAAC2gC,MAAO,GAChBxhC,IAAK,CAACwhC,MAAO,IACbrgC,OAAQ,CAACqgC,MAAO,GAChBvgC,OAAQ,CAACugC,MAAO,GAChBngC,KAAM,CAACmgC,MAAO,GACd9gC,SAAU,CAAC8gC,MAAO,IAClBpgC,QAAS,CAACogC,MAAO,GACjBzgC,MAAO,CAACO,MAAO,EAAGkgC,MAAO,GACzBjhC,OAAQ,CAACihC,MAAO,GAChBlhC,KAAM,CAACgB,MAAO,EAAGkgC,MAAO,IACxBlgC,MAAO,CAACkgC,MAAO,GACfA,MAAO,CACL,MAAO,EACPD,OAAQ,EACRvgC,MAAO,EACPJ,KAAM,GACNW,MAAO,EACPf,SAAU,EACVU,IAAK,EACLL,OAAQ,EACRb,IAAK,EACLmB,OAAQ,GACRF,OAAQ,EACRI,KAAM,EACNX,SAAU,EACVU,QAAS,EACTL,MAAO,EACPR,OAAQ,EACRD,KAAM,EACNgB,MAAO,GACPkgC,MAAO,KAUEC,GAAa,CAAC,CAAC,EAAGxvB,GAAK/D,GAAK9B,GAAKC,GAAKC,GAAIC,GAN5CA,UAM4DK,GAcnEC,OAAOC,SAuBX,IAnCO,IAAM40B,GAAK,WAGhB,SAAAA,EAAYp/B,IAAsBZ,EAAAA,EAAAA,GAAA,KAAAggC,GAAA,KAFjBp/B,SAAG,EAGlB3C,KAAK2C,IAAMA,CACb,CAWC,OAXAX,EAAAA,EAAAA,GAAA+/B,EAAA,EAAA/jC,IAAA,MAAAiE,MAED,SAAIoL,GAEF,OAAO20B,GAAYhiC,KAAK2C,KAAK0K,EAC/B,GAAC,CAAArP,IAAAiP,GAAAhL,OAAAsL,EAAAA,EAAAA,KAAAC,MAED,SAAAvL,IAAA,IAAAwL,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmBi0B,GAAYhiC,KAAK2C,MAAI,WAAAgL,EAAAK,GAAAL,EAAAG,MAAAtH,KAAC,CAADmH,EAAAE,KAAA,QACpC,OADSR,EAAEM,EAAAK,GAAA/L,MAAA0L,EAAAE,KAAA,EACL7N,KAAKsD,IAAI+J,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAM,OAAA,GAAAhM,EAAA,YAE9B8/B,CAAA,CAhBe,GAmBZE,IAAIjgC,EAAAA,EAAAA,IAMR,SAAAigC,EAAY5iC,EAAc8I,IAAsCpG,EAAAA,EAAAA,GAAA,KAAAkgC,GAAA,KALvD9zB,UAAI,OACJd,QAAE,OACFhO,UAAI,OACJ8I,mBAAa,EAGpBnI,KAAKmO,KAAO,OACZnO,KAAKqN,GAAKnQ,EAAKmC,GACfW,KAAKX,KAAOA,EACZW,KAAKmI,cAAgBA,CACvB,IAGI65B,GAA2C,GAEjDh8B,GAAA,EAAAk8B,GAAwBJ,GAAU97B,GAAAk8B,GAAAtiC,OAAAoG,KAAE,CAA/B,IAAMm8B,GAASD,GAAAl8B,IACZsI,GAA4B,CAAC,EACnC,IAAK,IAAMlK,MAAQ+9B,GAAW,CAC5B,IAAM1wB,GAAI,IAAIwwB,GAAK79B,IAAIg+B,EAAAA,EAAAA,GAAA,GAAMD,GAAU/9B,MACvCkK,GAAImD,GAAEpE,IAAMoE,EACd,CACAuwB,GAAY96B,KAAKoH,GACnB,CCncO,IAAM+zB,GAAkD,CAC7DC,QAAS,CAAC,MAAO,OACjBC,QAAS,CAAC,MAAO,OACjBC,KAAM,CAAC,MAAO,OACdC,MAAO,CAAC,MAAO,OACfC,KAAM,CAAC,MAAO,OACdC,QAAS,CAAC,MAAO,OACjBC,OAAQ,CAAC,MAAO,OAChBC,OAAQ,CAAC,MAAO,OAChBC,MAAO,CAAC,MAAO,OACfC,MAAO,CAAC,MAAO,OACfC,OAAQ,CAAC,MAAO,OAChBC,MAAO,CAAC,MAAO,OACfC,IAAK,CAAC,MAAO,OACbC,OAAQ,CAAC,MAAO,OAChBC,KAAM,CAAC,MAAO,OACdC,OAAQ,CAAC,MAAO,OAChBC,MAAO,CAAC,MAAO,OACfC,QAAS,CAAC,MAAO,OACjBC,MAAO,CAAC,MAAO,OACfC,OAAQ,CAAC,MAAO,OAChBC,KAAM,CAAC,MAAO,OACdC,QAAS,CAAC,MAAO,OACjBC,MAAO,CAAC,MAAO,OACfC,QAAS,CAAC,MAAO,OACjBC,MAAO,CAAC,MAAO,QAGJC,GAAO,SAAA92B,GAAA,SAAA82B,KAAAhiC,EAAAA,EAAAA,GAAA,KAAAgiC,EAAA,CASjB,OATiB/hC,EAAAA,EAAAA,GAAA+hC,EAAA,EAAA/lC,IAAA,MAAAiE,MAClB,SAAIoL,GACF,OAAO22B,GAAc32B,EACvB,GAAC,CAAArP,IAAAiP,EAAAhL,OAAAsL,EAAAA,EAAAA,KAAAC,MAED,SAAAvL,IAAA,IAAAwL,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmBi2B,IAAa,WAAAr2B,EAAAK,GAAAL,EAAAG,MAAAtH,KAAC,CAADmH,EAAAE,KAAA,QAC5B,OADSR,EAAEM,EAAAK,GAAA/L,MAAA0L,EAAAE,KAAA,EACL7N,KAAKsD,IAAI+J,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAM,OAAA,GAAAhM,EAAA,YAE9B8hC,CAAA,CATiB,CAKhB72B,OAAOC,UAOL82B,IAAMjiC,EAAAA,EAAAA,IAOV,SAAAiiC,EAAY5kC,EAAYsJ,GAAwC,IAADK,GAAA5C,EAAAA,EAAAA,GAAAuC,EAAA,GAApCpF,EAAIyF,EAAA,GAAExF,EAAKwF,EAAA,IAAAjH,EAAAA,EAAAA,GAAA,KAAAkiC,GAAA,KAN7B91B,UAAI,OACJd,QAAE,OACFhO,UAAI,OACJkE,UAAI,OACJC,WAAK,EAGZxD,KAAKmO,KAAO,SACZnO,KAAKqN,GAAKnQ,EAAKmC,GACfW,KAAKX,KAAOA,EACZW,KAAKuD,KAAOA,EACZvD,KAAKwD,MAAQA,CACf,IAGIwgC,GAAwC,CAAC,EAE/C,IAAK,IAAMjhC,MAAUs/B,GAAS,CAC5B,IAAM5+B,GAAI,IAAIwgC,GAAOlhC,GAAQs/B,GAAQt/B,KACrCihC,GAAcvgC,GAAE4J,IAAM5J,EACxB,CCvDO,IAAMygC,GAA6B,wBAAApiC,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CAGvC,OAHuCE,EAAAA,EAAAA,GAAAF,EAAA,EAAA9D,IAAA,MAAAiE,MACxC,SAAIU,GACF,OAAO,IAAIwhC,GAAWxhC,EACxB,KAACb,CAAA,CAH0C,IAMvCqiC,IAAUniC,EAAAA,EAAAA,IAUd,SAAAmiC,EAAYnhC,IAAsBjB,EAAAA,EAAAA,GAAA,KAAAoiC,GAAA,KATlCnhC,SAAG,OAEHqL,eAAS,OACTgE,WAAK,OACL4R,WAAK,OACLyd,aAAO,OACPx5B,WAAK,OACL/E,aAAO,EAGLnD,KAAKgD,IAAMA,EAEXhD,KAAKqO,UAAY,IAAIjB,GAAUpK,GAC/BhD,KAAKqS,MAAQ,IAAIR,GAAM7O,GACvBhD,KAAKikB,MAAQ,IAAInB,GAAM9f,GACvBhD,KAAK0hC,QAAU,IAAIR,GAAQl+B,GAC3BhD,KAAKkI,MAAQ,IAAI65B,GAAM/+B,GACvBhD,KAAKmD,QAAU,IAAI4gC,EACrB,IC/BWK,GAAK,WAmBhB,SAAAA,IAA+C,IAAnCx/B,EAA2BjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACoC,EAAAA,EAAAA,GAAA,KAAAqiC,GAAA,KAlB5CC,cAAQ,OACRx9B,aAAO,OACPC,aAAO,OACPw9B,iBAAW,OACXC,kBAAY,OACZ1/B,eAAS,OACT2/B,iBAAW,OACXC,iBAAW,OACXC,gBAAU,OACVC,mBAAa,OACbC,mBAAa,OACbC,qBAAe,OACfC,oBAAc,OACdC,iBAAW,OACXC,iBAAW,OACXr/B,kBAAY,OACZC,kBAAY,EAGV5F,KAAKqkC,SAAWz/B,EAAMy/B,UAAY,UAClCrkC,KAAK8G,QAAUlC,EAAMkC,QACrB9G,KAAK6G,QAAUjC,EAAMiC,QACrB7G,KAAKskC,cAAgB1/B,EAAM0/B,YAC3BtkC,KAAKukC,eAAiB3/B,EAAM2/B,aAC5BvkC,KAAK6E,YAAcD,EAAMC,UACzB7E,KAAKwkC,YAAc5/B,EAAM4/B,cAAe,EACxCxkC,KAAKykC,YAAc7/B,EAAM6/B,cAAe,EACxCzkC,KAAK0kC,WAAa9/B,EAAM8/B,aAAc,EACtC1kC,KAAK2kC,cAAgB//B,EAAM+/B,gBAAiB,EAC5C3kC,KAAK4kC,cAAgBhgC,EAAMggC,gBAAiB,EAC5C5kC,KAAK6kC,gBAAkBjgC,EAAMigC,kBAAmB,EAChD7kC,KAAK8kC,eAAiBlgC,EAAMkgC,iBAAkB,EAC9C9kC,KAAK+kC,YAAcngC,EAAMmgC,cAAe,EACxC/kC,KAAKglC,YAAcpgC,EAAMogC,cAAe,EAExChlC,KAAK2F,aAAe,IAAIs/B,GAAKrgC,EAAMe,cAAgB,CAAC,GACpD3F,KAAK4F,aAAe,IAAIq/B,GAAKrgC,EAAMgB,cAAgB,CAAC,EACtD,CAmCC,OAnCA5D,EAAAA,EAAAA,GAAAoiC,EAAA,EAAApmC,IAAA,aAAAiE,MAED,WACE,GAAIjC,KAAKglC,YAAe,OAAO,EAAQ,QAAAn/B,EAAAlG,UAAAC,OAD3BslC,EAAQ,IAAAjlC,MAAA4F,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARm/B,EAAQn/B,GAAApG,UAAAoG,GAEpB,SAAU/F,KAAK6G,UAAWq+B,EAAS99B,SAASpH,KAAK6G,SACnD,GAAC,CAAA7I,IAAA,aAAAiE,MAED,WAAoC,IAAD,IAAAkjC,EAAAxlC,UAAAC,OAArBwlC,EAAQ,IAAAnlC,MAAAklC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARD,EAAQC,GAAA1lC,UAAA0lC,GACpB,SAAUrlC,KAAK8G,UAAWs+B,EAASh+B,SAASpH,KAAK8G,SACnD,GAAC,CAAA9I,IAAA,OAAAiE,MAED,WAAQ,IAAD0G,EACoC,CAAC3I,KAAK4F,aAAc5F,KAAK2F,cAClE,OADC3F,KAAK2F,aAAYgD,EAAA,GAAE3I,KAAK4F,aAAY+C,EAAA,GAC9B3I,IACT,GAAC,CAAAhC,IAAA,QAAAiE,MAED,WACE,OAAO,IAAImiC,EAAM,CACfC,SAAUrkC,KAAKqkC,SACfx9B,QAAS7G,KAAK6G,QACdC,QAAS9G,KAAK8G,QACdw9B,YAAatkC,KAAKskC,YAClBC,aAAcvkC,KAAKukC,aACnB1/B,UAAW7E,KAAK6E,UAChBc,aAAc3F,KAAK2F,aACnBC,aAAc5F,KAAK4F,aACnB4+B,YAAaxkC,KAAKwkC,YAClBE,WAAY1kC,KAAK0kC,WACjBD,YAAazkC,KAAKykC,YAClBE,cAAe3kC,KAAK2kC,cACpBC,cAAe5kC,KAAK4kC,cACpBC,gBAAiB7kC,KAAK6kC,gBACtBC,eAAgB9kC,KAAK8kC,eACrBE,YAAahlC,KAAKglC,aAEtB,KAACZ,CAAA,CAzEe,GA4ELa,GAAI,WA+Bf,SAAAA,IAAoC,IAAxB5+B,EAAgB1G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACoC,EAAAA,EAAAA,GAAA,KAAAkjC,GAAA,KA9BjCK,YAAM,OACNC,gBAAU,OACVC,cAAQ,OACRC,cAAQ,OACRC,eAAS,OACTC,eAAS,OACTC,UAAI,OACJv8B,eAAS,OACTC,mBAAa,OACbu8B,kBAAY,OACZC,iBAAW,OACXC,cAAQ,OACRC,iBAAW,OACX/+B,gBAAU,OACVg/B,mBAAa,OACbC,kBAAY,OACZC,kBAAY,OACZC,mBAAa,OACbC,kBAAY,OACZ98B,kBAAY,OACZ+8B,eAAS,OACTC,iBAAW,OACXC,gBAAU,OACVC,mBAAa,OACbC,iBAAW,OACXC,eAAS,OACTC,YAAM,OACNC,iBAAW,OACXC,iBAAW,EAGT9mC,KAAKslC,OAASj/B,EAAKi/B,QAAU,EAC7BtlC,KAAKulC,aAAel/B,EAAKk/B,WACzBvlC,KAAKwlC,WAAan/B,EAAKm/B,SACvBxlC,KAAKylC,WAAap/B,EAAKo/B,SACvBzlC,KAAK0lC,YAAcr/B,EAAKq/B,UACxB1lC,KAAK2lC,YAAct/B,EAAKs/B,UACxB3lC,KAAK4lC,OAASv/B,EAAKu/B,KACnB5lC,KAAKqJ,YAAchD,EAAKgD,UACxBrJ,KAAKsJ,gBAAkBjD,EAAKiD,cAC5BtJ,KAAK6lC,eAAiBx/B,EAAKw/B,aAC3B7lC,KAAK8lC,cAAgBz/B,EAAKy/B,YAC1B9lC,KAAK+lC,WAAa1/B,EAAK0/B,SACvB/lC,KAAKgmC,cAAgB3/B,EAAK2/B,YAC1BhmC,KAAKiH,aAAeZ,EAAKY,WACzBjH,KAAKimC,gBAAkB5/B,EAAK4/B,cAC5BjmC,KAAKkmC,eAAiB7/B,EAAK6/B,aAC3BlmC,KAAKmmC,eAAiB9/B,EAAK8/B,aAC3BnmC,KAAKomC,gBAAkB//B,EAAK+/B,cAC5BpmC,KAAKqmC,aAAehgC,EAAKggC,cAAgB,EACzCrmC,KAAKuJ,eAAiBlD,EAAKkD,aAC3BvJ,KAAKsmC,YAAcjgC,EAAKigC,UACxBtmC,KAAKumC,cAAgBlgC,EAAKkgC,YAC1BvmC,KAAKwmC,WAAangC,EAAKmgC,YAAc,EACrCxmC,KAAKymC,cAAgBpgC,EAAKogC,eAAiB,EAC3CzmC,KAAK0mC,YAAcrgC,EAAKqgC,YACxB1mC,KAAK2mC,YAActgC,EAAKsgC,UACxB3mC,KAAK4mC,SAAWvgC,EAAKugC,OACrB5mC,KAAK6mC,cAAgBxgC,EAAKwgC,YAC1B7mC,KAAK8mC,cAAgBzgC,EAAKygC,WAC5B,CAIC,OAJA9kC,EAAAA,EAAAA,GAAAijC,EAAA,EAAAjnC,IAAA,QAAAiE,MAED,WACE,OAAO,IAAIgjC,EAAKjlC,KAClB,KAACilC,CAAA,CAjEc,GC5EJ8B,GAA8C,CACzD,gBAAiB,MACjB,cAAe,MACf,aAAc,MACd,eAAgB,OAGX,SAASC,GAAiBx+B,GAC/B,OAAQA,GACR,IAAK,cACL,IAAK,cACH,MAAO,SACT,IAAK,cACL,IAAK,gBACH,MAAO,OACT,IAAK,cACL,IAAK,YACH,MAAO,SACT,IAAK,aACL,IAAK,aACH,MAAO,WACT,IAAK,cACL,IAAK,WACH,MAAO,OACT,IAAK,eACL,IAAK,iBACH,MAAO,MACT,IAAK,eACL,IAAK,gBACH,MAAO,MACT,IAAK,aACL,IAAK,aACH,MAAO,QACT,IAAK,eACL,IAAK,eACL,IAAK,eACH,MAAO,QACT,IAAK,aACL,IAAK,cACL,IAAK,gBACH,MAAO,UACT,IAAK,cACH,MAAO,QACT,IAAK,YACL,IAAK,aACH,MAAO,SACT,IAAK,eACL,IAAK,cACL,IAAK,eACL,IAAK,eACH,MAAO,QACT,IAAK,eACL,IAAK,YACH,MAAO,QACT,IAAK,cACL,IAAK,eACL,IAAK,aACH,MAAO,OACT,IAAK,cACL,IAAK,cACH,MAAO,SACT,IAAK,YACL,IAAK,SACH,MAAO,WACT,IAAK,aACL,IAAK,WACL,IAAK,eACH,MAAO,SACT,QACE,OAEJ,CAEO,SAASy+B,GAAmB90B,GACjC,OAAQA,GACR,IAAK,eACH,MAAO,SACT,IAAK,aACH,MAAO,OACT,IAAK,eACH,MAAO,QACT,IAAK,cACH,MAAO,WACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,MACT,IAAK,eACH,MAAO,WACT,IAAK,cACH,MAAO,SACT,IAAK,cACH,MAAO,SACT,IAAK,aACH,MAAO,SACT,IAAK,eACH,MAAO,UACT,IAAK,cACH,MAAO,MACT,IAAK,eACH,MAAO,OACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,SACT,IAAK,eACH,MAAO,OACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,QACT,QACE,OAEJ,CAEA,IAAM+0B,GAAY,IAAInjB,IAAI,CACxB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGIojB,GAAY,IAAIpjB,IAAI,CACxB,aACA,eACA,cACA,cACA,eACA,YACA,cACA,eACA,YACA,kBACA,kBACA,mBACA,kBACA,eACA,aACA,eACA,cACA,YACA,eACA,OACA,OACA,SAGIqjB,GAAW,IAAIrjB,IAAI,CACvB,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGIsjB,GAAW,IAAItjB,IAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAE5DujB,GAAW,IAAIvjB,IAAI,CACvB,eACA,iBACA,cACA,cACA,mBACA,kBACA,aACA,aACA,aACA,cACA,aACA,aACA,YACA,SACA,gBACA,aACA,cACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGIwjB,GAAW,IAAIxjB,IAAI,CACvB,cACA,cACA,eACA,aACA,aACA,eACA,aACA,iBAGIyjB,GAAW,IAAIzjB,IAAI,CACvB,cACA,YACA,YACA,OACA,eACA,cACA,eACA,QACA,mBACA,qBAEI0jB,GAAW,IAAI1jB,IAAI,CACvB,cACA,aACA,eACA,gBACA,eACA,WACA,iBACA,YACA,cACA,WACA,aACA,aACA,SACA,aACA,eACA,eACA,iBACA,aACA,aACA,WACA,YACA,cACA,aACA,eACA,YACA,gBACA,eACA,gBACA,aACA,aACA,aACA,YACA,gBACA,WACA,cACA,cACA,eACA,cACA,YACA,kBACA,gBACA,eACA,WACA,eAEI2jB,GAAW,IAAI3jB,IAAI,CACvB,cACA,cACA,cACA,eACA,eACA,eACA,eACA,gBACA,cACA,eACA,aACA,aACA,eACA,cACA,eACA,cACA,YACA,aACA,cACA,eACA,aACA,gBACA,aACA,cACA,aACA,eACA,cACA,eACA,eACA,WACA,eACA,cACA,eACA,eACA,cACA,aACA,aACA,gBACA,cACA,YACA,cACA,aACA,mBACA,eACA,aACA,YACA,eACA,YACA,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAIK,SAAS4jB,GAAcn/B,GAC5B,OAAKA,EACD,CAAC,YAAa,OAAQ,QAAQpB,SAASoB,GAAc,IACrD0+B,GAAU7oC,IAAImK,GAAc,GAC5B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQpB,SAASoB,GAAc,IAChE2+B,GAAU9oC,IAAImK,GAAc,IAC5B,CAAC,OAAQ,OAAQ,OAAQ,QAAQpB,SAASoB,GAAc,GACxDA,EAAKpB,SAAS,UAAYggC,GAAS/oC,IAAImK,GAAc,GACrD6+B,GAAShpC,IAAImK,GAAc,GAC3B8+B,GAASjpC,IAAImK,GAAc,GAC3B++B,GAASlpC,IAAImK,GAAc,GAC3Bg/B,GAASnpC,IAAImK,GAAc,GAC3B,CAAC,aAAc,aAAc,gBAAgBpB,SAASoB,GAAc,GACpE,CAAC,WAAY,WAAY,eAAepB,SAASoB,GAAc,GAC/Di/B,GAASppC,IAAImK,GAAc,GAClB,SAATA,EAAwB,GACxBA,EAAKpB,SAAS,UAAYsgC,GAASrpC,IAAImK,GAAc,GAClD,EAhBW,CAiBpB,CAEO,SAASo/B,GAAejlC,EAAiB6F,GAAe,IAADq/B,EACtDC,EAAgC,QAA5BD,EAAGllC,EAAI0P,MAAM/O,IAAIpG,EAAKsL,WAAM,IAAAq/B,OAAA,EAAzBA,EAA2B31B,YACxC,OAAO41B,EAAO,CAACr2B,EAAGq2B,EAAK1jC,KAAMsN,EAAGo2B,EAAKh9B,WAAa,CAAC2G,EAAG,SAAsBC,EAAG,EACjF,CAEO,SAASq2B,GAAev/B,GAC7B,OAAQA,GACR,IAAK,aACH,MAAO,OACT,IAAK,cACH,MAAO,MACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,WACT,QACE,OAEJ,CClWO,SAASw/B,GACdrlC,EACA6C,EACAC,EACAsC,EACAnD,EACAqjC,EACAC,GAGC,IAFDC,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACXpC,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAEHyoC,EAA+BC,GAAYJ,GAAOK,GAAAliC,EAAAA,EAAAA,GAAAgiC,EAAA,GAA3CG,EAASD,EAAA,GAAEE,EAASF,EAAA,GACrBnjC,GAA4B,kBAAdojC,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMxgC,EAAK0gC,KACvFrjC,GAA4B,kBAAdojC,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMzgC,EAAK0gC,KAEvFC,EAAaC,GAAUR,EAAUhjC,EAAKM,EAASmjC,SAC/CC,EAAaF,GAAUR,EAAU/iC,EAAKK,EAASmjC,SAE/C9+B,EA4wBR,SAA0Bg/B,EAAsBtjC,EAAmBC,GACjE,IAAAsjC,EA8IF,SAA8BvjC,EAAmBC,GAC/C,GAAID,EAAS1C,QAAU2C,EAAS3C,MAC9B,MAAO,CACc,MAAnB0C,EAAS1C,MAAgB,GAAE,OAAAX,OAAUqD,EAAS1C,OAC3B,MAAnB2C,EAAS3C,MAAgB,GAAE,OAAAX,OAAUsD,EAAS3C,QAKlD,IAAMkmC,EAAQ,CAAC,IAAK,GAAI,GAAG5hC,SAAS5B,EAAS1C,OACvCA,EAAQkmC,EAAQ,GAAE,OAAA7mC,OAAUqD,EAAS1C,OAC3C,MAAO,CAACA,EAAOA,EACjB,CA1JyCmmC,CAAqBzjC,EAAUC,GAASyjC,GAAA9iC,EAAAA,EAAAA,GAAA2iC,EAAA,GAAxEI,EAAaD,EAAA,GAAEE,EAAaF,EAAA,GAC/BG,EAAS,GACTP,EAAYQ,cACVR,EAAYQ,YAAc,IAC5BD,GAAU,KAEZA,GAAUP,EAAYQ,YAAc,KAEtCD,EAASE,GAAYF,EAAQF,GAC7BE,EAASE,GAAYF,EAAQP,EAAYU,WACzCH,EAASE,GAAYF,EAAQP,EAAY9+B,cACzCq/B,EAASE,GAAYF,EAAQP,EAAY3+B,iBACzCk/B,EAASE,GAAYF,EAAQP,EAAYW,SACrCX,EAAYv9B,WACd89B,GAAU,WAERP,EAAYY,gBACdL,GAAU9mC,KAAK4C,IAAI,EAAG2jC,EAAYY,eAAc,IAAAvnC,OACZ,IAA9B2mC,EAAYY,cAAsB,OAAS,SAAQ,cAEvDZ,EAAYa,eACdN,GAAM,QAAAlnC,OAAY2mC,EAAYa,aAAY,MAExCb,EAAYnE,gBACd0E,GAAU,kBAERP,EAAYlE,gBACdyE,GAAU,kBAEZA,GAAUP,EAAYc,aAAe,IACjCd,EAAY7C,gBACdoD,GAAU,iBAERP,EAAY5C,eACdmD,GAAU,cAERP,EAAYe,wBACdR,GAAU,cAERP,EAAYgB,uBACdT,GAAU,gCAERP,EAAYxC,YACd+C,GAAU,qBAERP,EAAYvC,cACd8C,GAAU,wBAETP,EAAYtC,aACb6C,GAAM,QAAAlnC,OAAY2mC,EAAYtC,WAAU,gBAAArkC,OAA0C,IAA3B2mC,EAAYtC,WAAmB,QAAU,SAAQ,MAEvGsC,EAAYrC,gBACb4C,GAAM,QAAAlnC,OAAY2mC,EAAYrC,eAAatkC,OAAGqD,EAASR,WAAW,iBAAmB,SAAW,GAAE,kBAAA7C,OAA+C,IAA9B2mC,EAAYrC,cAAsB,IAAM,OAEzJqC,EAAYpC,cACd2C,GAAU,uBAERP,EAAYnC,YACd0C,GAAU,aAEZA,GAAUP,EAAYiB,SAAW,IAC7BjB,EAAYkB,QAAUlB,EAAYmB,SACpCZ,GAAU,IAAMP,EAAYkB,OAAS,OAASlB,EAAYmB,SAAW,KAC5DnB,EAAYkB,OACrBX,GAAU,IAAMP,EAAYkB,OAAS,QAC5BlB,EAAYmB,WACrBZ,GAAU,IAAMP,EAAYmB,SAAW,MAErCnB,EAAYL,OACdY,GAAU,IAAMP,EAAYL,KAAO,WAErCY,EAASE,GAAYF,EAAQP,EAAYoB,WACzCb,GAAU,OACNP,EAAYqB,eACVrB,EAAYqB,aAAe,IAC7Bd,GAAU,KAEZA,GAAUP,EAAYqB,aAAe,KAEvCd,EAASE,GAAYF,EAAQD,GAC7BC,EAASE,GAAYF,EAAQP,EAAYsB,OACrCtB,EAAYuB,aACdhB,GAAU,KAAOP,EAAYuB,WAAa,KAE5ChB,EAASE,GAAYF,EAAQP,EAAY1+B,cACzCi/B,EAASE,GAAYF,EAAQP,EAAY7+B,iBACrC6+B,EAAYjE,kBACdwE,GAAU,oBAERP,EAAYhE,iBACduE,GAAU,mBAERP,EAAYhD,cACduD,GAAU,cAERP,EAAYwB,sBACdjB,GAAU,YAERP,EAAYyB,eACdlB,GAAM,QAAAlnC,OAAY2mC,EAAYyB,aAAY,MAE5ClB,GAAUP,EAAY0B,aAClB1B,EAAYjiC,SAAWiiC,EAAYhiC,UAE5BgiC,EAAYjiC,QACrBwiC,GAAU,OAASP,EAAYjiC,QACtBiiC,EAAYhiC,UACrBuiC,GAAU,OAASP,EAAYhiC,QAAU,aAEvCgiC,EAAYz/B,UACdggC,GAAU,mBACDP,EAAYx/B,gBACrB+/B,GAAU,yBAERP,EAAYjD,eACXiD,EAAYz/B,WAAay/B,EAAYx/B,cACpC+/B,GAAU,iBAEVA,GAAU,sBAGZP,EAAY2B,uBACdpB,GAAU,+BAERP,EAAY1C,gBACdiD,GAAU,gCAERP,EAAYzC,eACdgD,GAAM,SAAAlnC,OAAa2mC,EAAYzC,aAAY,KAAAlkC,OAAI2mC,EAAYzC,aAAe,EAAI,UAAY,SAAQ,iBAAAlkC,OAA8C,IAA9B2mC,EAAYrC,cAAsB,GAAK,MAEvJqC,EAAYv/B,eACd8/B,GAAU,+BAERP,EAAY4B,aACdrB,GAAU,sBAERP,EAAYvE,eACd8E,GAAU,mBAEZ,OAAOA,CACT,CAz5BesB,CAAiBzC,EAAS1iC,EAAUC,GAC3CmlC,EAAU,GAAAzoC,OAAMgD,EAAG,KAAAhD,OAAIiD,EAAG,MAAAjD,OAAKumC,EAAU,OAAAvmC,OAAM0mC,GAAU1mC,OAAGgmC,GAAQhmC,OA4W5E,SAA+BsD,GAC3B,GAAGA,EAASolC,eAAiB,IACzB,MAAM,OAAN1oC,QAKqBF,EALYwD,EAASolC,eAAe,IAKvBC,EAL4B,GAM1DC,WAAW9oC,GAAO+oC,QAASF,IANiC,aAKxE,IAA6B7oC,EAAa6oC,EAHtC,MAAO,EACX,CAjX+EG,CAAsBxlC,GAAS,KAE5G,GAAsB,WAAlBsC,EAAKwC,WAA0BxC,EAAKN,MAAM,gBAAiB,MAAM,GAANtF,OAAU2H,EAAI,MAAA3H,OAAKyoC,GAClF,IAAMM,EAAeC,GAAYxoC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAOqjC,EAAQ1qC,GAAKJ,KACpF,OAAO+tC,EAAY,GAAA/oC,OAAM2H,EAAI,MAAA3H,OAAKyoC,EAAU,QAAAzoC,OAAO+oC,GAAY,GAAA/oC,OAAQ2H,EAAI,MAAA3H,OAAKyoC,EAClF,CAwBO,SAASQ,GACdzoC,EACA6C,EACAC,EACAsC,EACAkgC,GAEC,IADDE,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEX0rC,EAA+BhD,GAAYJ,GAAOqD,GAAAllC,EAAAA,EAAAA,GAAAilC,EAAA,GAA3C9C,EAAS+C,EAAA,GAAE9C,EAAS8C,EAAA,GACrBC,EAA4B,kBAAdhD,EAAyB,CAACA,GAAaA,EACrDiD,EAA4B,kBAAdhD,EAAyB,CAACA,GAAaA,EAErDiD,EAAW,CAAC,EAAG,GACjBtuC,EAAO,GAELuuC,EACQ,IAAZ/oC,EAAIK,KAAa+E,EAAKN,MAAM,cAAe,gBAC7C,GAAIjC,EAASV,QAAQ,gBAAkB4mC,EAErC,IADA,IAAMtmC,EAAM7C,KAAKopC,MAAMlmC,EAASmjC,QAAU,GACjC9oC,EAAI,EAAGA,EAAIyrC,EAAK3rC,OAAQE,IAC/B2rC,EAAS,IAAMlpC,KAAK4C,IAAI5C,KAAKopC,MAAMJ,EAAKzrC,GAAKiI,EAAK0gC,KAAO,GAAIrjC,GAC7DqmC,EAAS,IAAMlpC,KAAK4C,IAAI5C,KAAKopC,MAAMH,EAAK1rC,GAAKiI,EAAK0gC,KAAO,GAAIrjC,GAQjE,GAJI2C,EAAKN,MAAM,kBACbgkC,EAAS,GAAKA,EAAS,GAAKlpC,KAAKopC,MAAMnmC,EAASojC,QAAU,IAGxD7gC,EAAK0K,MAGP,IAFA,IAAMm5B,EAAgB7jC,EAAK0K,MAAM,GAAK1K,EAAK0K,MAAM,GAC3CrN,EAAM7C,KAAKopC,MAAMlmC,EAASmjC,QAAUgD,GACjC9rC,EAAI,EAAGA,EAAIyrC,EAAK3rC,OAAQE,IAAK,CACpC,IAAM+rC,EAAQ,CAACN,EAAKzrC,GAAI0rC,EAAK1rC,IAC7B,IAAK,IAAMgsC,KAAKL,EAAU,CACxB,IAAIM,EAAUxpC,KAAKopC,MAAME,EAAMC,GAAKF,GAChCpmC,EAASV,QAAQ,cAAainC,EAAUxpC,KAAKypC,MAAgB,KAAVD,EAAiB,OACxEN,EAASK,IAAMvpC,KAAK4C,IAAI4mC,EAAUhkC,EAAK0gC,KAAMrjC,EAC/C,CACF,CAGF,GAAoB,IAAhBqmC,EAAS,GAAU,MAAO,CAACA,SAAAA,EAAUtuC,KAAAA,GAEzC,IAAM8uC,EAAqBtD,GAAUR,EAAUsD,EAAS,GAAIjmC,EAASojC,SAC/DsD,EAAqBvD,GAAUR,EAAUsD,EAAS,GAAIjmC,EAASojC,SAGrE,MAAO,CAAC6C,SAAAA,EAAUtuC,KADlBA,EAAI,GAAAgF,OAAM8pC,EAAkB,OAAA9pC,OAAM+pC,GAAkB/pC,OAAGgmC,EAAQ,cAEjE,CAGO,SAASgE,GACdxpC,EACA6C,EACAC,EACAsC,EACAkgC,GAEC,IADDE,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEXysC,EAA+B/D,GAAYJ,GAAOoE,GAAAjmC,EAAAA,EAAAA,GAAAgmC,EAAA,GAA3C7D,EAAS8D,EAAA,GAAE7D,EAAS6D,EAAA,GACrBlnC,GAA4B,kBAAdojC,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMxgC,EAAK0gC,KACvFrjC,GAA4B,kBAAdojC,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMzgC,EAAK0gC,KAEzF90B,EAAoC,CAAC,EAAG,GACxCxW,EAAO,GAELmvC,EAAiB/D,EAAY9iC,EAAS8mC,SAAW/D,EAAY/iC,EAAS8mC,QAC5E,GAAIxkC,EAAK4L,OAAQ,CACf,IACI64B,EAAiBC,EADfvnC,EAAO6C,EAAK4L,OAAO,GAAK5L,EAAK4L,OAAO,GAAM,IAE5C24B,GACFE,EACE7D,GAAUR,EAAU1iC,EAAS8mC,QAAUrnC,EAAKM,EAASojC,QAAS,KAChE6D,EACE9D,GAAUR,EAAU1iC,EAAS8mC,QAAUrnC,EAAKM,EAASojC,QAAS,OAEhE4D,EAAkB7D,GAChBR,EAAU5lC,KAAK4C,IAAIA,EAAKM,EAAS8mC,SAAWrnC,EAAKM,EAASojC,QAAS,KAErE6D,EAAkB9D,GAChBR,EAAU5lC,KAAK4C,IAAIC,EAAKK,EAAS8mC,SAAWrnC,EAAKM,EAASojC,QAAS,MAGlEpjC,EAASR,WAAW,eACvB2O,EAAS,CAAC64B,EAAiBC,GAC3BtvC,EAAI,GAAAgF,OAAMqqC,EAAe,OAAArqC,OAAMsqC,GAAetqC,OAAGgmC,EAAQ,kBAE7D,MAAO,GAAIpgC,EAAKsM,eAAgB,CAC9B,IAEIm4B,EAAiBC,EAFfC,EAA4B,IAAZ/pC,EAAIK,IAAY,KAAOL,EAAIK,KAAO,EAAI,GAAK,EAkBjE,OAfIspC,GAA8B,IAAZ3pC,EAAIK,KACxBwpC,EACE7D,GAAUR,EAAU1iC,EAAS8mC,QAAUG,EAAelnC,EAASojC,QAAS,KAC1E6D,EACE9D,GAAUR,EAAU1iC,EAAS8mC,QAAUG,EAAelnC,EAASojC,QAAS,OAE1E4D,EAAkB7D,GAChBR,EAAU5lC,KAAK4C,IAAIA,EAAKM,EAASmjC,SAAW8D,EAAelnC,EAASojC,QAAS,KAE/E6D,EAAkB9D,GAChBR,EAAU5lC,KAAK4C,IAAIC,EAAKK,EAASmjC,SAAW8D,EAAelnC,EAASojC,QAAS,MAIjFj1B,EAAS,CAAC64B,EAAiBC,GACnB9pC,EAAIK,KACZ,KAAK,EACH2Q,EAASg1B,GAAUR,EAAU,EAAG3iC,EAASojC,SACzCzrC,EAAO,qBACP,MACF,KAAK,EAAG,KAAK,EAAG,KAAK,EACnB,GAAIsI,EAASV,QAAQ,SACnB,GAAgB,IAAZpC,EAAIK,IAAW,CACjB,IAAM2pC,EAAkBpqC,KAAKC,MAA2B,GAAnBiD,EAASmjC,QAAiBpjC,EAASojC,QAAW,KACnFj1B,EAAsB,MAAbw0B,EAAmBwE,EAAkBpqC,KAAKC,MAAOmqC,EAAkB,IAAO,IACnFxvC,EAAI,GAAAgF,OAAMwqC,EAAe,iBAC3B,MACEh5B,EAAS,EACTxW,EAAO,sCAGTA,EAAI,GAAAgF,OAAMqqC,EAAe,OAAArqC,OAAMsqC,GAAetqC,OAAGgmC,EAAQ,yBAE3D,MACF,QACEx0B,EAAsB,MAAbw0B,EAAmB,GAAK,GACjChrC,EAAO,mBAEX,MAAW4K,EAAK6U,gBACdjJ,EAAsB,MAAbw0B,EAAmB,GAAK,GACjChrC,EAAO,sBAGS,IAAZwF,EAAIK,MAAW7F,GAAQ,oBAClB4K,EAAKkZ,kBACdtN,EAAsB,MAAbw0B,EAAmB,GAAK,GACjChrC,EAAO,qBAGT,MAAO,CAACwW,OAAAA,EAAQxW,KAAAA,EAClB,CAEO,SAASguC,GACdxoC,EACA6C,EACAC,EACAsC,EACAnD,EACAqjC,GAEC,IADD1qC,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAGH,GADAsoC,EA0JF,SAAiBA,GAEf,GAAsB,kBAAXA,EAAqB,MAAO,CAACA,GAExC,GAAIA,EAAOroC,OAAS,EAElB,OADIqoC,EAAO,GAAKA,EAAOA,EAAOroC,OAAS,KAAIqoC,EAASA,EAAO2E,QAAQr7B,QAC5D02B,EAGT,GAAyB,kBAAdA,EAAO,IAAwC,kBAAdA,EAAO,GACjD,MAAO,CAACA,EAAO,GAAKA,EAAO,IAK7B,IAFA,IAAM4E,EAAI5E,EACJ6E,EAAW,GACRhtC,EAAI,EAAGA,EAAI+sC,EAAE,GAAGjtC,OAAQE,IAC/B,IAAK,IAAIgsC,EAAI,EAAGA,EAAIe,EAAE,GAAGjtC,OAAQksC,IAC/BgB,EAAS5lC,KAAK2lC,EAAE,GAAG/sC,GAAK+sC,EAAE,GAAGf,IAGjC,OAAOgB,EAASv7B,MAClB,CA/KWw7B,CAAQ9E,GACb+E,MAAM/E,EAAO,IAEf,OADA3qC,EAAMC,EAAK,+BACJ,CAAC0vC,OAAQ,EAAGxpC,EAAG,EAAGtG,KAAM,IAEjC,GAAkC,IAA9B8qC,EAAOA,EAAOroC,OAAS,GAEzB,OADAtC,EAAMC,EAAK,oCACJ,CAAC0vC,OAAQ,EAAGxpC,EAAG,EAAGtG,KAAM,IAOjC,QAHuB0C,IAAnBkI,EAAKmlC,YAAyBnlC,EAAKmlC,UAAY,QACfrtC,IAAhCkI,EAAKolC,yBAAsCplC,EAAKolC,uBAAyB,GAEzElF,EAAO,IAAMxiC,EAASmjC,SAA8B,IAAnB7gC,EAAKmlC,WAAmD,IAAhCnlC,EAAKolC,uBAChE,MAAO,CAACF,OAAQ,EAAGxpC,EAAG,EAAGtG,KAAM,mBAGjC,IAAMiwC,EA+KR,SAAoBzqC,EAAiB8C,EAAmBG,GACtD,IAAIqiC,EAAS,EACPoF,EAAkB,GAExB,GAAI5nC,EAASX,QAAQ,oBACnB,MAAO,CAACmjC,OAAAA,EAAQoF,MAAAA,GAElB,GAAIznC,EAAaggC,OAASngC,EAAST,WAAW,cAAe,eAAgB,CAC3E,IAAMsoC,EAAW3qC,EAAIuF,MAAM5E,IAAI,QACzB6E,EACJmlC,EAASnlC,cAAc1C,EAASyC,MAAM,KACrCzC,EAASyC,MAAM,GAAKolC,EAASnlC,cAAc1C,EAASyC,MAAM,IAAO,GACpE+/B,GAAU1lC,KAAKC,MAAO2F,EAAgB1C,EAASmjC,QAAW,GAC1DyE,EAAMnmC,KAAK,eACb,CACA,GAAItB,EAAa2/B,aAAe9/B,EAAST,WAAW,cAAe,eAAgB,CACjF,IAAMuoC,EAAY5qC,EAAIuF,MAAM5E,IAAI,SAC1B6E,EACJolC,EAAUplC,cAAc1C,EAASyC,MAAM,KACtCzC,EAASyC,MAAM,GAAKqlC,EAAUplC,cAAc1C,EAASyC,MAAM,IAAO,GACrE+/B,GAAU1lC,KAAKC,MAAO2F,EAAgB1C,EAASmjC,QAAW,GAC1DyE,EAAMnmC,KAAK,aACb,CAEKzB,EAASV,QAAQ,WACjBU,EAAST,WAAW,cAAe,aACnCS,EAASX,QAAQ,iBAEQ,IAAxBc,EAAa0/B,QACf2C,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxB,IAAZjmC,EAAIK,IACNqqC,EAAMnmC,KAAK,UAEXmmC,EAAMnmC,KAAK,sBAEoB,IAAxBtB,EAAa0/B,QACtB2C,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,uBACsB,IAAxBtB,EAAa0/B,SACtB2C,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,wBAIX8lC,MAAM/E,KACRA,EAAS,GAGX,MAAO,CAACA,OAAAA,EAAQoF,MAAAA,EAClB,CAhOkBG,CAAW7qC,EAAK8C,EAAUb,EAAMgB,cAC1C6nC,EAAMC,GAAa/qC,EAAK6C,EAAUC,EAAUsC,EAAMnD,GAClD+oC,EACHloC,EAASoC,UAAU,SAAWpC,EAAST,WAAW,eAAiBS,EAASkoC,aAAe,EAI1FC,EAAY,GACZ7lC,EAAK0gC,KAAO,IACdmF,EAAY,WACZ3F,EA6cJ,SAAwBtlC,EAAiBkqC,EAAapE,GAA2B,IAAblrC,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACrE,GAAiB,IAAbktC,EAAEjtC,OACJ,MAAO,CAACitC,EAAE,GAAKpE,GACV,GAAgB,IAAZ9lC,EAAIK,IAAW,CAExB,IADA,IAAM6qC,EAAI,GACD/tC,EAAI,EAAGA,EAAI+sC,EAAEjtC,OAAQE,IAC5B+tC,EAAE/tC,GAAK+sC,EAAE/sC,GAAK2oC,EAEhB,OAAOoF,CACT,CAAO,GAAiB,KAAbhB,EAAEjtC,OACX,OAAQ6oC,GACR,KAAK,EACH,MAAO,CACL,EAAIoE,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GACvEA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,IAC1EA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,KAEvD,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAClEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC5EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC5EA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,KAE9E,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GACtE,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GACtEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GACtEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAEjF,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC1EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC1EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC1EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChEA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,KAEvF,KAAK,GACH,MAAO,CACL,GAAKA,EAAE,GAAI,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,GAAKA,EAAE,GACvE,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,GAAKA,EAAE,GACjF,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,GAAKA,EAAE,IACnF,GAAKA,EAAE,KAEX,QAEE,OADAvvC,EAAMC,EAAI,yBAAD4E,OAA2BsmC,IAC7BoE,MAEJ,IAAiB,KAAbA,EAAEjtC,OAqCN,IAAiB,MAAbitC,EAAEjtC,OAAgB,CACvB6oC,EAAO,GACTnrC,EAAMC,EAAI,2CAAD4E,OAA6CsmC,IAIxD,IADA,IAAMoF,EAAc,GACX/tC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IADA,IAAIguC,EAAM,EACDhC,EAAI,EAAGA,EAAI,GAAIA,IACtBgC,GAAOjB,EAAE/sC,EAAIgsC,GAEf+B,EAAE/tC,GAAKyC,KAAKopC,MAAMmC,EAAM,GAC1B,CACA,OAAOD,CACT,CAEE,OADAvwC,EAAMC,EAAI,2CAAD4E,OAA6C0qC,EAAEjtC,SACjDitC,CACT,CArDE,OAAQpE,GACR,KAAK,EACH,MAAO,CACL,EAAIoE,EAAE,GAAI,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAC/D,EAAIA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAC9D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAEtD,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC3D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC7D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAE3C,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IACzE,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAChE,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAChE,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAE9E,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC5D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC7D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAE3C,KAAK,GACH,MAAO,CACL,GAAKA,EAAE,GAAI,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAClE,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IACnE,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,KAE/C,QAEE,OADAvvC,EAAMC,EAAI,yBAAD4E,OAA2BsmC,IAC7BoE,EAmBX,CACF,CAvjBakB,CAAeprC,EAAKslC,EAAQlgC,EAAK0gC,KAAMlrC,IAGlD,IAAMywC,EAAcZ,EAAQC,MAAMztC,OAAS,EACvC,UAAYquC,GAAcb,EAAQC,OAClC,GACEa,EACJd,EAAQC,MAAMztC,OAAS,GAAK6tC,EAAIJ,MAAMztC,OAAS,EAC3C,UAAYquC,GAAcb,EAAQC,MAAMlrC,OAAOsrC,EAAIJ,QACnD,GAEN,KAAwB,IAAnBtlC,EAAKmlC,WAAmD,IAAhCnlC,EAAKolC,wBAAiCplC,EAAK+Y,KAoDjE,CACL,IAAMmsB,EAASkB,GACblG,EAAQxiC,EAASmjC,QAAUwE,EAAQnF,OACnCwF,EAAIxF,OACJlgC,EAAK0gC,MAAQ,EACb1gC,EAAKmlC,WAAa,EAClBznC,EAASmjC,QACT+E,GAEF,OAAe,IAAXV,EACK,CACLA,OAAAA,EACAxpC,EAAGsE,EAAKmlC,UACR/vC,KAAK,GAADgF,OAAKyrC,GAAa,cAAa,UAAAzrC,OAAS4F,EAAKmlC,UAAS,UAAA/qC,OAAS+rC,IAE5DjB,EAAS,EACX,CACLA,OAAAA,EACAxpC,EAAGsE,EAAKmlC,UACR/vC,KACEywC,EACArrC,KAAKopC,MAAe,IAATsB,GAAiB,GAAE,eAAA9qC,OACf4F,EAAKmlC,UAAS,OAAA/qC,OAAM+rC,IAIrCE,GACFnG,EAAO,GACPwF,EAAIxF,OACJlgC,EAAK0gC,KACL1gC,EAAKmlC,UACLS,EACAloC,EAASmjC,UAETnjC,EAAS8mC,QAAUa,EAAQnF,OAEpB,CACLgF,OAAQ,EACRxpC,EAAGsE,EAAKmlC,UACR/vC,KAAK,GAADgF,OAAKyrC,GAAa,cAAa,UAAAzrC,OAAS4F,EAAKmlC,UAAS,UAAA/qC,OAAS+rC,IAGrEE,GACEnG,EAAOA,EAAOroC,OAAS,GACvB6tC,EAAIxF,OACJlgC,EAAK0gC,KACL1gC,EAAKmlC,UACLS,EACAloC,EAASmjC,UAEXnjC,EAAS8mC,QAAUa,EAAQnF,OAEpB,CACLxkC,EAAGsE,EAAKmlC,UACR/vC,KAAMywC,EAAS,kBAAAzrC,OAAqB4F,EAAKmlC,UAAS,UAAA/qC,OAAS+rC,IAGxD,CAACzqC,EAAGsE,EAAKmlC,UAAW/vC,KAAMywC,EAAY,WAC/C,CA7GE,IAAMX,EAASkB,GACblG,EAAQxiC,EAAS8mC,QAAUa,EAAQnF,OAAQ,EAAG,EAAG,EAAGxiC,EAASmjC,QAAS+E,GAExE,GAAe,IAAXV,EACF,MAAO,CAACA,OAAAA,EAAQxpC,EAAG,EAAGtG,KAAK,kBAADgF,OAAoB6rC,IACzC,GAAIf,EAAS,EAElB,MAAO,CACLA,OAAAA,EACAxpC,EAAG,EACHtG,KAAMywC,EAAYrrC,KAAKopC,MAAe,IAATsB,GAAiB,GAAE,mBAAA9qC,OAAsB6rC,IAQpD,MAAlB/F,EAAOroC,SACTguC,EAAY,YAId,IAAK,IAAI9tC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMmtC,EAASkB,GACblG,EAAQxiC,EAAS8mC,QAAUa,EAAQnF,OAAQwF,EAAIxF,OAAQnoC,EAAG,EAAG2F,EAASmjC,QAAS+E,GAEjF,GAAe,IAAXV,EACF,MAAO,CAACA,OAAAA,EAAQxpC,EAAG3D,EAAG3C,KAAK,GAADgF,OAAKyrC,GAAa,eAAazrC,OAAGrC,EAAC,OAAAqC,OAAM+rC,IAC9D,GAAIjB,EAAS,EAClB,MAAO,CACLA,OAAAA,EACAxpC,EAAG3D,EACH3C,KAAMywC,EAAYrrC,KAAKopC,MAAe,IAATsB,GAAiB,GAAE,eAAA9qC,OAAkBrC,EAAC,OAAAqC,OAAM+rC,GAG/E,CAEA,IAAK,IAAIpuC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,GACEsuC,GAAanG,EAAO,GAAIwF,EAAIxF,OAAQnoC,EAAG,EAAG6tC,EAAcloC,EAASmjC,UACjEnjC,EAAS8mC,QAAUa,EAAQnF,OAE3B,MAAO,CAACgF,OAAQ,EAAGxpC,EAAG3D,EAAG3C,KAAK,GAADgF,OAAKyrC,GAAa,eAAazrC,OAAGrC,EAAC,OAAAqC,OAAM+rC,IACjE,GACLE,GAAanG,EAAOA,EAAOroC,OAAS,GAAI6tC,EAAIxF,OAAQnoC,EAAG,EAAG6tC,EAAcloC,EAASmjC,UACjFnjC,EAAS8mC,QAAUa,EAAQnF,OAE3B,MAAO,CAACxkC,EAAG3D,EAAG3C,KAAMywC,EAAS,YAAAzrC,OAAerC,EAAC,OAAAqC,OAAM+rC,GAEvD,CA6DF,MAAO,CAACjB,OAAQ,EAAGxpC,EAAG,EAAGtG,KAAM,GACjC,CAyBA,IAAMkxC,GAAW,CACf,OAAQ,QAAS,YAAa,cAAe,cAAe,YAC5D,eAAgB,YAAa,OAAQ,kBAAmB,oBAiEnD,SAASX,GACd/qC,EACA6C,EACAC,EACAsC,EACAnD,GAEA,IAAIqjC,EAAS,EACPoF,EAAQ,GAEVzoC,EAAM0pC,WAAW,MAAO,kBACtB7oC,EAAST,WAAW,WAAY,iBAClCijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAKzB,EAASyE,QAAU,YAEvBtF,EAAM0pC,WAAW,OAAQ,cAC9B7oC,EAAST,WAAW,aACtBijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,sBACFzB,EAAST,WAAW,eAC7BijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,IACxCyE,EAAMnmC,KAAK,uBAEJtC,EAAM0pC,WAAW,QAEvB7oC,EAASV,QAAQ,OAAQ,SAAU,UACnCU,EAAST,WAAW,cAAe,WAAY,aAAc,YAAa,cAC1ES,EAASX,QAAQ,oBAElBmjC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,SAAuB,IAAZjmC,EAAIK,IAAY,EAAI,KAC7DqqC,EAAMnmC,KAAK,qBAEJtC,EAAM0pC,WAAW,OAAQ,UAC9B7oC,EAAST,WAAW,aACtBijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,IACxCyE,EAAMnmC,KAAK,sBAEVzB,EAASV,QAAQ,QACjBU,EAAST,WAAW,cAAe,WAAY,eAC/CS,EAASX,QAAQ,oBAClBF,EAAM0pC,WAAW,UAEjBrG,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,IACxCyE,EAAMnmC,KAAK,iBAIf,IAAMqnC,EAAWxmC,EAAKN,MAAM,eAAiBhC,EAAST,WAAW,eAyBjE,GAxBIS,EAASX,QAAQ,eAAiBypC,GACpCtG,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,IACxCyE,EAAMnmC,KAAK,uBACFzB,EAASX,QAAQ,kBAAoBypC,EAC1C9oC,EAASV,QAAQ,WACnBkjC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,IACxCyE,EAAMnmC,KAAK,0BACDzB,EAAST,WAAW,cAAe,WAC7CijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,wBAEJzB,EAASX,QAAQ,iBAC1BmjC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,uBAGTtC,EAAMgB,aAAamgC,WAChBtgC,EAAST,WAAW,iBAEvBijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,SAAWjmC,EAAIK,KAAO,EAAI,EAAI,KAC5DqqC,EAAMnmC,KAAK,uBAIXtC,EAAMe,aAAaogC,WAAavgC,EAASR,WAAW,eAAgB,CACtE,IAAIymC,EAAWlpC,KAAKC,MAAMgD,EAASojC,SAAWjmC,EAAIK,KAAO,EAAI,EAAI,KAC7DyC,EAASX,QAAQ,cAAa2mC,EAAWlpC,KAAKypC,MAAiB,KAAXP,EAAkB,OACtEjmC,EAASR,WAAW,gBACtBijC,GAAUwD,EACV4B,EAAMnmC,KAAK,wBAEX+gC,GAAUwD,EACV4B,EAAMnmC,KAAK,uBAEf,CAkDA,GAhDItC,EAAMgF,WAAW,WACflF,EAAWe,EAAUb,KACvBqjC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,IACxCyE,EAAMnmC,KAAK,4BAIXzB,EAASoC,UAAU,OACjBpC,EAAST,WAAW,gBACtBijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,gBACDzB,EAAST,WAAW,iBAC9BijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,SAAuB,IAAZjmC,EAAIK,IAAY,GAAK,IAC9DqqC,EAAMnmC,KAAK,kBAEJzB,EAASoC,UAAU,OACxBpC,EAAST,WAAW,gBACtBijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,gBACDzB,EAAST,WAAW,gBAC9BqoC,EAAMnmC,KAAK,gBAEJzB,EAASoC,UAAU,OACxBpC,EAAST,WAAW,cACtBijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,SAAWjmC,EAAIK,IAAM,EAAI,GAAK,KAC5DqqC,EAAMnmC,KAAK,wBACDzB,EAAST,WAAW,iBAC9BijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,SAAuB,IAAZjmC,EAAIK,KAAaL,EAAIK,IAAM,EAAI,GAAK,IAC7EqqC,EAAMnmC,KAAK,iBAGZzB,EAASoC,UAAU,QAAUpC,EAAST,WAAW,cAClDQ,EAASR,WAAW,iBACnBS,EAAST,WAAW,iBAErBijC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,gBAGRzB,EAAST,WAAW,gBAAkBqpC,GAASjnC,SAASW,EAAK1I,QAC5DmG,EAASV,QAAQ,iBACnBmjC,GAAUtlC,EAAIK,IAAM,EAAIT,KAAKC,MAAMiD,EAASmjC,QAAU,GAAKrmC,KAAKC,MAAMiD,EAASmjC,QAAU,GACzFyE,EAAMnmC,KAAK,qBAEX+gC,GAAUtlC,EAAIK,IAAM,EAAIT,KAAKC,MAAMiD,EAASmjC,QAAU,GAAKrmC,KAAKC,MAAMiD,EAASmjC,QAAU,IACzFyE,EAAMnmC,KAAK,qBAGXzB,EAAS+oC,aAAe/oC,EAAST,WAAW,eAAgB,CAC9D,IAAMypC,EAAiBhpC,EAASV,QAAQ,QAAS,UAC9CU,EAASipC,UAAY,CAAC,QAAS,SAAStnC,SAAS3B,EAASipC,UAC7DzG,GAAU1lC,KAAKC,MAAMiD,EAASmjC,SAAW6F,EAAiB,EAAI,IAC9DpB,EAAMnmC,KAAK,YACb,CA+BA,OA9BKzB,EAASV,QAAQ,SAAYU,EAAST,WAAW,iBACjD+C,EAAKN,MAAM,qCAAsC,wCACpDwgC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,uBAGRzB,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,WACxDH,EAAMgB,aAAa4/B,WAAYz9B,EAAKN,MAAM,qBAC7CwgC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,qBAGRzB,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,UACxDH,EAAMgB,aAAa6/B,WAAY19B,EAAKN,MAAM,oBAC7CwgC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,oBAGRzB,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,WACxDH,EAAMgB,aAAa8/B,YAAa39B,EAAKN,MAAM,qBAC9CwgC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,qBAGRzB,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,UACxDH,EAAMgB,aAAa+/B,YAAa59B,EAAKN,MAAM,qBAC9CwgC,GAAU1lC,KAAKC,MAAMiD,EAASmjC,QAAU,GACxCyE,EAAMnmC,KAAK,qBAGN,CAAC+gC,OAAAA,EAAQoF,MAAAA,EAClB,CAEA,SAASc,GACPlG,EACA9mC,EACAssC,EACAhF,EACAyE,EACAtE,EACA+E,GAEA,IAAMlqC,EAAIwkC,EAAOroC,OACjB,GAAa,IAAT6oC,EACF,IAAK,IAAI3oC,EAAI,EAAGA,EAAI2D,EAAG3D,IAAK,CAC1B,GAAImoC,EAAOxkC,EAAI,GAAKtC,EAAI,OAAO,EAC/B,GAAI8mC,EAAOnoC,IAAMqB,EACf,OAAQsC,EAAI3D,GAAK2D,CAErB,CAEF,IAAIkrC,EAAc,EACdhB,EAAe,IACjBgB,EAAcpsC,KAAKC,MAAOmrC,EAAe/E,EAAS,IAClD+E,KAIF,IAFA,IAAI5hC,EAAM,EACN6iC,EAAQ,EACH9uC,EAAI,EAAGA,EAAI2D,EAAG3D,IAAK,CAC1B,IAAI+uC,OAAC,EAcL,GAAU,KAZRA,EADQ,IAAN/uC,GAAWmoC,EAAOnoC,KAAOmoC,EAAOnoC,EAAI,GAClCquC,GACFlG,EACA9mC,EAAK8mC,EAAOnoC,GAAK2tC,EAAMkB,EACvBlB,EACAhF,EAAO,EACPyE,EACAtE,EACA+E,GAGEiB,GAEO,CACX7iC,GAAOtI,EAAI3D,EACX,KACF,CACEiM,GAAO8iC,EAETD,EAAQC,CACV,CACA,OAAO9iC,EAAMtI,CACf,CAEA,SAAS2qC,GACPnG,EACAwF,EACAhF,EACAyE,EACAS,EACA/E,GAEA,IAAI+F,EAAc,EAClB,GAAIhB,EAAe,EACjB,IAAK,IAAI7tC,EAAI,EAAGA,EAAI2oC,EAAO,EAAG3oC,IAC5B6uC,GAAepsC,KAAKC,OAAQmrC,EAAe7tC,GAAK8oC,EAAS,IAS7D,OALIH,EAAO,GAAmB,IAAdyE,EACNjF,EAASQ,EAAOgF,GAAOhF,EAAO,GAAKkG,EAEnC1G,EAASwF,GAAOhF,EAAO,GAAKkG,CAGxC,CA2QA,SAASV,GAAca,GACrB,GAAmB,IAAfA,EAAIlvC,OACN,MAAO,GACF,GAAmB,IAAfkvC,EAAIlvC,OACb,OAAOkvC,EAAI,GACN,GAAmB,IAAfA,EAAIlvC,OACb,OAAOkvC,EAAI,GAAK,QAAUA,EAAI,GAG9B,IADA,IAAI3xC,EAAO,GACF2C,EAAI,EAAGA,EAAIgvC,EAAIlvC,OAAS,EAAGE,IAClC3C,GAAQ2xC,EAAIhvC,GAAK,KAEnB,OAAO3C,EAAO,OAAS2xC,EAAIA,EAAIlvC,OAAS,EAE5C,CAEA,SAAS2pC,GAAYwF,EAAaC,GAChC,OAAOA,EAAQ,GAAA7sC,OAAM4sC,GAAG5sC,OAAG6sC,EAAQ,KAAMD,CAC3C,CAEA,SAASpG,GAAUR,EAAkBtqC,EAAWC,GAAmB,IAAR8I,EAACjH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC7D,MAAoB,MAAbwoC,EAAmB5lC,KAAKC,MAAO3E,GAAK,IAAO+I,GAAM9I,GAAK,GAAKyE,KAAKC,MAAO3E,GAAK,GAAK+I,GAAM9I,EAChG,CCrgCO,IAAMmxC,GAAM,WASjB,SAAAA,EACEtsC,EACA6C,EACAC,EACAsC,EACAnD,EACAqjC,EACAC,IACAnmC,EAAAA,EAAAA,GAAA,KAAAktC,GAAA,KAhBFtsC,SAAG,OACH6C,cAAQ,OACRC,cAAQ,OACRsC,UAAI,OACJnD,WAAK,OACLqjC,YAAM,OACNC,aAAO,EAWLloC,KAAK2C,IAAMA,EACX3C,KAAKwF,SAAWA,EAChBxF,KAAKyF,SAAWA,EAChBzF,KAAK+H,KAAOA,EACZ/H,KAAK4E,MAAQA,EACb5E,KAAKioC,OAASA,EACdjoC,KAAKkoC,QAAUA,CACjB,CAiDC,OA/CDlmC,EAAAA,EAAAA,GAAAitC,EAAA,EAAAjxC,IAAA,OAAAiE,MAAU,WACR,OAAOjC,KAAKkvC,UACd,GAAC,CAAAlxC,IAAA,QAAAiE,MAED,WACE,IAAM4pC,EAAQxD,GAAYroC,KAAKioC,QAC/B,GAAwB,kBAAb4D,EAAM,GAAiB,OAAOA,EACzC,IAAMgB,EAAIhB,EACV,MAAO,CAACgB,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAC5C,GAAC,CAAA7uC,IAAA,WAAAiE,MAED,WAAsC,IAA7BkmC,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAKpC,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC1B,OAAOqoC,GACLhoC,KAAK2C,IACL3C,KAAKwF,SACLxF,KAAKyF,SACLzF,KAAK+H,KACL/H,KAAK4E,MACL5E,KAAKioC,OACLjoC,KAAKkoC,QACLC,EACA5qC,EAEJ,GAAC,CAAAS,IAAA,WAAAiE,MAED,WAA0B,IAAjBkmC,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAClB,ODyBG,SACLgD,EACA6C,EACAC,EACAsC,EACAkgC,GAEC,IADDE,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEXwvC,EAA+B9G,GAAYJ,GAAOmH,GAAAhpC,EAAAA,EAAAA,GAAA+oC,EAAA,GAA3C5G,EAAS6G,EAAA,GAAE5G,EAAS4G,EAAA,GACrBjqC,GAA4B,kBAAdojC,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMxgC,EAAK0gC,KACvFrjC,GAA4B,kBAAdojC,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMzgC,EAAK0gC,KAEvFC,EAAaC,GAAUR,EAAUhjC,EAAKM,EAASmjC,SAC/CC,EAAaF,GAAUR,EAAU/iC,EAAKK,EAASmjC,SAE/CyG,EAAejE,GAAYzoC,EAAK6C,EAAUC,EAAUsC,EAAMkgC,EAAQE,GAAUhrC,KAC5EmyC,EAAanD,GAAUxpC,EAAK6C,EAAUC,EAAUsC,EAAMkgC,EAAQE,GAAUhrC,KAE9E,MAAM,GAANgF,OAAUumC,EAAU,OAAAvmC,OAAM0mC,GAAU1mC,OAAGgmC,GAAQhmC,OAAGktC,GAAY,KAAAltC,OACvDktC,EAAY,MAAGltC,OAAGmtC,GAAU,KAAAntC,OAASmtC,EAAU,KACxD,CC7CWC,CAAYvvC,KAAK2C,IAAK3C,KAAKwF,SAAUxF,KAAKyF,SAAUzF,KAAK+H,KAAM/H,KAAKioC,OAAQE,EACrF,GAAC,CAAAnqC,IAAA,WAAAiE,MAED,WAA0B,IAAjBkmC,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAClB,OAAOyrC,GAAYprC,KAAK2C,IAAK3C,KAAKwF,SAAUxF,KAAKyF,SAAUzF,KAAK+H,KAAM/H,KAAKioC,OAAQE,EACrF,GAAC,CAAAnqC,IAAA,SAAAiE,MAED,WAAwB,IAAjBkmC,EAAQxoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAChB,OAAOwsC,GAAUnsC,KAAK2C,IAAK3C,KAAKwF,SAAUxF,KAAKyF,SAAUzF,KAAK+H,KAAM/H,KAAKioC,OAAQE,EACnF,GAAC,CAAAnqC,IAAA,WAAAiE,MAED,WAAsB,IAAb1E,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACV,OAAOwrC,GACLnrC,KAAK2C,IACL3C,KAAKwF,SACLxF,KAAKyF,SACLzF,KAAK+H,KACL/H,KAAK4E,MACL5E,KAAKioC,OACL1qC,EAEJ,KAAC0xC,CAAA,CA1EgB,GA6EZ,SAAS5G,GACdJ,GAGA,GAAsB,kBAAXA,EAAqB,MAAO,CAACA,EAAQA,GAEhD,GAAIA,EAAOroC,OAAS,EAAG,CACrB,IAAMitC,EAAI5E,EACV,OAAI4E,EAAE,GAAKA,EAAEA,EAAEjtC,OAAS,GAAW,CAAC2C,KAAK4C,IAAGqC,MAARjF,MAAIg/B,EAAAA,GAAAA,GAAQsL,IAAItqC,KAAK6C,IAAGoC,MAARjF,MAAIg/B,EAAAA,GAAAA,GAAQsL,KACzD,CAACA,EAAE,GAAIA,EAAEA,EAAEjtC,OAAS,GAC7B,CAEA,GAAyB,kBAAdqoC,EAAO,IAAwC,kBAAdA,EAAO,GACjD,MAAO,CAAC,CAACA,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,KAGrD,IAAM4E,EAAI5E,EAGV,OAFI4E,EAAE,GAAG,GAAKA,EAAE,GAAGA,EAAE,GAAGjtC,OAAS,KAAIitC,EAAE,GAAKA,EAAE,GAAGD,QAAQr7B,QACrDs7B,EAAE,GAAG,GAAKA,EAAE,GAAGA,EAAE,GAAGjtC,OAAS,KAAIitC,EAAE,GAAKA,EAAE,GAAGD,QAAQr7B,QAClD,CAAC,CAACs7B,EAAE,GAAG,GAAIA,EAAE,GAAG,IAAK,CAACA,EAAE,GAAGA,EAAE,GAAGjtC,OAAS,GAAIitC,EAAE,GAAGA,EAAE,GAAGjtC,OAAS,IACzE,CChGO,SAAS4vC,GACd7sC,EACA6C,EACAC,EACAsC,EACAnD,GAEAW,EAAkB5C,EAAK6C,EAAUC,EAAUb,EAAO,MAAO,MAAO,MAAO,MAAO,OAE9E,IAAMkF,EAAgB,CACpB8/B,aAAcpkC,EAASnG,KACvB0qC,SAAUhiC,EAAK1I,KACfmrC,aAAc/kC,EAASpG,MAGnBowC,EAAS,IAAIR,GAAOtsC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAO,EAAGkF,GAEnE,GAAsB,WAAlB/B,EAAKwC,SACP,OAAOklC,EAGT,GAAI7qC,EAAMgB,aAAakgC,YAErB,OADAh8B,EAAKg8B,aAAc,EACZ2J,EAIT,GAAgB,IAAZ9sC,EAAIK,IAAW,CACjB,IAAM0sC,EAAcnjC,EAAuB/G,EAAUuC,GACrD,GAAI2nC,EAEF,OADAD,EAAOxH,OAASyH,EACTD,CAEX,CAEA,IAAME,EAAmC,CACvC,SACA,OACA,QACA,WACA,QACA,MACA,WACA,SACA,SACA,SACA,UACA,MACA,OACA,QACA,SACA,OACA,SAGEC,EAAoBnqC,EAASyC,MAAM,GACnC2nC,EAAqBpqC,EAASyC,MAAM,GAExC,GAAI2nC,GAAsBD,IAAsBC,GAAkC,IAAZltC,EAAIK,KAC5C2sC,EAAiChmC,QAAQimC,GACxCD,EAAiChmC,QAAQkmC,GAEtB,CAAC,IAADlnC,EACJ,CAACknC,EAAoBD,GAA9DA,EAAiBjnC,EAAA,GAAEknC,EAAkBlnC,EAAA,EACxC,CAIF,IAAMmnC,EACJhoC,EAAqBnF,EAAKoF,EAAM6nC,EAAmBhrC,EAAMgB,aAAaogC,aAClE+J,EAAqBF,EACvB/nC,EAAqBnF,EAAKoF,EAAM8nC,EAAoBjrC,EAAMgB,aAAaogC,aACvE,EACEgK,EAAoBF,EAAqBC,EAE/C,GAA0B,IAAtBC,EACF,OAAOP,EAGT,GAAgB,IAAZ9sC,EAAIK,IAAW,CACjB,IAAM0sC,EAAcnjC,EAAuB/G,EAAUuC,GACrD,GAAI2nC,EAEF,OADAD,EAAOxH,OAASyH,EACTD,CAEX,CAOA,GALI1nC,EAAK0gC,KAAO,IACd3+B,EAAK2+B,KAAO1gC,EAAK0gC,MAIf1gC,EAAKN,MAAM,QAAS,YAAa,CACnCM,EAAKkoC,QAAS,EACd,IAAMv+B,EAAInP,KAAKC,MAAO,GAAKgD,EAAS+mC,QAAW/mC,EAASojC,SACxD7gC,EAAKwK,GAAKb,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACrF5H,EAAKkgC,OAASjiC,EAAKwK,EACrB,MAAWxK,EAAKN,MAAM,aAAeM,EAAKwK,KAGxCxK,EAAKwK,GAAK,IAGZ,GAAgB,IAAZxK,EAAKwK,GACP,OAAOk9B,EAGT,IAAMS,EAA+B,aAAlBnoC,EAAKwC,SAClB4lC,EAAaD,EAAa,MAAQ,MAClCE,EAAcF,EAAa,MAAQ,MACrC7rB,EAAK7e,EAASM,MAAMqqC,GACpB7rB,EAAK7e,EAASK,MAAMsqC,GAIlBC,EAAatoC,EAAKkoC,SACT,IAAZttC,EAAIK,KACQ,IAAZL,EAAIK,KAAawC,EAASmB,OAAOwpC,IAAgB1qC,EAASkB,OAAOypC,IAEhEE,EAAK9qC,EAAS1C,MA4ClB,GA3CIutC,GACFhsB,EAAK7e,EAASkB,SAASypC,GACvB7rB,EAAK7e,EAASiB,SAAS0pC,GACP,IAAZztC,EAAIK,MACNstC,GAAM,EACNxmC,EAAK4gC,YAAa,KAGgB,IAAhCllC,EAASmB,OAAOwpC,KAAmBrmC,EAAKw/B,YAAc9jC,EAASmB,OAAOwpC,IACrC,IAAjC1qC,EAASkB,OAAOypC,KAAoBtmC,EAAKqgC,aAAe1kC,EAASkB,OAAOypC,IACxEF,GAAc1qC,EAASqC,UAAU,SACnCwc,EAAK9hB,KAAKC,MAAM6hB,EAAK,GACrBva,EAAKyB,UAAW,IAIhBxD,EAAKN,MAAM,YAAa,mBAC1B6c,EAAK/hB,KAAKC,MAAM8hB,EAAK,IAGlB+rB,IACCH,GAActrC,EAAMgB,aAAayD,WACnCib,GAAM,EACNxa,EAAKT,WAAY,IACP6mC,GAActrC,EAAMgB,aAAa0D,gBAC3Cgb,GAAM,EACNxa,EAAKR,eAAgB,KAIpB9D,EAASiC,MAAM,YAAcjC,EAASV,QAAQ,gBAAkBorC,GAChE1qC,EAASiC,MAAM,SAAU,YAAcjC,EAASV,QAAQ,eAAiBorC,KAC5E7rB,GAAM,EACNva,EAAKE,aAAexE,EAASgD,OAG3B6b,EAAK,KAAOC,EAAK,OACnBD,EAAK9hB,KAAKC,MAAM6hB,EAAK,GAAK,IAC1BC,EAAK/hB,KAAKC,MAAM8hB,EAAK,GAAK,KAKxBvc,EAAKN,MAAM,WAAY,CACzB,IAAM8oC,EAAiC,CACrC3O,OAAQ,EAAG7gC,SAAU,EAAGG,OAAQ,EAAGM,OAAQ,EAAGF,OAAQ,EAAGI,KAAM,EAAGrB,IAAK,EACvEe,MAAO,EAAGO,MAAO,EAAG,MAAO,GAAIV,KAAM,GAAIW,MAAO,GAAIP,MAAO,GAAIR,SAAU,GACzEY,QAAS,GAAIF,IAAK,GAAIX,OAAQ,GAAID,KAAM,IAG1C0jB,EAAK,GACLC,EAAK/hB,KAAK6C,IAAImrC,EAAO/qC,EAAS0C,MAAM,GAAK1C,EAAS0C,MAAM,GAAK1C,EAAS0C,MAAM,IAAK,GACjFooC,EAAK/tC,KAAK6C,IAAImrC,EAAO9qC,EAASyC,MAAM,GAAKzC,EAASyC,MAAM,GAAKzC,EAASyC,MAAM,IAAK,EACnF,CAEIzC,EAASgC,MAAM,UAAYhC,EAASX,QAAQ,kBAC9Cwf,EAAK/hB,KAAKC,MAAW,IAAL8hB,GAChBxa,EAAKM,aAAe3E,EAAS+C,MAG/B,IAAIgoC,EAAajuC,KAAKC,MACpBD,KAAKC,MAAOD,KAAKC,MAAO,EAAI8tC,EAAM,EAAI,GAAK/tC,KAAK6C,IAAI,EAAGif,GAAMtc,EAAKwK,GAAMhQ,KAAK6C,IAAI,EAAGkf,IAAO,IAI7E,IAAZ3hB,EAAIK,KAAa+E,EAAKkoC,SACxBO,GAAc,EACd1mC,EAAK4gC,YAAa,GAGhB3iC,EAAKN,MAAM,YAAiD,QAAnC7C,EAAMgB,aAAa8gC,cAC9C8J,EAAajuC,KAAKC,MAAmB,EAAbguC,GACxB1mC,EAAK48B,YAAc,OAIrB,IAAM+J,EACJjrC,EAASV,QAAQ,oBACbjF,EACAmnC,GAAiBxhC,EAASV,QAAQ,gBAAkB,cAAgBU,EAASgD,MAiCnF,GA/BIT,EAAKhD,QAAQ0rC,KACfD,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKE,aAAexE,EAASgD,MAG/BgoC,EAAajuC,KAAK4C,IAAI,IAAKqrC,GAAc,EAEpC5rC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,SACxCH,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,UAC5CyrC,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKjD,QAAUjC,EAAMiC,UAEpBjC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,UACxCH,EAAM0pC,WAAW,UAAYvmC,EAAKhD,QAAQ,SAAWgD,EAAKN,MAAM,kBAEjE+oC,EAAajuC,KAAKC,MAAMguC,EAAa,GACrC1mC,EAAKjD,QAAUjC,EAAMiC,SAGnBkB,EAAKhD,QAAOyC,MAAZO,GAAIw5B,EAAAA,GAAAA,GAAY/7B,EAAS0C,UAC3BsoC,EAAajuC,KAAKC,MAAmB,IAAbguC,IAGV,IAAZ7tC,EAAIK,KACNwtC,EAAajuC,KAAKC,MAAMguC,EAAaV,GACrCU,EAAajuC,KAAKC,MAAMguC,EAAaT,IAErCS,EAAajuC,KAAKC,MAAMguC,EAAaR,GAInCjoC,EAAKN,MAAM,QAAS,YAEtB,OADAgoC,EAAOxH,OAASuI,EACTf,EAGTA,EAAOxH,OAAS,GAChB,IAAK,IAAInoC,EAAI,IAAKA,GAAK,IAAKA,IACV,IAAZ6C,EAAIK,IACNysC,EAAOxH,OAAOnoC,EAAI,KAAOyC,KAAK6C,IAAI,EAAG7C,KAAKC,MAAOguC,EAAa1wC,EAAK,MAGjE2vC,EAAOxH,OAAOnoC,EAAI,KADD,IAAf0wC,EACuB,EAEAjuC,KAAKC,MAAOguC,EAAa1wC,EAAK,KAK7D,OAAO2vC,CACT,CCySA,SAASiB,GAAsBxuC,EAAcgD,GAC3C,IAAMyrC,EAAYpuC,KAAK4C,IAAI,EAAG5C,KAAK6C,KAAK,EAAS,EAANF,IAC3C,OAAOyrC,EAAY,EACfpuC,KAAKC,MAAON,GAAQ,EAAIyuC,GAAc,GACtCA,EAAY,EAAIpuC,KAAKC,MAAc,EAAPN,GAAa,EAAIyuC,IAAczuC,CACjE,CC3gBO,SAAS0uC,GACdjuC,EACA6C,EACAC,EACAsC,EACAnD,GACC,IAADisC,EAGAzoC,EAAa5C,EAAUZ,GACvBwD,EAAa3C,EAAUb,GACvByD,EAAc7C,EAAUZ,EAAMiC,SAC9BwB,EAAc5C,EAAUb,EAAMiC,SAC9ByB,EAAU9C,EAAUZ,EAAM0/B,aAC1Bh8B,EAAU7C,EAAUb,EAAM0/B,aAC1B77B,EAAgBjD,EAAUZ,EAAM2/B,cAChC97B,EAAgBhD,EAAUb,EAAM2/B,cAChC/6B,EAAehE,EAAUZ,GACzB4E,EAAe/D,EAAUb,GAEzBW,EAAkB5C,EAAK6C,EAAUC,EAAUb,EAAO,MAAO,MAAO,OAEhEgE,EAAgBjG,EAAK6C,EAAUC,GAC/BmD,EAAgBjG,EAAK8C,EAAUD,GAC/BuD,EAAcvD,EAAUC,EAAUb,EAAM2/B,cACxCx7B,EAActD,EAAUD,EAAUZ,EAAM2/B,cAExCh/B,EAAkB5C,EAAK6C,EAAUC,EAAUb,EAAO,MAAO,OAEzDuE,EAAiB3D,EAAUZ,EAAMgB,cACjCuD,EAAiB1D,EAAUb,EAAMe,cAEjC,IAAMmE,EAAgB,CACpB8/B,aAAcpkC,EAASnG,KACvB0qC,SAAUhiC,EAAK1I,KACfmrC,aAAc/kC,EAASpG,KACvBklC,aAAc3/B,EAAM2/B,cAGhBkL,EAAS,IAAIR,GAAOtsC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAO,EAAGkF,GAEnE,GAAsB,WAAlB/B,EAAKwC,WAA0BxC,EAAKN,MAAM,gBAC5C,OAAOgoC,EAGT,GAAI7qC,EAAMgB,aAAakgC,cAAgB/9B,EAAKuV,cAE1C,OADAxT,EAAKg8B,aAAc,EACZ2J,EAGLjqC,EAASR,WAAW,eAAgB,WAAY,gBAClDS,EAASyE,QAAU,GACnBJ,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMwgC,EACJ3iC,EAAKkoC,SAAWxqC,EAAST,WAAW,eAAgB,gBAAqC,IAAnB+C,EAAKmlC,UAE7E,GAAInlC,EAAKN,MAAM,gBACbM,EAAK3D,KACHQ,EAAM0pC,WAAW,MAAO,kBAAoB,OAC1C1pC,EAAM0pC,WAAW,OAAQ,cAAgB,QACzC1pC,EAAM0pC,WAAW,QAAU,OAC3B1pC,EAAM0pC,WAAW,QAAU,MAC3B,SACJxkC,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAKmgC,SAAWliC,EAAK3D,UAChB,GAAI2D,EAAKN,MAAM,aAAejC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAC3EW,EAAK3D,KAAO4iC,GAAiBxhC,EAASgD,WACjC,GAAIT,EAAKN,MAAM,iBAAmBjC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAC/EW,EAAK3D,KAAO2jC,GAAeviC,EAASgD,WAC/B,GAAIT,EAAKN,MAAM,iBAAmBjC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAAU,CACzF,IAAM0gC,EAAOF,GAAejlC,EAAK6C,EAASgD,MAC1CT,EAAK3D,KAAO0jC,EAAKr2B,EACjB1J,EAAKwK,GAAKu1B,EAAKp2B,EACf5H,EAAKE,aAAexE,EAASgD,KAC7BsB,EAAKkgC,OAASjiC,EAAKwK,GACnBzI,EAAKmgC,SAAWliC,EAAK3D,IACvB,MAAW2D,EAAKN,MAAM,kBACJ,IAAZ9E,EAAIK,IACN+E,EAAK3D,KAAO,SAEZ2D,EAAK3D,KACHQ,EAAMgF,WAAW,YAAc,WAC7BhF,EAAMgF,WAAW,UAAY,QAC7BhF,EAAMgF,WAAW,SAAW,QAC5B,UAIR,IAAIknC,GAAa,EACbC,GAAa,EACbC,GAAgB,EAChBC,GAAc,EACZC,EACJnpC,EAAKN,MAAM,WAAY,eAAgB,cAAe,eAAgB,gBAExE,IAAKM,EAAK+Y,MAAQowB,EAAc,CAC9B,IAAMC,EAASppC,EAAKhD,QAAQ,WACvB+rC,EAAatrC,EAASR,WAAW,aAAemsC,GACnDppC,EAAK3D,KAAO,UACF2sC,EAAavrC,EAASR,WAAW,aAAemsC,GAC1DppC,EAAK3D,KAAO,SACF4sC,EAAgBxrC,EAASR,WAAW,gBAAkBmsC,GAChEppC,EAAK3D,KAAO,OACF6sC,EAAczrC,EAASR,WAAW,gBAC5C+C,EAAK3D,KAAO,WAEV2sC,GAAcC,GAAiBF,GAAcG,KAC/CnnC,EAAKK,gBAAkB3E,EAAS0E,QAEpC,CAEI1E,EAASR,WAAW,eAAiB+C,EAAKhD,QAAQ,YACpDgD,EAAK4P,SAAW,EAChB7N,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMlC,EAAkBxC,EAASR,WAAW,YAAcJ,EAAMgB,aAAaogC,YACvE8J,EACJhoC,EAAqBnF,EAAKoF,EAAMtC,EAASyC,MAAM,GAAIF,EAAiBpD,EAAMC,WACtEkrC,EAAqBtqC,EAASyC,MAAM,GACtCJ,EAAqBnF,EAAKoF,EAAMtC,EAASyC,MAAM,GAAIF,EAAiBpD,EAAMC,WAC1E,EACAmrC,EAAoBF,EAAqBC,EAEzCqB,GACD3rC,EAAS+C,MACT/C,EAASgC,MAAM,oBAAsBhC,EAASX,QAAQ,iBACtDW,EAASpG,KAAK+H,SAAS,WAAa3B,EAAS+C,KAAKpB,SAAS,UAC3D3B,EAASpG,KAAK+H,SAAS,aAAe3B,EAAS+C,KAAKpB,SAAS,UAC7D3B,EAASgC,MAAM,UAAW,mBAAqBhC,EAASX,QAAQ,YAChEW,EAASgC,MAAM,SAAU,kBAAoBhC,EAASX,QAAQ,YAIjE,IAAKssC,GAA0B3rC,EAAS+C,KAAM,CAC5C,IAAMA,EAAO7F,EAAI0P,MAAM/O,IAAIpG,EAAKuI,EAAS+C,OACzC4oC,KAA4B5oC,EAAKwJ,cAAevM,EAASpG,KAAK+H,SAASoB,EAAKwJ,aAC9E,CAEA,GAA0B,IAAtBg+B,GAA2BjoC,EAAKN,MAAM,mBACxCuoC,EAAoB,OACf,GAA0B,IAAtBA,GAA2BjoC,EAAKhD,QAAQ,WACjDU,EAASX,QAAQ,eAAiBW,EAAST,WAAW,SACtDgrC,EAAoB,OACf,GAA0B,IAAtBA,GAA2BvqC,EAASX,QAAQ,eAAgB,CACrE,IAAMqD,EAAgBxF,EAAIuF,MAAM5E,IAAIpG,EAAK6K,EAAK3D,OAAQ+D,cACZ,IAAtCA,EAAc1C,EAASyC,MAAM,IAC/B8nC,EAAoBD,EACXtqC,EAASyC,MAAM,IAA4C,IAAtCC,EAAc1C,EAASyC,MAAM,MAC3D8nC,EAAoBF,EAExB,CAEA,GAA0B,IAAtBE,EACF,OAAOP,EAGT,GAAK1nC,EAAKN,MAAM,cACThC,EAASV,QAAQ,WAAaU,EAASgf,UAAY,KAAO7f,EAAMC,YAClEkD,EAAKN,MAAM,kBAAoBhC,EAASV,QAAQS,EAAS0C,MAAM,OAC5D1C,EAAS0C,MAAM,KAAOzC,EAASV,QAAQS,EAAS0C,MAAM,MACzDH,EAAKN,MAAM,iBAAmBhC,EAASoC,UAAU,OAEpD,OAAO4nC,EAGT,GACG7qC,EAAM0pC,WAAW,mBAAqBvmC,EAAKhD,QAAQ,UACnDH,EAAM0pC,WAAW,eAAiBvmC,EAAKhD,QAAQ,QAGhD,OADA+E,EAAKjD,QAAUjC,EAAMiC,QACd4oC,EAST,GANI7qC,EAAM0pC,WAAW,iBAAmB7oC,EAASV,QAAQ,WACrDpC,EAAIuF,MAAM5E,IAAIpG,EAAK6K,EAAK3D,OAAQ+D,cAAsB,OAAK,IAC7D6nC,GAAqB,EACrBlmC,EAAKjD,QAAUjC,EAAMiC,SAGlBpB,EAAST,WAAW,iBAAmBgrC,GAAqB,GAC5DjoC,EAAKhD,QAAQ,UAAYU,EAAST,WAAW,eAC7C+C,EAAKhD,QAAQ,SAAWU,EAAST,WAAW,eAC5C+C,EAAKhD,QAAQ,UAAYU,EAAST,WAAW,WAAY,cAAe,iBACxE+C,EAAKhD,QAAQ,aACZU,EAAST,WAAW,gBAAiB,cAAe,gBACrD+C,EAAKhD,QAAQ,YACXH,EAAMC,YAAckD,EAAKN,MAAM,qBAC/BhC,EAASX,QAAQ,cAAgBW,EAAST,WAAW,aACvD+C,EAAKmb,MAAMO,QAAUhe,EAAST,WAAW,gBACzC+C,EAAKmb,MAAMQ,OAASje,EAAST,WAAW,cAG3C,OADA8E,EAAKG,gBAAkBxE,EAASyE,QACzBulC,EAGT,GAAI1nC,EAAKhD,QAAQ,YAAcgD,EAAKN,MAAM,qBACrC7C,EAAMC,WAAaY,EAASX,QAAQ,eAEvC,OADAgF,EAAKM,aAAe3E,EAAS+C,KACtBinC,EAGT,GAAI1nC,EAAK4P,SAAW,GAAK/S,EAAMgF,WAAW,YAAclF,EAAWe,EAAUb,GAE3E,OADAkF,EAAKhD,QAAUlC,EAAMkC,QACd2oC,EAGT3lC,EAAKsgC,MAAK,GAAAjoC,OAAMsD,EAAS4G,IAAIlL,GAAE,OAE/B,IAAMuuC,EAAcnjC,EAAuB/G,EAAUuC,GACrD,GAAI2nC,EAOF,OANIlqC,EAASR,WAAW,kBACtByqC,EAAOxH,OAAS,CAACyH,EAAaA,GAC9B5lC,EAAKK,gBAAkB3E,EAAS0E,SAEhCulC,EAAOxH,OAASyH,EAEXD,EAGT,GAAI1nC,EAAKN,MAAM,gBAEb,OADAgoC,EAAOxH,OAASziC,EAAS+mC,QAClBkD,EAGL1nC,EAAK0gC,KAAO,IACd3+B,EAAK2+B,KAAO1gC,EAAK0gC,MAGnB,IAKI39B,EALEumC,EAAY7rC,EAASM,MAAM9E,IAAMyE,EAASK,MAAM9E,IAAM,QAAU,OAOtE,OAAQ+G,EAAK1I,MACb,IAAK,UACHyL,EAAY/C,EAAKwK,IAAoB,SAAd8+B,EAAuB,EAAI,GAClDvnC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,UACH,IAAMwmC,EAA+C,QAAnC1sC,EAAMgB,aAAa8gC,YACrC57B,EAAY/C,EAAKwK,IAAM++B,EAAY,EAAI,GACnCA,IAAWxnC,EAAK48B,YAAc,OAClC58B,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACwB,IAAvBrF,EAASK,MAAM9E,MAAWyE,EAASK,MAAM9E,IAAM,GACnD,IAAM6sC,EAAItrC,KAAKC,MAAMgD,EAASM,MAAM9E,IAAMyE,EAASK,MAAM9E,KACzD8J,EAAY+iC,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,GAAKA,GAAK,EAAI,GAAK,GACtE/jC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,YACwB,IAAvBtF,EAASM,MAAM9E,MAAWwE,EAASM,MAAM9E,IAAM,GACnD8J,EAAYvI,KAAK4C,IAAI,IAAK5C,KAAKC,MAAO,GAAKiD,EAASK,MAAM9E,IAAOwE,EAASM,MAAM9E,KAAO,GACvF8I,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACHA,EAAYvI,KAAK4C,IAAI,IAAK,GAAK,GAAK2G,EAAYnJ,EAAK8C,EAASkB,SAC9DmD,EAAKkgC,OAASl/B,EACd,MACF,IAAK,WACL,IAAK,aACH,IAAMymC,EAAI9rC,EAASgf,SAAW5Y,EAAgBpG,GAC9CqF,EAAYymC,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAC3FznC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,MACHA,EAAY/C,EAAKwK,IAAM9M,EAAS4B,OAAS,EAAI,GAC7CyC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACL,IAAK,aACH,IAAM0mC,EACDhsC,EAASif,SAAW5Y,EAAgBrG,IACpCC,EAASgf,SAAW5Y,EAAgBpG,IACzCqF,EAAY0mC,GAAM,EAAI,IAAMA,GAAM,EAAI,IAAMA,GAAM,EAAI,GAAKA,GAAM,EAAI,GAAK,GAC1E1nC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACL,IAAK,aACHA,EAAY,GAAK,GAAKgB,EAAYnJ,EAAK6C,EAASmB,QAChDmD,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACHA,EAAY/C,EAAKwK,IAAM/M,EAASV,QAAQ,gBAAkBU,EAASgD,KAAO,EAAI,GAC9EsB,EAAKkgC,OAASl/B,EACd,MACF,IAAK,YACHA,EAAY/C,EAAKwK,IAAM9M,EAAST,WAAW,yBAA2B,EAAI,GAE1E,MACF,IAAK,eACH8F,EAAY/C,EAAKwK,IAAM9M,EAASoC,UAAU,OAAS,EAAI,GACvDiC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,iBACHA,EAAY/C,EAAKwK,IAAM9M,EAASoC,UAAU,OAAS,EAAI,GACvDiC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACHA,EAAY/C,EAAKwK,IAAM3N,EAAMiC,UAAYjC,EAAM0pC,WAAW,gBAAkB,EAAI,GAChFxkC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,QACHA,EAAY68B,GAAcniC,EAASgD,MACnCsB,EAAKkgC,OAASl/B,EACdhB,EAAKE,aAAexE,EAASgD,KAC7B,MACF,IAAK,WACL,IAAK,cACHsC,EAAYvI,KAAK6C,IAAI,EAAG7C,KAAKC,MAAO,IAAMgD,EAAS+mC,QAAW/mC,EAASojC,UACvE9+B,EAAKkgC,OAASl/B,EACd,MACF,IAAK,QACL,IAAK,WACH,IAAM4G,GAAInP,KAAKC,MAAO,GAAKgD,EAAS+mC,QAAW/mC,EAASojC,SACxD99B,EAAY4G,IAAK,EAAI,IAAMA,IAAK,EAAI,IAAMA,IAAK,EAAI,IAAMA,IAAK,GAAK,GAAKA,IAAK,GAAK,GAAK,GACvF5H,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACH,GAAgB,IAAZnI,EAAIK,IACN+E,EAAKwC,SAAW,WAChBxC,EAAKrI,OAAS,cACdoL,EAAY,IACZhB,EAAKigC,SAAW,kBAIhB,OAFAhiC,EAAKwC,SAAW,UAChBxC,EAAKoW,aAAc,EACXvZ,EAAMkC,SACd,IAAK,WACHgE,EAAY,GACZhB,EAAKigC,SAAW,cAChB,MACF,IAAK,SACHj/B,EAAY,GACZhB,EAAKigC,SAAW,cAChB,MACF,IAAK,QACHj/B,EAAY,GACZhB,EAAKigC,SAAW,YAChB,MACF,QACEj/B,EAAY,GACZhB,EAAKigC,SAAW,aAGpB,MAEF,IAAK,cACHj/B,EAA0B,IAAd/C,EAAK0gC,KAAa,GAAmB,IAAd1gC,EAAK0gC,KAAa,GAAK,GAC1D3+B,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACL,IAAK,YACHA,EAAY,IAAMvI,KAAKC,MAA0B,KAAnBiD,EAAS8mC,QAAkB9mC,EAASmjC,SAClE99B,EAAYvI,KAAKC,MAAMD,KAAKC,OAAO,IAAMsI,EAAY,KAAO,GAAK,MAAQ,MAAQ,EACjFhB,EAAKkgC,OAASl/B,EACd,MACF,QACEA,EAAY/C,EAAKwK,GAGnB,GAAkB,IAAdzH,EACF,OAAO2kC,EAGT,IAAMgC,GAAS,GAGVjsC,EAASR,WAAW,eAAiB8F,GAAa,IAClDtF,EAASR,WAAW,gBACpBQ,EAASqC,UAAU,QAA4B,YAAlBE,EAAKwC,UAClC/E,EAASR,WAAW,gBACpBQ,EAASqC,UAAU,MAAO,QAA4B,aAAlBE,EAAKwC,UAE5CknC,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAASR,WAAW,aAA6B,UAAdqsC,GAC5CI,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAEhC1E,EAASR,WAAW,eACpBJ,EAAM0pC,WAAW,SACjBvmC,EAAKhD,QAAQ,OAAQ,SAAU,UAE/B0sC,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAKjD,QAAUjC,EAAMiC,UAEpBrB,EAASR,WAAW,cAAgB+C,EAAK4L,QAAU5L,EAAKsM,iBACxD7O,EAASR,WAAW,cAAgB+C,EAAKmb,MAAMK,SAEhDkuB,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAG9BzE,EAAST,WAAW,cAAgB+C,EAAKhD,QAAQ,SACnD0sC,GAAOvqC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SACvBzE,EAAST,WAAW,aAAe+C,EAAKhD,QAAQ,UACzD0sC,GAAOvqC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAG9B1E,EAASR,WAAW,gBAAkB+C,EAAKoW,cAC7CszB,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAG9B1E,EAASR,WAAW,aAAe,CAACQ,EAAS2iB,OAAQ1iB,EAAS0iB,QAAQ/gB,SAAS,OAC7E5B,EAAS2iB,SAAW1iB,EAAS0iB,QAC/BspB,GAAOvqC,KAAK,MACZ4C,EAAK2/B,QAAU,WAEfgI,GAAOvqC,KAAK,MACZ4C,EAAK2/B,QAAU,UAEjB3/B,EAAKK,gBAAkB3E,EAAS0E,SAG9B1E,EAASgD,MAAQw+B,GAAiBxhC,EAASgD,QAAUT,EAAK3D,MAC5DqtC,GAAOvqC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,MAE5BhD,EAASV,QAAQ,gBAAoC,aAAlBiD,EAAKwC,UACxC/E,EAASV,QAAQ,iBAAqC,YAAlBiD,EAAKwC,UAE1CknC,GAAOvqC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,MAE5BhD,EAASV,QAAQ,gBACjBU,EAASiC,MAAM,WACfM,EAAKhD,QAAQ,QAAS,WACtBS,EAASV,QAAQ,iBACjBU,EAASiC,MAAM,WACfM,EAAKhD,QAAQ,QAAS,WACtBS,EAASV,QAAQ,iBACjBU,EAASiC,MAAM,oBACfM,EAAKhD,QAAQ,QAAS,WAEvB0sC,GAAOvqC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,MACpBhD,EAASV,QAAQ,GAAD3C,OAAI4F,EAAK3D,KAAI,WACtCqtC,GAAOvqC,KAAKvE,EAAIK,IAAM,EAAI,KAAO,MACjC8G,EAAKE,aAAexE,EAASgD,MAG1BT,EAAKN,MAAM,WAAajC,EAASqC,UAAU,MAAO,MAAO,MAAO,QAChEE,EAAKN,MAAM,UAAYhC,EAAS8mC,SAAW9mC,EAASmjC,QAAU,GAC9D7gC,EAAKN,MAAM,cAAgBhC,EAASoC,UAAU,MAAO,QACxD4pC,GAAOvqC,KAAK,MACZ4C,EAAKkgC,OAAqB,EAAZl/B,GACLnI,EAAIK,IAAM,GAAK+E,EAAKN,MAAM,eAAiB2pC,GACpDK,GAAOvqC,KAAK,MACZ4C,EAAKkgC,OAAqB,IAAZl/B,GACL/C,EAAKN,MAAM,eAAiB7C,EAAM0pC,WAAW,OAAQ,aAAc,OAAQ,UACpFmD,GAAOvqC,KAAK,MACZ4C,EAAKkgC,OAASl/B,EAAY,EAC1BhB,EAAKjD,QAAUjC,EAAMiC,SAGnBjC,EAAMe,aAAasgC,gBACrBwL,GAAOvqC,KAAK,MACZ4C,EAAKm8B,eAAgB,GAGnB6K,GAAcC,GAAcC,GAAiBC,GAC/CQ,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAE/B1E,EAASR,WAAW,kBAAoB+C,EAAKmb,MAAMS,OACnDne,EAASR,WAAW,eAAiB+C,EAAKmb,MAAMM,MAEjDiuB,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAASR,WAAW,gBAAkB+C,EAAKmb,MAAMI,UAC1DmuB,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IA6CIa,GA7CE2mC,GAAI,GAAAvvC,OAAM4F,EAAK3D,KAAI,SACnButC,GAAiBnsC,EAASR,WAAW0sC,IACrCE,GAAiBnsC,EAAST,WAAW0sC,IACrCG,GAAkBrsC,EAASR,WAAW,eAAiBS,EAAST,WAAW,cAC3E8sC,GAAmBltC,EAAM4/B,YACzBuN,GAAmBntC,EAAM6/B,aAA6B,UAAd18B,EAAK3D,KAC7C4tC,GAAkBptC,EAAM8/B,YAA4B,SAAd38B,EAAK3D,MAC9ButC,IAAkBC,IAAkBG,IAAoBC,MACzDF,IAAoBD,IAGlCJ,GAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAKG,gBAAkBxE,EAASyE,UAEhCunC,GAAOvqC,KAAK,MACRyqC,KAAgB7nC,EAAKK,gBAAkB3E,EAAS0E,SAChD0nC,KAAgB9nC,EAAKG,gBAAkBxE,EAASyE,WAMpDxF,EAAWc,EAAUZ,KAClBA,EAAMgF,WAAW,aAAe7B,EAAKhD,QAAQ,aAC7CH,EAAMgF,WAAW,WAAa7B,EAAKhD,QAAQ,YAE9C0sC,GAAOvqC,KAAK,MACZ4C,EAAKhD,QAAUlC,EAAMkC,SAGrBpC,EAAWe,EAAUb,KAClBA,EAAMgF,WAAW,UAAY7B,EAAKhD,QAAQ,WAC1CH,EAAMgF,WAAW,WAAa7B,EAAKN,MAAM,WAAY,iBAExDgqC,GAAOvqC,KAAK,MACZ4C,EAAKhD,QAAUlC,EAAMkC,SAIzBgE,EAAYxF,EAAK/C,KAAK6C,IAAI,EAAGuC,EAAWmD,EAAYlD,EAAU6pC,GAAQ,GAAI,SAAY,QAMtF,IAAMQ,GAAelqC,EAAKN,MAAM,aAAehC,EAAWD,EACpD2qC,GAA+B,YAAlBpoC,EAAKwC,SAAyB,MAAQ,MACzDT,EAAK0/B,UACHzhC,EAAKN,MAAM,aACP0E,EAAqBxJ,EAAK8C,EAAU0qC,GAAY1qC,EAAS1C,QACzDoJ,EAAqBxJ,EAAK6C,EAAU2qC,GAAY3qC,EAASzC,QAEvB,IAApCkvC,GAAatrC,OAAOwpC,KACnBzF,GAAcuH,GAAatrC,OAAOwpC,IAAc,EACnDplC,GAASknC,GAAavrC,SAASypC,IACtB1qC,EAAST,WAAW,YAC7B+F,GAASknC,GAAavrC,SAASypC,IAC/BrmC,EAAKG,gBAAkBxE,EAASyE,UAEhCa,GAASknC,GAAansC,MAAMqqC,IAC5BrmC,EAAKw/B,YAAc2I,GAAatrC,OAAOwpC,KAIrC3qC,EAASR,WAAW,WAA+B,aAAlB+C,EAAKwC,WACxCQ,GAASpD,EAAoB,EAAToD,GAAc,GAClCjB,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IA2EIc,GA3EEknC,GAAS,GACXzsC,EAAST,WAAW,cAAgB+C,EAAKhD,QAAQ,OAAQ,SAC3DmtC,GAAOhrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAG7B1E,EAASR,WAAW,SAAWQ,EAAS6B,QAA4B,aAAlBU,EAAKwC,UACvD/E,EAAS+mC,SAAW/mC,EAASojC,QAAU,IACpCpjC,EAASR,WAAW,aAAe+C,EAAKhD,QAAQ,UAChDS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,SAC7CS,EAASR,WAAW,YAAc+C,EAAKhD,QAAQ,UAC/CS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,SAC9B,YAAlBgD,EAAKwC,UAA0B/E,EAAS2B,WAAa3B,EAASR,WAAW,OAAQ,UAEpFktC,GAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAASR,WAAW,eAAiBQ,EAAS2B,WAAaY,EAAKhD,QAAQ,SACjFmtC,GAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB,cAEtB3E,EAASR,WAAW,gBACpBJ,EAAM0pC,WAAW,MAAO,mBACN,YAAlBvmC,EAAKwC,UACL/E,EAASiC,MAAM,YACfjC,EAASR,WAAW,gBACpBJ,EAAM0pC,WAAW,MAAO,mBACN,aAAlBvmC,EAAKwC,UAEN2nC,GAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAKjD,QAAUjC,EAAMiC,SAErBjC,EAAMe,aAAawgC,cACnBvhC,EAAM0pC,WAAW,MAAO,mBACN,aAAlBvmC,EAAKwC,UACL2nC,GAAOhrC,KAAK,MACZ4C,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAKggC,sBAAuB,GAE3BtkC,EAASR,WAAW,cAAgBQ,EAAS+mC,SAAW/mC,EAASojC,QAAU,GAC3EpjC,EAASR,WAAW,eAAiBQ,EAAS2B,WAA+B,aAAlBY,EAAKwC,UAEjE2nC,GAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAASR,WAAW,aAAc,eAAmC,aAAlB+C,EAAKwC,WACjE2nC,GAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAG7B1E,EAASV,QAAQ,eACjBU,EAASiC,MAAM,SAAU,UAAW,kBAClB,aAAlBM,EAAKwC,UACL/E,EAASV,QAAQ,mBACjBU,EAASiC,MAAM,aACG,YAAlBM,EAAKwC,UACL/E,EAASV,QAAQ,eAAiBU,EAASnG,KAAK8yC,WAAW,aAAepqC,EAAK+Y,KAElFoxB,GAAOhrC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,OAE5BhD,EAASV,QAAQ,aAChBU,EAASiC,MAAM,SAAU,SAAU,cAAe,gBAChC,YAAlBM,EAAKwC,UACN/E,EAASV,QAAQ,gBAAoC,aAAlBiD,EAAKwC,UACxC/E,EAASV,QAAQ,iBAAqC,YAAlBiD,EAAKwC,YAE1C2nC,GAAOhrC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,MAG/BuC,GAASzF,EAAK/C,KAAK6C,IAAI,EAAGuC,EAAWoD,GAASnD,EAAUsqC,GAAQ,IAAK,QAAW,QAMhF,IAAM9B,GAAcroC,EAAK6X,uBAA2C,aAAlB7X,EAAKwC,SAA0B,MAAQ,MACnF6nC,GAA+B,QAAhBhC,GACrBtmC,EAAKugC,WAAal+B,EAAqBxJ,EAAK8C,EAAU2qC,GAAa3qC,EAAS1C,QACvC,IAAjC0C,EAASkB,OAAOypC,KACjB1F,GAAcjlC,EAASkB,OAAOypC,IAAe,GAC9CroC,EAAK6W,gBACL5T,GAAUvF,EAASiB,SAAS0pC,IACnB5qC,EAASR,WAAW,YAC7BgG,GAAUvF,EAASiB,SAAS0pC,IAC5BtmC,EAAKK,gBAAkB3E,EAAS0E,UAEhCc,GAAUvF,EAASK,MAAMsqC,IACzBtmC,EAAKqgC,aAAe1kC,EAASkB,OAAOypC,KAIlCxrC,EAAM0pC,WAAW,SAAW7oC,EAASV,QAAQ,UAAYqtC,KAC3DpnC,GAAUrD,EAAqB,EAAVqD,GAAe,GACpClB,EAAKjD,QAAUjC,EAAMiC,SAGvB,IAAMwrC,GAAS,GACX5sC,EAAST,WAAW,iBAAmBS,EAAS4B,QAAU+qC,IAC5DC,GAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAEhCzE,EAASgC,MAAM,YACfhC,EAAST,WAAW,gBACpBJ,EAAM0pC,WAAW,MAAO,oBACvB8D,IAEDC,GAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,QAChCJ,EAAKjD,QAAUjC,EAAMiC,SAErBjC,EAAMgB,aAAaugC,cACnBvhC,EAAM0pC,WAAW,MAAO,oBACvB8D,KACDC,GAAOnrC,KAAK,MACZ4C,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAK2gC,sBAAuB,GAG1B7lC,EAAMgF,WAAW,WAAanE,EAAST,WAAW,eAAiBotC,KACrEC,GAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,WAG5BkoC,IAAgB3sC,EAASX,QAAQ,aAClCW,EAASgC,MAAM,SAAU,SAAU,cAAe,gBAClDhC,EAASX,QAAQ,aAAmD,QAAxC+rC,EAAIluC,EAAI++B,QAAQp+B,IAAIpG,EAAKuI,EAASpG,cAAM,IAAAwxC,GAApCA,EAAsC/rB,MACrEstB,IAAgB3sC,EAASX,QAAQ,mBACrCutC,GAAOnrC,KAAK,MACZ4C,EAAKM,aAAe3E,EAAS+C,OAG1B/C,EAASX,QAAQ,iBAAmBW,EAASgC,MAAM,UAAY2qC,IAC/D3sC,EAASX,QAAQ,mBAAqBW,EAASgC,MAAM,cAAgB2qC,MACxEC,GAAOnrC,KAAK,MACZ4C,EAAKM,aAAe3E,EAAS+C,MAG3B/C,EAAST,WAAW,aAAeotC,KACrCC,GAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAGlCc,GAAU1F,EAAK/C,KAAK6C,IAAI,EAAGuC,EAAWqD,GAAUpD,EAAUyqC,GAAQ,IAAK,QAAW,QAKlF,IAAI7B,GAAa3lC,EAAcrF,EAAS1C,MAAOgI,EAAWC,GAAQC,IAE5DsnC,GAA8B,YAAnB1tC,EAAMy/B,UACrB,CAAC,cAAe,mBAAmBj9B,SAASW,EAAKrI,QAC/C4yC,KACF9B,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,OAG/ChrC,EAASR,WAAW,2BACtBwrC,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,OAG9C5rC,EAAM0pC,WAAW,MAAO,mBAAqBvmC,EAAKhD,QAAQ,SAC1DH,EAAM0pC,WAAW,OAAQ,eAAiBvmC,EAAKhD,QAAQ,UAC1DyrC,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,MACjD1mC,EAAKjD,QAAUjC,EAAMiC,UAEpBjC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,UACxCH,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,WAE1CyrC,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,MACjD1mC,EAAKjD,QAAUjC,EAAMiC,SAGnB6jC,IACF8F,GAAajuC,KAAKC,MAAMkF,EAAK8oC,IAAc7tC,EAAIK,IAAM,EAAI,IAAM,KAC/D8G,EAAK4gC,WAAaA,GAKpB,IAAIl/B,GAAU,KACVhG,EAAST,QAAQgD,EAAK3D,MACpBoB,EAASR,WAAW,iBACtBwG,GAAU,KACV1B,EAAKK,gBAAkB3E,EAAS0E,SAEhCsB,GAAU,KAEHhG,EAASR,WAAW,aAC7BwG,GAAU,KACV1B,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMqoC,GACJ/sC,EAASqC,UAAU,QACD,aAAlBE,EAAKwC,WACJ/E,EAASR,WAAW,WACnB+C,EAAKN,MAAM,WAAyB,IAAZ9E,EAAIK,KAChC8G,EAAKyB,SAAWgnC,GAEhB,IAAMC,GAAY,GAqClB,GAnCI5tC,EAAMgB,aAAayD,WAA+B,aAAlBtB,EAAKwC,WAA4BmgC,GACnE8H,GAAUtrC,KAAwB,YAAnBtC,EAAMy/B,SAA0B1hC,EAAIK,IAAM,EAAI,KAAO,KAAQ,MAC5E8G,EAAKT,WAAY,GACRzE,EAAMgB,aAAa0D,eAAmC,YAAlBvB,EAAKwC,WAA2BmgC,IAC7E8H,GAAUtrC,KAAwB,YAAnBtC,EAAMy/B,SAA0B1hC,EAAIK,IAAM,EAAI,KAAO,KAAQ,MAC5E8G,EAAKR,eAAgB,IAGnB7D,EAAST,WAAW,eAAiBS,EAAS8mC,UAAY9mC,EAASmjC,SAClEhkC,EAAMgB,aAAaggC,MAAUhhC,EAAMgB,aAAa0/B,SAAU7/B,EAASV,QAAQ,WAC3ES,EAASR,WAAW,2BACvBwtC,GAAUtrC,KAAK,MACf4C,EAAKG,gBAAkBxE,EAASyE,SAG9B1E,EAASR,WAAW,gBAAkBgrC,EAAoB,IAC5DwC,GAAUtrC,KAAK,MACf4C,EAAKK,gBAAkB3E,EAAS0E,SAG9BtF,EAAMgB,aAAawgC,gBACrBoM,GAAUtrC,KAAK,MACf4C,EAAKs8B,eAAgB,GAGnB5gC,EAASR,WAAW,WAAa0lC,IACnC8H,GAAUtrC,KAAK,MACf4C,EAAKK,gBAAkB3E,EAAS0E,SAG9BzE,EAAST,WAAW,aAAc,WAAagrC,EAAoB,IACrEwC,GAAUtrC,KAAK,MACf4C,EAAKG,gBAAkBxE,EAASyE,SAG9B1E,EAASV,QAAQ,cAAgBiD,EAAKolC,wBAA2B,EAAG,CACtE,IAAMA,GAAyB5qC,KAAKC,MAAMuF,EAAKolC,wBAC3CA,IAA0B,EAC5BqF,GAAUtrC,KAAK,KAAgC,IAAzBimC,IAEtBqF,GAAUtrC,KAAK,MAEjB4C,EAAKE,aAAexE,EAASgD,IAC/B,CAEIhD,EAASV,QAAQ,gBAAkBkrC,EAAoB,IAAMjoC,EAAK+Y,KACpE0xB,GAAUtrC,KAAK,MACf4C,EAAKE,aAAexE,EAASgD,MACpBhD,EAASV,QAAQ,cAC1B0tC,GAAUtrC,KAAK,MACf4C,EAAKE,aAAexE,EAASgD,MAG3BT,EAAKhD,QAAQkiC,GAAmBxhC,EAAS+C,SACxCwnC,EAAoB,GAAKjoC,EAAKhD,QAAQ,aACtCS,EAASR,WAAW,aACvBwtC,GAAUtrC,KAAK,MACf4C,EAAKM,aAAe3E,EAAS+C,MAG3B5D,EAAMgB,aAAakgC,aAAe/9B,EAAK+Y,KAAOtb,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,QACxForC,GAAUtrC,KAAK,MACf4C,EAAKg8B,aAAc,GAGrB,IAEI2M,GAFEhnC,GAAW7D,EAAU4qC,GAAW,GAAI,QAG1C,GAAIhtC,EAASR,WAAW,kBAAkC,IAAd+C,EAAK0gC,OAAe6J,GAAU,CACxE,IAAMI,GAAQltC,EAAS/F,QACvBizC,GAAMxoC,QAAU,wBAChBL,EAAmBlH,EAAK+vC,GAAOjtC,EAAUsC,EAAMnD,EAAOkF,GACtD2oC,GAAc7B,GAAcjuC,EAAK+vC,GAAOjtC,EAAUsC,EAAMnD,GAAOqjC,OAC/Dn+B,EAAKK,gBAAkB3E,EAAS0E,OAClC,CAGA,IADA,IAAI+9B,GAAmB,GACdnoC,GAAI,EAAGA,GAAI,GAAIA,KACtBmoC,GAAOnoC,IACLuL,EAAemlC,GAAY1wC,GAAGkwC,EAAmBuC,GAAW/mC,GAASC,IAGzE,GAAI1D,EAAKuC,aAAevC,EAAKmlC,WAAa,GAAK,EAAG,CAChD,IAAMyF,GAAmBntC,EAASR,WAAW,UAAY,EAAI,EAE7D8E,EAAKogC,UAAS,QAAA/nC,OAAW4F,EAAKmlC,UAAS,UAIvC,IAHA,IAAM0F,GAAeptC,EAASV,QAAQ,cAClCiF,IAAgB,EAChB8oC,GAAYrtC,EAASmB,OAAOwpC,IAAY2C,GAAA,SAAAC,GAE1C,IAAMC,EAAY/tC,EAAgB8F,GAAQ8nC,IACtCI,EAAmB,EACvBhL,GAASA,GAAO35B,KAAI,SAAA4kC,GAClB,GAAIH,EAAO,CACT,IACMI,EAAiB9nC,EADDR,EAAcrF,EAAS1C,MAAOgI,EAAWkoC,EAAWhoC,IAGxEioC,EACAjD,EACAuC,GACA/mC,GACAC,IAGF,OADAwnC,IACOC,EAAiBC,CAC1B,CACA,OAAOD,CACT,IAEI1tC,EAASR,WAAW,aACtB6tC,GAAYtwC,KAAK4C,IAAI,EAAG0tC,GAAY9qC,EAAKuC,YACzCR,EAAKK,gBAAkB3E,EAAS0E,UAEhC2oC,GAAYtwC,KAAK6C,KAAK,EAAGytC,GAAY9qC,EAAKuC,WAAaqoC,IACnDntC,EAASR,WAAW,YACtB8E,EAAKK,gBAAkB3E,EAAS0E,UAKhC0oC,IAAgBptC,EAASmB,OAAOwpC,IAAc,IAAMpmC,KACtD8oC,IAAa9qC,EAAKuC,WAAaqoC,GAC/B5oC,IAAgB,EAChBD,EAAKE,aAAexE,EAASgD,KAEjC,EApCSuqC,GAAQ,EAAGA,GAAQhrC,EAAKmlC,UAAY6F,KAAOD,GAAAC,GAqCtD,CASA,OAPAjpC,EAAKw/B,YACHvhC,EAAKN,MAAM,aAAehC,EAASkB,OAAOwpC,IAAc3qC,EAASmB,OAAOwpC,IAE1EV,EAAOxH,OAASwK,GAAc,CAACxK,GAAQwK,IAAexK,GAI/CwH,CACT,CCp3BO,SAAS2D,GACdzwC,EACA6C,EACAC,EACAsC,EACAnD,GAIAwD,EAAa5C,EAAUZ,GACvBwD,EAAa3C,EAAUb,GACvByD,EAAc7C,EAAUZ,EAAMiC,SAC9BwB,EAAc5C,EAAUb,EAAMiC,SAC9ByB,EAAU9C,EAAUZ,EAAM0/B,aAC1Bh8B,EAAU7C,EAAUb,EAAM0/B,aAC1B77B,EAAgBjD,EAAUZ,EAAM2/B,cAChC97B,EAAgBhD,EAAUb,EAAM2/B,cAChC/6B,EAAehE,EAAUZ,GACzB4E,EAAe/D,EAAUb,GACzBsE,EAAqB1D,EAAU7C,GAC/BuG,EAAqBzD,EAAU9C,GAE/B4C,EAAkB5C,EAAK6C,EAAUC,EAAUb,EAAO,MAAO,MAAO,OAEhEgE,EAAgBjG,EAAK6C,EAAUC,GAC/BmD,EAAgBjG,EAAK8C,EAAUD,GAC/BuD,EAAcvD,EAAUC,EAAUb,EAAM2/B,cACxCx7B,EAActD,EAAUD,EAAUZ,EAAM2/B,cACxCt7B,EAAmBzD,EAAU7C,GAC7BsG,EAAmBxD,EAAU9C,GAE7B4C,EAAkB5C,EAAK6C,EAAUC,EAAUb,EAAO,MAAO,OAEzDuE,EAAiB3D,EAAUZ,EAAMgB,cACjCuD,EAAiB1D,EAAUb,EAAMe,cAEjC,IAAMmE,EAAgB,CACpB8/B,aAAcpkC,EAASnG,KACvBsqC,aAAcnkC,EAASkpC,SACvB3E,SAAUhiC,EAAK1I,KACfmrC,aAAc/kC,EAASpG,KACvBkrC,aAAc9kC,EAASipC,SACvBpE,oBAAqB7kC,EAAS4tC,YAC9B9O,aAAc3/B,EAAM2/B,cAGhBkL,EAAS,IAAIR,GAAOtsC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAO,EAAGkF,GAEnE,GAAsB,WAAlB/B,EAAKwC,WAA0BxC,EAAKN,MAAM,gBAC5C,OAAOgoC,EAGT,IAAMnyB,EAAgBvV,EAAKuV,eAAiBvV,EAAK+Y,KAAOtb,EAAS6tC,aAChE7tC,EAASR,WAAW,gBAAkB+C,EAAKmb,MAAMI,QAElD,GAAI1e,EAAMgB,aAAakgC,cAAgBxoB,EAErC,OADAxT,EAAKg8B,aAAc,EACZ2J,EAGT,IAAM6D,EAAyB7tC,EAAST,WACtC,kBACA,mBACA,cACA,iBAGIuuC,EAAyB/tC,EAASR,WAAW,eAAgB,WAAY,cACzEwuC,EAAqBzrC,EAAKN,MAC9B,kBACA,kBACA,mBACA,2BACA,8BACA,iBACA,gBACA,wBACA,mBAEG6rC,GAA2B7tC,EAAST,WAAW,iBACjDuuC,IAA0BC,IACvBD,IAAwBzpC,EAAKK,gBAAkB3E,EAAS0E,SACxDzE,EAASX,QAAQ,kBACnBgF,EAAKM,aAAe3E,EAAS+C,KAE7B/C,EAASyE,QAAU,IAMvB,IAAMwgC,GAAcjlC,EAAST,WAAW,eAAgB,iBACrD+C,EAAKkoC,QAAWzqC,EAASR,WAAW,cAAgBS,EAASoC,UAAU,MAAO,SAC5D,IAAnBE,EAAKmlC,UAEH9oC,EAAO2D,EAAK3D,KAChB,GAAI2D,EAAKN,MAAM,gBAAiB,CAC9B,IAAMgsC,EAAkBjuC,EAASV,QAAQ,oBACzCV,EACEQ,EAAM0pC,WAAW,MAAO,oBAAsBmF,EAAkB,OAC9D7uC,EAAM0pC,WAAW,OAAQ,gBAAkBmF,EAAkB,QAC7D7uC,EAAM0pC,WAAW,QAAU,OAC3B1pC,EAAM0pC,WAAW,OAAQ,QAAU,MACnC,SACJxkC,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAKmgC,SAAW7lC,CAClB,MAAO,GAAI2D,EAAKN,MAAM,aAAejC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAC3EhD,EAAO4iC,GAAiBxhC,EAASgD,WAC5B,GAAIT,EAAKN,MAAM,iBAAmBjC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAC/EhD,EAAO2jC,GAAeviC,EAASgD,WAC1B,GAAIT,EAAKN,MAAM,iBAAmBjC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,UAC/EhD,ENmQG,SAAwBoE,GAC7B,GAAIA,EAAKpB,SAAS,UAChB,OAAOoB,EAAKkB,UAAU,EAAGlB,EAAKmB,QAAQ,KAG1C,CMxQW+pC,CAAeluC,EAASgD,WAC1B,GAAIT,EAAKN,MAAM,iBAAmBjC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAAU,CAEzFhD,EADawjC,GAAejlC,EAAK6C,EAASgD,MAC9BiJ,EACZ3H,EAAKmgC,SAAW7lC,EAChB0F,EAAKE,aAAexE,EAASgD,IAC/B,MACET,EAAKN,MAAM,iBACVM,EAAKN,MAAM,kBAAoB/C,EAAWc,EAAUZ,IAErDR,EACEQ,EAAMgF,WAAW,YAAc,WAC7BhF,EAAMgF,WAAW,UAAY,QAC7BhF,EAAMgF,WAAW,SAAW,QAC5BhF,EAAMgF,WAAW,WAAa,UAC9B,SACJE,EAAKhD,QAAUlC,EAAMkC,QACrBgD,EAAKmgC,SAAW7lC,GACP2D,EAAKN,MAAM,oBACpBrD,EAAOoB,EAAS0C,MAAM,GACbH,EAAKN,MAAM,cAChBjC,EAASiC,MAAM,WACjBrD,EAAO,WACEoB,EAASiC,MAAM,oBACxBrD,EAAO,QAEA2D,EAAKN,MAAM,iBAChBjC,EAASiC,MAAM,wBACjBrD,EAAO,WACEoB,EAASiC,MAAM,uBACxBrD,EAAO,OACEoB,EAASiC,MAAM,wBACxBrD,EAAO,UAIX,IAAIuvC,GAA0B,EAC1B7C,GAAa,EACbC,GAAa,EACbC,GAAgB,EAChB4C,GAAc,EACdC,GAAgB,EAChB5C,GAAc,EACZC,EAAenpC,EAAKN,MACxB,mBACA,WACA,eACA,eACA,eACA,eACA,eACA,kBACIM,EAAKN,MAAM,eAAiBjC,EAASkpC,SAE3C,IAAK3mC,EAAK+Y,MAAQowB,EAAc,CAC9B,IAAMC,EAASppC,EAAKhD,QAAQ,WACvB+rC,EAAatrC,EAASR,WAAW,aAAemsC,GACnD/sC,EAAO,UACGwvC,EAAcpuC,EAASR,WAAW,cAAgBmsC,GAC5D/sC,EAAO,YACGyvC,EAAgBruC,EAASR,WAAW,mBAAqB+C,EAAKmb,MAAMQ,OAC9Etf,EAAO,SACG2sC,EAAavrC,EAASR,WAAW,aAAemsC,GAC1D/sC,EAAO,SACG4sC,EAAgBxrC,EAASR,WAAW,gBAAkBmsC,GAChE/sC,EAAO,OACG6sC,EAAczrC,EAASR,WAAW,gBAC5CZ,EAAO,UAELwvC,GAAe7C,GAAcC,GAAiBF,GAAcG,GAC9DnnC,EAAKK,gBAAkB3E,EAAS0E,QAChCypC,GAA0B,GACjBE,IACT/pC,EAAKK,gBAAkB3E,EAAS0E,QAEpC,CAEInC,EAAKN,MAAM,eAAiBjC,EAASkpC,WACvCtqC,EAAOoB,EAASkpC,UAGlB3mC,EAAK3D,KAAOA,GAGPoB,EAASR,WAAW,WAAa+C,EAAK0K,OACtCjN,EAASR,WAAW,eACpB+C,EAAKhD,QAAQ,WACbS,EAAS+mC,UAAY/mC,EAASojC,WACjC7gC,EAAK4P,SAAW,EAChB7N,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMlC,EACJxC,EAASR,WAAW,YAAcJ,EAAMgB,aAAaogC,YACjD/9B,EACJxC,EAASX,QAAQ,iBAAmBW,EAAST,WAAW,SAmBtDgrC,GAlBuBloC,EACzBnF,EACAoF,EACAtC,EAASyC,MAAM,GACfF,EACApD,EAAMC,UACNoD,IAEyBxC,EAASyC,MAAM,GACtCJ,EACAnF,EACAoF,EACAtC,EAASyC,MAAM,GACfF,EACApD,EAAMC,UACNoD,GAEA,GAuBJ,GApBIxC,EAASipC,WACXsB,GAAoBloC,EAClBnF,EACAoF,EACAtC,EAASipC,SACT1mC,EACApD,EAAMC,UACNoD,IAIsB,IAAtB+nC,IAA2BjoC,EAAKhD,QAAQ,WAC1CU,EAASX,QAAQ,eAAiBW,EAAST,WAAW,WACtDgrC,GAAoB,GAGI,IAAtBA,IAA2BjoC,EAAKN,MAAM,qBACxCuoC,GAAoB,GAGI,IAAtBA,GACF,OAAOP,EAGT,GAAK1nC,EAAKN,MAAM,cACThC,EAASV,QAAQ,WAAaU,EAASgf,UAAY,KAAO7f,EAAMC,YAClEkD,EAAKN,MAAM,kBAAoBhC,EAASV,QAAQS,EAAS0C,MAAM,OAC5D1C,EAAS0C,MAAM,KAAOzC,EAASV,QAAQS,EAAS0C,MAAM,MACzDH,EAAKN,MAAM,iBACPhC,EAASoC,UAAU,SAAUpC,EAAST,WAAW,aACrD+C,EAAKN,MAAM,kBAAoB7C,EAAMkC,SACrCiB,EAAKN,MAAM,iBAAmBhC,EAAS+C,KAE1C,OAAOinC,EAGT,GACG7qC,EAAM0pC,WAAW,mBAAqBvmC,EAAKhD,QAAQ,UACnDH,EAAM0pC,WAAW,eAAiBvmC,EAAKhD,QAAQ,QAGhD,OADA+E,EAAKjD,QAAUjC,EAAMiC,QACd4oC,EAST,GANI7qC,EAAM0pC,WAAW,iBAAmB7oC,EAASV,QAAQ,WACrDpC,EAAIuF,MAAM5E,IAAIpG,EAAK6K,EAAK3D,OAAQ+D,cAAsB,OAAK,IAC7D6nC,IAAqB,EACrBlmC,EAAKjD,QAAUjC,EAAMiC,SAGlBpB,EAAST,WAAW,iBAAmBgrC,IAAqB,GAC5DjoC,EAAKhD,QAAQ,UAAYU,EAAST,WAAW,eAC7C+C,EAAKhD,QAAQ,SAAWU,EAAST,WAAW,aAAc,oBAC1D+C,EAAKhD,QAAQ,UAAYU,EAAST,WAAW,WAAY,cAAe,iBACxE+C,EAAKhD,QAAQ,aACZU,EAAST,WAAW,gBAAiB,cAAe,gBACrD+C,EAAKhD,QAAQ,YACXH,EAAMC,YAAckD,EAAKN,MAAM,qBAC/BhC,EAASX,QAAQ,cAAgBW,EAAST,WAAW,aACvD+C,EAAKmb,MAAMO,QAAUhe,EAAST,WAAW,gBACzC+C,EAAKmb,MAAMQ,QAAU3b,EAAKN,MAAM,oBAAsBhC,EAAST,WAAW,eAC1E+C,EAAK4P,SAAW,GAAKlS,EAAST,WAAW,kBAAmB,WAAY,eACxE+C,EAAKhD,QAAQ,WAAaU,EAAST,WAAW,gBAC9C+C,EAAKmb,MAAMW,MAAQpe,EAAST,WAAW,cAG1C,OADA8E,EAAKG,gBAAkBxE,EAASyE,QACzBulC,EAGT,GAAI1nC,EAAKhD,QAAQ,YAAcgD,EAAKN,MAAM,qBACrC7C,EAAMC,WAAaY,EAASX,QAAQ,eAEvC,OADAgF,EAAKM,aAAe3E,EAAS+C,KACtBinC,EAGT,GAAI1nC,EAAK4P,SAAW,GAAK/S,EAAMgF,WAAW,YAAclF,EAAWe,EAAUb,GAE3E,OADAkF,EAAKhD,QAAUlC,EAAMkC,QACd2oC,EAGT,IAAMqE,GAAkB/rC,EAAKN,MAAM,aAAc,aAAc,WAAY,cAC3E,GAAIhC,EAAS4tC,aAAeS,GAC1B,OAAOrE,EAGT3lC,EAAKsgC,MAAK,GAAAjoC,OAAMsD,EAAS4G,IAAIlL,GAAE,OAE/B,IAgCMe,GAhCAwtC,GAAcnjC,EAAuB/G,EAAUuC,GACrD,GAAI2nC,GAOF,OANIlqC,EAASR,WAAW,kBACtByqC,EAAOxH,OAAS,CAACyH,GAAaA,IAC9B5lC,EAAKK,gBAAkB3E,EAAS0E,SAEhCulC,EAAOxH,OAASyH,GAEXD,EAGT,GAAI1nC,EAAKN,MAAM,gBAEb,OADAgoC,EAAOxH,OAASziC,EAAS+mC,QAClBkD,EAGT,GAAI1nC,EAAKN,MAAM,qBAAsB,CACnC,IAAIssC,GAAUxxC,KAAKC,MAA0B,EAAnBiD,EAAS8mC,QAAe,GAKlD,OAJI3nC,EAAMgB,aAAakgC,aAAetgC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,QAC5E2sC,GAAUxxC,KAAKiK,KAAKunC,GAAU,EAAI,KAEpCtE,EAAOxH,OAAS8L,GACTtE,CACT,CAEA,GAAI1nC,EAAKN,MAAM,oBAAsB,CACnC,IAAMusC,GAASpvC,EAAMgB,aAAakgC,YAAc,EAAIvjC,KAAKC,MAAMiD,EAAS8mC,QAAU,GAElF,OADAkD,EAAOxH,OAAS+L,GACTvE,CACT,CAEA,GAAI1nC,EAAKN,MAAM,kBAEb,IAAKvF,MAAQuD,EAASkB,OAChBlB,EAASkB,OAAOzE,MAClBsD,EAASmB,OAAOzE,KACdsD,EAASR,WAAW,aAAeS,EAASkB,OAAOzE,IAASuD,EAASkB,OAAOzE,IAC1EsD,EAASmB,OAAOzE,IAAQ,IAAGsD,EAASmB,OAAOzE,IAAQ,GACnDsD,EAASmB,OAAOzE,KAAS,IAAGsD,EAASmB,OAAOzE,KAAS,GACzDsD,EAASM,MAAM5D,IAAQ+C,EAAgBO,EAASkB,SAASxE,IAAQsD,EAASmB,OAAOzE,MAKnF6F,EAAK0gC,KAAO,IACd3+B,EAAK2+B,KAAO1gC,EAAK0gC,MAGDjjC,EAASM,MAAM9E,IAAMyE,EAASK,MAAM9E,IAAtD,IAKM8J,GA4MD,SACLnI,EACA6C,EACAC,EACAsC,EACAnD,EACA+uC,EACA7pC,GACC,IAADmqC,EAIInpC,EAHAumC,EAAY7rC,EAASM,MAAM9E,IAAMyE,EAASK,MAAM9E,IAAM,QAAU,OAKpE,OAJAqwC,EAAYzsC,EAAMmgC,YAA6B,UAAdsM,EAAwB,OAAS,QAAWA,EAIrEtpC,EAAK1I,MACb,IAAK,UACHyL,EAAY/C,EAAKwK,IAAoB,SAAd8+B,EAAuB,EAAI,GAClDvnC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,YACL,IAAK,gBACHA,EAAY/C,EAAKwK,IAAoB,SAAd8+B,EAAuB,EAAI,GAClDvnC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,UACH,IAAMwmC,EAA+C,QAAnC1sC,EAAMgB,aAAa8gC,YACrC57B,EAAY/C,EAAKwK,IAAM++B,EAAY,EAAI,GACnCA,IAAWxnC,EAAK48B,YAAc,OAClC58B,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACH,IAAM+iC,EAAItrC,KAAKC,MAAMgD,EAASM,MAAM9E,IAAMyE,EAASK,MAAM9E,KACzD8J,EAAY+iC,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,GAAKA,GAAK,EAAI,GAAK,GAC3C,IAAvBpoC,EAASK,MAAM9E,MAAW8J,EAAY,IAC1ChB,EAAKkgC,OAASl/B,EACd,MACF,IAAK,YACHA,EAAYvI,KAAK4C,IAAI,IAAK5C,KAAKC,MAAO,GAAKiD,EAASK,MAAM9E,IAAOwE,EAASM,MAAM9E,KAAO,GAC5D,IAAvBwE,EAASM,MAAM9E,MAAW8J,EAAY,GAC1ChB,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACHA,EAAYvI,KAAK4C,IAAI,IAAK,GAAK,GAAK2G,EAAYnJ,EAAK8C,EAASkB,SAC9DmD,EAAKkgC,OAASl/B,EACd,MACF,IAAK,WACL,IAAK,aACH,IAAMymC,EAAI9rC,EAASgf,SAAW5Y,EAAgBpG,GAC9CqF,EAAYymC,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAC3FznC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,MACL,IAAK,kBAEHA,EAAY/C,EAAKwK,IAAM9M,EAAS4B,QAAU5B,EAAST,WAAW,YAAc,EAAI,GAChF8E,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACHA,EAAY/C,EAAKwK,IAAM9M,EAASoC,UAAU,MAAO,OAAS,EAAI,GAC9DiC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACL,IAAK,aACH,IAAM0mC,EACDhsC,EAASif,SAAW5Y,EAAgBrG,IACpCC,EAASgf,SAAW5Y,EAAgBpG,IACzCqF,EAAY0mC,GAAM,EAAI,IAAMA,GAAM,EAAI,IAAMA,GAAM,EAAI,GAAKA,GAAM,EAAI,GAAK,GAC1E1nC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACL,IAAK,aACHA,EAAY,GAAK,GAAKgB,EAAYnJ,EAAK6C,EAASmB,QAChDmD,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACHA,EAAY/C,EAAKwK,IAAM/M,EAASV,QAAQ,gBAAkBU,EAASgD,KAAO,EAAI,GAC9EsB,EAAKkgC,OAASl/B,EACd,MACF,IAAK,YACHA,EAAY/C,EAAKwK,IAAM9M,EAAST,WAAW,yBAA2B,EAAI,GAE1E,MACF,IAAK,eAEH8F,EAAY/C,EAAKwK,IAAM9M,EAASoC,UAAU,QAAUpC,EAAST,WAAW,YAAc,EAAI,GAC1F8E,EAAKkgC,OAASl/B,EACd,MACF,IAAK,iBACHA,EAAY/C,EAAKwK,IAAM9M,EAASoC,UAAU,OAAS,EAAI,GACvDiC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACHA,EAAY/C,EAAKwK,IAAM3N,EAAMiC,UAAYjC,EAAM0pC,WAAW,gBAAkB,EAAI,GAC5E1pC,EAAM0pC,WAAW,MAAO,iBAAkB,OAAQ,eACpD9oC,EAASV,QAAQ,sBAAqBgG,EAAY/C,EAAKwK,IACzDzI,EAAKkgC,OAASl/B,EACd,MACF,IAAK,gBACHA,EAAY/C,EAAKwK,IAAM7N,EAAWc,EAAUZ,IAAUA,EAAMkC,QAAU,EAAI,GAC1EgD,EAAKkgC,OAASl/B,EACd,MACF,IAAK,iBACHA,EAAY/C,EAAKwK,IAAO7N,EAAWe,EAAUb,IAAUA,EAAMgF,WAAW,YAAe,EAAI,GAC3FE,EAAKkgC,OAASl/B,EACd,MACF,IAAK,WACHA,EAAY/C,EAAKwK,IAAM3N,EAAMgF,WAAW,YAAc,IAAM,GACxDhF,EAAMgF,WAAW,cACnBE,EAAKkgC,OAASl/B,EACdhB,EAAKhD,QAAUlC,EAAMkC,SAEvB,MACF,IAAK,QACHgE,EAAY68B,GAAcniC,EAASgD,MACnCsB,EAAKkgC,OAASl/B,EACdhB,EAAKE,aAAexE,EAASgD,KAC7B,MACF,IAAK,gBACL,IAAK,WACL,IAAK,cACHsC,EAAYvI,KAAK6C,IAAI,EAAG7C,KAAKC,MAAO,IAAMgD,EAAS+mC,QAAW/mC,EAASojC,UACvE9+B,EAAKkgC,OAASl/B,EACd,MACF,IAAK,QACL,IAAK,WACH,IAAM4G,EAAInP,KAAKC,MAAO,GAAKgD,EAAS+mC,QAAW/mC,EAASojC,SACxD99B,EAAY4G,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACvF5H,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACH,GAAiB,QAAjBmpC,EAAIzuC,EAASgD,YAAI,IAAAyrC,GAAbA,EAAe7sC,SAAS,SAE1B0D,EADa88B,GAAejlC,EAAK6C,EAASgD,MACzBkJ,EACjB5H,EAAKE,aAAexE,EAASgD,KAC7BsB,EAAKkgC,OAASjiC,EAAKwK,QAEnBzH,EAAY/C,EAAKwK,GAEnB,MACF,IAAK,eAGH,OAFAxK,EAAKwC,SAAW,UAChBxC,EAAKoW,aAAc,EACXvZ,EAAMkC,SACd,IAAK,WACHgE,EAAY,GACZhB,EAAKigC,SAAW,cAChB,MACF,IAAK,SACHj/B,EAAY,GACZhB,EAAKigC,SAAW,cAChB,MACF,IAAK,QACHj/B,EAAY,GACZhB,EAAKigC,SAAW,YAChB,MACF,IAAK,UACHj/B,EAAY,GACZhB,EAAKigC,SAAW,UAChB,MACF,QACEj/B,EAAY,GACZhB,EAAKigC,SAAW,aAElB,MACF,IAAK,iBACHj/B,EAAYtF,EAASiC,MAAM,iBAAmBjC,EAASR,WAAW,eAAiB,GAAK,GACxF8E,EAAKkgC,OAASl/B,EACd,MAEF,IAAK,cACHA,EAA0B,IAAd/C,EAAK0gC,KAAa,GAAmB,IAAd1gC,EAAK0gC,KAAa,GAAK,GAC1D3+B,EAAKkgC,OAASl/B,EACd,MAEF,IAAK,cACHA,EAA0B,IAAd/C,EAAK0gC,KAAa,GAAmB,IAAd1gC,EAAK0gC,KAAa,GAAK,GAC1D3+B,EAAKkgC,OAASl/B,EACd,MACF,IAAK,aACL,IAAK,YACHA,EAAY,IAAMvI,KAAKC,MAA0B,KAAnBiD,EAAS8mC,QAAkB9mC,EAASmjC,SAClE99B,EAAYvI,KAAKC,MAAMD,KAAKC,OAAO,IAAMsI,EAAY,KAAO,GAAK,MAAQ,MAAQ,EACjFhB,EAAKkgC,OAASl/B,EACd,MACF,QACEA,EAAY/C,EAAKwK,GAEnB,GAAkB,IAAdzH,EACF,OAAO,EAEL/C,EAAKN,MACP,kBAAmB,aAAc,oBAAqB,eAAgB,iBACtE,kBAAmB,uBAAwB,kBAAmB,gBAAiB,gBAC/E,oBAAqB,oBAAqB,mBAAoB,yBAC9D,oBAAqB,qBAAsB,kBAAmB,oBAG9DqC,EAAKkgC,OAASjiC,EAAKwK,IAErB,IAAMk/B,EAwBD,SACL9uC,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,EACAgB,EACA6oC,EACAtC,GAEA,IAAMI,EAAS,GAIXL,GACD3rC,EAAS+C,MACT/C,EAASgC,MAAM,kBAAoBhC,EAASX,QAAQ,oBACpDW,EAASgC,MAAM,kBAAoBhC,EAASX,QAAQ,mBAEpDW,EAASpG,KAAK+H,SAAS,oBAAsB3B,EAAS+C,KAAKpB,SAAS,aACpE3B,EAASpG,KAAK+H,SAAS,WAAa3B,EAAS+C,KAAKpB,SAAS,UAC3D3B,EAASpG,KAAK+H,SAAS,aAAe3B,EAAS+C,KAAKpB,SAAS,UAC7D3B,EAASgC,MAAM,UAAW,mBAAqBhC,EAASX,QAAQ,YAChEW,EAASgC,MAAM,SAAU,kBAAoBhC,EAASX,QAAQ,aAC9DW,EAASpG,KAAK+H,SAAS,aAAe3B,EAAS+C,KAAKpB,SAAS,WAC9D3B,EAAS+C,KAAKpB,SAAS,OACtB3B,EAASgC,MAAM,WAAahC,EAASX,QAAQ,iBAC7CW,EAASgC,MAAM,cAAgBhC,EAASX,QAAQ,kBAChDW,EAASgC,MAAM,uBAAyBhC,EAASX,QAAQ,aAI5D,IAAKssC,GAA0B3rC,EAAS+C,KAAM,CAC5C,IAAMA,EAAO7F,EAAI0P,MAAM/O,IAAIpG,EAAKuI,EAAS+C,OACrCA,IACF4oC,IAA2B5oC,EAAKwJ,aAAevM,EAASpG,KAAK+H,SAASoB,EAAKwJ,aAE/E,CAEA,GAAKjK,EAAKN,MAAM,WAAajC,EAASqC,UAAU,MAAO,MAAO,MAAO,QAClEE,EAAKN,MAAM,UAAYhC,EAAS8mC,SAAW9mC,EAASmjC,QAAU,GAC9D7gC,EAAKN,MAAM,cAAgBhC,EAASoC,UAAU,MAAO,QACrDE,EAAKN,MAAM,aAAgBqE,EAAYnJ,EAAK6C,EAASmB,QAAU,EAEhE8qC,EAAOvqC,KAAK,MACZ4C,EAAKkgC,OAAqB,EAAZl/B,OACT,GACL/C,EAAKN,MAAM,oBAAsB/C,EAAWc,EAAUZ,IAAUA,EAAMgF,WAAW,WAEjF7B,EAAKrI,OAAS,kBACd+xC,EAAOvqC,KAAK,MACZ4C,EAAKkgC,OAAqB,IAAZl/B,OACT,GAAK/C,EAAKN,MAAM,eAAiB2pC,GACrCrpC,EAAKN,MAAM,oBAAsB/C,EAAWc,EAAUZ,IAAUA,EAAMgF,WAAW,UACjF7B,EAAKN,MAAM,eAAiB7C,EAAMC,UAEnC4sC,EAAOvqC,KAAK,MACZ4C,EAAKkgC,OAAqB,IAAZl/B,OACT,GAAI/C,EAAKN,MAAM,aAAc,gBAChC7C,EAAM0pC,WAAW,OAAQ,aAAc,OAAQ,OAAQ,QACzDmD,EAAOvqC,KAAK,MACZ4C,EAAKkgC,OAASl/B,EAAY,EAC1BhB,EAAKjD,QAAUjC,EAAMiC,aAChB,GAAIkB,EAAKN,MAAM,mBAAoB,iBAAkB,CAC1D,IAAMO,EACJxC,EAASR,WAAW,YAAcJ,EAAMgB,aAAaogC,YACjD/9B,EACJxC,EAASX,QAAQ,iBAAmBW,EAAST,WAAW,SACpDkD,EAAQzC,EAASipC,SAAW,CAACjpC,EAASipC,UAAYjpC,EAASyC,MACtCJ,EACzBnF,EACAoF,EACAG,EAAM,GACNF,EACApD,EAAMC,UACNoD,IAEyBC,EAAM,GAAKJ,EACpCnF,EACAoF,EACAG,EAAM,GACNF,EACApD,EAAMC,UACNoD,GACE,IAC2C,IAC7CwpC,EAAOvqC,KAAK,MACZ4C,EAAKkgC,OAASl/B,GAAa,KAAO,MAEtC,CAEIlG,EAAMe,aAAasgC,gBACrBwL,EAAOvqC,KAAK,MACZ4C,EAAKm8B,eAAgB,GAKvB,IAAMiO,EAAoBvxC,EAAIK,IAAM,EAAI,KAAO,KAC3C0B,EAAWc,EAAUZ,KAClBA,EAAMgF,WAAW,aAAe7B,EAAKhD,QAAQ,aAC7CH,EAAMgF,WAAW,WAAa7B,EAAKhD,QAAQ,UAC3CH,EAAMgF,WAAW,YAAc7B,EAAKhD,QAAQ,cAE/C0sC,EAAOvqC,KAAKgtC,GACZpqC,EAAKhD,QAAUlC,EAAMkC,SAGrBpC,EAAWe,EAAUb,KAClBA,EAAMgF,WAAW,UAAY7B,EAAKhD,QAAQ,WAC1CH,EAAMgF,WAAW,WAAa7B,EAAKN,MAAM,WAAY,iBAExDgqC,EAAOvqC,KAAK,MACZ4C,EAAKhD,QAAUlC,EAAMkC,UAOpBtB,EAASR,WAAW,eAAiB8F,GAAa,IACpDtF,EAASR,WAAW,gBACnBQ,EAASqC,UAAU,QAA4B,YAAlBE,EAAKwC,UACnC/E,EAASR,WAAW,gBACnBQ,EAASqC,UAAU,MAAO,QAA4B,aAAlBE,EAAKwC,UAC1C/E,EAASR,WAAW,kBAAoB+C,EAAKmb,MAAMS,OACnDne,EAASR,WAAW,eAAiB+C,EAAKmb,MAAMM,MAChDhe,EAASR,WAAW,kBAAoB+C,EAAKhD,QAAQ,UACrDS,EAASR,WAAW,cAAgB+C,EAAKmb,MAAMU,WAEhD6tB,EAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAIlC,GAAItF,EAAMe,aAAa8gC,cAAgB,GAAK1+B,EAAKhD,QAAQ,SAAS,CAChE,IAAI,IAAIjF,EAAI,EAAGA,EAAI8E,EAAMe,aAAa8gC,cAAe3mC,IACjD2xC,EAAOvqC,KAAK,MAEhB4C,EAAK28B,cAAgB7hC,EAAMe,aAAa8gC,aAC1C,CAEI7hC,EAAMe,aAAaghC,WAAa5+B,EAAKhD,QAAQ,cAC/C0sC,EAAOvqC,KAAK,MACZ4C,EAAK68B,WAAY,GAGnB,IAAM+K,EAAI,GAAAvvC,OAAM4F,EAAK3D,KAAI,SACnButC,EAAiBnsC,EAASR,WAAW0sC,GACrCE,EAAiBnsC,EAAST,WAAW0sC,GACrCG,EAAkBrsC,EAASR,WAAW,eAAiBS,EAAST,WAAW,cAC3E8sC,EAAmBltC,EAAM4/B,YACzBuN,EAAmBntC,EAAM6/B,aAA6B,UAAd18B,EAAK3D,KAC7C4tC,EAAkBptC,EAAM8/B,YAA4B,SAAd38B,EAAK3D,KAE3C+vC,EAAYrC,GAAoBD,GADnBF,GAAkBC,GAAkBG,GAAoBC,KAGrEmC,GACF1C,EAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAKG,gBAAkBxE,EAASyE,UAEhCunC,EAAOvqC,KAAK,MACRyqC,IAAgB7nC,EAAKK,gBAAkB3E,EAAS0E,SAChD0nC,IAAgB9nC,EAAKG,gBAAkBxE,EAASyE,YAMrD1E,EAASR,WAAW,iBAClB+C,EAAKoW,aAAepW,EAAKN,MAAM,YAAa,eAAiBM,EAAK6Z,OACpEpc,EAASR,WAAW,eACnBJ,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,OAAQ,SAAU,UAC5DS,EAASR,WAAW,cACJ,UAAdqsC,GAA4D,QAAnCzsC,EAAMgB,aAAa8gC,cAC9ClhC,EAASR,WAAW,gBAAkB+C,EAAKmb,MAAMI,SACjD9d,EAASR,WAAW,cAAgB+C,EAAKmb,MAAMQ,SAEhD+tB,EAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAG9BtF,EAAMe,aAAa2gC,WAA+B,YAAlBv+B,EAAKwC,WACvCknC,EAAOvqC,KAAK,MACZ4C,EAAKw8B,WAAY,GAGf1hC,EAAMe,aAAa4gC,cACrBkL,EAAOvqC,KAAK,MACZ4C,EAAKy8B,aAAc,GAGrB,GAAI3hC,EAAMe,aAAa6gC,WAAa,EAAE,CACpC,IAAQ1mC,EAAI,EAAGA,EAAI8E,EAAMe,aAAa6gC,WAAY1mC,IAC9C2xC,EAAOvqC,KAAK,MAEhB4C,EAAK08B,WAAa5hC,EAAMe,aAAa6gC,UACvC,CAGIhhC,EAASR,WAAW,aAAe,CAACQ,EAAS2iB,OAAQ1iB,EAAS0iB,QAAQ/gB,SAAS,OAC7E5B,EAAS2iB,SAAW1iB,EAAS0iB,QAC/BspB,EAAOvqC,KAAK,MACZ4C,EAAK2/B,QAAU,WAEfgI,EAAOvqC,KAAK,MACZ4C,EAAK2/B,QAAU,UAEjB3/B,EAAKK,gBAAkB3E,EAAS0E,UAK7BnC,EAAK6Z,OAAS+xB,GACjBlC,EAAOvqC,KAAK,OAGT1B,EAASR,WAAW,cAAgB+C,EAAK4L,QAAU5L,EAAKsM,iBACxD7O,EAASR,WAAW,cAAgB+C,EAAKmb,MAAMK,SAElDkuB,EAAOvqC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAG9B1E,EAASV,QAAQ,mBAAqBiD,EAAKmb,MAAMK,QACnDkuB,EAAOvqC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,MAG3B/C,EAAST,WAAW,cAAgB+C,EAAKhD,QAAQ,SACnD0sC,EAAOvqC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SACvBzE,EAAST,WAAW,aAAe+C,EAAKhD,QAAQ,UACzD0sC,EAAOvqC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAGlC,GAAI1E,EAASR,WAAW,qBAAuBQ,EAASkkC,cAAe,CACrE,IAAM0K,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9C3C,EAAOvqC,KAAKktC,EAAO7xC,KAAK4C,IAAI,EAAGK,EAASkkC,iBACxC5/B,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAK4/B,cAAgBlkC,EAASkkC,aAChC,CAIIlkC,EAASV,QAAQ,GAAD3C,OAAI4F,EAAK3D,KAAI,UAC/BqtC,EAAOvqC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,OAE1BhD,EAASV,QAAQ,oBAAsBU,EAASiC,MAAM,kBACtDjC,EAASV,QAAQ,gBAAkBU,EAASiC,MAAM,YACpDM,EAAKhD,QAAQ,QAAS,YACpBS,EAASV,QAAQ,iBACnBU,EAASiC,MAAM,WACbjC,EAASV,QAAQ,mBAAqBU,EAASiC,MAAM,mBACvDM,EAAKhD,QAAQ,QAAS,YACpBS,EAASV,QAAQ,iBAAmBU,EAASV,QAAQ,oBACtDU,EAASiC,MAAM,oBAAsBjC,EAASiC,MAAM,cACrDM,EAAKhD,QAAQ,QAAS,WACtBS,EAASV,QAAQ,cACjBU,EAASiC,MAAM,uBACfM,EAAKhD,QAAQ,SAAU,WACvBS,EAASV,QAAQ,aACjBU,EAASiC,MAAM,SAAU,SAAU,cAAe,gBAClDM,EAAKhD,QAAQ,UAAW,WACxBS,EAASgD,MAAQT,EAAKhD,QAAQiiC,GAAiBxhC,EAASgD,QAEzDipC,EAAOvqC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,OAE5BhD,EAASV,QAAQ,gBAAoC,aAAlBiD,EAAKwC,UACxC/E,EAASV,QAAQ,iBAAqC,YAAlBiD,EAAKwC,YAE1CknC,EAAOvqC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,MAE/B,OAAOipC,CACT,CAhTiB4C,CACb1xC,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,EACAgB,EACA6oC,EACAtC,GAEFvmC,EAAYxF,EAAK/C,KAAK6C,IAAI,EAAGuC,EAAWmD,EAAYlD,EAAU6pC,EAAQ,GAAI,SAAY,QAEpFjsC,EAASkpC,UAAY3mC,EAAK3D,OAASoB,EAASkpC,UAC5ClpC,EAAST,QAAQS,EAASkpC,WAA2B,IAAd3mC,EAAK0gC,MAC5C1gC,EAAK4P,UAAY,GAAK5P,EAAKwK,GAAK,IAAMxK,EAAKN,MAAM,gBAAiB,WAAY,gBAC9EqD,EAAY,IAAMnI,EAAIK,KAAO,IAE7B8H,EAAY,GACZhB,EAAKkgC,OAAS,IAEhB,OAAOl/B,CACT,CAzaoBwpC,CAChB3xC,EACA6C,EACAC,EACAsC,EACAnD,EACA+uC,EACA7pC,GAEF,GAAkB,IAAdgB,GACF,OAAO2kC,EAKT,IAAM1kC,GAsrBD,SACLpI,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,GAEC,IACGiB,EAFJ2/B,EAAU/qC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGJsyC,EAAelqC,EAAKN,MAAM,aAAehC,EAAWD,GACtDuC,EAAKN,MAAM,gBAAiB,6BAC3BM,EAAKN,MAAM,eAAiBwqC,EAAavD,YAC5C3mC,EAAKwC,SAAW0nC,EAAansC,MAAMvF,IAAM0xC,EAAansC,MAAMhF,IAAM,WAAa,WAEjF,IAAMqvC,EACJpoC,EAAKN,MAAM,mBACqC,aAAhDmE,EAAwBpG,EAAUC,GAC9B,MACAsC,EAAKN,MAAM,cACT,MACkB,YAAlBM,EAAKwC,SACH,MACA,MACVT,EAAK0/B,UACHzhC,EAAKN,MAAM,aACP0E,EAAqBxJ,EAAK8C,EAAU0qC,EAAY1qC,EAAS1C,QACzDoJ,EAAqBxJ,EAAK6C,EAAU2qC,EAAY3qC,EAASzC,QAEvB,IAApCkvC,EAAatrC,OAAOwpC,IACnBzF,GAAcuH,EAAatrC,OAAOwpC,GAAc,EACnDplC,EAASknC,EAAavrC,SAASypC,GACtB1qC,EAAST,WAAW,YAC7B+F,EAASknC,EAAavrC,SAASypC,GAC/BrmC,EAAKG,gBAAkBxE,EAASyE,UAEhCa,EAASknC,EAAansC,MAAMqqC,GAC5BrmC,EAAKw/B,YAAc2I,EAAatrC,OAAOwpC,IAIrC3qC,EAASR,WAAW,WAA+B,aAAlB+C,EAAKwC,WACxCQ,EAASpD,EAAoB,EAAToD,EAAc,GAClCjB,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMgoC,EAKD,SACLvvC,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,GAEA,IAAMooC,EAAS,GAGV1sC,EAASR,WAAW,eAAiBQ,EAAS2B,YAC3B,aAAlBY,EAAKwC,UAA8C,YAAlBxC,EAAKwC,UAA0BxC,EAAK+Y,MACtEtb,EAASR,WAAW,cAAgBQ,EAAS+mC,SAAW/mC,EAASojC,QAAU,GAE9EsJ,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAE/B1E,EAASR,WAAW,gBACpBJ,EAAM0pC,WAAW,MAAO,mBACN,YAAlBvmC,EAAKwC,UACL/E,EAASiC,MAAM,YACfjC,EAASR,WAAW,gBACpBJ,EAAM0pC,WAAW,MAAO,mBACN,aAAlBvmC,EAAKwC,UAEL/E,EAASR,WAAW,oBAAwC,aAAlB+C,EAAKwC,WAC9C/E,EAAS6tC,aACXnB,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAKjD,QAAUjC,EAAMiC,SAErBjC,EAAMe,aAAawgC,cACnBvhC,EAAM0pC,WAAW,MAAO,mBACN,aAAlBvmC,EAAKwC,UACL2nC,EAAOhrC,KAAK,MACZ4C,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAKggC,sBAAuB,GAE3BtkC,EAASR,WAAW,SAAWQ,EAAS6B,QAA4B,aAAlBU,EAAKwC,UACvD/E,EAAS+mC,SAAW/mC,EAASojC,QAAU,IACpCpjC,EAASR,WAAW,aAAe+C,EAAKhD,QAAQ,UAChDS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,SAC7CS,EAASR,WAAW,YAAc+C,EAAKhD,QAAQ,UAC/CS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,SAC9B,YAAlBgD,EAAKwC,UAA0B/E,EAAS2B,WAAa3B,EAASR,WAAW,OAAQ,UAElFktC,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAASR,WAAW,eAAiBQ,EAAS2B,WAAaY,EAAKhD,QAAQ,SACjFmtC,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB,cAEtB3E,EAASR,WAAW,gBAAkB+C,EAAKhD,QAAQ,UACnDS,EAASR,WAAW,iBAAoB+C,EAAKhD,QAAQ,WACrDS,EAASR,WAAW,eAAiB+C,EAAKhD,QAAQ,aAClDS,EAASR,WAAW,kBAAoB+C,EAAKhD,QAAQ,SAEtDmtC,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,UACvB1E,EAASR,WAAW,aAAeQ,EAAS2B,WAIpD3B,EAASR,WAAW,iBAAmB+C,EAAKhD,QAAQ,UACpDS,EAASR,WAAW,aAAc,eAAmC,aAAlB+C,EAAKwC,YAJzD2nC,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,UAS7BzE,EAAST,WAAW,cAAgB+C,EAAKhD,QAAQ,OAAQ,QACzDU,EAAST,WAAW,iBAAmB+C,EAAKhD,QAAQ,SACrDU,EAAST,WAAW,mBAAqB+C,EAAKhD,QAAQ,YACxDmtC,EAAOhrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAGlC,IAAMqqC,EAAwB9uC,EAAST,WAAW,oBAAsBJ,EAAMigC,gBACxE2P,EAAuB/uC,EAAST,WAAW,mBAAqBJ,EAAMkgC,gBAEzEyP,GAA2C,aAAlBxsC,EAAKwC,UAC9BiqC,GAA0C,YAAlBzsC,EAAKwC,YAE1B9E,EAAST,WAAW,oBAAsBS,EAAST,WAAW,kBAChE8E,EAAKG,gBAAkBxE,EAASyE,QAEhCJ,EAAuB,YAAlB/B,EAAKwC,SAAyB,iBAAmB,oBAAqB,EAE7E2nC,EAAOhrC,KAAK,OAIXI,EAAW9B,EAAUZ,KAGD,aAAlBmD,EAAKwC,UAA0D,QAA/BhD,EAAiB/B,IAC/B,YAAlBuC,EAAKwC,UAAyD,QAA/BhD,EAAiB/B,MAEjD0sC,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,UAKjC1E,EAASR,WAAW,kBAAsC,YAAlB+C,EAAKwC,UAC5C3F,EAAMgF,WAAW,aAAelF,EAAWc,EAAUZ,IACtDY,EAASR,WAAW,qBAAyC,aAAlB+C,EAAKwC,UAC/C3F,EAAM0pC,WAAW,MAAO,oBAAsB9oC,EAASV,QAAQ,uBAEjEotC,EAAOhrC,KAAK,MACZ4C,EAAKK,gBAAkB3E,EAAS0E,SAG7B1E,EAASV,QAAQ,eACjBU,EAASiC,MAAM,SAAU,UAAW,gBAAiB,wBACnC,aAAlBM,EAAKwC,UACL/E,EAASV,QAAQ,mBACjBU,EAASiC,MAAM,aACG,YAAlBM,EAAKwC,UACL/E,EAASV,QAAQ,eAAiBU,EAASnG,KAAK+H,SAAS,aAAeW,EAAK+Y,KAEhFoxB,EAAOhrC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,MAEnBT,EAAK+Y,KAAQ/Y,EAAK6Z,SAC1Bpc,EAASV,QAAQ,gBAAoC,aAAlBiD,EAAKwC,UACvC/E,EAASV,QAAQ,iBAAqC,YAAlBiD,EAAKwC,YAE5C2nC,EAAOhrC,KAAK,MACZ4C,EAAKE,aAAexE,EAASgD,OAG3B5D,EAAMe,aAAaugC,cAAiBn+B,EAAKN,MAAM,eAAkBM,EAAKN,MAAM,eAC9EyqC,EAAOhrC,KAAK,MACZ4C,EAAKo8B,cAAe,GAGlBn+B,EAAKN,MAAM,cAAgB7C,EAAMgB,aAAasgC,eAChDgM,EAAOhrC,KAAK,MACZ4C,EAAKo8B,cAAe,GAGlBn+B,EAAKN,MAAM,eAAiB7C,EAAMe,aAAakgC,eACjDqM,EAAOhrC,KAAK,MACZ4C,EAAK+/B,uBAAwB,GAG/B,OAAOqI,CACT,CA1JiBuC,CAAsB9xC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAOkF,GAE3E,OADAiB,EAASzF,EAAK/C,KAAK6C,IAAI,EAAGuC,EAAWoD,EAASnD,EAAUsqC,EAAQ,IAAK,QAAW,QACzEnnC,CACT,CAvuBiB2pC,CAAsB/xC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAOkF,EAAM4gC,GAC3EuH,GAAelqC,EAAKN,MAAM,aAAehC,EAAWD,GACtDuC,EAAKN,MAAM,gBAAiB,6BAC3BM,EAAKN,MAAM,eAAiBwqC,GAAavD,YAC5C3mC,EAAKwC,SAAW0nC,GAAansC,MAAMvF,IAAM0xC,GAAansC,MAAMhF,IAAM,WAAa,WAEjF,IAAMqvC,GACJpoC,EAAKN,MAAM,mBACqC,aAAhDmE,EAAwBpG,EAAUC,GAC9B,MACAsC,EAAKN,MAAM,cACT,MACkB,YAAlBM,EAAKwC,SACH,MACA,MAIJS,GA82BD,SACLrI,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,GAEC,IACGkB,EAFJ0/B,EAAU/qC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGJyyC,EAA8C,QAA/BrqC,EAAK6X,uBAAqD,aAAlB7X,EAAKwC,UAC/DxC,EAAKN,MAAM,mBAAqE,aAAhDmE,EAAwBpG,EAAUC,GAC/D2qC,EAAcgC,EAAe,MAAQ,MAC3CtoC,EAAKugC,WAAal+B,EAAqBxJ,EAAK8C,EAAU2qC,EAAa3qC,EAAS1C,QACvC,IAAjC0C,EAASkB,OAAOypC,IACf1F,GAAcjlC,EAASkB,OAAOypC,GAAe,GAC9CroC,EAAK6W,gBACP5T,EAAUvF,EAASiB,SAAS0pC,GACnB5qC,EAASR,WAAW,YAC7BgG,EAAUvF,EAASiB,SAAS0pC,GAC5BtmC,EAAKK,gBAAkB3E,EAAS0E,UAEhCc,EAAUvF,EAASK,MAAMsqC,GACzBtmC,EAAKqgC,aAAe1kC,EAASkB,OAAOypC,IAIlCxrC,EAAM0pC,WAAW,SAAW7oC,EAASV,QAAQ,UAAYqtC,IAC3DpnC,EAAUrD,EAAqB,EAAVqD,EAAe,GACpClB,EAAKjD,QAAUjC,EAAMiC,SAEnBjC,EAAM0pC,WAAW,SAAW7oC,EAASV,QAAQ,QAAUqtC,IACzDpnC,EAAUrD,EAAqB,EAAVqD,EAAe,GACpClB,EAAKjD,QAAUjC,EAAMiC,SAGvB,IAAMwrC,EAcD,SACL1vC,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,GAGC,IAAD+mC,EADAuB,EAAYzyC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEN0yC,EAAS,GACX5sC,EAAST,WAAW,iBAAmBS,EAAS4B,QAAU+qC,GAC5DC,EAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAEhCzE,EAASgC,MAAM,YACfhC,EAAST,WAAW,gBACpBJ,EAAM0pC,WAAW,MAAO,oBACvB8D,GAEDC,EAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,QAChCJ,EAAKjD,QAAUjC,EAAMiC,SAErBjC,EAAMgB,aAAaugC,cACnBvhC,EAAM0pC,WAAW,MAAO,oBACvB8D,GACDC,EAAOnrC,KAAK,MACZ4C,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAK2gC,sBAAuB,GAE5BhlC,EAAST,WAAW,eACpBJ,EAAMgF,WAAW,WACjBwoC,GAEAC,EAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SACvBzE,EAAST,WAAW,aAAeotC,IAC5CC,EAAOnrC,KAAK,MACZ4C,EAAKG,gBAAkBxE,EAASyE,SAGlC,IAAMyqC,EAAsBnvC,EAASR,WAAW,kBAAoBJ,EAAMggC,cACpEgQ,EAAsBpvC,EAASR,WAAW,kBAAoBJ,EAAM+/B,eAEvEgQ,GAAuBvC,GACvBwC,IAAwBxC,KAErB5sC,EAASR,WAAW,kBAAoBQ,EAASR,WAAW,iBAC9D8E,EAAKK,gBAAkB3E,EAAS0E,QAEhCJ,EAAKsoC,EAAe,gBAAkB,kBAAmB,EAE3DC,EAAOnrC,KAAK,OAIXI,EAAW7B,EAAUb,KAGnBwtC,GAA+C,QAA/B7qC,EAAiB9B,KAChC2sC,GAA+C,QAA/B7qC,EAAiB9B,MAEnCqE,EAAKG,gBAAkBxE,EAASyE,QAChCmoC,EAAOnrC,KAAK,OAIXzB,EAASX,QAAQ,aAAmD,QAAxC+rC,EAAIluC,EAAI++B,QAAQp+B,IAAIpG,EAAKuI,EAASpG,cAAM,IAAAwxC,GAApCA,EAAsC/rB,MACrEstB,GAAgB3sC,EAASX,QAAQ,iBACrCutC,EAAOnrC,KAAK,MACZ4C,EAAKM,aAAe3E,EAAS+C,OAE5B/C,EAASX,QAAQ,iBAAmBW,EAASgC,MAAM,UAAY2qC,GAC/D3sC,EAASX,QAAQ,mBAAqBW,EAASgC,MAAM,cAAgB2qC,KAEtEC,EAAOnrC,KAAK,MACZ4C,EAAKM,aAAe3E,EAAS+C,MAG3B5D,EAAMgB,aAAaigC,eACrBwM,EAAOnrC,KAAK,MACZ4C,EAAK+7B,cAAe,GAGtB,OAAOwM,CACT,CApGiBwC,CACblyC,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,EACA4gC,EACA0H,GAGF,OAAO9sC,EAAK/C,KAAK6C,IAAI,EAAGuC,EAAWqD,EAAUpD,EAAUyqC,EAAQ,IAAK,QAAW,OACjF,CA95BkByC,CAAuBnyC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAOkF,EAAM4gC,GAG7E0F,GAF8C,QAA/BroC,EAAK6X,uBAAqD,aAAlB7X,EAAKwC,UAC/DxC,EAAKN,MAAM,mBAAqE,aAAhDmE,EAAwBpG,EAAUC,GAClC,MAAQ,MAKvC+qC,GAAa3lC,EAAcrF,EAAS1C,MAAOgI,GAAWC,GAAQC,IAE5DsnC,GAA8B,YAAnB1tC,EAAMy/B,UACpB,CAAC,cAAe,mBAAmBj9B,SAASW,EAAKrI,QAChD4yC,KACF9B,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,OAG/ChrC,EAASR,WAAW,2BACtBwrC,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,OAIjD5rC,EAAM0pC,WAAW,QAAUvmC,EAAKN,MAAM,iBAAmBjC,EAASV,QAAQ,qBAE1E0rC,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,MACjD1mC,EAAKjD,QAAUjC,EAAMiC,SACXpB,EAASX,QAAQ,sBAExBF,EAAM0pC,WAAW,MAAO,mBAAqBvmC,EAAKhD,QAAQ,SAC1DH,EAAM0pC,WAAW,OAAQ,eAAiBvmC,EAAKhD,QAAQ,UAExDyrC,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,MACjD1mC,EAAKjD,QAAUjC,EAAMiC,UAEpBjC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,UACxCH,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,WAE1CyrC,GAAa7oC,EAAUD,EAAkB,KAAb8oC,IAAqB,MACjD1mC,EAAKjD,QAAUjC,EAAMiC,UAINpB,EAqkCJX,QAAQ,gBAAiB,aAAc,cAAe,iBApkCnEF,EAAMgF,WAAWnE,EAAS+C,KAAMkB,UAAU,EAAGjE,EAAS+C,KAAMmB,QAAQ,QACpEo9B,GAAkBthC,EAAS+C,QAAW4nC,KAGtCtmC,EAAKM,aAAe3E,EAAS+C,MAG3BkiC,IACF8F,GAAajuC,KAAKC,MAAMkF,EAAkB,IAAb8oC,KAC7B1mC,EAAK4gC,WAAaA,GAKpB,IAAIl/B,GAAU,KACVhG,EAASuvC,gBAAgBhtC,EAAK3D,MAChCoH,IAAW,KACFhG,EAASR,WAAW,UAAW,YAAcQ,EAASkpC,WAC/DljC,IAAW,KACX1B,EAAKK,gBAAkB3E,EAAS0E,SAElC,IAAMwkC,GAAWlpC,EAASkpC,SACtBA,KAAa3mC,EAAK3D,OACpBoH,IAAW,KACX1B,EAAK6/B,aAAe+E,IAElBlpC,EAASR,WAAW,iBAAmBQ,EAAST,QAAQgD,EAAK3D,QAC/DoH,IAAWkjC,IAAYlpC,EAASuvC,gBAAgBrG,IAAY,KAAO,KACnE5kC,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMqoC,GACJ/sC,EAASqC,UAAU,QACD,aAAlBE,EAAKwC,WACJ/E,EAASR,WAAW,UACpB+C,EAAKN,MAAM,UACdqC,EAAKyB,SAAWgnC,GAChB,IAAMC,GAy6BD,SACL7vC,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,GAGC,IAFD4gC,EAAU/qC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACVqwC,EAAyBrwC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEnB2yC,EAAY,IAEd5tC,EAAMgB,aAAayD,WAA+B,aAAlBtB,EAAKwC,UACpCmgC,GAAe9lC,EAAMgB,aAAa2D,cAKrC3E,EAAMgB,aAAa0D,eAAmC,YAAlBvB,EAAKwC,UACxCmgC,GAAe9lC,EAAMgB,aAAa2D,eAGnCipC,EAAUtrC,KAAwB,YAAnBtC,EAAMy/B,SAAyB,KAAO,MACrDv6B,EAAKR,eAAgB,IARrBkpC,EAAUtrC,KAAwB,YAAnBtC,EAAMy/B,SAAyB,KAAO,MACrDv6B,EAAKT,WAAY,GASfzE,EAAMgB,aAAa2D,eAAiBmhC,IACtC8H,EAAUtrC,KAAwB,YAAnBtC,EAAMy/B,SAAyB,KAAO,MACrDv6B,EAAKP,cAAe,GAGlB/D,EAASR,WAAW,eAAiBgrC,EAAoB,GAC3DwC,EAAUtrC,KAAK,MACf4C,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAASR,WAAW,WAAa0lC,GAC1C8H,EAAUtrC,KAAK,MACf4C,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAASR,WAAW,gBAAkBgrC,EAAoB,IACnEwC,EAAUtrC,KAAK,MACf4C,EAAKK,gBAAkB3E,EAAS0E,SAG9BzE,EAAS4tC,aAAetrC,EAAKN,MAAM,iBAAkB,iBAAkB,kBACzE+qC,EAAUtrC,KAAK,OAGbzB,EAAST,WAAW,aAAc,kBAClCS,EAAS8mC,UAAY9mC,EAASmjC,UAC5BhkC,EAAMgB,aAAaggC,MAAUhhC,EAAMgB,aAAa0/B,SAAU7/B,EAASV,QAAQ,aAC7EU,EAASX,QAAQ,qBAAyBU,EAASR,WAAW,2BAEhEwtC,EAAUtrC,KAAK,MACf4C,EAAKG,gBAAkBxE,EAASyE,UAG9BzE,EAAST,WAAW,WAAa+C,EAAKmb,MAAMI,UAAY9d,EAASR,WAAW,eAI7ES,EAAST,WAAW,cAAgB+C,EAAKmb,MAAMQ,OAC/Cje,EAAST,WAAW,eAAmC,YAAlB+C,EAAKwC,YAJ3CioC,EAAUtrC,KAAK,MACf4C,EAAKG,gBAAkBxE,EAASyE,SAS9BzE,EAAST,WAAW,aAAc,SAAU,gBAAkBgrC,EAAoB,IACpFwC,EAAUtrC,KAAK,MACf4C,EAAKG,gBAAkBxE,EAASyE,SAG9BtF,EAAMgB,aAAawgC,gBACrBoM,EAAUtrC,KAAK,MACf4C,EAAKs8B,eAAgB,GAGvB,GAAIxhC,EAAMgB,aAAaygC,aAAe,EAAG,CACvC,IAAI,IAAIvmC,EAAI,EAAGA,EAAI8E,EAAMgB,aAAaygC,eAAgBvmC,EAClD0yC,EAAUtrC,KAAK,MAEnB4C,EAAKu8B,aAAezhC,EAAMgB,aAAaygC,YACzC,CAEI5gC,EAAST,WAAW,WAAa+C,EAAKhD,QAAQ,UAChDytC,EAAUtrC,KAAK,MACf4C,EAAKG,gBAAkBxE,EAASyE,SAGlC,GAAI1E,EAASV,QAAQ,gBAAkBkrC,EAAoB,IAAMjoC,EAAK+Y,IACpE0xB,EAAUtrC,KAAK,MACf4C,EAAKE,aAAexE,EAASgD,UACxB,GAAIhD,EAASV,QAAQ,YAC1B0tC,EAAUtrC,KAAK,MACf4C,EAAKE,aAAexE,EAASgD,UACxB,GAAIhD,EAASV,QAAQ,cAAgBiD,EAAKolC,wBAA2B,EAAG,CAC7E,IAAMA,EAAyB5qC,KAAKC,MAAMuF,EAAKolC,wBAC3CA,GAA0B,EAC5BqF,EAAUtrC,KAAK,KAAgC,IAAzBimC,GAEtBqF,EAAUtrC,KAAK,MAEjB4C,EAAKE,aAAexE,EAASgD,IAC/B,CAEIT,EAAKhD,QAAQkiC,GAAmBxhC,EAAS+C,SACxCwnC,EAAoB,GAAKjoC,EAAKhD,QAAQ,aACtCS,EAASR,WAAW,UAAW,qBAAsB,wBACpDS,EAAST,WAAW,SACtBwtC,EAAUtrC,KAAK,MAEfsrC,EAAUtrC,KAAK,MAEjB4C,EAAKM,aAAe3E,EAAS+C,MAG/B,OAAOgqC,CACT,CA5hCoBwC,CAChBryC,EACA6C,EACAC,EACAsC,EACAnD,EACAkF,EACA4gC,EACAsF,IAGEtkC,IAAU,EACV9G,EAAMgB,aAAakgC,cACpBtgC,EAAS6tC,aAAgBtrC,EAAK+Y,KAAOtb,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAC9EsE,IAAU,EACV5B,EAAKg8B,aAAc,GAGrB,IAEI2M,GAFEhnC,GAAW7D,EAAU4qC,GAAW,GAAI,QAG1C,GAAIhtC,EAASR,WAAW,kBAAkC,IAAd+C,EAAK0gC,OAAe6J,GAAU,CACxE,IAAMI,GAAQltC,EAAS/F,QACvBizC,GAAMxoC,QAAU,wBAChBL,EAAmBlH,EAAK+vC,GAAOjtC,EAAUsC,EAAMnD,EAAOkF,GACtD2oC,GAAcW,GAAgBzwC,EAAK+vC,GAAOjtC,EAAUsC,EAAMnD,GAAOqjC,OACjEn+B,EAAKK,gBAAkB3E,EAAS0E,OAClC,CAGA,IADA,IAAI+9B,GAAS,GACJnoC,GAAI,EAAGA,GAAI,GAAIA,KACtBmoC,GAAOnoC,IACLuL,EAAemlC,GAAY1wC,GAAGkwC,GAAmBuC,GAAW/mC,GAASC,GAAUC,IAGnF,GAAI3D,EAAKuC,YAAcvC,EAAKmlC,UAAa,EAAG,CAC1C,IAAMyF,GAAmBntC,EAASR,WAAW,UAAY,EAAI,EAE7D8E,EAAKogC,UAAS,QAAA/nC,OAAW4F,EAAKmlC,UAAS,UAIvC,IAHA,IAAM0F,GAAeptC,EAASV,QAAQ,cAClCiF,IAAgB,EAChB8oC,GAAYrtC,EAASmB,OAAOwpC,IAAY2C,GAAA,SAAAC,GAE1C,IAAMC,EAAY/tC,EAAgB8F,GAAQ8nC,IACtCI,EAAmB,EACvBhL,GAASA,GAAO35B,KAAI,SAAA4kC,GAClB,GAAIH,EAAO,CACT,IACMI,EAAiB9nC,EADDR,EAAcrF,EAAS1C,MAAOgI,GAAWkoC,EAAWhoC,IAGxEioC,EACAjD,GACAuC,GACA/mC,GACAC,GACAC,IAGF,OADAunC,IACOC,EAAiBC,CAC1B,CACA,OAAOD,CACT,IAEI1tC,EAASR,WAAW,aACtB6tC,GAAYtwC,KAAK4C,IAAI,EAAG0tC,GAAY9qC,EAAKuC,YACzCR,EAAKK,gBAAkB3E,EAAS0E,UAEhC2oC,GAAYtwC,KAAK6C,KAAK,EAAGytC,GAAY9qC,EAAKuC,WAAaqoC,IACnDntC,EAASR,WAAW,YACtB8E,EAAKK,gBAAkB3E,EAAS0E,UAKhC0oC,IAAgBptC,EAASmB,OAAOwpC,IAAc,IAAMpmC,KACtD8oC,IAAa9qC,EAAKuC,WAAaqoC,GAC/B5oC,IAAgB,EAChBD,EAAKE,aAAexE,EAASgD,KAEjC,EArCSuqC,GAAQ,EAAGA,GAAQhrC,EAAKmlC,UAAY6F,KAAOD,GAAAC,GAsCtD,CASA,OAPAjpC,EAAKw/B,YACHvhC,EAAKN,MAAM,aAAehC,EAASkB,OAAOwpC,IAAc3qC,EAASmB,OAAOwpC,IAE1EV,EAAOxH,OAASwK,GAAc,CAACxK,GAAQwK,IAAexK,GAI/CwH,CACT,CC3lBA,IAAMwF,GAAY,CAChB,WAAO,EACPzF,GACAA,GCGK,SACL7sC,EACA6C,EACAC,EACAsC,EACAnD,GAEAwD,EAAa5C,EAAUZ,GACvBwD,EAAa3C,EAAUb,GACvByD,EAAc7C,EAAUZ,EAAMiC,SAC9BwB,EAAc5C,EAAUb,EAAMiC,SAC9B+B,EAAgBjG,EAAK6C,EAAUC,GAC/BmD,EAAgBjG,EAAK8C,EAAUD,GAC/BA,EAASM,MAAM9E,IAAMyF,EAAc9D,EAAK6C,EAAUZ,EAAOA,EAAMe,cAC/DF,EAASK,MAAM9E,IAAMyF,EAAc9D,EAAK8C,EAAUb,EAAOA,EAAMgB,cAE/D,IAAMkE,EAAgB,CACpB8/B,aAAcpkC,EAASnG,KACvB0qC,SAAUhiC,EAAK1I,KACfmrC,aAAc/kC,EAASpG,MAGnBowC,EAAS,IAAIR,GAAOtsC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAO,EAAGkF,GAEnE,GAAsB,WAAlB/B,EAAKwC,WAA0BxC,EAAKN,MAAM,gBAC5C,OAAOgoC,EAGT,GAAI7qC,EAAMgB,aAAakgC,YAErB,OADAh8B,EAAKg8B,aAAc,EACZ2J,EAGL1nC,EAAKN,MAAM,kBACbM,EAAK3D,KACHQ,EAAM0pC,WAAW,OAAS,OACxB1pC,EAAM0pC,WAAW,QAAU,QAC3B1pC,EAAM0pC,WAAW,QAAU,OAC3B1pC,EAAM0pC,WAAW,QAAU,MAC3B,SACJvmC,EAAKwC,SAAyB,SAAdxC,EAAK3D,KAAkB,WAAa,UACpD0F,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAKmgC,SAAWliC,EAAK3D,KACrB0F,EAAKkgC,OAASjiC,EAAKwK,IAGrB,IAAMo9B,EAAmC,CACvC,SACA,OACA,QACA,WACA,QACA,MACA,WACA,SACA,SACA,SACA,UACA,MACA,OACA,QACA,SACA,OACA,SAGEC,EAAoBnqC,EAASyC,MAAM,GACnC2nC,EAAqBpqC,EAASyC,MAAM,GAExC,GAAI2nC,GAAsBD,IAAsBC,GAClBF,EAAiChmC,QAAQimC,GACxCD,EAAiChmC,QAAQkmC,GAEtB,CAAC,IAADlnC,EACJ,CAACknC,EAAoBD,GAA9DA,EAAiBjnC,EAAA,GAAEknC,EAAkBlnC,EAAA,EACxC,CAGF,IASMqnC,EATqBloC,EACzBnF,EACAoF,EACA6nC,EACAhrC,EAAMgB,aAAaogC,cAEM6J,EACvB/nC,EAAqBnF,EAAKoF,EAAM8nC,EAAoBjrC,EAAMgB,aAAaogC,aACvE,GAGJ,GAA0B,IAAtBgK,EACF,OAAOP,EAGT,GAAKhqC,EAAST,WAAW,eAAiB+C,EAAKhD,QAAQ,SAClDU,EAAST,WAAW,aAAe+C,EAAKhD,QAAQ,WAChDU,EAAST,WAAW,gBAAkB+C,EAAKhD,QAAQ,aACnDU,EAAST,WAAW,iBAAmB+C,EAAKhD,QAAQ,UACpDU,EAAST,WAAW,kBAAoB+C,EAAKhD,QAAQ,QAAUirC,GAAqB,GACpFvqC,EAAST,WAAW,eAAiB+C,EAAKmb,MAAMQ,MAGnD,OADA5Z,EAAKG,gBAAkBxE,EAASyE,QACzBulC,EAGT3lC,EAAKsgC,MAAK,GAAAjoC,OAAMsD,EAAS4G,IAAIlL,GAAE,OAE/B,IAAMuuC,EAAcnjC,EAAuB/G,EAAUuC,GACrD,GAAI2nC,EAEF,OADAD,EAAOxH,OAASyH,EACTD,EAGL1nC,EAAK0gC,KAAO,IACd3+B,EAAK2+B,KAAO1gC,EAAK0gC,MAGnB,IAAIl2B,EAAKxK,EAAKwK,GACd,OAAQxK,EAAK1I,MACb,IAAK,QACL,IAAK,WACH,IAAMqS,EAAInP,KAAKC,MAAO,GAAKgD,EAAS+mC,QAAW/mC,EAASojC,SACxDr2B,EAAKb,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAChF5H,EAAKkgC,OAASz3B,EACd,MACF,IAAK,WACL,IAAK,cACHA,EAAKhQ,KAAK6C,IAAI,EAAG7C,KAAKC,MAAO,IAAMgD,EAAS+mC,QAAW/mC,EAASojC,UAChE9+B,EAAKkgC,OAASz3B,EACd,MACF,IAAK,WACH,IAAMg/B,EAAI9rC,EAASgf,SACnBlS,EAAKg/B,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACpFznC,EAAKkgC,OAASz3B,EACd,MACF,IAAK,SACC/M,EAASqC,UAAU,MAAO,MAAO,MAAO,SAC1C0K,EAAe,EAAVxK,EAAKwK,GACVzI,EAAKkgC,OAASz3B,GAEhB,MACF,IAAK,eACHxK,EAAKwC,SAAW,WAChBgI,EAAK,GACLzI,EAAKigC,SAAW,QAChB,MACF,QACEx3B,EAAKxK,EAAKwK,GAGZ,GAAW,IAAPA,EACF,OAAOk9B,EAGT,IAAMS,EAA+B,aAAlBnoC,EAAKwC,SAClB4lC,EAAaD,EAAa,MAAQ,MACxCpmC,EAAK0/B,UAAYr9B,EAAqBxJ,EAAK6C,EAAU2qC,EAAY3qC,EAASzC,QAC1E,IAAMqtC,EAAcF,EAAa,MAAQ,MACzCpmC,EAAKugC,WAAal+B,EAAqBxJ,EAAK8C,EAAU2qC,EAAa3qC,EAAS1C,QAE5E,IAAIshB,EAAK7e,EAASkB,SAASypC,GACvB7rB,EAAK7e,EAASiB,SAAS0pC,GAEvBF,GAAc1qC,EAASR,WAAW,aAAc,gBAClDqf,GAAM,EACNva,EAAKK,gBAAkB3E,EAAS0E,UAG7B1E,EAASV,QAAQ,gBAAkBiD,EAAKhD,QAAQiiC,GAAiBxhC,EAASgD,QAC7E6b,EAAK9hB,KAAKC,MAAW,IAAL6hB,GAChBva,EAAKE,aAAexE,EAASgD,MACpBhD,EAASV,QAAQ,gBAAkBiD,EAAKhD,QAAQ,UACzDsf,EAAK9hB,KAAKC,MAAW,KAAL6hB,GAChBva,EAAKE,aAAexE,EAASgD,MAE5B0nC,GAAc1qC,EAASV,QAAQ,iBAC9BorC,GAAc1qC,EAASV,QAAQ,aAAeU,EAASiC,MAAM,SAAU,WAEzE4c,EAAK9hB,KAAKC,MAAW,IAAL6hB,GAChBva,EAAKE,aAAexE,EAASgD,QAE3B0nC,GAAc1qC,EAASV,QAAQ,mBAAqBU,EAASiC,MAAM,cACnEyoC,GAAc1qC,EAASV,QAAQ,eAAiBU,EAASiC,MAAM,YAChEyoC,GAAc1qC,EAASV,QAAQ,eAAiBU,EAASiC,MAAM,SAAU,cAE1E4c,GAAM,EACNva,EAAKE,aAAexE,EAASgD,OAG1B0nC,GAAczqC,EAASX,QAAQ,aAAeW,EAASgC,MAAM,SAAU,WAC1E6c,EAAK/hB,KAAKC,MAAW,IAAL8hB,GAChBxa,EAAKM,aAAe3E,EAAS+C,QAE3B0nC,GAAczqC,EAASX,QAAQ,mBAAqBW,EAASgC,MAAM,aACpEyoC,GAAczqC,EAASX,QAAQ,iBAAmBW,EAASgC,MAAM,YAElE6c,GAAM,EACNxa,EAAKM,aAAe3E,EAAS+C,MAG3B/C,EAAST,WAAW,cAAiB+C,EAAKhD,QAAQ,OAAQ,QAC5Dsf,EAAK9hB,KAAKC,MAAM6hB,EAAK,GACrBva,EAAKG,gBAAkBxE,EAASyE,SACvBgmC,GAAczqC,EAAST,WAAW,iBAAmBS,EAAS4B,SACvEid,EAAK/hB,KAAKC,MAAW,IAAL8hB,GAChBxa,EAAKG,gBAAkBxE,EAASyE,SAG7BgmC,IACE1qC,EAASR,WAAW,WAAcQ,EAASR,WAAW,SAAWQ,EAAS6B,UAC3E6oC,GAAc1qC,EAAS2B,WAAa3B,EAASR,WAAW,OAAQ,UAEpEqf,EAAK9hB,KAAKC,MAAW,IAAL6hB,GAChBva,EAAKK,gBAAkB3E,EAAS0E,SACvB1E,EAAS+mC,SAAW/mC,EAASojC,QAAU,IAC9CpjC,EAASR,WAAW,aAAe+C,EAAKhD,QAAQ,UAChDS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,SAC7CS,EAASR,WAAW,YAAc+C,EAAKhD,QAAQ,UAC/CS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,UAE/CwN,EAAKhQ,KAAKC,MAAW,IAAL+P,GAChBzI,EAAKK,gBAAkB3E,EAAS0E,SAG9BnC,EAAKN,MAAM,YAAa,mBAC1B6c,EAAK/hB,KAAKC,MAAM8hB,EAAK,IAGvB,IAAMomB,EAAa3iC,EAAKkoC,SAAWxqC,EAAST,WAAW,eAAgB,eAEjEskC,EAAc9jC,EAASmB,OAAOwpC,GAC9BhG,EAAe1kC,EAASkB,OAAOypC,IACjC9G,EAAc,IAAOoB,GAAcpB,EAAc,KACnDjlB,EAAKpf,EAAgBof,EAAIilB,GACzBx/B,EAAKw/B,YAAcA,IAEjBa,EAAe,IAAOO,GAAcP,EAAe,KACrD7lB,EAAKrf,EAAgBqf,EAAI6lB,GACzBrgC,EAAKqgC,aAAeA,GAGtB,IAAMmG,EAAK9qC,EAAS1C,MAChB0tC,EAAajuC,KAAKC,MAAMD,KAAKC,MAAOD,KAAKC,MAAO,EAAI8tC,EAAM,EAAI,GAAKjsB,EAAK9R,EAAM+R,GAAM,IAOxF,GALI9e,EAASqC,UAAU,QAAUqoC,IAAe1qC,EAASR,WAAW,UAClEwrC,EAAajuC,KAAKC,MAAMguC,EAAa,GACrC1mC,EAAKyB,UAAW,IAGbm/B,EAAY,CACf,IAAMwK,EAAsC,YAAnBtwC,EAAMy/B,SAAyB,EAAI,EAAI,GAC5D6L,GAActrC,EAAMgB,aAAayD,WACnCmnC,EAAajuC,KAAKC,MAAMguC,EAAa0E,GACrCprC,EAAKT,WAAY,IACP6mC,GAActrC,EAAMgB,aAAa0D,gBAC3CknC,EAAajuC,KAAKC,MAAMguC,EAAa0E,GACrCprC,EAAKR,eAAgB,EAEzB,CAEIvB,EAAKN,MAAM,YAAiD,QAAnC7C,EAAMgB,aAAa8gC,cAC9C8J,EAAajuC,KAAKC,MAAmB,EAAbguC,GACxB1mC,EAAK48B,YAAc,OAGE,YAAnB9hC,EAAMy/B,UAA0C,oBAAhBt8B,EAAKrI,SACvC8wC,EAAajuC,KAAKC,MAAMguC,EAAa,IAGlC5rC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,SACxCH,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,UAC5CyrC,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKjD,QAAUjC,EAAMiC,UAEpBjC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,UACxCH,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,SACzCgD,EAAKN,MAAM,eAAiB7C,EAAM0pC,WAAW,OAAQ,OAAQ,WAE9DkC,EAAajuC,KAAKC,MAAMguC,EAAa,GACrC1mC,EAAKjD,QAAUjC,EAAMiC,SAGnBrB,EAASR,WAAW,eAAiBQ,EAAS2B,WAAaY,EAAKhD,QAAQ,UAC1EyrC,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKK,gBAAkB,cAGzBqmC,GAAgC,aAAlBzoC,EAAKwC,SAA0BhI,KAAK6C,IAAI,EAAGorC,GAAcA,GAAc,EAEjF9F,IACF8F,GAAc,EACd1mC,EAAK4gC,YAAa,GAGhB3iC,EAAKN,MAAM,iBAAmB7C,EAAMiC,UACtC2pC,GAAc,EACd1mC,EAAKkgC,OAAc,EAALz3B,GAGZ3N,EAAMe,aAAasgC,gBACrBuK,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKm8B,eAAgB,GAGnBl+B,EAAKhD,QAAOyC,MAAZO,GAAIw5B,EAAAA,GAAAA,GAAY/7B,EAAS0C,UAC3BsoC,EAAajuC,KAAKC,MAAmB,IAAbguC,IAG1BA,EAAajuC,KAAKC,MAAMguC,EAAaR,GACrCP,EAAOxH,OAAS,GAChB,IAAK,IAAInoC,EAAI,GAAIA,GAAK,IAAKA,IACzB2vC,EAAOxH,OAAOnoC,EAAI,IAAMyC,KAAK6C,IAAI,EAAG7C,KAAKC,MAAOguC,EAAa1wC,EAAK,MAGpE,OAAO2vC,CACT,EJvTO,SACL9sC,EACA6C,EACAC,EACAsC,EACAnD,GAIAwD,EAAa5C,EAAUZ,GACvBwD,EAAa3C,EAAUb,GACvByD,EAAc7C,EAAUZ,EAAMiC,SAC9BwB,EAAc5C,EAAUb,EAAMiC,SAC9ByB,EAAU9C,GACV8C,EAAU7C,GACVmD,EAAgBjG,EAAK6C,EAAUC,GAC/BmD,EAAgBjG,EAAK8C,EAAUD,GAC/BuD,EAAcvD,EAAUC,GACxBsD,EAActD,EAAUD,GACxBA,EAASM,MAAM9E,IAAMyF,EAAc9D,EAAK6C,EAAUZ,EAAOA,EAAMe,cAC/DF,EAASK,MAAM9E,IAAMyF,EAAc9D,EAAK8C,EAAUb,EAAOA,EAAMgB,cAE/D,IAAMkE,EAAgB,CACpB8/B,aAAcpkC,EAASnG,KACvB0qC,SAAUhiC,EAAK1I,KACfmrC,aAAc/kC,EAASpG,MAGnBowC,EAAS,IAAIR,GAAOtsC,EAAK6C,EAAUC,EAAUsC,EAAMnD,EAAO,EAAGkF,GAEnE,GAAsB,WAAlB/B,EAAKwC,WAA0BxC,EAAKN,MAAM,gBAC5C,OAAOgoC,EAGT,GAAI7qC,EAAMgB,aAAakgC,cAAgB/9B,EAAKuV,cAE1C,OADAxT,EAAKg8B,aAAc,EACZ2J,EAGLjqC,EAASR,WAAW,kBACtBS,EAASyE,QAAU,GACnBJ,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMwgC,EAAa3iC,EAAKkoC,SAAWxqC,EAAST,WAAW,eAAgB,eAEnE8F,EAAY/C,EAAKwK,GACrB,GAAIxK,EAAKN,MAAM,gBACT7C,EAAM0pC,WAAW,QACnBvmC,EAAK3D,KAAO,OACZ0G,GAAa,GACJlG,EAAM0pC,WAAW,SAC1BvmC,EAAK3D,KAAO,QACZ0G,GAAa,GACJlG,EAAM0pC,WAAW,SAC1BvmC,EAAK3D,KAAO,OACZ0G,GAAa,GACJlG,EAAM0pC,WAAW,SAC1BvmC,EAAK3D,KAAO,MACZ0G,GAAa,GAEb/C,EAAK3D,KAAO,SAGd0F,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAKmgC,SAAWliC,EAAK3D,KACrB0F,EAAKkgC,OAASl/B,OACT,GAAI/C,EAAKN,MAAM,aAAejC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAC3EW,EAAK3D,KAAO4iC,GAAiBxhC,EAASgD,WACjC,GAAIT,EAAKN,MAAM,iBAAmBjC,EAASgD,MAAQhD,EAASgD,KAAKpB,SAAS,SAAU,CACzF,IAAM0gC,EAAOF,GAAejlC,EAAK6C,EAASgD,MAC1CT,EAAK3D,KAAO0jC,EAAKr2B,EACjB1J,EAAKwK,GAAKu1B,EAAKp2B,EACf5H,EAAKE,aAAexE,EAASgD,KAC7BsB,EAAKkgC,OAASjiC,EAAKwK,GACnBzI,EAAKmgC,SAAWliC,EAAK3D,IACvB,CAEIoB,EAASR,WAAW,eACtB+C,EAAK3D,KAAO,SACZ0F,EAAKK,gBAAkB3E,EAAS0E,SAGlC,IAAMlC,EAAkBxC,EAASR,WAAW,YAAcJ,EAAMgB,aAAaogC,YAEvE2J,EAAmC,CACvC,SACA,OACA,QACA,WACA,QACA,MACA,WACA,SACA,SACA,SACA,UACA,MACA,OACA,QACA,SACA,OACA,SAGEC,EAAoBnqC,EAASyC,MAAM,GACnC2nC,EAAqBpqC,EAASyC,MAAM,GAExC,GAAI2nC,GAAsBD,IAAsBC,GAClBF,EAAiChmC,QAAQimC,GACxCD,EAAiChmC,QAAQkmC,GAEtB,CAAC,IAADlnC,EACJ,CAACknC,EAAoBD,GAA9DA,EAAiBjnC,EAAA,GAAEknC,EAAkBlnC,EAAA,EACxC,CAGF,IAAImnC,EACFhoC,EAAqBnF,EAAKoF,EAAM6nC,EAAmB5nC,EAAiBpD,EAAMC,WACxEkrC,EAAqBF,EACrB/nC,EAAqBnF,EAAKoF,EAAM8nC,EAAoB7nC,EAAiBpD,EAAMC,WAC3E,EAEAmrC,EAAoBF,EAAqBC,EAY7C,GAT0B,IAAtBC,GAA2BjoC,EAAKhD,QAAQ,WAAaU,EAASX,QAAQ,eAC7C,IAAvBgrC,EACFA,EAAqB,EACZrqC,EAASyC,MAAM,IAA6B,IAAvB6nC,IAC9BA,EAAqB,GAEvBC,EAAoBF,EAAqBC,GAGjB,IAAtBC,EACF,OAAOP,EAIT,KAD2B1nC,EAAKhD,QAAQ,QAAUgD,EAAKN,MAAM,eACjChC,EAAST,WAAW,iBAAmBgrC,GAAqB,GACnFjoC,EAAKhD,QAAQ,SAAWU,EAAST,WAAW,eAC5C+C,EAAKhD,QAAQ,UAAYU,EAAST,WAAW,WAAY,iBACzD+C,EAAKhD,QAAQ,aAAeU,EAAST,WAAW,cAAe,gBAC/D+C,EAAKhD,QAAQ,YAAcH,EAAMC,YAC/BY,EAASX,QAAQ,cAAgBW,EAAST,WAAW,aACvD+C,EAAKmb,MAAMQ,OAASje,EAAST,WAAW,cAG3C,OADA8E,EAAKG,gBAAkBxE,EAASyE,QACzBulC,EAGT3lC,EAAKsgC,MAAK,GAAAjoC,OAAMsD,EAAS4G,IAAIlL,GAAE,OAE/B,IAAMuuC,EAAcnjC,EAAuB/G,EAAUuC,GACrD,GAAI2nC,EAEF,OADAD,EAAOxH,OAASyH,EACTD,EAGL1nC,EAAK0gC,KAAO,IACd3+B,EAAK2+B,KAAO1gC,EAAK0gC,MAEnB,IAAM4I,EAAY7rC,EAASM,MAAM9E,IAAMyE,EAASK,MAAM9E,IAAM,QAAU,OAKtE,OAAQ+G,EAAK1I,MACb,IAAK,QACCoG,EAAS8mC,SAAW9mC,EAASmjC,QAAU,IACzC99B,GAAa,EACbhB,EAAKkgC,OAASl/B,GAEhB,MACF,IAAK,WACL,IAAK,cACHA,EAAYvI,KAAK6C,IAAI,EAAG7C,KAAKC,MAAOsI,EAAYtF,EAAS+mC,QAAW/mC,EAASojC,UAC7E9+B,EAAKkgC,OAASl/B,EACd,MACF,IAAK,SACCtF,EAASqC,UAAU,MAAO,MAAO,MAAO,SAC1CiD,EAAsB,EAAV/C,EAAKwK,GACjBzI,EAAKkgC,OAASl/B,GAEhB,MACF,IAAK,QACL,IAAK,WACH,IAAM4G,EAAInP,KAAKC,MAAO,GAAKgD,EAAS+mC,QAAW/mC,EAASojC,SACxD99B,EAAY4G,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACxF5H,EAAKkgC,OAASl/B,EACd,MACF,IAAK,QACHA,EAAY68B,GAAcniC,EAASgD,MACnCsB,EAAKkgC,OAASl/B,EACdhB,EAAKE,aAAexE,EAASgD,KAC7B,MACF,IAAK,aACL,IAAK,WACH,IAAM+oC,EAAI9rC,EAASgf,SACnB3Z,EAAYymC,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAC3FznC,EAAKkgC,OAASl/B,EACd,MACF,IAAK,YACHA,EAAYvI,KAAK4C,IAAI,IAAK5C,KAAKC,MAAO,GAAKiD,EAASK,MAAM9E,IAAOwE,EAASM,MAAM9E,MAChF8I,EAAKkgC,OAASl/B,EACd,MACF,IAAK,UACe,UAAdumC,IACFvmC,GAAa,EACbhB,EAAKkgC,OAASl/B,GAEhB,MACF,IAAK,aACHA,EAAYvI,KAAK4C,IAAI,IAAK,GAAK,GAAK2G,EAAYnJ,EAAK8C,EAASkB,SAC9DmD,EAAKkgC,OAASl/B,EACd,MACF,IAAK,eACCrF,EAASoC,UAAU,SACrBiD,GAAa,EACbhB,EAAKkgC,OAASl/B,GAEhB,MACF,IAAK,eACH/C,EAAKwC,SAAW,UAChBxC,EAAKoW,aAAc,EACnBrT,EAAY,GACZhB,EAAKigC,SAAW,aAChB,MACF,IAAK,aACL,IAAK,YACHj/B,EAAYvI,KAAKC,MAA0B,IAAnBiD,EAAS8mC,QAAiB9mC,EAASmjC,SAAW,EACtE9+B,EAAKkgC,OAASl/B,EACd,MACF,QACEA,EAAY/C,EAAKwK,GAGnB,GAAkB,IAAdzH,EACF,OAAO2kC,EAGL7qC,EAAMe,aAAasgC,gBACrBn7B,EAAYvI,KAAKC,MAAkB,IAAZsI,GACvBhB,EAAKm8B,eAAgB,GAGvB,IAAMiK,EAA+B,aAAlBnoC,EAAKwC,SACnB/E,EAASV,QAAQ,gBAAkBorC,GACnC1qC,EAASV,QAAQ,kBAAoBorC,GACxCplC,EAAYvI,KAAKC,MAAkB,IAAZsI,GACvBhB,EAAKE,aAAexE,EAASgD,OACpBT,EAAKhD,QAAQiiC,GAAiBxhC,EAASgD,QAC/ChD,EAASV,QAAQ,gBACjBU,EAASiC,MAAM,WACfM,EAAKhD,QAAQ,QAAS,WACtBS,EAASV,QAAQ,iBACjBU,EAASiC,MAAM,WACfM,EAAKhD,QAAQ,QAAS,WACtBS,EAASV,QAAQ,iBACjBU,EAASiC,MAAM,oBACfM,EAAKhD,QAAQ,QAAS,aAEvB+F,EAAYvI,KAAKC,MAAkB,IAAZsI,GACvBhB,EAAKE,aAAexE,EAASgD,MAG1BhD,EAASR,WAAW,cAAgB+C,EAAK4L,QAAU5L,EAAKsM,iBACxD7O,EAASR,WAAW,cAAgB+C,EAAKmb,MAAMK,OAClDzY,EAAYvI,KAAKC,MAAkB,IAAZsI,GACvBhB,EAAKK,gBAAkB3E,EAAS0E,UACtB1E,EAAS+mC,SAAW/mC,EAASojC,QAAU,IAC/CpjC,EAASR,WAAW,aAAe+C,EAAKhD,QAAQ,UAC/CS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,SAC7CS,EAASR,WAAW,YAAc+C,EAAKhD,QAAQ,UAC/CS,EAASR,WAAW,UAAY+C,EAAKhD,QAAQ,SAC7CS,EAASR,WAAW,eAAiB8F,GAAa,MAErDA,EAAYvI,KAAKC,MAAkB,IAAZsI,GACvBhB,EAAKK,gBAAkB3E,EAAS0E,SAG7BzE,EAAST,WAAW,cAAgB+C,EAAKhD,QAAQ,SACjDU,EAAST,WAAW,cAAiB+C,EAAKhD,QAAQ,OAAQ,QAC7D+F,EAAYvI,KAAKC,MAAkB,GAAZsI,GACvBhB,EAAKG,gBAAkBxE,EAASyE,SACvBzE,EAAST,WAAW,aAAe+C,EAAKhD,QAAQ,UACzD+F,EAAYvI,KAAKC,MAAkB,KAAZsI,GACvBhB,EAAKG,gBAAkBxE,EAASyE,SAMlC,IAEIa,EAFEolC,EAAaD,EAAa,MAAQ,MACxCpmC,EAAK0/B,UAAYr9B,EAAqBxJ,EAAK6C,EAAU2qC,EAAY3qC,EAASzC,QAE1E,IAAMumC,EAAc9jC,EAASmB,OAAOwpC,GAC9BgF,EAAY3vC,EAASkB,SAASypC,GAChB,IAAhB7G,GAAsBoB,GAAcpB,EAAc,EACpDv+B,EAASoqC,EACA1vC,EAAST,WAAW,YAC7B+F,EAASoqC,EACTrrC,EAAKG,gBAAkBxE,EAASyE,SACvB1E,EAASR,WAAW,WAC7B+F,EAAS2lC,GAAsByE,EAAW7L,GAC1Cx/B,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAKw/B,YAAcA,IAEnBv+B,EAAS9F,EAAgBkwC,EAAW7L,GACpCx/B,EAAKw/B,YAAcA,GAGjB4G,GAAc1qC,EAASR,WAAW,aAAc,eAClD+F,GAAU,EACVjB,EAAKK,gBAAkB3E,EAAS0E,SACvBtF,EAAM0pC,WAAW,QACzB9oC,EAASR,WAAWkrC,EAAa,cAAgB,gBAElDnlC,EAASxI,KAAKC,MAAe,IAATuI,GACpBjB,EAAKK,gBAAkB3E,EAAS0E,QAChCJ,EAAKjD,QAAUjC,EAAMiC,SACZjC,EAAMe,aAAawgC,cAAgBvhC,EAAM0pC,WAAW,QAAU4B,GACvEnlC,EAASxI,KAAKC,MAAe,IAATuI,GACpBjB,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAKggC,sBAAuB,GAE3BoG,IACE1qC,EAASR,WAAW,WAAcQ,EAASR,WAAW,SAAWQ,EAAS6B,UAC3E6oC,GAAc1qC,EAAS2B,WAAa3B,EAASR,WAAW,OAAQ,UAElE+F,EAASxI,KAAKC,MAAe,IAATuI,GACpBjB,EAAKK,gBAAkB3E,EAAS0E,SACvBgmC,GAAc1qC,EAASR,WAAW,eAAiBQ,EAAS2B,YACrE4D,EAASxI,KAAKC,MAAMuI,EAAS,GAC7BjB,EAAKK,gBAAkB3E,EAAS0E,UAG7BgmC,EAAa1qC,EAASV,QAAQ,eAAiBU,EAASV,QAAQ,mBAC/DorC,GAAc1qC,EAASV,QAAQ,aAAeU,EAASiC,MAAM,SAAU,WAC3EsD,EAASxI,KAAKC,MAAe,IAATuI,GACpBjB,EAAKE,aAAexE,EAASgD,OAE5BhD,EAASV,QAAQ,eAAiBU,EAASiC,MAAM,YACjDjC,EAASV,QAAQ,eAAiBU,EAASiC,MAAM,SAAU,YAAcyoC,GACzE1qC,EAASV,QAAQ,mBAAqBU,EAASiC,MAAM,cAAgByoC,KAEtEnlC,GAAU,EACVjB,EAAKE,aAAexE,EAASgD,MAM/B,IAEIwC,EAFEolC,EAAcF,EAAa,MAAQ,MACzCpmC,EAAKugC,WAAal+B,EAAqBxJ,EAAK8C,EAAU2qC,EAAa3qC,EAAS1C,QAE5E,IAAMonC,EAAe1kC,EAASkB,OAAOypC,GAC/BgF,EAAa3vC,EAASiB,SAAS0pC,GAChB,IAAjBjG,GAAuBO,GAAcP,EAAe,EACtDn/B,EAAUoqC,EACD5vC,EAASR,WAAW,YAC7BgG,EAAUoqC,EACVtrC,EAAKK,gBAAkB3E,EAAS0E,SACvBzE,EAAST,WAAW,WAC7BgG,EAAU0lC,GAAsB0E,EAAYjL,GAC5CrgC,EAAKG,gBAAkBxE,EAASyE,QAChCJ,EAAKqgC,aAAeA,IAEpBn/B,EAAU/F,EAAgBmwC,EAAYjL,GACtCrgC,EAAKqgC,aAAeA,GAGlB1kC,EAAST,WAAW,iBAAmBS,EAAS4B,QAAU6oC,GAC5DllC,EAAUzI,KAAKC,MAAgB,IAAVwI,GACrBlB,EAAKG,gBAAkBxE,EAASyE,SACvBzE,EAAST,WAAW,gBAAkBJ,EAAM0pC,WAAW,SAAW4B,GAC3EllC,EAAUzI,KAAKC,MAAgB,IAAVwI,GACrBlB,EAAKG,gBAAkBxE,EAASyE,QAChCJ,EAAKjD,QAAUjC,EAAMiC,SACZjC,EAAMgB,aAAaugC,cAAgBvhC,EAAM0pC,WAAW,SAAW4B,IACxEllC,EAAUzI,KAAKC,MAAgB,IAAVwI,GACrBlB,EAAKjD,QAAUjC,EAAMiC,QACrBiD,EAAK2gC,sBAAuB,GAG1BhlC,EAASX,QAAQ,aAAeW,EAASgC,MAAM,SAAU,YAAcyoC,GACzEllC,EAAUzI,KAAKC,MAAgB,IAAVwI,GACrBlB,EAAKM,aAAe3E,EAAS+C,OAE5B/C,EAASX,QAAQ,mBAAqBW,EAASgC,MAAM,cAAgByoC,GACrEzqC,EAASX,QAAQ,iBAAmBW,EAASgC,MAAM,UAAYyoC,KAEhEllC,GAAW,EACXlB,EAAKM,aAAe3E,EAAS+C,MAG3B5D,EAAM0pC,WAAW,SAAW7oC,EAASV,QAAQ,UAAYmrC,IAC3DllC,EAAUzI,KAAKC,MAAgB,IAAVwI,GACrBlB,EAAKjD,QAAUjC,EAAMiC,UAGnBkB,EAAKN,MAAM,cAAgBM,EAAKN,MAAM,oBACxCuD,EAAUzI,KAAKC,MAAgB,GAAVwI,IAGnBA,EAAU,IACZA,EAAU,GAMZ,IAAIwlC,EAAajuC,KAAKC,MACpBD,KAAKC,MAAOD,KAAKC,MAAO,EAAIgD,EAAS1C,MAAS,EAAI,GAAKgI,EAAYC,EAAU,IAAMC,GAQrF,GALIxF,EAASqC,UAAU,QAAUqoC,IAAe1qC,EAASR,WAAW,UAClEwrC,EAAajuC,KAAKC,MAAmB,GAAbguC,GACxB1mC,EAAKyB,UAAW,IAGbm/B,EAAY,CACf,IAAMwK,EAAsC,YAAnBtwC,EAAMy/B,SAAyB,EAAI,EAAI,GAC5D6L,GAActrC,EAAMgB,aAAayD,WACnCmnC,EAAajuC,KAAKC,MAAMguC,EAAa0E,GACrCprC,EAAKT,WAAY,IACP6mC,GAActrC,EAAMgB,aAAa0D,gBAC3CknC,EAAajuC,KAAKC,MAAMguC,EAAa0E,GACrCprC,EAAKR,eAAgB,EAEzB,CAEuB,YAAnB1E,EAAMy/B,UACN,CAAC,cAAe,mBAAmBj9B,SAASW,EAAKrI,UACnD8wC,EAAajuC,KAAKC,MAAoB,EAAbguC,EAAkB,IAGxC5rC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,SACxCH,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,UAC5CyrC,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKjD,QAAUjC,EAAMiC,UAEpBjC,EAAM0pC,WAAW,QAAUvmC,EAAKhD,QAAQ,UACxCH,EAAM0pC,WAAW,SAAWvmC,EAAKhD,QAAQ,SACzCgD,EAAKN,MAAM,eAAiB7C,EAAM0pC,WAAW,OAAQ,OAAQ,WAE9DkC,EAAajuC,KAAKC,MAAmB,GAAbguC,GACxB1mC,EAAKjD,QAAUjC,EAAMiC,SAGnBrB,EAASR,WAAW,eAAiBQ,EAAS2B,WAAaY,EAAKhD,QAAQ,UAC1EyrC,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKK,gBAAkB,cAGzBqmC,GAAc,EAEV9F,IACEllC,EAASR,WAAW,WACtBwrC,GAAc,EACd1mC,EAAKK,gBAAkB3E,EAAS0E,SAEhCsmC,GAAc,EAEhB1mC,EAAK4gC,WAAaA,GAGhBllC,EAASV,QAAQ,cACnB0rC,EAAajuC,KAAKC,MAAmB,IAAbguC,GACxB1mC,EAAKE,aAAexE,EAASgD,MAG3BT,EAAKN,MAAM,YAAiD,QAAnC7C,EAAMgB,aAAa8gC,cAE1ClhC,EAASR,WAAW,cACtBwrC,EAAajuC,KAAKC,MAAmB,EAAbguC,IAExBA,EAAajuC,KAAKC,MAAmB,EAAbguC,GACxB1mC,EAAK48B,YAAc,QAMvB,IAAIl7B,EAAU,EACVzD,EAAKhD,QAAOyC,MAAZO,GAAIw5B,EAAAA,GAAAA,GAAY/7B,EAAS0C,UACvB1C,EAASR,WAAW,iBACtBwG,EAAU,EACV1B,EAAKK,gBAAkB3E,EAAS0E,SAEhCsB,EAAU,KAId,IAAI6pC,EAAY,EACZ5vC,EAAST,WAAW,SAAU,eAAiBgrC,EAAoB,IACrEqF,EAAY,IACZvrC,EAAKG,gBAAkBxE,EAASyE,SAElC,IAAIorC,EAAW,EACX9vC,EAASV,QAAQ,gBAAkBkrC,EAAoB,IACzDsF,EAAW,IACXxrC,EAAKE,aAAexE,EAASgD,MAE/B,IAAI+sC,EAAY,EACZ/vC,EAASR,WAAW,gBAAkBgrC,EAAoB,IAC5DuF,EAAY,EACZzrC,EAAKK,gBAAkB3E,EAAS0E,SAElC,IAAIsrC,EAAW,EACXztC,EAAKhD,QAAQkiC,GAAmBxhC,EAAS+C,SAC1CwnC,EAAoB,GAAKjoC,EAAKhD,QAAQ,aACvCywC,EAAW,GACX1rC,EAAKM,aAAe3E,EAAS+C,MAI/B,IADA,IAAMy/B,EAAmB,GAChBnoC,EAAI,EAAGA,EAAI,GAAIA,IACtBmoC,EAAOnoC,GAAKyC,KAAKC,MAAOguC,GAAc,GAAK1wC,GAAM,KACjDmoC,EAAOnoC,GAAKyC,KAAKC,MAAMylC,EAAOnoC,GAAK0L,GACnCy8B,EAAOnoC,GAAKyC,KAAKC,MAAMylC,EAAOnoC,GAAKgwC,GACnC7H,EAAOnoC,GAAKyC,KAAKC,MAAMylC,EAAOnoC,GAAKiwC,GACnC9H,EAAOnoC,GAAKyC,KAAKC,MAAMylC,EAAOnoC,GAAKu1C,GACnCpN,EAAOnoC,GAAKyC,KAAKC,MAAMylC,EAAOnoC,GAAKw1C,GACnCrN,EAAOnoC,GAAKyC,KAAKC,MAAMylC,EAAOnoC,GAAKy1C,GACnCtN,EAAOnoC,GAAKyC,KAAKC,MAAMylC,EAAOnoC,GAAK01C,GACnCvN,EAAOnoC,GAAKyC,KAAK6C,IAAI,EAAG6iC,EAAOnoC,IAMjC,OAJA2vC,EAAOxH,OAASA,EAITwH,CACT,EGzhBEmB,GACAA,GACAwC,GACAA,GACAA,IEjBF,IAAMqC,GAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,OAC3CC,GAAM,IAAI3xB,IAAI,CAAC,QAGR4xB,GAAO,WAoClB,SAAAA,EACEhzC,EACAtD,GAOC,IAADu2C,EANAx2C,EAKCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACoC,EAAAA,EAAAA,GAAA,KAAA4zC,GAAA,KA3CRhzC,SAAG,OACHtD,UAAI,OACJqiC,aAAO,OAEPx5B,WAAK,OACLuc,cAAQ,OAER3hB,WAAK,OACL+nC,oBAAc,OACd1iB,YAAM,OACNje,aAAO,OACP/C,eAAS,OACTksC,iBAAW,OACXwC,kBAAY,OACZrH,gBAAU,OACV9E,mBAAa,OACbz+B,iBAAW,OACXzC,UAAI,OACJkmC,cAAQ,OACRoH,UAAI,OAEJ/yC,YAAM,OACNzC,SAAG,OACH+L,SAAG,OACH1F,YAAM,OACND,cAAQ,OACRZ,WAAK,OAELiwC,mBAAa,OACb1uC,YAAM,OACN2uC,oBAAc,OACdrI,kBAAY,OAEZ1pB,WAAK,EAYHjkB,KAAK0hC,QAAUviC,GAAO,EAAM,CAAC,EAAGwD,EAAI++B,QAAQp+B,IAAIpG,EAAKmC,IAAQD,EAAQ62C,WAErEj2C,KAAK2C,IAAMA,EACX3C,KAAKX,KAAOD,EAAQC,MAAQA,EAC5BW,KAAKkI,MAAQlI,KAAK0hC,QAAQx5B,MAC1BlI,KAAKykB,SAAWzkB,KAAK0hC,QAAQjd,SAE7BzkB,KAAK8C,MAAQ1D,EAAQ0D,OAAS,IAC9B9C,KAAK6qC,eAAiBzrC,EAAQyrC,gBAAkB,IAChD7qC,KAAKmoB,OAAS/oB,EAAQ+oB,QAAUnoB,KAAK0hC,QAAQvZ,QAAU,IACvDnoB,KAAKkK,QAAU9K,EAAQ8K,UAAiC,QAA1B0rC,EAAI51C,KAAK0hC,QAAQrzB,iBAAS,IAAAunC,OAAA,EAAtBA,EAAyB,UAAM/1C,EACjEG,KAAKmH,YAAc/H,EAAQ+H,UAE3BnH,KAAKqzC,cAAgBj0C,EAAQi0C,YAC7BrzC,KAAK61C,aAAe71C,KAAKqzC,iBACKxzC,IAAzBT,EAAQy2C,aAA6B,GAAKz2C,EAAQy2C,kBAAgBh2C,EACvEG,KAAKwuC,aAAepvC,EAAQovC,WAC5BxuC,KAAK0pC,cAAgBtqC,EAAQsqC,cAC7B1pC,KAAKiL,YAAc7L,EAAQ6L,YAC3BjL,KAAK0uC,SAAWtvC,EAAQsvC,SACxB1uC,KAAKwI,KAAOpJ,EAAQoJ,KACpBxI,KAAK+C,OAAS3D,EAAQ2D,QAAW,UACjC/C,KAAKM,IAAMq1C,EAAQO,YAAYvzC,EAAKvD,EAAQkB,IAAK,IACjDN,KAAKqM,IAAMspC,EAAQO,YAAYvzC,EAAKvD,EAAQiN,IAAK1J,EAAIK,KAAO,EAAI,EAAI,KACpEhD,KAAK2G,OAASgvC,EAAQO,YAAYvzC,EAAKvD,EAAQuH,OAAQ,GAAG,GAIpC,IAAlB3G,KAAKykB,WAAmBzkB,KAAKqzC,aAAerzC,KAAK0hC,QAAQxS,cAC3DlvB,KAAKykB,SAAW9hB,EAAI++B,QAAQp+B,IAAIpG,EAAK8C,KAAK0hC,QAAQxS,cAAezK,UAG/D9hB,EAAIK,IAAM,IACZhD,KAAKM,IAAIa,GAAKU,EAAMa,OAClBb,EAAMs0C,QAAQ,CACZ51C,IAAKP,KAAKM,IAAIC,IACdC,IAAKR,KAAKM,IAAIE,IACdQ,IAAKhB,KAAKM,IAAIU,IACdqB,IAAKrC,KAAKM,IAAIQ,QAKpBd,KAAK0G,SAAW,CAAC,EACjB1G,KAAK8F,MAAQ,CAAC,EAAkB,IACRI,EADQI,GAAAC,EAAAA,EAAAA,GACbkvC,IAAK,IAAxB,IAAAnvC,EAAA9B,MAAA0B,EAAAI,EAAA7C,KAAA+C,MAA0B,CAAC,IAAhBtE,EAAIgE,EAAAjE,MACP6rC,EAAM9tC,KAAKo2C,SAASzzC,EAAKT,GAC/BlC,KAAK0G,SAASxE,GAAiB,OAATA,IAAkB4rC,EAAI9tC,KAAK6qC,eAAe,IAAMiD,EACtE9tC,KAAK8F,MAAM5D,GAAkB,OAATA,IAAkB4rC,EAAI9tC,KAAK6qC,eAAe,IAAMiD,CACtE,CAAC,OAAAvwC,IAAA+I,EAAApH,EAAA3B,GAAA,SAAA+I,EAAAM,GAAA,CAED,IAAM2lC,EAAQntC,EAAQmtC,OAASntC,EAAQ22C,cACvC/1C,KAAK+1C,cAAgBxJ,GAASA,GAASvsC,KAAK0G,SAASvF,GAAKorC,EAAkB,IAAVA,EAAc,EAAIvsC,KAAK0G,SAASvF,GAClGnB,KAAKqH,OAASjI,EAAQiI,QAAU,GAChCrH,KAAKg2C,eAAiB52C,EAAQ42C,gBAAkB,GAChDh2C,KAAK2tC,aAAevuC,EAAQuuC,cAAgB,EAC5C3tC,KAAKikB,MAAQ7kB,EAAQ6kB,OAAS,EAChC,CAuIC,OAvIAjiB,EAAAA,EAAAA,GAAA2zC,EAAA,EAAA33C,IAAA,QAAAiE,MAED,WAEE,QAFYtC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAEKK,KAAKqzC,aAA6C,IAA9BrzC,KAAK0hC,QAAQL,UAAUlgC,GACnDoB,KAAKC,MAAOxC,KAAK0G,SAASvF,IAAM,IAAM,EAAInB,KAAK61C,cAAkB,KAGnE71C,KAAK0G,SAASvF,EACvB,GAAC,CAAAnD,IAAA,QAAAiE,MAED,WAEE,QAFYtC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAEKK,KAAKqzC,aAA6C,IAA9BrzC,KAAK0hC,QAAQL,UAAUlgC,GACnDoB,KAAKiK,KAAMxM,KAAK+1C,eAAiB,IAAM,EAAI/1C,KAAK61C,cAAkB,KAGpE71C,KAAK+1C,aACd,GAAC,CAAA/3C,IAAA,aAAAiE,MAED,WAAoC,IAAD,IAAA4D,EAAAlG,UAAAC,OAArByO,EAAS,IAAApO,MAAA4F,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATsI,EAAStI,GAAApG,UAAAoG,GACrB,SAAU/F,KAAKkK,UAAWmE,EAAUjH,SAASpH,KAAKkK,SACpD,GAAC,CAAAlM,IAAA,UAAAiE,MAED,WAA6B,IAAD,IAAAkjC,EAAAxlC,UAAAC,OAAjByS,EAAK,IAAApS,MAAAklC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALhzB,EAAKgzB,GAAA1lC,UAAA0lC,GACd,SAAUrlC,KAAKwI,OAAQ6J,EAAMjL,SAASpH,KAAKwI,MAC7C,GAAC,CAAAxK,IAAA,YAAAiE,MAED,WAAwC,IAAD,IAAAo0C,EAAA12C,UAAAC,OAA1B02C,EAAQ,IAAAr2C,MAAAo2C,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARD,EAAQC,GAAA52C,UAAA42C,GACnB,SAAUv2C,KAAKqH,SAAUivC,EAASlvC,SAASpH,KAAKqH,QAClD,GAAC,CAAArJ,IAAA,UAAAiE,MAED,WAAiC,IAAD,IAAAu0C,EAAA72C,UAAAC,OAArBsI,EAAK,IAAAjI,MAAAu2C,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAALvuC,EAAKuuC,GAAA92C,UAAA82C,GACd,QAAAzwC,EAAA,EAAA0wC,EAAmBxuC,EAAKlC,EAAA0wC,EAAA92C,OAAAoG,IAAE,CAArB,IAAM5B,EAAIsyC,EAAA1wC,GACb,GAAIhG,KAAK0uC,SAAW1uC,KAAK0uC,WAAatqC,EAAOpE,KAAKkI,MAAMd,SAAShD,GAAO,OAAO,CACjF,CACA,OAAO,CACT,GAEA,CAAApG,IAAA,kBAAAiE,MACA,WAAyC,IAAD,IAAA00C,EAAAh3C,UAAAC,OAArBsI,EAAK,IAAAjI,MAAA02C,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAL1uC,EAAK0uC,GAAAj3C,UAAAi3C,GACtB,QAAAzrC,EAAA,EAAA0rC,EAAmB3uC,EAAKiD,EAAA0rC,EAAAj3C,OAAAuL,IAAE,CAArB,IAAM/G,EAAIyyC,EAAA1rC,GACb,GAAInL,KAAKkI,MAAMd,SAAShD,GAAO,OAAO,CACxC,CACA,OAAO,CACT,GAAC,CAAApG,IAAA,QAAAiE,MAED,WAA2B,IAAD,IAAA60C,EAAAn3C,UAAAC,OAAjBm3C,EAAK,IAAA92C,MAAA62C,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALD,EAAKC,GAAAr3C,UAAAq3C,GACZ,OAAOD,EAAM3vC,SAASpH,KAAKX,KAC7B,GAAC,CAAArB,IAAA,QAAAiE,MAED,WACE,OAAO,IAAI0zC,EAAQ31C,KAAK2C,IAAK3C,KAAKX,KAAM,CACtCyD,MAAO9C,KAAK8C,MACZ+nC,eAAgB7qC,KAAK6qC,eACrB3gC,QAASlK,KAAKkK,QACd/C,UAAWnH,KAAKmH,UAChBksC,YAAarzC,KAAKqzC,YAClBwC,aAAc71C,KAAK61C,aACnBrH,WAAYxuC,KAAKwuC,WACjB9E,cAAe1pC,KAAK0pC,cACpBz+B,YAAajL,KAAKiL,YAClBzC,KAAMxI,KAAKwI,KACX2f,OAAQnoB,KAAKmoB,OACbplB,OAAQ/C,KAAK+C,OACbzC,IAAKnB,GAAO,EAAM,CAAC,EAAGa,KAAKM,KAC3B+L,IAAKlN,GAAO,EAAM,CAAC,EAAGa,KAAKqM,KAC3B1F,OAAQxH,GAAO,EAAM,CAAC,EAAGa,KAAK2G,QAC9BovC,cAAe/1C,KAAK+1C,cACpB1uC,OAAQrH,KAAKqH,OACbqnC,SAAU1uC,KAAK0uC,SACff,aAAc3tC,KAAK2tC,aACnB1pB,MAAOjkB,KAAKikB,MAAM2oB,QAClBqJ,UAAWj2C,KAAK0hC,SAEpB,GAAC,CAAA1jC,IAAA,WAAAiE,MAED,SAAiBU,EAAmBT,GAClC,OAAOL,EAAMu0C,SACXzzC,EACAT,EACAlC,KAAK0hC,QAAQL,UAAUn/B,GACvBlC,KAAKM,IAAI4B,GACTlC,KAAKqM,IAAInK,GACTlC,KAAK8C,MACL9C,KAAK+C,OAET,IAAC,EAAA/E,IAAA,WAAAiE,MAED,SACEU,EACAs0C,EACAzuC,EACAuhC,GAEA,IAAMrI,EAAU/+B,EAAI++B,QAAQp+B,IAAIpG,EAAK+5C,IACrC,GAAY,OAAPvV,QAAO,IAAPA,IAAAA,EAAS7T,YACZ,OAAOopB,EAGT,IAAIn3C,EAAI,EAcR,OAZG0I,IACGA,EAAKpB,SAAS,SAAWoB,EAAKpB,SAAS,UACtB,YAAhB6vC,GAAsC,YAATzuC,GACb,WAAhByuC,GAAqC,aAATzuC,IAChCuhC,GAA4B,aAAhBkN,GAA2C,eAAblN,GAC1B,aAAhBkN,GAA2C,kBAAblN,EAE/BjqC,EAAI,EACS,OAAJ0I,QAAI,IAAJA,GAAAA,EAAMpB,SAAS,WACxBtH,EAAI,GAGCA,EAAI4hC,EAAQ7T,YAAY/tB,EAAI,GAAK4hC,EAAQriC,IAClD,GAAC,CAAArB,IAAA,cAAAiE,MAED,SACEU,EACAu0C,EACApJ,GAEC,IADDqJ,IAAKx3C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAECy3C,EAA6B,CAAC,EACpC,GAAIF,IACFt5C,EAAcw5C,EAAKF,EAASxB,IACxBwB,EAAQ70C,MACV+0C,EAAIt2C,IAAMo2C,EAAQ70C,IAClB+0C,EAAI32C,IAAMy2C,EAAQ70C,KAEhB80C,GAASx0C,EAAIK,KAAO,GAAKk0C,EAAQp2C,MAAQo2C,EAAQz2C,KACnD,MAAM,IAAIhD,MAAM,8DAGpB,OAAA2kC,EAAAA,EAAAA,GAAA,CAAQjhC,GAAI2sC,EAAKvtC,IAAKutC,EAAKttC,IAAKstC,EAAKhtC,IAAKgtC,EAAKrtC,IAAKqtC,EAAK9sC,IAAK8sC,GAAQsJ,EACxE,KAACzB,CAAA,CA9OiB,GCLd0B,GAAU,CAAC,OAAQ,QAAS,QAAS,WAAY,MAAO,UAAW,OAAQ,UAEpEr0B,GAAI,WAsCf,SAAAA,EACErgB,EACAtD,GAMC,IAADi4C,EAAAC,EALAn4C,EAICO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACoC,EAAAA,EAAAA,GAAA,KAAAihB,GAAA,KA5CRrgB,SAAG,OACHtD,UAAI,OAEJm4C,kBAAY,OACZttC,aAAO,OACP1B,UAAI,OACJk5B,aAAO,OACP+V,UAAI,OACJC,YAAM,OACNzB,eAAS,OAETxN,UAAI,OACJyE,eAAS,OACTC,4BAAsB,OACtB56B,QAAE,OACFnO,UAAI,OACJmG,cAAQ,OACR2Y,WAAK,OACL/E,iBAAW,OACXze,YAAM,OACNiU,YAAM,OACNU,oBAAc,OACd4M,qBAAe,OACfrE,oBAAc,OACdqzB,YAAM,OACNx9B,WAAK,OACLkF,cAAQ,OACRrN,gBAAU,OACVsU,qBAAe,OACf6C,2BAAqB,OACrB7B,2BAAqB,OACrBJ,8BAAwB,OACxB2D,8BAAwB,OACxB7F,mBAAa,OACbwD,SAAG,OACHc,WAAK,EAWHviB,EAAOD,EAAQC,MAAQA,EACvBW,KAAKw3C,aAAen4C,EACpB,IAAI4jB,EAAe9jB,GAAO,EAAM,CAACE,KAAAA,GAAOsD,EAAIshB,MAAM3gB,IAAIpG,EAAKmC,IAAQD,EAAQ62C,WAI3E,GAFAj2C,KAAKyoC,KAAO,EAERrpC,EAAQs4C,QAAUz0B,EAAKI,QAAS,CAClC,IAAMs0B,EAiLL,SACL1N,EACA2N,EACAC,EACAC,GAEA,GAAID,EAAU,MAAO,YACrB,GAAuB,cAAnBC,EAAgC,MAAO,aAC3C,GAAiB,SAAb7N,EAAqB,CACvB,GAAuB,mBAAnB2N,EAAqC,MAAO,iBAChD,GAAuB,qBAAnBA,EAAuC,MAAO,mBAClD,GAAuB,mBAAnBA,EAAqC,MAAO,iBAClD,CACA,GAAiB,WAAb3N,EAAuB,CACzB,GAAuB,eAAnB2N,EAAiC,MAAO,eAC5C,GAAuB,gBAAnBA,EAAkC,MAAO,kBAC7C,GAAuB,iBAAnBA,EAAmC,MAAO,kBAC9C,GAAuB,aAAnBE,EAA+B,MAAO,eAC1C,GAAuB,aAAnBA,EAA+B,MAAO,gBAC1C,GAAuB,gBAAnBA,EAAkC,MAAO,gBAC7C,GAAuB,cAAnBA,EAAgC,MAAO,eAC7C,CACA,GAAiB,UAAb7N,EAAsB,CACxB,GAAuB,kBAAnB2N,EAAoC,MAAO,eAC/C,GAAuB,mBAAnBA,EAAqC,MAAO,aAClD,CACA,GAAiB,UAAb3N,EAAsB,CACxB,GAAuB,oBAAnB2N,EAAsC,MAAO,mBACjD,GAAuB,kBAAnBA,EAAoC,MAAO,gBACjD,CACA,GAAiB,aAAb3N,EAAyB,CAC3B,GAAuB,iBAAnB2N,EAAmC,MAAO,mBAC9C,GAAkB,OAAdA,QAAc,IAAdA,GAAAA,EAAgBzF,WAAW,eACf,OAAdyF,QAAc,IAAdA,GAAAA,EAAgBtW,SAAS,QAAS,MAAO,kBAC7C,CACA,GAAiB,UAAb2I,EAAsB,CACxB,GAAuB,kBAAnB2N,EAAoC,MAAO,kBAC/C,GAAuB,iBAAnBA,EAAmC,MAAO,iBAC9C,GAAuB,mBAAnBA,EAAqC,MAAO,kBAChD,GAAuB,kBAAnBA,EAAoC,MAAO,iBACjD,CACA,GAAiB,UAAb3N,EAAsB,CACxB,GAAuB,mBAAnB2N,EAAqC,MAAO,kBAChD,GAAuB,iBAAnBA,EAAmC,MAAO,mBAC9C,GAAuB,kBAAnBA,EAAoC,MAAO,mBAC/C,GAAuB,iBAAnBA,EAAmC,MAAO,mBAC9C,GAAuB,8BAAnBA,EAAgD,MAAO,kBAC7D,CACA,GAAiB,SAAb3N,EAAqB,CACvB,GAAuB,oBAAnB2N,EAAsC,MAAO,eACjD,GAAuB,iBAAnBA,EAAmC,MAAO,gBAChD,CACA,MAAiB,WAAb3N,GAA4C,kBAAnB2N,EAA2C,gBACvD,aAAb3N,GAA8C,iBAAnB2N,EAA0C,mBACxD,UAAb3N,GAA2C,gBAAnB2N,EAAyC,eACpD,QAAb3N,GAAyC,gBAAnB2N,EAAyC,kBAClD,WAAb3N,GAA4C,qBAAnB2N,EAA8C,kBAC1D,WAAb3N,GAA4C,mBAAnB2N,EAA4C,kBACxD,YAAb3N,GAA6C,kBAAnB2N,EAA2C,iBACxD,SAAb3N,GAA0C,mBAAnB2N,EAA4C,kBACtD,WAAb3N,GAA4C,oBAAnB2N,EAA6C,kBACzD,SAAb3N,GAA0C,oBAAnB2N,EAA6C,eACjE,OAASG,GAAgB9N,EAClC,CAhPkC+N,CAC1B/0B,EAAK7e,KACLhF,EAAQsiC,UACa,WAAlBze,EAAK1Y,UACRnL,EAAQ8K,SAEJmZ,EAAU1gB,EAAIshB,MAAM3gB,IAAIpG,EAAKy6C,IAYnC10B,EAAO9jB,GAAO,EAAM,CAAC,EAAGkkB,EAAS,CAC/BhkB,KAAMs4C,EACN7sC,UAZI,CAAC,kBAAmB,kBAAmB,oBAAoB1D,SAASuwC,GAC/D,IAIkB,KAAvBt0B,EAASvY,WAAoC,cAAhB6sC,EACxB10B,EAAKI,QAASvY,UAEhBuY,EAASvY,UAKhBP,SAAU0Y,EAAK1Y,UAEnB,CACA,GAAInL,EAAQq4C,MAAkB,QAAdH,EAAIr0B,EAAKG,aAAK,IAAAk0B,GAAVA,EAAYxsC,UAAW,CACzC,IAAMmtC,EAqGL,SAAsBlO,EAAkBE,EAAsBzhC,GAEnE,GADAA,EAAOA,GAAQ,GACXuhC,EAAS3iC,SAAS,gBAAiB,MAAO,kBAC9C,GAAiB,oBAAb2iC,GAA2C,gBAATvhC,EAAwB,MAAO,uBACrE,GAAiB,mBAAbuhC,GAA0C,eAATvhC,EAAuB,MAAO,sBACnE,GAAiB,gBAAbuhC,GAAuC,eAATvhC,EAAuB,MAAO,sBAChE,GAAiB,mBAAbuhC,GAA0C,eAATvhC,EAAuB,MAAO,8BACnE,GAAiB,kBAAbuhC,GAAyC,qBAATvhC,EAClC,MAAO,2BAET,GAAiB,eAAbuhC,GAAsC,eAATvhC,EAAuB,MAAO,wBAC/D,GAAiB,YAAbuhC,GAAmC,cAATvhC,EAAsB,MAAO,oBAC3D,GAAiB,mBAAbuhC,GAA0C,gBAATvhC,EAAwB,MAAO,mBACpE,GAAiB,mBAAbuhC,GAA0C,iBAATvhC,EACnC,MAAO,8BAET,GAAiB,mBAAbuhC,GAA0C,eAATvhC,EAAuB,MAAO,sBACnE,GAAiB,eAAbuhC,GAAsC,eAATvhC,EAAuB,MAAO,yBAC/D,GAAiB,oBAAbuhC,GAA2C,gBAATvhC,EAAwB,MAAO,wBACrE,GAAiB,gBAAbuhC,GAAuC,eAATvhC,EAAuB,MAAO,eAChE,GAAiB,qBAAbuhC,GAA6C,eAATvhC,EAAuB,MAAO,oBACtE,GAAiB,gBAAbuhC,EAA4B,CAC9B,GAAa,kBAATvhC,EAA0B,MAAO,qBACrC,GAAa,kBAATA,EAA0B,MAAO,6BACvC,CACA,OAAO0vC,GAAcjO,EACvB,CA/HgCkO,CAAal1B,EAAK5jB,KAAM4jB,EAAK7e,KAAMhF,EAAQoJ,MAC/D4a,EAAQzgB,EAAIshB,MAAM3gB,IAAIpG,EAAK+6C,IACjCh1B,EAAO9jB,GAAO,EAAM,CAAC,EAAGikB,EAAO,CAC7B/jB,KAAM44C,EACNntC,UAAgC,IAArBsY,EAAOtY,UAAkBmY,EAAKG,MAAMtY,UAAYsY,EAAOtY,UAClEP,SAAU0Y,EAAK1Y,UAEnB,MACM0Y,EAAKpQ,WACsB,kBAAlBoQ,EAAKpQ,SACd7S,KAAKyoC,KAAOxlB,EAAKpQ,SACRzT,EAAQqpC,KACjBzoC,KAAKyoC,KAAOrpC,EAAQqpC,KAEpBzoC,KAAKyoC,KAA4B,eAApBrpC,EAAQ8K,QACjB+Y,EAAKpQ,SAAS,GACdoQ,EAAKpQ,SAAS,GAAK,GAG3B7S,KAAKmtC,uBAAyB/tC,EAAQ+tC,uBAExCntC,KAAK2C,IAAMA,EACX3C,KAAKX,KAAO4jB,EAAK5jB,KACjBW,KAAKkK,QAAU9K,EAAQ8K,QACvBlK,KAAKwI,KAAOpJ,EAAQoJ,KACpBxI,KAAKy3C,KAAOr4C,EAAQq4C,KACpBz3C,KAAK03C,OAASt4C,EAAQs4C,OACtB13C,KAAKi2C,UAAY72C,EAAQ62C,UACzBj2C,KAAK0hC,QAAUtiC,EAAQsiC,QAEvB1hC,KAAKuS,GAAK0Q,EAAKnY,UAEf,IAAMstC,EACHz1C,EAAIK,KAAO,GAAiB,aAAZigB,EAAK5V,IACrB1K,EAAIK,KAAO,GAAK,CAAC,cAAe,cAAcoE,SAAS6b,EAAK5V,IAC/DrN,KAAKoE,KAAOg0C,EAAiB,MAAQn1B,EAAK7e,KAC1CpE,KAAKuK,SAAW0Y,EAAK1Y,WAClB5H,EAAIK,IAAM,EAAKq0C,GAAQjwC,SAAS6b,EAAK7e,MAAQ,UAAY,WAAc,UAE1E,IAAMlC,EAAyB,YAAlBlC,KAAKuK,SAAyB,MAAQ,MACtC,QAATgtC,EAAAt0B,EAAK7H,YAAI,IAAAm8B,GAATA,EAAW5wC,QAAUsc,EAAK7H,KAAKzU,OAAOzE,IAAS+gB,EAAK7H,KAAKzU,OAAOzE,GAAS,IAC3ElC,KAAKsK,WAAa/H,KAAK81C,IAAIp1B,EAAK7H,KAAKzU,OAAOzE,KAE9ClC,KAAKktC,UAAaltC,KAAKsK,YAAclL,EAAQ8tC,WAAc,EAC3DltC,KAAKme,YAAc8E,EAAK9E,YAGxBne,KAAKN,OAASujB,EAAKvjB,QAAU,MAC7BM,KAAK2T,OAASsP,EAAKtP,OACnB3T,KAAKqU,iBAAmB4O,EAAK5O,eAC7BrU,KAAKihB,kBAAoBgC,EAAKhC,gBAC9BjhB,KAAK4c,iBAAmBqG,EAAKrG,eAC7B5c,KAAKiwC,SAAW7wC,EAAQ6wC,UAAYhtB,EAAK1E,UAE3B,IAAZ5b,EAAIK,KAAa,CAAC,aAAc,YAAa,QAAS,eAAeoE,SAAS6b,EAAK5V,IACrFrN,KAAKyS,MAAQwQ,EAAKxQ,MAClBzS,KAAKkjB,MAAQD,EAAKC,MAElBljB,KAAK2X,SAAWsL,EAAKtL,UAAY,EAEjC3X,KAAK4e,kBAAoBqE,EAAKrE,gBAC9B5e,KAAKyhB,sBAAwBwB,EAAKxB,sBAClCzhB,KAAK4f,sBAAwBqD,EAAKrD,sBAClC5f,KAAKwf,yBAA2ByD,EAAKzD,yBACrCxf,KAAKmjB,yBAA2BF,EAAKE,yBACrCnjB,KAAKsd,gBAAkB2F,EAAK3F,cAC5Btd,KAAK8gB,MAAQmC,EAAKnC,IAClB9gB,KAAK4hB,QAAUqB,EAAKrB,MAEf5hB,KAAKuS,IAEJ,CAAC,SAAU,cAAe,YAAa,gBAAgBnL,SAAS6b,EAAK5V,MACvErN,KAAKuS,GAAK,IAGhB,CAuBC,OAvBAvQ,EAAAA,EAAAA,GAAAghB,EAAA,EAAAhlB,IAAA,QAAAiE,MAED,WAA2B,IAAD,IAAA4D,EAAAlG,UAAAC,OAAjBm3C,EAAK,IAAA92C,MAAA4F,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALgxC,EAAKhxC,GAAApG,UAAAoG,GACZ,OAAOgxC,EAAM3vC,SAASpH,KAAKX,KAC7B,GAAC,CAAArB,IAAA,UAAAiE,MAED,WAAoD,IAAD,IAAAkjC,EAAAxlC,UAAAC,OAAxCsI,EAAK,IAAAjI,MAAAklC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALn9B,EAAKm9B,GAAA1lC,UAAA0lC,GACd,OAAOn9B,EAAMd,SAASpH,KAAKoE,KAC7B,GAAC,CAAApG,IAAA,QAAAiE,MAED,WACE,OAAO,IAAI+gB,EAAKhjB,KAAK2C,IAAK3C,KAAKw3C,aAAc,CAC3CttC,QAASlK,KAAKkK,QACd1B,KAAMxI,KAAKwI,KACXk5B,QAAS1hC,KAAK0hC,QACd+V,KAAMz3C,KAAKy3C,KACXC,OAAQ13C,KAAK03C,OACbzH,OAAQjwC,KAAKiwC,OACbxH,KAAMzoC,KAAKyoC,KACXyE,UAAWltC,KAAKktC,UAChBC,uBAAwBntC,KAAKmtC,uBAC7B8I,UAAWj2C,KAAKi2C,WAEpB,KAACjzB,CAAA,CAjLc,GAgNjB,IAAMk1B,GAEF,CACF73C,IAAK,kBACLM,KAAM,qBACNC,OAAQ,oBACRC,SAAU,iBACVghC,MAAO,iBACP9gC,SAAU,oBACVE,KAAM,oBACNC,OAAQ,uBACRE,MAAO,yBACPC,MAAO,aACPC,OAAQ,gBACRC,IAAK,kBACLqgC,OAAQ,kBACRpgC,OAAQ,gBACRC,QAAS,mBACTC,KAAM,oBACNC,MAAO,kBACPC,MAAO,gBAoET,IC5SA02C,GD4SMP,GAEF,CACF13C,IAAK,YACLM,KAAM,WACNC,OAAQ,WACRC,SAAU,YACVghC,MAAO,WACP9gC,SAAU,UACVE,KAAM,QACNC,OAAQ,YACRE,MAAO,WACPC,MAAO,aACPC,OAAQ,QACRC,IAAK,YACLqgC,OAAQ,SACRpgC,OAAQ,OACRC,QAAS,YACTC,KAAM,WACNC,MAAO,aACPC,MAAO,UEhRF,SAAS22C,GACd51C,EACA6C,EACAC,EACAsC,EACAnD,GAEA,OLhCK,SACLjC,EACA6C,EACAC,EACAsC,EACAnD,GAEA,OAAOqwC,GAAUtyC,EAAIK,KACnBL,EACA6C,EAAS/F,QACTgG,EAAShG,QACTsI,EAAKtI,QACLmF,EAAQA,EAAMnF,QAAU,IAAI2kC,GAEhC,CKkBUoU,CACS,kBAAR71C,EAAmBuhC,GAAY5gC,IAAIX,GAAOA,EACjD6C,EACAC,EACAsC,EACAnD,EAEJ,CD9DiB0zC,KAAAA,GAAK,ICgEf,IAAMt1B,GAAI,SAAAy1B,IAAAC,EAAAA,EAAAA,GAAA11B,EAAAy1B,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA51B,GACf,SAAAA,EACErgB,EACAtD,GAMC,IALDD,EAICO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAAoC,EAAAA,EAAAA,GAAA,KAAAihB,GAAA21B,EAAAv6C,KAAA,KAEe,kBAARuE,EAAmBuhC,GAAY5gC,IAAIX,GAAOA,EAAKtD,EAAMD,EACpE,CAAC,OAAA4C,EAAAA,EAAAA,GAAAghB,EAAA,CAXc,CAASw1B,IAcb7C,GAAO,SAAAkD,IAAAH,EAAAA,EAAAA,GAAA/C,EAAAkD,GAAA,IAAAC,GAAAF,EAAAA,EAAAA,GAAAjD,GAClB,SAAAA,EACEhzC,EACAtD,GAWC,IAVDD,EASCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAAoC,EAAAA,EAAAA,GAAA,KAAA4zC,GAAAmD,EAAA16C,KAAA,KAEe,kBAARuE,EAAmBuhC,GAAY5gC,IAAIX,GAAOA,EAAKtD,EAAMD,EACpE,CAcC,OAdA4C,EAAAA,EAAAA,GAAA2zC,EAAA,OAAA33C,IAAA,WAAAiE,MAED,SACEU,EACAs0C,EACAzuC,EACAuhC,GAEA,OAAOyO,GAAUO,SACA,kBAARp2C,EAAmBuhC,GAAY5gC,IAAIX,GAAOA,EACjDs0C,EACAzuC,EACAuhC,EAEJ,KAAC4L,CAAA,CA9BiB,CAAS6C,ICzE7B,SAASQ,GAAgBC,GACrB,MAAe,aAAXA,EAAiC,MACtB,UAAXA,EAA8B,MACnB,QAAXA,EAA4B,MACjB,UAAXA,EAA8B,MACnB,SAAXA,EAA6B,MAClB,SAAXA,EAA6B,MAC1B,EACX,CAEA,SAASC,GAAYv0C,GACjB,MAA0B,KAAnBA,EAAQ0C,aAAoCxH,IAAnB8E,EAAQ0C,MAC5C,CAGA,SAAS8xC,GAAiBpxC,EAAYnD,EAAcY,EAAmBC,GACnE,IAAMuC,EACNxC,EAASR,WAAW,YAAcJ,EAAMgB,aAAaogC,YAC/C/9B,EACJxC,EAASX,QAAQ,iBAAmBW,EAAST,WAAW,SAmBtDgrC,EAlBuBloC,EACzBnF,GACAoF,EACAtC,EAASyC,MAAM,GACfF,EACApD,EAAMC,UACNoD,IAEyBxC,EAASyC,MAAM,GACtCJ,EACAnF,GACAoF,EACAtC,EAASyC,MAAM,GACfF,EACApD,EAAMC,UACNoD,GAEA,GAsBJ,OAnBIxC,EAASipC,WACXsB,EAAoBloC,EAClBnF,GACAoF,EACAtC,EAASipC,SACT1mC,EACApD,EAAMC,UACNoD,IAIsB,IAAtB+nC,GAA2BjoC,EAAKhD,QAAQ,WAC1CU,EAASX,QAAQ,eAAiBW,EAAST,WAAW,WACtDgrC,EAAoB,GAGI,IAAtBA,GAA2BjoC,EAAKN,MAAM,qBACxCuoC,EAAoB,GAEfA,GAAqB,CAChC,CAGA,IAAMrtC,GAAMuhC,GAAY5gC,IAAI,GACtB81C,GAAY,IAAIp2B,GAAKrgB,GAAK,UAEnB02C,GAAQ,WA0BjB,SAAAA,EAAYC,EAAoBvxC,EAAYwxC,EAAsBC,EAAgBC,EAAkBC,EAAkBC,EAAsBC,IAAmC73C,EAAAA,EAAAA,GAAA,KAAAs3C,GAAA,KAzB/KtxC,UAAI,OACJuxC,cAAQ,OACRC,eAAS,OACTC,YAAM,EAAc,KACpBC,cAAQ,EAAY,KACpBC,cAAQ,EAAY,KACpBC,gBAAU,OACVv6C,aAAO,OAEPy6C,gBAAU,OACVC,cAAQ,OACRC,WAAK,OACLC,kBAAY,OACZC,aAAO,OAEPC,aAAO,OAEPC,aAAO,OACPC,cAAQ,OACRC,YAAM,OACNC,UAAI,OAEJC,WAAK,OACLC,YAAM,EAGFx6C,KAAK+H,KAAOA,EACZ/H,KAAKs5C,SAAWA,EAChBt5C,KAAKu5C,UAAYA,EACjBv5C,KAAKw5C,OAASA,EACdx5C,KAAKy5C,SAAWA,EAChBz5C,KAAK05C,SAAWA,EAChB15C,KAAK25C,WAAaA,EAClB35C,KAAKZ,QAAUw6C,GAAmB,CAAC,CACvC,CAouBA,OApuBC53C,EAAAA,EAAAA,GAAAq3C,EAAA,EAAAr7C,IAAA,SAAAiE,MAED,WAoBI,OAnBAjC,KAAKy6C,qBACLz6C,KAAK06C,qBACL16C,KAAK26C,YACL36C,KAAK46C,WACL56C,KAAK66C,aACL76C,KAAK86C,gBACL96C,KAAK+6C,mBACL/6C,KAAKg7C,eACLh7C,KAAKi7C,oBACLj7C,KAAKk7C,cACLl7C,KAAKm7C,mBACLn7C,KAAKo7C,yBACLp7C,KAAKq7C,sBACLr7C,KAAKs7C,qBACLt7C,KAAKu7C,uBACLv7C,KAAKm7C,mBACLn7C,KAAKw7C,WACLx7C,KAAK+5C,MAAM0B,SAAWz7C,KAAKs5C,SAC3Bt5C,KAAK+5C,MAAM2B,WAAqC,QAAxB17C,KAAKs5C,SAAS55C,OAAmBM,KAAKw5C,OAASx5C,KAAKy5C,SACrE,CACHkC,MAAO37C,KAAK65C,WACZL,OAAQx5C,KAAKw5C,OACbC,SAAUz5C,KAAKy5C,SACfxR,OAAQjoC,KAAKm6C,QACb1nC,MAAOzS,KAAKq6C,OACZuB,QAAS57C,KAAKo6C,SACd3M,IAAKztC,KAAKs6C,KACVxwC,KAAM9J,KAAKu6C,MACXr3B,MAAOljB,KAAKw6C,OAEpB,GAAC,CAAAx8C,IAAA,qBAAAiE,MAED,WACIjC,KAAK65C,WAAa75C,KAAKu5C,UAAU95C,QACjCO,KAAK85C,SAAW95C,KAAK65C,WAAWgC,QAChC77C,KAAKi6C,QAAUj6C,KAAK65C,WAAWiC,OAC/B97C,KAAK+5C,MAAQ/5C,KAAK85C,SAAS95C,KAAKw5C,QAChCx5C,KAAKw6C,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAC7B,GAAC,CAAAx8C,IAAA,qBAAAiE,MAED,WACI,IAAM85C,EAAa/7C,KAAKs5C,SAAS55C,OACLM,KAAKg6C,aAAf,QAAd+B,EAA4C,CAAC/7C,KAAKw5C,QAC/B,oBAAduC,GAAkD,iBAAdA,EAAqD,CAAC/7C,KAAKy5C,UACjF,cAAdsC,EAAkD,CAAC,EAAE,EAAE,EAAE,GAAGC,OAAOh8C,KAAKw5C,OAAQ,GAClE,mBAAduC,EAAuD,CAAC,EAAE,EAAE,EAAE,GAC5C,CAAC/7C,KAAKy5C,SACrC,GAAC,CAAAz7C,IAAA,eAAAiE,MAED,SAAqBg6C,EAAcC,GAC/B,IAAMC,EAAYn8C,KAAKu5C,UAAUuC,OAAOG,GAAOx8C,QAE/C,OADA08C,EAAUv2C,aAAe5F,KAAKu5C,UAAUuC,OAAOI,GAAOv2C,aAAalG,QAC5D08C,CACX,GAAC,CAAAn+C,IAAA,aAAAiE,MAED,SAAmBoL,GACf,OAAOrN,KAAK85C,SAASzsC,EACzB,GAAC,CAAArP,IAAA,YAAAiE,MAED,WAAqB,IAADm6C,EAChBp8C,KAAKm6C,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,GACxBn6C,KAAKu6C,MAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,IAC1B,IAAM8B,EAAWr8C,KAAKs8C,WAAWt8C,KAAKw5C,QACtC,GAA2C,aAAtCx5C,KAAKi6C,QAAQj6C,KAAKw5C,QAAQ1yC,SAA+C,gBAArBu1C,EAASnyC,SACvB,QAAtClK,KAAKi6C,QAAQj6C,KAAKw5C,QAAQ3yC,SAA0C,mBAArBw1C,EAASnyC,QAC3D,CACEmyC,EAASl1C,WAAY,EACrB,IAAMo1C,EAASh1C,EAAiB80C,GAChCA,EAASpxC,YAAcsxC,CAC3B,CAAC,IAC+Br2C,EAD/BI,GAAAC,EAAAA,EAAAA,GACcvG,KAAKg6C,cAAY,IAAhC,IAAA1zC,EAAA9B,MAAA0B,EAAAI,EAAA7C,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAEnH,EAAAjE,MACDvC,EAASM,KAAKs8C,WAAWjvC,GACzB8uC,EAAYn8C,KAAKw8C,aAAax8C,KAAKw5C,OAAQnsC,GAC3Co7B,GAAQzoC,KAAKs5C,SAASmD,SAAW,GAAK,EAAIz8C,KAAKZ,QAAQqpC,KAAO,EAC9DiU,EAAO18C,KAAKZ,QAAQs9C,OAAQ,EAC5BC,EAAW38C,KAAK+H,KAAKtI,QAC3Bk9C,EAASlU,KAAOA,GAAQ,EACxBkU,EAAS1M,OAASyM,EAClB,IAAMjN,EAAS8I,GAAU,EAAG8D,EAAU38C,EAAQi9C,EAAUR,GAClDS,EAAenN,EAAOxH,OACxBA,EAAS,EACP4U,EAAO78C,KAAKZ,QAAQy9C,MAAQ,MAE9B5U,EADyB,kBAAlB2U,EACEA,EAGS,QAATC,EAAiBD,EAAaA,EAAah9C,OAAO,GAAc,QAATi9C,EAAiBD,EAAa,GAAKA,EAAar6C,KAAKC,MAAMo6C,EAAah9C,OAAO,IAEnJI,KAAKm6C,QAAQ9sC,GAAM46B,EACnBjoC,KAAKu6C,MAAMltC,GAAMoiC,EAAO3lC,MAC5B,CAAC,OAAAvM,IAAA+I,EAAApH,EAAA3B,GAAA,SAAA+I,EAAAM,GAAA,CACyB,QAA1Bw1C,EAAIp8C,KAAKs5C,SAAS/uC,gBAAQ,IAAA6xC,GAAtBA,EAAwBh1C,SAAS,YACjCpH,KAAKi6C,QAAQj6C,KAAKw5C,QAAQ7zC,aAAasgC,eAAgB,EAE/D,GAAC,CAAAjoC,IAAA,WAAAiE,MAED,WACIjC,KAAKq6C,OAAS,CAAC,EAAE,EAAE,EAAE,EAAE,GACvB,IAAMyC,EAAe98C,KAAKs5C,SAAS7mC,MAC/BqqC,GAEI98C,KAAKm6C,UACLn6C,KAAKq6C,OAAOr6C,KAAKw5C,QAAUj3C,KAAKC,MAAMxC,KAAKm6C,QAAQn6C,KAAKw5C,QAAUsD,EAAa,KAI3F,GAAC,CAAA9+C,IAAA,aAAAiE,MAED,WACIjC,KAAKo6C,SAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GACzB,IACgC1vC,EAD1BqyC,EAAiB/8C,KAAKs5C,SAASsC,QAAQhxC,GAAArE,EAAAA,EAAAA,GAC9BvG,KAAKg6C,cAAY,IAAhC,IAAApvC,EAAApG,MAAAkG,EAAAE,EAAAnH,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAE3C,EAAAzI,MACDvC,EAASM,KAAKs8C,WAAWjvC,GACzBu7B,EAAQlpC,EAAOkpC,QACrB,GAAsB,cAAlB5oC,KAAK+H,KAAK1I,KAAsB,CAChC,IAAMw9C,EAAO78C,KAAKZ,QAAQy9C,MAAQ,MAClC78C,KAAKo6C,SAAS/sC,GAAe,QAATwvC,EAAiBt6C,KAAKC,MAAc,GAARomC,GAAwB,QAATiU,EAAiBjU,EAAQrmC,KAAKC,MAAc,GAARomC,GACnF5oC,KAAKs8C,WAAWjvC,GACxBhG,OAAS,EACrB,KAAO,CACH,IAAM21C,EAAaz6C,KAAKC,MAAM9C,EAAOkpC,SAAWmU,GAAkB,GAAG,KACrE/8C,KAAKo6C,SAAS/sC,GAAM2vC,CACxB,CACJ,CAAC,OAAAz/C,IAAAqN,EAAA1L,EAAA3B,GAAA,SAAAqN,EAAAhE,GAAA,CACL,GAAC,CAAA5I,IAAA,mBAAAiE,MAED,WACIjC,KAAKk6C,QAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAC7B,IACM+C,EAA0B,gBADfj9C,KAAKs5C,SAAS/uC,SACkB,CAACvK,KAAKw5C,QAAUx5C,KAAKg6C,aAChEkD,EAAcl9C,KAAKs5C,SAAS4D,YAC5BjQ,EAASjtC,KAAKs5C,SAAS6D,YAAc,IAC3C,GAAIn9C,KAAKZ,QAAQg+C,kBAA+B,MAAXnQ,EAAiB,CAAC,IACzBoQ,EADwBC,GAAA/2C,EAAAA,EAAAA,GACnC02C,GAAW,IAA1B,IAAAK,EAAA94C,MAAA64C,EAAAC,EAAA75C,KAAA+C,MAA4B,CAAC,IAAD+2C,EAAnBlwC,EAAEgwC,EAAAp7C,MACD0C,EAAU3E,KAAKs8C,WAAWjvC,GAC1BzI,EAAQ5E,KAAKi6C,QAAQ5sC,GAC3B,GAAIA,IAAOrN,KAAKw5C,QAAgC,QAA1B+D,EAAIv9C,KAAKs5C,SAAS/uC,gBAAQ,IAAAgzC,IAAtBA,EAAwBn2C,SAAS,WAA8B,iBAAjBzC,EAAQ6D,KAAhF,CAEA,IACyCg1C,EADnCC,EAAsC,YAAnB94C,EAAQuF,SAAyB,EAAuB,UAAnBvF,EAAQuF,QAAsB,EAAI,EAAEwzC,GAAAn3C,EAAAA,EAAAA,GAC1E22C,GAAe,IAAE,IAAzC,IAAAQ,EAAAl5C,MAAAg5C,EAAAE,EAAAj6C,KAAA+C,MAA4C,CAAC,IAApCm3C,EAAUH,EAAAv7C,MACTC,EAAOy7C,EAAWz7C,KACpB07C,EAASD,EAAWC,OAASH,EAOjC,GANII,OAAO7Q,MAAM4Q,KAIbA,EAASD,EAAW17C,MAAQw7C,GAE5BI,OAAO7Q,MAAM4Q,GAAWlgD,QAAQC,IAAI,wBAA0BqC,KAAKs5C,SAASj6C,KAAO,qBACvF,KAAIu+C,EAAS,IAAMh5C,EAAMe,aAAamgC,aAAgBlhC,EAAMe,aAAaihC,QAAUv5B,IAAOrN,KAAKw5C,SAO/F,IAAK,IAAIt3C,KAJTyC,EAAQgC,OAAOzE,IAASyC,EAAQgC,OAAOg3C,EAAWz7C,OAAS,GAAK07C,EAC5Dr7C,KAAK81C,IAAI1zC,EAAQgC,OAAOzE,IAAS,IACjCyC,EAAQgC,OAAOzE,GAAQ,EAAIK,KAAKu7C,KAAKn5C,EAAQgC,OAAOzE,KAEvCyC,EAAQgC,OAAQ,CAE7B,IAAMo3C,EAAOp5C,EAAQgC,OAAOzE,GAAQlC,KAAKu5C,UAAUsC,QAAQxuC,GAAI1G,OAAOzE,GACzD,IAAT67C,IAEA/9C,KAAKk6C,QAAQ7sC,GAAInL,GAAQ67C,EAEjC,CACJ,CAAC,OAAAxgD,IAAAmgD,EAAAx+C,EAAA3B,GAAA,SAAAmgD,EAAA92C,GAAA,CA5BoH,CA6BzH,CAAC,OAAArJ,IAAA+/C,EAAAp+C,EAAA3B,GAAA,SAAA+/C,EAAA12C,GAAA,CACL,CACJ,GAAC,CAAA5I,IAAA,eAAAiE,MAED,WACI,IAAMg3C,EAAUj5C,KAAKs5C,SAASL,QACxBhM,EAASjtC,KAAKs5C,SAAS0E,eAAiB,IAC9C,GAAI/E,IAAsB,KAAVhM,GAAiBjtC,KAAKZ,QAAQg+C,kBAAmB,CAAC,IAC9Ba,EAD6BC,GAAA33C,EAAAA,EAAAA,GAC9CvG,KAAKg6C,cAAY,IAAhC,IAAAkE,EAAA15C,MAAAy5C,EAAAC,EAAAz6C,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAE4wC,EAAAh8C,MACD0C,EAAU3E,KAAKs8C,WAAWjvC,GAC1BzI,EAAQ5E,KAAKi6C,QAAQ5sC,GAE3B,GAAe,KADA2rC,GAAgBC,GACZ,CAEf,GAAIr0C,EAAMe,aAAamhC,aAAe,CAAC,YAAa,QAAS,SAAU,UAAW,eAAe1/B,SAAS6xC,GACtG,SAEG,GAAwB,cAApBt0C,EAAQuF,SAAuC,cAAZ+uC,EAC1C,SAEG,GAAwB,cAApBt0C,EAAQuF,UAAwC,UAAZ+uC,GAAmC,gBAAZA,GAClE,SACQt0C,EAAQqxC,eAAe5uC,SAAS6xC,KACxCt0C,EAAQqxC,eAAe9uC,KAAM+xC,GAC7Bj5C,KAAKw6C,OAAOntC,GAAInG,KAAK+xC,EAAU,cAEvC,KAAO,CAAC,IAADkF,EACH,GAAI9wC,IAAOrN,KAAKw5C,QAAgC,QAA1B2E,EAAIn+C,KAAKs5C,SAAS/uC,gBAAQ,IAAA4zC,GAAtBA,EAAwB/2C,SAAS,WAA8B,iBAAjBzC,EAAQ6D,KAA2B,SAE3G,GAAgB,SAAZywC,GAAsBt0C,EAAQuD,MAAMd,SAAS,QAAW,SAC5D,GAAgB,WAAZ6xC,GAAwBt0C,EAAQuD,MAAMd,SAAS,OAAU,SAC7D,IAAiB,WAAZ6xC,GAAoC,UAAZA,KAAyBt0C,EAAQuD,MAAMd,SAAS,WAAazC,EAAQuD,MAAMd,SAAS,UAAgC,aAApBzC,EAAQuF,SAA2B,SAChK,GAAiB,cAAZ+uC,GAA+C,WAApBt0C,EAAQuF,QAAyB,SACjE,GAAgB,UAAZ+uC,GAAuB,CAAC,WAAY,gBAAgB7xC,SAASzC,EAAQuF,SAAsB,SAC/F,GAAgB,WAAZ+uC,GAA4C,gBAApBt0C,EAAQuF,QAA6B,SAE3DtF,EAAMe,aAAamgC,aAAelhC,EAAMe,aAAakhC,aAAejiC,EAAMgF,WAAW,WACnFsvC,GAAYv0C,KAEhBA,EAAQ0C,OAAS2xC,GAAgBC,GAEzC,CACJ,CAAC,OAAA17C,IAAA2gD,EAAAh/C,EAAA3B,GAAA,SAAA2gD,EAAAt3C,GAAA,CACL,CACJ,GAAC,CAAA5I,IAAA,gBAAAiE,MAED,WACI,IAAMm8C,EAAa77C,KAAKC,MAAMxC,KAAK+5C,MAAMnR,SAAW5oC,KAAKs5C,SAAS8E,YAAc,GAAK,KAErF,GADA1gD,QAAQC,IAAIqC,KAAKs5C,SAASj6C,KAAMW,KAAKs5C,SAAS8E,WAAYA,GACvC,IAAfA,EAAkB,CAClB,IAAMC,EAAoBr+C,KAAKs5C,SAAS8E,WACxCp+C,KAAKw6C,OAAOx6C,KAAKw5C,QAAQtyC,KAAMm3C,EAAoB,sBAAwBr+C,KAAKs5C,SAASj6C,KAAO,KAChGW,KAAKm6C,QAAQn6C,KAAKw5C,QAAUx5C,KAAKm6C,QAAQn6C,KAAKw5C,QAAU4E,CAC5D,CACJ,GAAC,CAAApgD,IAAA,oBAAAiE,MAED,WAGI,IAAI4E,OAAiChH,EACf,cAAlBG,KAAK+H,KAAK1I,OAAwBwH,EAAU,QAC1B,aAAlB7G,KAAK+H,KAAK1I,OAAuBwH,EAAU,OACzB,aAAlB7G,KAAK+H,KAAK1I,OAAuBwH,EAAU,QACzB,aAAlB7G,KAAK+H,KAAK1I,OAAuBwH,EAAU,QAE/C,IAAIC,OAAiCjH,EACf,oBAAlBG,KAAK+H,KAAK1I,OAA8ByH,EAAU,YAChC,kBAAlB9G,KAAK+H,KAAK1I,OAA4ByH,EAAU,UAC9B,iBAAlB9G,KAAK+H,KAAK1I,OAA2ByH,EAAU,SAC7B,mBAAlB9G,KAAK+H,KAAK1I,OAA6ByH,EAAU,WAErD,IAQ8Bw3C,EARxBC,EAA4B,WAAlBv+C,KAAK+H,KAAK1I,KAEpBm/C,EAA8B,cAAlBx+C,KAAK+H,KAAK1I,KAEtBo/C,EAA8B,cAAlBz+C,KAAK+H,KAAK1I,KAEtBq/C,EAA+B,eAAlB1+C,KAAK+H,KAAK1I,KAC7Bs/C,GAAAp4C,EAAAA,EAAAA,GACkBvG,KAAKi6C,SAAO,IAA9B,IAAA0E,EAAAn6C,MAAA85C,EAAAK,EAAAl7C,KAAA+C,MAAgC,CAAC,IAAxB5B,EAAK05C,EAAAr8C,MACV2C,EAAMiC,QAAUA,GAAWjC,EAAMiC,QACjCjC,EAAMkC,QAAUA,GAAWlC,EAAMkC,QACjClC,EAAMC,UAAY05C,GAAW35C,EAAMC,UACnCD,EAAMmgC,YAAeyZ,GAAa55C,EAAMmgC,YAAcngC,EAAMmgC,YAC5DngC,EAAM0/B,YAAema,GAAa75C,EAAM0/B,YAAc1/B,EAAM0/B,YAC5D1/B,EAAM2/B,aAAgBma,GAAc95C,EAAM2/B,aAAe3/B,EAAM2/B,YACnE,CAEA,OAAAhnC,IAAAohD,EAAAz/C,EAAA3B,GAAA,SAAAohD,EAAA/3C,GAAA,CAkBA,IAjBA,IAAIg4C,EAA4B,WAAlB5+C,KAAK+H,KAAK1I,KAEpBw/C,EAAgC,gBAAlB7+C,KAAK+H,KAAK1I,KAExBy/C,EAA+B,eAAlB9+C,KAAK+H,KAAK1I,KAEvB0/C,EAAyB,QAAlB/+C,KAAK+H,KAAK1I,KAEjB2/C,EAA8B,aAAlBh/C,KAAK+H,KAAK1I,KAEtB4/C,EAA6B,YAAlBj/C,KAAK+H,KAAK1I,KAErB6/C,EAAgC,gBAAlBl/C,KAAK+H,KAAK1I,KAExB8/C,EAAiC,iBAAlBn/C,KAAK+H,KAAK1I,KAG7B2G,EAAA,EAAAo5C,EADoC,GAAfp/C,KAAKw5C,OAAc,CAAC,GAAK,CAAC,EAAE,EAAE,EAAE,GAC1BxzC,EAAAo5C,EAAAx/C,OAAAoG,IAAE,CAAxB,IAAIqH,EAAE+xC,EAAAp5C,GACDpB,EAAQ5E,KAAKi6C,QAAQ5sC,GAC3BzI,EAAMe,aAAa0D,UAAYu1C,GAAWh6C,EAAMe,aAAa0D,UAC7DzE,EAAMe,aAAa2D,cAAgBu1C,GAAej6C,EAAMe,aAAa2D,cACrE1E,EAAMe,aAAa4D,aAAeu1C,GAAcl6C,EAAMe,aAAa4D,aACnE3E,EAAMe,aAAaihC,OAASmY,GAAQn6C,EAAMe,aAAaihC,OACvDhiC,EAAMe,aAAakhC,YAAcmY,GAAap6C,EAAMe,aAAakhC,YACjEjiC,EAAMe,aAAasB,WAAag4C,GAAYr6C,EAAMe,aAAasB,WAC/DrC,EAAMe,aAAaugC,aAAegZ,GAAet6C,EAAMe,aAAaugC,aACpEthC,EAAMe,aAAakgC,aAAesZ,GAAgBv6C,EAAMe,aAAakgC,YACzE,CAGsC,gBAAlB7lC,KAAK+H,KAAK1I,OAE1BW,KAAKi6C,QAAQj6C,KAAKy5C,UAAU9zC,aAAasgC,eAAgB,EAEjE,GAAC,CAAAjoC,IAAA,yBAAAiE,MAED,WAEI,OAAQjC,KAAK+H,KAAK1I,MACd,IAAK,aACD,IAAMggD,EAAYr/C,KAAKs8C,WAAWt8C,KAAKy5C,UACjC6F,EAAkBt/C,KAAK+5C,MAAM7vC,QACnClK,KAAK+5C,MAAM7vC,QAAUm1C,EAAUn1C,QAC/Bm1C,EAAUn1C,QAAUo1C,EACpB,MACJ,IAAK,cACiBt/C,KAAKs8C,WAAWt8C,KAAKy5C,UAC7BvvC,aAAUrK,EACpB,MACJ,IAAK,aACiBG,KAAKs8C,WAAWt8C,KAAKy5C,UAC7BvvC,QAAU,WACpB,MACJ,IAAK,YACD,IAAMq1C,EAAYv/C,KAAKs8C,WAAWt8C,KAAKy5C,UACvCz5C,KAAK+5C,MAAM7vC,QAAUq1C,EAAUr1C,QAC/B,MACJ,IAAK,cACiBlK,KAAKs8C,WAAWt8C,KAAKy5C,UAC7BvvC,QAAU,SACpB,MAEJ,IAAK,YACiBlK,KAAKs8C,WAAWt8C,KAAKy5C,UAC7BjxC,UAAO3I,EACjB,MACJ,IAAK,QACD,IAAM2/C,EAAex/C,KAAKs8C,WAAWt8C,KAAKy5C,UACpCgG,EAAez/C,KAAK+5C,MAAMvxC,KAChCxI,KAAK+5C,MAAMvxC,KAAOg3C,EAAah3C,KAC/Bg3C,EAAah3C,KAAOi3C,EACpB,MACJ,IAAK,QACD,IAAMC,EAAY1/C,KAAKs8C,WAAWt8C,KAAKy5C,UACjCkG,EAAkC,WAAtBD,EAAUx1C,QACtB01C,EAAoC,aAAtBF,EAAUx1C,QACxBuzC,EAAmBkC,EAAY,EAAIC,GAAe,EAAI,EACtDC,EAAY7/C,KAAK+5C,MAAMvxC,KAE7B,OADAxI,KAAK+5C,MAAMvxC,UAAO3I,EACVggD,GACJ,IAAK,aACG3G,GAAYwG,KAAcA,EAAUr4C,OAAS,OACjD,MACJ,IAAK,aACIq4C,EAAUx3C,MAAMd,SAAS,SAAW8xC,GAAYwG,KAAcA,EAAUr4C,OAAS,OACtF,MACJ,IAAK,aACIq4C,EAAUx3C,MAAMd,SAAS,WAAa8xC,GAAYwG,KAAcA,EAAUr4C,OAAS,OACxF,MACJ,IAAK,eACIq4C,EAAUx3C,MAAMd,SAAS,WAAa8xC,GAAYwG,KAAcA,EAAUr4C,OAAS,OACxF,MACJ,IAAK,aACD,IAAK,IAAInF,KAAQw9C,EAAU/4C,OAEnB+4C,EAAU/4C,OAAOzE,GAAQ,IAAKw9C,EAAU/4C,OAAOzE,GAAQ,GAE/D,MAEJ,IAAK,cACwB,QAArBw9C,EAAUr4C,SAAoBq4C,EAAUr4C,OAAS,IACrD,MACJ,IAAK,eACwB,QAArBq4C,EAAUr4C,SAAoBq4C,EAAUr4C,OAAS,IACrD,MACJ,IAAK,cACwB,QAArBq4C,EAAUr4C,SAAoBq4C,EAAUr4C,OAAS,IACrD,MACJ,IAAK,cACwB,QAArBq4C,EAAUr4C,SAAoBq4C,EAAUr4C,OAAS,IACrD,MACJ,IAAK,eACwB,QAArBq4C,EAAUr4C,SAAoBq4C,EAAUr4C,OAAS,IACrD,MACJ,IAAK,YACwB,KAArBq4C,EAAUr4C,SAAiBq4C,EAAUr4C,OAAS,IAClD,MAEJ,IAAK,eACDq4C,EAAU/4C,OAAOpG,IAAMgC,KAAK6C,KAAK,EAAG7C,KAAK4C,IAAI,EAAGu6C,EAAU/4C,OAAOpG,IAAMk9C,IACvE,MACJ,IAAK,eACDiC,EAAU/4C,OAAOnG,IAAM+B,KAAK6C,KAAK,EAAG7C,KAAK4C,IAAI,EAAGu6C,EAAU/4C,OAAOpG,IAAMk9C,IACvE,MACJ,IAAK,eACDiC,EAAU/4C,OAAO7F,IAAMyB,KAAK6C,KAAK,EAAG7C,KAAK4C,IAAI,EAAGu6C,EAAU/4C,OAAOpG,IAAMk9C,IACvE,MACJ,IAAK,eACDiC,EAAU/4C,OAAOlG,IAAM8B,KAAK6C,KAAK,EAAG7C,KAAK4C,IAAI,EAAGu6C,EAAU/4C,OAAOpG,IAAMk9C,IACvE,MACJ,IAAK,cACDiC,EAAU/4C,OAAO3F,IAAMuB,KAAK6C,KAAK,EAAG7C,KAAK4C,IAAI,EAAGu6C,EAAU/4C,OAAOpG,IAAMk9C,IACvE,MAEJ,IAAK,eACDz9C,KAAKo6C,SAASp6C,KAAKy5C,WAAal3C,KAAKC,MAAMk9C,EAAU9W,QAAU,GAIvE,MAEJ,IAAK,SACD5oC,KAAK+5C,MAAM+F,UAAW,EACtB,MACJ,IAAK,WACD,IAAMC,EAAY//C,KAAKs8C,WAAWt8C,KAAKy5C,UACvC,IAAK,IAAIv3C,KAAQ69C,EAAUp5C,OAEvB3G,KAAK+5C,MAAMpzC,OAAOzE,GAAQ69C,EAAUp5C,OAAOzE,GAC3ClC,KAAKk6C,QAAQl6C,KAAKw5C,SAAOpX,EAAAA,EAAAA,GAAA,GAAO2d,EAAUp5C,QAE9C,MACJ,IAAK,aACD,IAAMq5C,EAAYhgD,KAAKs8C,WAAWt8C,KAAKy5C,UACjCwG,EAAoBjgD,KAAK+5C,MAAMpzC,OACrC3G,KAAK+5C,MAAMpzC,OAAOpG,IAAMy/C,EAAUr5C,OAAOpG,IACzCP,KAAK+5C,MAAMpzC,OAAO7F,IAAMk/C,EAAUr5C,OAAO7F,IACzCk/C,EAAUr5C,OAAOpG,IAAM0/C,EAAkB1/C,IACzCy/C,EAAUr5C,OAAO7F,IAAMm/C,EAAkBn/C,IACzC,MACJ,IAAK,aACD,IAAMo/C,EAAYlgD,KAAKs8C,WAAWt8C,KAAKy5C,UACjC0G,EAAoBngD,KAAK+5C,MAAMpzC,OACrC3G,KAAK+5C,MAAMpzC,OAAOnG,IAAM0/C,EAAUv5C,OAAOnG,IACzCR,KAAK+5C,MAAMpzC,OAAOlG,IAAMy/C,EAAUv5C,OAAOlG,IACzCy/C,EAAUv5C,OAAOnG,IAAM2/C,EAAkB3/C,IACzC0/C,EAAUv5C,OAAOlG,IAAM0/C,EAAkB1/C,IACzC,MACJ,IAAK,cACD,IAAM2/C,EAAUpgD,KAAK+5C,MAAMj0C,MAAMvF,IACjCP,KAAK+5C,MAAMj0C,MAAMvF,IAAMP,KAAK+5C,MAAMj0C,MAAMtF,IACxCR,KAAK+5C,MAAMj0C,MAAMtF,IAAM4/C,EAInC,GAAC,CAAApiD,IAAA,sBAAAiE,MAED,WAGI,GAAIjC,KAAK+H,KAAKkoC,OAAQ,CAAC,IACaoQ,EADdC,GAAA/5C,EAAAA,EAAAA,GACHvG,KAAKg6C,cAAY,IAAhC,IAAAsG,EAAA97C,MAAA67C,EAAAC,EAAA78C,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAEgzC,EAAAp+C,MACD0C,EAAU3E,KAAKs8C,WAAWjvC,GACR,gBAApB1I,EAAQuF,UAA6BvF,EAAQgC,OAAOpG,IAAM,EAClE,CAAC,OAAAhD,IAAA+iD,EAAAphD,EAAA3B,GAAA,SAAA+iD,EAAA15C,GAAA,CACL,CAEA,GAAuB,SAAnB5G,KAAK+H,KAAK3D,KAAiB,CAAC,IACIm8C,EADLC,GAAAj6C,EAAAA,EAAAA,GACZvG,KAAKg6C,cAAY,IAAhC,IAAAwG,EAAAh8C,MAAA+7C,EAAAC,EAAA/8C,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAEkzC,EAAAt+C,MACD0C,EAAU3E,KAAKs8C,WAAWjvC,GACR,cAApB1I,EAAQuF,SAA2BlK,KAAKm6C,QAAQ9sC,GAAI,IACpD1I,EAAQgC,OAAOpG,IAAMgC,KAAK4C,IAAI,EAAGR,EAAQgC,OAAOpG,IAAMP,KAAK+H,KAAK0gC,MAExE,CAAC,OAAAlrC,IAAAijD,EAAAthD,EAAA3B,GAAA,SAAAijD,EAAA55C,GAAA,CACL,CAE2B,aAAvB5G,KAAK+5C,MAAM7vC,cACSrK,IAApBG,KAAK+5C,MAAMvxC,WACkC3I,IAA7CG,KAAKu5C,UAAUsC,QAAQ77C,KAAKw5C,QAAQhxC,OAEpCxI,KAAK+5C,MAAM5yC,WAAY,GAE3B,IACgCs5C,EADhCC,GAAAn6C,EAAAA,EAAAA,GACevG,KAAKg6C,cAAY,IAAhC,IAAA0G,EAAAl8C,MAAAi8C,EAAAC,EAAAj9C,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAEozC,EAAAx+C,MACD0C,EAAU3E,KAAKs8C,WAAWjvC,GAC5BrN,KAAKm6C,QAAQ9sC,GAAM,GAAyB,eAApB1I,EAAQuF,UAChCvF,EAAQgC,OAAOnG,IAAM+B,KAAK6C,KAAK,EAAGT,EAAQgC,OAAOnG,IAAM,GACvDmE,EAAQgC,OAAO3F,IAAMuB,KAAK4C,IAAI,EAAGR,EAAQgC,OAAO3F,IAAM,GAE9D,CAAC,OAAAzD,IAAAmjD,EAAAxhD,EAAA3B,GAAA,SAAAmjD,EAAA95C,GAAA,CACL,GAAC,CAAA5I,IAAA,mBAAAiE,MAED,WAEI,IACgC0+C,EADhCC,GAAAr6C,EAAAA,EAAAA,GACevG,KAAKg6C,cAAY,IAAhC,IAAA4G,EAAAp8C,MAAAm8C,EAAAC,EAAAn9C,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAEszC,EAAA1+C,MACD0C,EAAU3E,KAAKs8C,WAAWjvC,GACX,eAAjB1I,EAAQ6D,MACJxI,KAAKm6C,QAAQ9sC,IAAO1I,EAAQikC,SAAW5oC,KAAKu5C,UAAUsC,QAAQxuC,GAAI0oC,gBAAkBpxC,EAAQikC,UAC5FjkC,EAAQ6D,UAAO3I,EACf8E,EAAQoxC,cAAgB,EAGpC,CACA,OAAAx4C,IAAAqjD,EAAA1hD,EAAA3B,GAAA,SAAAqjD,EAAAh6C,GAAA,KAC0Ci6C,EAD1CC,GAAAv6C,EAAAA,EAAAA,GACoBvG,KAAK85C,SAASlN,MAAM,IAAE,IAA1C,IAAAkU,EAAAt8C,MAAAq8C,EAAAC,EAAAr9C,KAAA+C,MAA4C,CAAC,IAApC7B,EAAOk8C,EAAA5+C,MACN8+C,EAAa/gD,KAAKk6C,QAAQ,GAChC,GAAqB,gBAAjBv1C,EAAQ6D,WAAyC3I,IAAfkhD,EAA0B,CAC5D,IAAIC,GAAU,EACd,IAAK,IAAI9+C,KAAQ6+C,EAEY,IAArBA,EAAW7+C,KACX8+C,GAAU,EAEVr8C,EAAQgC,OAAOzE,GAAQK,KAAK6C,KAAK,EAAG7C,KAAK4C,IAAI,EAAGR,EAAQgC,OAAOzE,GAAQ6+C,EAAW7+C,MAEtF8+C,IAAWr8C,EAAQ6D,UAAO3I,EAClC,CACJ,CAEA,OAAAtC,IAAAujD,EAAA5hD,EAAA3B,GAAA,SAAAujD,EAAAl6C,GAAA,KACgCq6C,EADhCC,GAAA36C,EAAAA,EAAAA,GACevG,KAAKg6C,cAAY,IAAhC,IAAAkH,EAAA18C,MAAAy8C,EAAAC,EAAAz9C,KAAA+C,MAAkC,CAAC,IAA1B6G,EAAE4zC,EAAAh/C,MACD0C,EAAU3E,KAAKs8C,WAAWjvC,GAChC,GAAIrN,KAAKm6C,QAAQ9sC,GAAM,GAAK8rC,GAAiBn5C,KAAK+H,KAAM/H,KAAKi6C,QAAQ5sC,GAAKrN,KAAK+5C,MAAOp1C,GAClF,OAAQA,EAAQ6D,MACZ,IAAK,kBACD7D,EAAQgC,OAAOpG,IAAMgC,KAAK4C,IAAI,EAAGR,EAAQgC,OAAOpG,IAAM,GACtDoE,EAAQgC,OAAO7F,IAAMyB,KAAK4C,IAAI,EAAGR,EAAQgC,OAAO7F,IAAM,GACtD6D,EAAQ6D,UAAO3I,EACf,MACJ,IAAK,aACsB,SAAnBG,KAAK+H,KAAK3D,OAAmBO,EAAQ6D,UAAO3I,GAChD,MACJ,IAAK,eACsB,UAAnBG,KAAK+H,KAAK3D,OAAoBO,EAAQ6D,UAAO3I,GACjD,MACJ,IAAK,cACsB,aAAnBG,KAAK+H,KAAK3D,OAAuBO,EAAQ6D,UAAO3I,GACpD,MACJ,IAAK,cACsB,UAAnBG,KAAK+H,KAAK3D,OAAoBO,EAAQ6D,UAAO3I,GACjD,MACJ,IAAK,cACsB,QAAnBG,KAAK+H,KAAK3D,OAAkBO,EAAQ6D,UAAO3I,GAC/C,MACJ,IAAK,eACsB,aAAnBG,KAAK+H,KAAK3D,OAAuBO,EAAQ6D,UAAO3I,GACpD,MACJ,IAAK,cACsB,WAAnBG,KAAK+H,KAAK3D,OAAqBO,EAAQ6D,UAAO3I,GAClD,MACJ,IAAK,cACsB,WAAnBG,KAAK+H,KAAK3D,OAAqBO,EAAQ6D,UAAO3I,GAClD,MACJ,IAAK,aACsB,WAAnBG,KAAK+H,KAAK3D,OAAqBO,EAAQ6D,UAAO3I,GAClD,MACJ,IAAK,eACsB,YAAnBG,KAAK+H,KAAK3D,OAAsBO,EAAQ6D,UAAO3I,GACnD,MACJ,IAAK,cACsB,QAAnBG,KAAK+H,KAAK3D,OAAkBO,EAAQ6D,UAAO3I,GAC/C,MACJ,IAAK,eACsB,SAAnBG,KAAK+H,KAAK3D,OAAmBO,EAAQ6D,UAAO3I,GAChD,MACJ,IAAK,cACsB,UAAnBG,KAAK+H,KAAK3D,OAAoBO,EAAQ6D,UAAO3I,GACjD,MACJ,IAAK,cACsB,WAAnBG,KAAK+H,KAAK3D,OAAqBO,EAAQ6D,UAAO3I,GAClD,MACJ,IAAK,eACsB,SAAnBG,KAAK+H,KAAK3D,OAAmBO,EAAQ6D,UAAO3I,GAChD,MACJ,IAAK,eACsB,UAAnBG,KAAK+H,KAAK3D,OAAoBO,EAAQ6D,UAAO3I,GACjD,MACJ,IAAK,eACsB,UAAnBG,KAAK+H,KAAK3D,OAAoBO,EAAQ6D,UAAO3I,GAKjE,CACA,OAAAtC,IAAA2jD,EAAAhiD,EAAA3B,GAAA,SAAA2jD,EAAAt6C,GAAA,CACA,GAAIsyC,GAAYl5C,KAAK+5C,OACjB,OAAQ/5C,KAAK+5C,MAAMvxC,MACf,IAAK,aACDxI,KAAK+5C,MAAM1yC,OAAS,MACpB,MACJ,IAAK,YACIrH,KAAK+5C,MAAM7xC,MAAMd,SAAS,UAC3BpH,KAAK+5C,MAAM1yC,OAAS,MACpBrH,KAAK+5C,MAAMvxC,UAAO3I,GAEtB,MACJ,IAAK,YACIG,KAAK+5C,MAAM7xC,MAAMd,SAAS,YAC3BpH,KAAK+5C,MAAM1yC,OAAS,MACpBrH,KAAK+5C,MAAMvxC,UAAO3I,GAEtB,MACJ,IAAK,cACIG,KAAK+5C,MAAM7xC,MAAMd,SAAS,YAC3BpH,KAAK+5C,MAAM1yC,OAAS,MACpBrH,KAAK+5C,MAAMvxC,UAAO3I,GAEtB,MACJ,IAAK,aACD,IAAK,IAAIqC,KAAQlC,KAAK+5C,MAAMpzC,OAAQ,CAChC,IAAIq6C,GAAU,EAEVhhD,KAAK+5C,MAAMpzC,OAAOzE,GAAQ,IAAKlC,KAAK+5C,MAAMpzC,OAAOzE,GAAQ,EAAG8+C,GAAU,GACtEA,IAAWhhD,KAAK+5C,MAAMvxC,UAAO3I,EACrC,EAMZ,IAAK,IAAIC,EAAE,EAAGA,EAAE,EAAGA,IACXE,KAAKm6C,QAAQr6C,GAAK,GACY,iBAA1BE,KAAK85C,SAASh6C,GAAG0I,MAA2BxI,KAAK85C,SAASh6C,GAAGi2C,eAAiBxzC,KAAKC,MAAMxC,KAAK85C,SAASh6C,GAAG8oC,QAAU,KACpH5oC,KAAK85C,SAASh6C,GAAG0I,UAAO3I,EACxBG,KAAK85C,SAASh6C,GAAGi2C,eAAiBxzC,KAAKC,MAAMxC,KAAK85C,SAASh6C,GAAG8oC,QAAU,IAKpF,GAAwB,mBAApB5oC,KAAK+5C,MAAMvxC,OAAqD,mBAAvBxI,KAAK+5C,MAAM7vC,SAAuD,gBAAvBlK,KAAK+5C,MAAM7vC,SAA4B,CAC3HlK,KAAK+5C,MAAM5yC,WAAY,EACvB,IAAMo1C,EAASh1C,EAAiBvH,KAAK+5C,OACrC/5C,KAAK+5C,MAAM9uC,YAAcsxC,EACzBv8C,KAAK+5C,MAAMvxC,UAAO3I,CACtB,CAEJ,GAAC,CAAA7B,IAAA,qBAAAiE,MAED,WAKI,GAJAjC,KAAKs6C,KAAO,MAACz6C,OAAWA,OAAWA,OAAWA,IAIzCG,KAAK25C,WAAY,CAClB,IAAMsC,EAAQj8C,KAAKw5C,OACb0C,EAAuB,GAAfl8C,KAAKw5C,OAAcx5C,KAAK05C,SAAW,EAC3Cl0C,EAAWxF,KAAK+5C,MAChBt0C,EAAWzF,KAAKs8C,WAAWJ,GAC3BiF,EAAUzT,GAAa/qC,GAAK6C,EAAUC,EAAU2zC,GAAWp5C,KAAKw8C,aAAah3C,EAAS6H,GAAI5H,EAAS4H,KACnG+zC,EAAU1T,GAAa/qC,GAAK8C,EAAUD,EAAU4zC,GAAWp5C,KAAKw8C,aAAa/2C,EAAS4H,GAAI7H,EAAS6H,KACzGrN,KAAKs6C,KAAK4B,GAASiF,EACnBnhD,KAAKs6C,KAAK2B,GAASmF,CACvB,CACJ,GAAC,CAAApjD,IAAA,cAAAiE,MAED,WACiBjC,KAAKZ,QAAQy9C,KAC1B,IADA,IACSxvC,EAAG,EAAGA,EAAG,EAAGA,IAAM,CACvB,IAAM1I,EAAU3E,KAAKs8C,WAAWjvC,GAC1B46B,EAASjoC,KAAKm6C,QAAQ9sC,GACtBoF,EAAQzS,KAAKq6C,OAAOhtC,GACpBuuC,EAAU57C,KAAKo6C,SAAS/sC,GAC9B1I,EAAQoxC,cAAgBxzC,KAAK6C,IAAI,EAAGT,EAAQoxC,cAAgB9N,GACxDtjC,EAAQm7C,UAAYn7C,EAAQoxC,eAAiB,IAC7CpxC,EAAQoxC,cAAgB,GAEE,IAA1BpxC,EAAQoxC,gBACRpxC,EAAQoxC,cAAgBxzC,KAAK4C,IAAIR,EAAQikC,QAASrmC,KAAK6C,IAAI,EAAGT,EAAQoxC,cAAgBtjC,KAEtF9N,EAAQm7C,UAAYn7C,EAAQoxC,eAAiB,IAC7CpxC,EAAQoxC,cAAgB,GAEE,IAA1BpxC,EAAQoxC,gBACRpxC,EAAQoxC,cAAgBxzC,KAAK4C,IAAIR,EAAQikC,QAASjkC,EAAQoxC,cAAgB6F,GAElF,CACJ,GAAC,CAAA59C,IAAA,uBAAAiE,MAED,WACI,IAAK,IAAInC,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAM6E,EAAU3E,KAAKs8C,WAAWx8C,GAC1BmoC,EAASjoC,KAAKs6C,KAAKx6C,IAAME,KAAKs6C,KAAKx6C,GAAImoC,OAAS,EAClDA,EAAS,GAAKtjC,EAAQoxC,cAAgB,IACtCpxC,EAAQoxC,cAAgBxzC,KAAK6C,IAAI,EAAGT,EAAQoxC,cAAgB9N,IAE5DtjC,EAAQm7C,UAAYn7C,EAAQoxC,eAAiB,IAC7CpxC,EAAQoxC,cAAgB,GAExB9N,EAAS,GAAKtjC,EAAQoxC,cAAgB,GAAKpxC,EAAQoxC,cAAgBpxC,EAAQikC,UAC3EjkC,EAAQoxC,cAAgBxzC,KAAK4C,IAAIR,EAAQikC,QAASjkC,EAAQoxC,cAAgB9N,GAElF,CACJ,GAAC,CAAAjqC,IAAA,WAAAiE,MAED,WAII,IAFA,IAAMo/C,EAAerhD,KAAKu5C,UAAUsC,QAAQvtC,KAAI,SAAAoD,GAAC,OAAIA,EAAElJ,IAAI,IACrD84C,EAAathD,KAAK85C,SAASxrC,KAAI,SAAAoD,GAAC,OAAIA,EAAElJ,IAAI,IACvC1I,EAAE,EAAGA,EAAE,EAAGA,IACXuhD,EAAavhD,KAAOwhD,EAAWxhD,UACTD,IAAlByhD,EAAWxhD,GACXE,KAAKw6C,OAAO16C,GAAGoH,KAAKm6C,EAAavhD,GAAK,SAEtCE,KAAKw6C,OAAO16C,GAAGoH,KAAKm6C,EAAavhD,GAAK,gBAAkBwhD,EAAWxhD,KAO/E,IAFA,IAAMyhD,EAAmBvhD,KAAKu5C,UAAUsC,QAAQvtC,KAAI,SAAAoD,GAAC,OAAIA,EAAEvK,SAAS,IAC9Dq6C,EAAiBxhD,KAAK85C,SAASxrC,KAAI,SAAAoD,GAAC,OAAIA,EAAEvK,SAAS,IAChDrH,EAAE,EAAGA,EAAE,EAAGA,IACXyhD,EAAiBzhD,KAAO0hD,EAAe1hD,KACnC0hD,EAAe1hD,GACfE,KAAKw6C,OAAO16C,GAAGoH,KAAKlH,KAAK85C,SAASh6C,GAAGoK,QAAU,cAE/ClK,KAAKw6C,OAAO16C,GAAGoH,KAAKlH,KAAK85C,SAASh6C,GAAGoK,QAAU,iBAO3D,IAFA,IAAMu3C,EAAgBzhD,KAAKu5C,UAAUsC,QAAQvtC,KAAI,SAAAoD,GAAC,OAAIA,EAAErK,MAAM,IACxDq6C,EAAc1hD,KAAK85C,SAASxrC,KAAI,SAAAoD,GAAC,OAAIA,EAAErK,MAAM,IAC1CvH,EAAE,EAAGA,EAAE,EAAGA,IACX2hD,EAAc3hD,KAAO4hD,EAAY5hD,KACV,KAAnB4hD,EAAY5hD,SAAgCD,IAAnB6hD,EAAY5hD,GACrCE,KAAKw6C,OAAO16C,GAAGoH,KAAKu6C,EAAc3hD,GAAK,UAEvCE,KAAKw6C,OAAO16C,GAAGoH,KAAKw6C,EAAY5hD,GAAK,eAKjD,IAAK,IAAIA,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAI6hD,EAAW,GACf,IAAK,IAAIz/C,KAAQlC,KAAKk6C,QAAQp6C,GAAI,CAE9B,IAAMhC,EAAIkC,KAAKk6C,QAAQp6C,GAAGoC,GAChB,IAANpE,IACA6jD,GAAYz/C,EAAO,KAAOpE,EAAI,EAAI,IAAM,IAAMA,EAAI,KAE1D,CACiB,KAAb6jD,IACAA,EAAW,kBAAoBA,EAAS/U,MAAM,GAAI,GAAK,IACvD5sC,KAAKw6C,OAAO16C,GAAGoH,KAAKy6C,GAE5B,CAEA,IAAK,IAAI7hD,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAM8hD,EAAY5hD,KAAKu5C,UAAUsC,QAAQ/7C,GAAGi2C,cACtC8L,EAAU7hD,KAAK85C,SAASh6C,GAAGi2C,cAEjC,GADAr4C,QAAQC,IAAIkkD,GACRD,IAAcC,EAAS,CACvB,IAEMC,EAAQ,OAFSv/C,KAAKC,MAAMo/C,EAAY5hD,KAAKu5C,UAAUsC,QAAQ/7C,GAAG8oC,QAAU,KAE1C,QADnBrmC,KAAKC,MAAMq/C,EAAU7hD,KAAK85C,SAASh6C,GAAG8oC,QAAU,KAAM,GACV,IACjE5oC,KAAKw6C,OAAO16C,GAAGoH,KAAK46C,EACxB,CACJ,CACJ,KAIAzI,CAAA,CAvwBiB,GClEf12C,GAAMuhC,GAAY5gC,IAAI,GAEfy+C,GAAQ,WAsBjB,SAAAA,EAAYxI,EAAsByI,IAAoBjgD,EAAAA,EAAAA,GAAA,KAAAggD,GAAA,KArBtDxI,eAAS,OACTG,cAAQ,OACRD,cAAQ,OACRwI,oBAAc,OACdC,kBAAY,OACZC,mBAAa,OACbC,iBAAW,EAEX,KAEAC,uBAAiB,OACjBC,aAAO,OACPC,WAAK,OACLC,iBAAW,OACXC,eAAS,OAETC,cAAQ,OACRC,cAAQ,OACR9I,gBAAU,EAIN75C,KAAKu5C,UAAYA,EACjBv5C,KAAK05C,SAAWsI,EAAKY,SAASpJ,OAC9Bx5C,KAAKy5C,SAAWuI,EAAKY,SAASnJ,SAC9Bz5C,KAAKiiD,eAAiBD,EAAKY,SAAStJ,SACpCt5C,KAAKkiD,aAAeF,EAAKa,aAAavJ,SAEtCt5C,KAAKmiD,cAAgBH,EAAKY,SAASxjD,SAAW,CAAC,EAC/CY,KAAKoiD,YAAcJ,EAAKa,aAAazjD,SAAW,CAAC,CACrD,CAgHC,OAhHA4C,EAAAA,EAAAA,GAAA+/C,EAAA,EAAA/jD,IAAA,SAAAiE,MAED,WAEIjC,KAAKwiD,YAAc,IAAIx/B,GAAK,EAAGhjB,KAAKiiD,eAAe5iD,KAAMW,KAAKmiD,eAC1DniD,KAAKmiD,cAAczF,OAAM18C,KAAKwiD,YAAYvS,QAAS,QACvBpwC,IAA5BG,KAAKmiD,cAAc1Z,OAAoBzoC,KAAKwiD,YAAY/Z,KAAOzoC,KAAKmiD,cAAc1Z,MACtFzoC,KAAKyiD,UAAY,IAAIz/B,GAAK,EAAGhjB,KAAKkiD,aAAa7iD,KAAMW,KAAKoiD,aACtDpiD,KAAKoiD,YAAY1F,OAAM18C,KAAKyiD,UAAUxS,QAAS,QACrBpwC,IAA1BG,KAAKoiD,YAAY3Z,OAAoBzoC,KAAKyiD,UAAUha,KAAOzoC,KAAKoiD,YAAY3Z,MAGhFzoC,KAAK8iD,eAGL9iD,KAAK65C,WAAa75C,KAAKu5C,UAAU95C,QAEjC,IAAIsjD,EAAM/iD,KAAK05C,SACXsJ,EAAMhjD,KAAKy5C,SACXwJ,EAAYjjD,KAAKiiD,eACjBiB,EAAYljD,KAAKkiD,aAgErB,MA9DiC,aAA7BliD,KAAKiiD,eAAe5iD,WAA0EQ,IAAnDG,KAAKu5C,UAAUsC,QAAQ77C,KAAKy5C,UAAUgC,UACjFsH,EAAM/iD,KAAKy5C,UACXuJ,EAAMhjD,KAAKu5C,UAAUsC,QAAQkH,GAAKrH,cACtB17C,KAAKy5C,WAAYuJ,EAAMD,GACnCE,EAAYjjD,KAAKu5C,UAAUsC,QAAQ77C,KAAKy5C,UAAUgC,SAClDz7C,KAAKwiD,YAAc,IAAIx/B,GAAK,EAAGigC,EAAU5jD,KAAMW,KAAKmiD,eAChDniD,KAAKmiD,cAAczF,OAAM18C,KAAKwiD,YAAYvS,QAAS,QACvBpwC,IAA5BG,KAAKmiD,cAAc1Z,OAAoBzoC,KAAKwiD,YAAY/Z,KAAOzoC,KAAKmiD,cAAc1Z,OAClD,YAA7BzoC,KAAKiiD,eAAe5iD,QAC3B2jD,EAAMhjD,KAAKu5C,UAAUsC,QAAQkH,GAAKrH,cACtB17C,KAAKy5C,WAAYuJ,EAAMD,GACnCG,EAAYljD,KAAKu5C,UAAUsC,QAAQ77C,KAAKy5C,UAAUgC,SAClDz7C,KAAKwiD,YAAc,IAAIx/B,GAAK,EAAGkgC,EAAU7jD,KAAMW,KAAKmiD,eAChDniD,KAAKmiD,cAAczF,OAAM18C,KAAKwiD,YAAYvS,QAAS,QACvBpwC,IAA5BG,KAAKmiD,cAAc1Z,OAAoBzoC,KAAKwiD,YAAY/Z,KAAOzoC,KAAKmiD,cAAc1Z,OAEtFzoC,KAAKqiD,mBACLriD,KAAK0iD,SAAW,IAAIrJ,GAChB4J,EACAjjD,KAAKwiD,YACLxiD,KAAK65C,WACLkJ,EACAC,EACAD,EACA/iD,KAAKqiD,kBACLriD,KAAKmiD,eAAe1S,SACxBzvC,KAAK65C,WAAa75C,KAAK0iD,SAAS/G,MAChC37C,KAAK2iD,SAAW,IAAItJ,GAChB6J,EACAljD,KAAKyiD,UACLziD,KAAK65C,WACL,EACA75C,KAAK05C,SACL15C,KAAK05C,UACJ15C,KAAKqiD,kBACNriD,KAAKoiD,aAAa3S,SACtBzvC,KAAK65C,WAAa75C,KAAK2iD,SAAShH,QAEhC37C,KAAK0iD,SAAW,IAAIrJ,GAChB6J,EACAljD,KAAKyiD,UACLziD,KAAK65C,WACL,EACA75C,KAAK05C,SACL15C,KAAK05C,UACJ15C,KAAKqiD,kBACNriD,KAAKmiD,eAAe1S,SACxBzvC,KAAK65C,WAAa75C,KAAK0iD,SAAS/G,MAChC37C,KAAK2iD,SAAW,IAAItJ,GAChB4J,EACAjjD,KAAKwiD,YACLxiD,KAAK65C,WACLkJ,EACAC,EACAD,EACA/iD,KAAKqiD,kBACLriD,KAAKoiD,aAAa3S,SACtBzvC,KAAK65C,WAAa75C,KAAK2iD,SAAShH,OAGpC37C,KAAK65C,WAAWgC,QAAQ77C,KAAK05C,UAAUoG,UAAW,EAClD9/C,KAAK65C,WAAWgC,QAAQ,GAAGiE,UAAW,EAC/B,CACHnE,MAAO37C,KAAK65C,WACZsJ,QAAS,CAACnjD,KAAK0iD,SAAU1iD,KAAK2iD,UAC9BS,iBAAkBpjD,KAAKqiD,kBAG/B,GAAC,CAAArkD,IAAA,eAAAiE,MAED,WACIjC,KAAKsiD,QAAUtiD,KAAKu5C,UAAUsC,QAAQ77C,KAAK05C,UAC3C15C,KAAKuiD,MAAQviD,KAAKu5C,UAAUsC,QAAQ,GAEpC,IAAMwH,EAAiBrjD,KAAKiiD,eAAetqC,UAAY3X,KAAKwiD,YAAY7qC,SAClE2rC,EAAetjD,KAAKkiD,aAAavqC,UAAY3X,KAAKyiD,UAAU9qC,SAClE,GAAI0rC,EAAiBC,EACjBtjD,KAAKqiD,mBAAoB,OACtB,GAAIiB,EAAeD,EACtBrjD,KAAKqiD,mBAAoB,MACtB,CAEH,IAAIkB,EAAct+C,EAAgBjF,KAAKsiD,QAAQx8C,MAAM9E,IAAKhB,KAAKsiD,QAAQ37C,OAAO3F,IAAK2B,IAC/E6gD,EAAYv+C,EAAgBjF,KAAKuiD,MAAMz8C,MAAM9E,IAAKhB,KAAKuiD,MAAM57C,OAAO3F,IAAK2B,IACvE8gD,EAAYzjD,KAAKu5C,UAAUuC,OAAO,GACpB97C,KAAKu5C,UAAUuC,OAAO97C,KAAK05C,UAC/B/zC,aAAasB,aAAcs8C,GAAe,GACtDE,EAAU99C,aAAasB,aAAcu8C,GAAa,GACtDxjD,KAAKqiD,kBAAoBoB,EAAU1e,YAAewe,EAAcC,EAAcD,EAAcC,CAChG,CACJ,KAACzB,CAAA,CA/IgB,GCJR2B,GAAU,WAOnB,SAAAA,EAAY1B,IAAsBjgD,EAAAA,EAAAA,GAAA,KAAA2hD,GAAA,KANlCC,mBAAa,OACbC,WAAK,OAELC,YAAM,OACNC,kBAAY,EAGR9jD,KAAK2jD,cAAgB3B,EAAK2B,cAC1B3jD,KAAK4jD,MAAQ5B,EAAK4B,KACtB,CA4KC,OA5KA5hD,EAAAA,EAAAA,GAAA0hD,EAAA,EAAA1lD,IAAA,SAAAiE,MAED,WACI,IAII,OAHAjC,KAAK6jD,OAAS7jD,KAAK2jD,cAAclkD,QACjCO,KAAK+jD,oBACL/jD,KAAKgkD,iBACE,CACHC,SAAUjkD,KAAK6jD,OACfK,YAAalkD,KAAK8jD,aAE1B,CAAE,MAAO5kD,GAEL,OADAxB,QAAQJ,MAAM4B,GACP,CACH+kD,SAAUjkD,KAAK2jD,cAAclkD,QAC7BykD,YAAa,GAErB,CACJ,GAAC,CAAAlmD,IAAA,iBAAAiE,MAED,WACIjC,KAAK8jD,aAAe,GACpB,IAAK,IAAIhkD,EAAI,EAAGA,EAAIE,KAAK4jD,MAAMhkD,OAAQE,IAAK,CACxC,IAAMqkD,EAAOnkD,KAAK4jD,MAAM9jD,GAClB2vC,EAAS,IAAIsS,GAAS/hD,KAAK6jD,OAAQM,GAAM1U,SAC/CzvC,KAAK8jD,aAAa58C,KAAKuoC,GACvBzvC,KAAK6jD,OAASpU,EAAOkM,KACzB,CACJ,GAAC,CAAA39C,IAAA,oBAAAiE,MAED,WAEI,IAEyBiE,EADnBk+C,EADSpkD,KAAK6jD,OAAOhI,QAAQvtC,KAAI,SAAA+1C,GAAM,OAAIA,EAAOv+C,MAAM9E,GAAG,IACvCsN,KAAI,SAACvH,EAAOu9C,GAAK,MAAK,CAACv9C,EAAOu9C,EAAM,IAAE/yC,MAAK,SAAC1T,EAAGC,GAAC,OAAKA,EAAE,GAAKD,EAAE,EAAE,IAAEyQ,KAAI,SAAAi2C,GAAI,OAAIA,EAAK,EAAE,IAAEj+C,GAAAC,EAAAA,EAAAA,GAClG69C,GAAU,IAAzB,IAAA99C,EAAA9B,MAAA0B,EAAAI,EAAA7C,KAAA+C,MAA2B,CAAC,IAAnB6G,EAAEnH,EAAAjE,MACD0C,EAAU3E,KAAK6jD,OAAOhI,QAAQxuC,GAC9BnD,EAAUvF,EAAQuF,QAGxB,GAAgB,YAAZA,EAAuB,CAAC,IACYQ,EADbE,GAAArE,EAAAA,EAAAA,GACLvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAAlxC,EAAApG,MAAAkG,EAAAE,EAAAnH,KAAA+C,MAAsC,CAAxBkE,EAAAzI,MACJ4E,QAAU,KACpB,CAAC,OAAAtJ,IAAAqN,EAAA1L,EAAA3B,GAAA,SAAAqN,EAAAhE,GAAA,CACL,MAAO,GAAgB,YAAZsD,EAAuB,CAAC,IACKmzC,EADNC,GAAA/2C,EAAAA,EAAAA,GACZvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAAwB,EAAA94C,MAAA64C,EAAAC,EAAA75C,KAAA+C,MAAsC,CAAxB62C,EAAAp7C,MACJ4E,QAAU,MACpB,CAAC,OAAAtJ,IAAA+/C,EAAAp+C,EAAA3B,GAAA,SAAA+/C,EAAA12C,GAAA,CACL,MAAO,GAAgB,gBAAZsD,EAA2B,CAAC,IACCszC,EADFE,GAAAn3C,EAAAA,EAAAA,GAChBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA4B,EAAAl5C,MAAAg5C,EAAAE,EAAAj6C,KAAA+C,MAAsC,CAAxBg3C,EAAAv7C,MACJ4E,QAAU,MACpB,CAAC,OAAAtJ,IAAAmgD,EAAAx+C,EAAA3B,GAAA,SAAAmgD,EAAA92C,GAAA,CACL,MAAO,GAAgB,iBAAZsD,EAA4B,CAAC,IACA+zC,EADDC,GAAA33C,EAAAA,EAAAA,GACjBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAAoC,EAAA15C,MAAAy5C,EAAAC,EAAAz6C,KAAA+C,MAAsC,CAAxBy3C,EAAAh8C,MACJ4E,QAAU,MACpB,CAAC,OAAAtJ,IAAA2gD,EAAAh/C,EAAA3B,GAAA,SAAA2gD,EAAAt3C,GAAA,CACL,MAAO,GAAgB,qBAAZsD,EAAgC,CAAC,IACJo0C,EADGK,GAAAp4C,EAAAA,EAAAA,GACrBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA6C,EAAAn6C,MAAA85C,EAAAK,EAAAl7C,KAAA+C,MAAsC,CAAxB83C,EAAAr8C,MACJ4E,QAAU,KACpB,CAAC,OAAAtJ,IAAAohD,EAAAz/C,EAAA3B,GAAA,SAAAohD,EAAA/3C,GAAA,CACL,MAAO,GAAgB,eAAZsD,GAAwC,aAAZA,EAAwB,CAAC,IACxBm2C,EADuBC,GAAA/5C,EAAAA,EAAAA,GACzCvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAAwE,EAAA97C,MAAA67C,EAAAC,EAAA78C,KAAA+C,MAAsC,CAAxB65C,EAAAp+C,MACJ+iC,aAAc,CACxB,CACJ,OAAAznC,IAAA+iD,EAAAphD,EAAA3B,GAAA,SAAA+iD,EAAA15C,GAAA,CACA,MAAO,GAAgB,iBAAZsD,EAA4B,CAAC,IACAq2C,EADDC,GAAAj6C,EAAAA,EAAAA,GACjBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA0E,EAAAh8C,MAAA+7C,EAAAC,EAAA/8C,KAAA+C,MAAsC,CAAxB+5C,EAAAt+C,MACJ6E,QAAU,QACpB,CAAC,OAAAvJ,IAAAijD,EAAAthD,EAAA3B,GAAA,SAAAijD,EAAA55C,GAAA,CACL,MAAO,GAAgB,mBAAZsD,EAA8B,CAAC,IACFu2C,EADCC,GAAAn6C,EAAAA,EAAAA,GACnBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA4E,EAAAl8C,MAAAi8C,EAAAC,EAAAj9C,KAAA+C,MAAsC,CAAxBi6C,EAAAx+C,MACJ6E,QAAU,UACpB,CAAC,OAAAvJ,IAAAmjD,EAAAxhD,EAAA3B,GAAA,SAAAmjD,EAAA95C,GAAA,CACL,MAAO,GAAgB,gBAAZsD,EAA2B,CAAC,IACCy2C,EADFC,GAAAr6C,EAAAA,EAAAA,GAChBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA8E,EAAAp8C,MAAAm8C,EAAAC,EAAAn9C,KAAA+C,MAAsC,CAAxBm6C,EAAA1+C,MACJ6E,QAAU,OACpB,CAAC,OAAAvJ,IAAAqjD,EAAA1hD,EAAA3B,GAAA,SAAAqjD,EAAAh6C,GAAA,CACL,MAAO,GAAgB,kBAAZsD,EAA6B,CAAC,IACD22C,EADAC,GAAAv6C,EAAAA,EAAAA,GAClBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAAgF,EAAAt8C,MAAAq8C,EAAAC,EAAAr9C,KAAA+C,MAAsC,CAAxBq6C,EAAA5+C,MACJ6E,QAAU,SACpB,CAAC,OAAAvJ,IAAAujD,EAAA5hD,EAAA3B,GAAA,SAAAujD,EAAAl6C,GAAA,CACL,MAAO,GAAgB,kBAAZsD,EAA6B,CAAC,IACD+2C,EADAC,GAAA36C,EAAAA,EAAAA,GAClBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAAoF,EAAA18C,MAAAy8C,EAAAC,EAAAz9C,KAAA+C,MAAsC,CAAxBy6C,EAAAh/C,MACJ6E,QAAU,UACpB,CACJ,OAAAvJ,IAAA2jD,EAAAhiD,EAAA3B,GAAA,SAAA2jD,EAAAt6C,GAAA,CACA,MAAO,GAAgB,kBAAZsD,EAA6B,CAAC,IACDs6C,EADAC,GAAAl+C,EAAAA,EAAAA,GAClBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA2I,EAAAjgD,MAAAggD,EAAAC,EAAAhhD,KAAA+C,MAAsC,CAAxBg+C,EAAAviD,MACJ2iC,eAAgB,CAC1B,CAAC,OAAArnC,IAAAknD,EAAAvlD,EAAA3B,GAAA,SAAAknD,EAAA79C,GAAA,CACL,MAAO,GAAgB,kBAAZsD,EAA6B,CAAC,IACDw6C,EADAC,GAAAp+C,EAAAA,EAAAA,GAClBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA6I,EAAAngD,MAAAkgD,EAAAC,EAAAlhD,KAAA+C,MAAsC,CAAxBk+C,EAAAziD,MACJ0iC,eAAgB,CAC1B,CAAC,OAAApnC,IAAAonD,EAAAzlD,EAAA3B,GAAA,SAAAonD,EAAA/9C,GAAA,CACL,MAAO,GAAgB,mBAAZsD,EAA8B,CAAC,IACF06C,EADCC,GAAAt+C,EAAAA,EAAAA,GACnBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAA+I,EAAArgD,MAAAogD,EAAAC,EAAAphD,KAAA+C,MAAsC,CAAxBo+C,EAAA3iD,MACJ6iC,gBAAiB,CAC3B,CAAC,OAAAvnC,IAAAsnD,EAAA3lD,EAAA3B,GAAA,SAAAsnD,EAAAj+C,GAAA,CACL,MAAO,GAAgB,oBAAZsD,EAA+B,CAAC,IACH46C,EADEC,GAAAx+C,EAAAA,EAAAA,GACpBvG,KAAK6jD,OAAO/H,QAAM,IAApC,IAAAiJ,EAAAvgD,MAAAsgD,EAAAC,EAAAthD,KAAA+C,MAAsC,CAAxBs+C,EAAA7iD,MACJ4iC,iBAAkB,CAC5B,CAEJ,OAAAtnC,IAAAwnD,EAAA7lD,EAAA3B,GAAA,SAAAwnD,EAAAn+C,GAAA,CACA,MAAO,GAAgB,kBAAZsD,EACP,GAAW,IAAPmD,EACArN,KAAK6jD,OAAO/H,OAAO,GAAGn2C,aAAa8gC,eAAiB,MAEnD,CAAC,IAC2Cue,EAD5CC,GAAA1+C,EAAAA,EAAAA,GACiBvG,KAAK6jD,OAAO/H,OAAOlP,MAAM,IAAE,IAA7C,IAAAqY,EAAAzgD,MAAAwgD,EAAAC,EAAAxhD,KAAA+C,MAA+C,CAAjCw+C,EAAA/iD,MACJ0D,aAAa8gC,eAAiB,CACxC,CAAC,OAAAlpC,IAAA0nD,EAAA/lD,EAAA3B,GAAA,SAAA0nD,EAAAr+C,GAAA,CACL,MAEG,GAAgB,eAAZsD,EACP,GAAW,IAAPmD,EACArN,KAAK6jD,OAAO/H,OAAO,GAAGn2C,aAAamhC,aAAc,MAC9C,CAAC,IACyCoe,EAD1CC,GAAA5+C,EAAAA,EAAAA,GACevG,KAAK6jD,OAAO/H,OAAOlP,MAAM,IAAE,IAA7C,IAAAuY,EAAA3gD,MAAA0gD,EAAAC,EAAA1hD,KAAA+C,MAA+C,CAAjC0+C,EAAAjjD,MACJ0D,aAAamhC,aAAc,CACrC,CAAC,OAAAvpC,IAAA4nD,EAAAjmD,EAAA3B,GAAA,SAAA4nD,EAAAv+C,GAAA,CACL,MAEG,GAAgB,eAAZsD,EACP,GAAW,IAAPmD,EACArN,KAAK6jD,OAAO/H,OAAO,GAAGn2C,aAAa6gC,YAAc,MAC9C,CAAC,IACyC4e,EAD1CC,GAAA9+C,EAAAA,EAAAA,GACevG,KAAK6jD,OAAO/H,OAAOlP,MAAM,IAAE,IAA7C,IAAAyY,EAAA7gD,MAAA4gD,EAAAC,EAAA5hD,KAAA+C,MAA+C,CAAjC4+C,EAAAnjD,MACJ0D,aAAa6gC,YAAc,CACrC,CAAC,OAAAjpC,IAAA8nD,EAAAnmD,EAAA3B,GAAA,SAAA8nD,EAAAz+C,GAAA,CACL,MAEG,GAAgB,iBAAZsD,GACP,GAAW,IAAPmD,EAAU,CACV,IAAK,IAAIi4C,EAAI,EAAGA,EAAI,EAAGA,IACfj4C,IAAOi4C,IACPtlD,KAAK6jD,OAAO/H,OAAOwJ,GAAK3/C,aAAa0gC,cAAgB,GAG7DrmC,KAAK6jD,OAAO/H,OAAO,GAAGl2C,aAAaygC,cAAgB,CACvD,OAEG,GAAgB,mBAAZn8B,GAA4C,gBAAZA,GACvC,GAAqB,mBAAjBvF,EAAQ6D,KAA2B,CACnC9K,QAAQC,IAAI,sBACZgH,EAAQwC,WAAY,EACpB,IAAMo1C,EAASh1C,EAAkB5C,GACjCA,EAAQsG,YAAcsxC,EACtB53C,EAAQ6D,UAAO3I,CACnB,OAEG,GAAgB,eAAZqK,EACP,GAAW,IAAPmD,EAAU,CAAC,IACqCk4C,EADtCC,GAAAj/C,EAAAA,EAAAA,GACUvG,KAAK6jD,OAAOhI,QAAQjP,MAAM,IAAE,IAAhD,IAAA4Y,EAAAhhD,MAAA+gD,EAAAC,EAAA/hD,KAAA+C,MAAkD,CAAC,IAA1C7B,EAAO4gD,EAAAtjD,MACR,CAAC,YAAa,YAAa,cAAe,WAAWmF,SAASzC,EAAQuF,SAAW,MACjFvF,EAAQgC,OAAOpG,IAAMgC,KAAK6C,KAAK,EAAGT,EAAQgC,OAAOpG,IAAM,GAE/D,CAAC,OAAAhD,IAAAioD,EAAAtmD,EAAA3B,GAAA,SAAAioD,EAAA5+C,GAAA,CACL,KACQ,CAAC,YAAa,YAAa,cAAe,WAAWQ,SAASzC,EAAQuF,SAAW,MACjFvF,EAAQgC,OAAOpG,IAAMgC,KAAK6C,KAAK,EAAGT,EAAQgC,OAAOpG,IAAM,QAG5C,mBAAZ2J,EACPvF,EAAQgC,OAAOpG,KAAO,EAEH,qBAAZ2J,IACPvF,EAAQgC,OAAOnG,KAAO,EAK9B,CAAC,OAAAjD,IAAA+I,EAAApH,EAAA3B,GAAA,SAAA+I,EAAAM,GAAA,CACL,KAAC88C,CAAA,CAtLkB,GC6EV+B,GAAM,SAAAC,IAAAhN,EAAAA,EAAAA,GAAA+M,EAAAC,GAAA,IAAA/M,GAAAC,EAAAA,EAAAA,GAAA6M,GAQf,SAAAA,EAAYp4C,EAAYs4C,EAAchhD,GAAmK,IAADihD,EAAhJC,EAAsBlmD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAImgD,EAAiBngD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU87C,EAA8B97C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAAW67C,EAA8B/7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAO5J,OAPqKkC,EAAAA,EAAAA,GAAA,KAAA0jD,IAClMG,EAAAjN,EAAAv6C,KAAA,KAAMuG,EAAQhC,IAAKgC,EAAQtF,MAAI+iC,EAAAA,EAAAA,GAAA,GAAMz9B,KARzC0I,QAAE,EAAAu4C,EACFD,UAAI,EAAAC,EACJC,gBAAU,EAAcD,EACxB9F,cAAQ,EAAgB8F,EACxBnK,cAAQ,EAAgBmK,EACxBlK,gBAAU,EAINkK,EAAKv4C,GAAKA,EACVu4C,EAAKD,KAAOA,EACZC,EAAKC,WAAaA,EAClBD,EAAK9F,SAAWA,EAChB8F,EAAKnK,SAAWA,EAChBmK,EAAKlK,WAAaA,EAAWkK,CACjC,CAkCG,OAlCF5jD,EAAAA,EAAAA,GAAAyjD,EAAA,EAAAznD,IAAA,QAAAiE,MAED,WACI,OAAO,IAAIwjD,EACPzlD,KAAKqN,GACLrN,KAAK2lD,KACL,IAAIhQ,GAAQ31C,KAAK2C,IAAK3C,KAAKX,KAAM,CAC7ByD,MAAO9C,KAAK8C,MACZ+nC,eAAgB7qC,KAAK6qC,eACrB3gC,QAASlK,KAAKkK,QACd/C,UAAWnH,KAAKmH,UAChBksC,YAAarzC,KAAKqzC,YAClBwC,aAAc71C,KAAK61C,aACnBrH,WAAYxuC,KAAKwuC,WACjB9E,cAAe1pC,KAAK0pC,cACpBz+B,YAAajL,KAAKiL,YAClBzC,KAAMxI,KAAKwI,KACX2f,OAAQnoB,KAAKmoB,OACbplB,OAAQ/C,KAAK+C,OACbzC,IAAKnB,GAAO,EAAM,CAAC,EAAGa,KAAKM,KAC3B+L,IAAKlN,GAAO,EAAM,CAAC,EAAGa,KAAKqM,KAC3B1F,OAAQxH,GAAO,EAAM,CAAC,EAAGa,KAAK2G,QAC9BovC,cAAe/1C,KAAK+1C,cACpB1uC,OAAQrH,KAAKqH,OACbqnC,SAAU1uC,KAAK0uC,SACff,aAAc3tC,KAAK2tC,aACnB1pB,MAAOjkB,KAAKikB,MAAM2oB,QAClBqJ,UAAWj2C,KAAK0hC,UAEpB1hC,KAAK6lD,WACL7lD,KAAK8/C,SACL9/C,KAAKy7C,SACLz7C,KAAK07C,WAEX,KAAC+J,CAAA,CAlDY,CAAS9P,IAqDfmQ,GAAS,WAIlB,SAAAA,EAAYjK,EAAmBC,IAAiB/5C,EAAAA,EAAAA,GAAA,KAAA+jD,GAAA,KAHhDjK,aAAO,EAAY,KACnBC,YAAM,EAGF97C,KAAK67C,QAAUA,EACf77C,KAAK87C,OAASA,CAClB,CAMC,OANA95C,EAAAA,EAAAA,GAAA8jD,EAAA,EAAA9nD,IAAA,QAAAiE,MAED,WACI,OAAO,IAAI6jD,EACP9lD,KAAK67C,QAAQvtC,KAAI,SAAA+1C,GAAM,OAAIA,EAAO5kD,OAAO,IACzCO,KAAK87C,OAAOxtC,KAAI,SAAA1J,GAAK,OAAIA,EAAMnF,OAAO,IAC9C,KAACqmD,CAAA,CAbiB,GC/HhBnjD,GAAMuhC,GAAY5gC,IAAI,GAE5B8X,KAAK2qC,UAAY,SAACC,GACd,IACMnK,EADiBmK,EAAM/iC,KAAK++B,KAAK2B,cAAc9H,QACtBvtC,KAAI,SAACu/B,GAAC,OAAK,IAAI4X,GAAO5X,EAAExgC,GAAIwgC,EAAE8X,KAAM,IAAIhQ,GAAQhzC,GAAKkrC,EAAExuC,KAAM,CACxFyD,MAAO+qC,EAAE/qC,MACT+nC,eAAgBgD,EAAEhD,eAClB3gC,QAAS2jC,EAAE3jC,QACXnH,OAAQ8qC,EAAE9qC,OACVsJ,IAAKwhC,EAAExhC,IACP/L,IAAKutC,EAAEvtC,IACPkI,KAAMqlC,EAAErlC,KACRkmC,SAAUb,EAAEa,SACZzqB,MAAO4pB,EAAE5pB,QACT4pB,EAAEgY,WAAW,IAGX/J,EADgBkK,EAAM/iC,KAAK++B,KAAK2B,cAAc7H,OACvBxtC,KAAI,SAAC1H,GAAC,OAAK,IAAIw9B,IAAKhC,EAAAA,EAAAA,GAAC,CAAC,EAAGx7B,GAAG,IAGnDo7C,EAAuB,CACzB2B,cAFU,IAAImC,GAAUjK,EAASC,GAGjC8H,MAAOoC,EAAM/iC,KAAK++B,KAAK4B,OAIrBnU,EADS,IAAIiU,GAAW1B,GACRvS,SACtBr0B,KAAK6qC,YAAYxW,EACrB,C,GCnCIyW,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBvmD,IAAjBwmD,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CAGAH,EAAoBjiC,EAAIsiC,EAGxBL,EAAoBM,EAAI,WAGvB,IAAIC,EAAsBP,EAAoBQ,OAAE9mD,EAAW,CAAC,KAAK,WAAa,OAAOsmD,EAAoB,KAAO,IAEhH,OADAO,EAAsBP,EAAoBQ,EAAED,EAE7C,E,WClCA,IAAIE,EAAW,GACfT,EAAoBQ,EAAI,SAASlX,EAAQoX,EAAUC,EAAInvC,GACtD,IAAGkvC,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAASlnD,EAAI,EAAGA,EAAI8mD,EAAShnD,OAAQE,IAAK,CACrC+mD,EAAWD,EAAS9mD,GAAG,GACvBgnD,EAAKF,EAAS9mD,GAAG,GACjB6X,EAAWivC,EAAS9mD,GAAG,GAE3B,IAJA,IAGImnD,GAAY,EACPnb,EAAI,EAAGA,EAAI+a,EAASjnD,OAAQksC,MACpB,EAAXn0B,GAAsBovC,GAAgBpvC,IAAa1Z,OAAO8P,KAAKo4C,EAAoBQ,GAAGO,OAAM,SAASlpD,GAAO,OAAOmoD,EAAoBQ,EAAE3oD,GAAK6oD,EAAS/a,GAAK,IAChK+a,EAAS7K,OAAOlQ,IAAK,IAErBmb,GAAY,EACTtvC,EAAWovC,IAAcA,EAAepvC,IAG7C,GAAGsvC,EAAW,CACbL,EAAS5K,OAAOl8C,IAAK,GACrB,IAAI+tC,EAAIiZ,SACEjnD,IAANguC,IAAiB4B,EAAS5B,EAC/B,CACD,CACA,OAAO4B,CArBP,CAJC93B,EAAWA,GAAY,EACvB,IAAI,IAAI7X,EAAI8mD,EAAShnD,OAAQE,EAAI,GAAK8mD,EAAS9mD,EAAI,GAAG,GAAK6X,EAAU7X,IAAK8mD,EAAS9mD,GAAK8mD,EAAS9mD,EAAI,GACrG8mD,EAAS9mD,GAAK,CAAC+mD,EAAUC,EAAInvC,EAwB/B,C,IC5BAwuC,EAAoBtZ,EAAI,SAASyZ,EAASa,GACzC,IAAI,IAAInpD,KAAOmpD,EACXhB,EAAoBiB,EAAED,EAAYnpD,KAASmoD,EAAoBiB,EAAEd,EAAStoD,IAC5EC,OAAOopD,eAAef,EAAStoD,EAAK,CAAEspD,YAAY,EAAMhkD,IAAK6jD,EAAWnpD,IAG3E,ECPAmoD,EAAoBv/C,EAAI,CAAC,EAGzBu/C,EAAoBjnD,EAAI,SAASqoD,GAChC,OAAOC,QAAQC,IAAIxpD,OAAO8P,KAAKo4C,EAAoBv/C,GAAG8gD,QAAO,SAASC,EAAU3pD,GAE/E,OADAmoD,EAAoBv/C,EAAE5I,GAAKupD,EAASI,GAC7BA,CACR,GAAG,IACJ,ECPAxB,EAAoByB,EAAI,SAASL,GAEhC,MAAO,aAAeA,EAAf,oBACR,ECHApB,EAAoB0B,SAAW,SAASN,GAGxC,ECJApB,EAAoBiB,EAAI,SAASzoD,EAAKmpD,GAAQ,OAAO7pD,OAAOC,UAAUC,eAAeC,KAAKO,EAAKmpD,EAAO,ECAtG3B,EAAoBz0C,EAAI,sB,WCIxB,IAAIq2C,EAAkB,CACrB,IAAK,GAkBN5B,EAAoBv/C,EAAE9G,EAAI,SAASynD,EAASI,GAEvCI,EAAgBR,IAElBS,cAAc7B,EAAoBz0C,EAAIy0C,EAAoByB,EAAEL,GAG/D,EAEA,IAAIU,EAAqB7sC,KAAoC,8BAAIA,KAAoC,+BAAK,GACtG8sC,EAA6BD,EAAmB/gD,KAAKihD,KAAKF,GAC9DA,EAAmB/gD,KAzBA,SAAS+b,GAC3B,IAAI4jC,EAAW5jC,EAAK,GAChBmlC,EAAcnlC,EAAK,GACnBolC,EAAUplC,EAAK,GACnB,IAAI,IAAImjC,KAAYgC,EAChBjC,EAAoBiB,EAAEgB,EAAahC,KACrCD,EAAoBjiC,EAAEkiC,GAAYgC,EAAYhC,IAIhD,IADGiC,GAASA,EAAQlC,GACdU,EAASjnD,QACdmoD,EAAgBlB,EAASyB,OAAS,EACnCJ,EAA2BjlC,EAC5B,C,eCtBA,IAAIpV,EAAOs4C,EAAoBM,EAC/BN,EAAoBM,EAAI,WACvB,OAAON,EAAoBjnD,EAAE,IAAIqpD,KAAK16C,EACvC,C,ICF0Bs4C,EAAoBM,G","sources":["calc/util.ts","calc/stats.ts","calc/mechanics/util.ts","calc/data/abilities.ts","calc/data/items.ts","calc/data/moves.ts","calc/data/species.ts","calc/data/types.ts","calc/data/natures.ts","calc/data/index.ts","calc/field.ts","calc/items.ts","calc/desc.ts","calc/result.ts","calc/mechanics/gen12.ts","calc/mechanics/gen4.ts","calc/mechanics/gen56.ts","calc/mechanics/gen789.ts","calc/calc.ts","calc/mechanics/gen3.ts","calc/pokemon.ts","calc/move.ts","calc/state.ts","calc/index.ts","raidcalc/RaidMove.ts","raidcalc/RaidTurn.ts","raidcalc/RaidBattle.ts","raidcalc/interface.ts","workers/raidcalc.worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/* eslint-disable eqeqeq, @typescript-eslint/unbound-method, @typescript-eslint/ban-types */\nimport {ID} from './data/interface';\n\nexport function toID(text: any): ID {\n  return ('' + text).toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\n}\n\nexport function error(err: boolean, msg: string) {\n  if (err) {\n    throw new Error(msg);\n  } else {\n    console.log(msg);\n  }\n}\n\nexport function assignWithout(\n  a: {[key: string]: any}, b: {[key: string]: any}, exclude: Set<string>\n) {\n  for (const key in b) {\n    if (Object.prototype.hasOwnProperty.call(b, key) && !exclude.has(key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n// https://github.com/krzkaczor/ts-essentials v6.0.5\n// MIT License Copyright 2018-2019 Chris Kaczor\nexport type Primitive = string | number | boolean | bigint | symbol | undefined | null;\nexport type Builtin = Primitive | Function | Date | Error | RegExp;\n\nexport type IsTuple<T> =\n  T extends [infer A] ? T\n  : T extends [infer A, infer B] ? T\n  : T extends [infer A, infer B, infer C] ? T\n  : T extends [infer A, infer B, infer C, infer D] ? T\n  : T extends [infer A, infer B, infer C, infer D, infer E] ? T\n  : never;\n\nexport type DeepPartial<T> =\n  T extends Builtin ? T\n  : T extends Map<infer K, infer V> ? Map<DeepPartial<K>, DeepPartial<V>>\n  : T extends ReadonlyMap<infer K, infer V> ? ReadonlyMap<DeepPartial<K>, DeepPartial<V>>\n  : T extends Set<infer U> ? Set<DeepPartial<U>>\n  : T extends ReadonlySet<infer U> ? ReadonlySet<DeepPartial<U>>\n  : T extends Array<infer U> ? T extends IsTuple<T>\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Array<DeepPartial<U>>\n  : T extends Promise<infer U> ? Promise<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\n// jQuery JavaScript Library v2.0.3\n// Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\nconst class2Type: {[c: string]: string} = {\n  '[object Boolean]': 'boolean',\n  '[object Number]': 'number',\n  '[object String]': 'string',\n  '[object Function]': 'function',\n  '[object Array]': 'array',\n  '[object Date]': 'date',\n  '[object RegExp]': 'regexp',\n  '[object Object]': 'object',\n  '[object Error]': 'error',\n};\n\nconst coreToString = class2Type.toString;\nconst coreHasOwn = class2Type.hasOwnProperty;\n\nfunction isFunction(obj: any) {\n  return getType(obj) === 'function';\n}\n\nfunction isWindow(obj: any) {\n  return obj != null && obj === obj.window;\n}\n\nfunction getType(obj: any) {\n  if (obj == null) {\n    return String(obj);\n  }\n  return typeof obj === 'object' || typeof obj === 'function'\n    ? class2Type[coreToString.call(obj)] || 'object'\n    : typeof obj;\n}\n\nfunction isPlainObject(obj: any) {\n  if (getType(obj) !== 'object' || obj.nodeType || isWindow(obj)) {\n    return false;\n  }\n\n  try {\n    if (obj.constructor && !coreHasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function extend(this: any, ...args: any[]) {\n  let options, name, src, copy, copyIsArray, clone;\n  let target = args[0] || {};\n  let i = 1;\n  let deep = false;\n  const length = args.length;\n\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = args[1] || {};\n    i = 2;\n  }\n\n  if (typeof target !== 'object' && !isFunction(target)) {\n    target = {};\n  }\n\n  if (length === i) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    target = this;\n    --i;\n  }\n\n  for (; i < length; i++) {\n    if ((options = args[i]) != null) {\n      // tslint:disable-next-line: forin\n      for (name in options) {\n        src = target[name];\n        copy = options[name];\n\n        if (target === copy) {\n          continue;\n        }\n\n        if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n          if (copyIsArray) {\n            copyIsArray = false;\n            clone = src && Array.isArray(src) ? src : [];\n          } else {\n            clone = src && isPlainObject(src) ? src : {};\n          }\n\n          target[name] = extend(deep, clone, copy);\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","import {Natures, Generation, TypeName, StatID, StatsTable} from './data/interface';\nimport {toID} from './util';\n\nconst RBY: Array<StatID | 'spc'> = ['hp', 'atk', 'def', 'spc', 'spe'];\nconst GSC: StatID[] = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\nconst ADV: StatID[] = GSC;\nconst DPP: StatID[] = GSC;\nconst BW: StatID[] = GSC;\nconst XY: StatID[] = GSC;\nconst SM: StatID[] = GSC;\nconst SS: StatID[] = GSC;\nconst SV: StatID[] = GSC;\n\nexport const STATS: Array<Array<StatID | 'spc'> | StatID[]> =\n  [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\ntype HPTypeName = Exclude<TypeName, 'Normal' | 'Fairy' | '???'>;\n\nconst HP_TYPES = [\n  'Fighting', 'Flying', 'Poison', 'Ground', 'Rock', 'Bug', 'Ghost', 'Steel',\n  'Fire', 'Water', 'Grass', 'Electric', 'Psychic', 'Ice', 'Dragon', 'Dark',\n];\n\nconst HP: {[type in HPTypeName]: {ivs: Partial<StatsTable>; dvs: Partial<StatsTable>}} = {\n  Bug: {ivs: {atk: 30, def: 30, spd: 30}, dvs: {atk: 13, def: 13}},\n  Dark: {ivs: {}, dvs: {}},\n  Dragon: {ivs: {atk: 30}, dvs: {def: 14}},\n  Electric: {ivs: {spa: 30}, dvs: {atk: 14}},\n  Fighting: {ivs: {def: 30, spa: 30, spd: 30, spe: 30}, dvs: {atk: 12, def: 12}},\n  Fire: {ivs: {atk: 30, spa: 30, spe: 30}, dvs: {atk: 14, def: 12}},\n  Flying: {ivs: {hp: 30, atk: 30, def: 30, spa: 30, spd: 30}, dvs: {atk: 12, def: 13}},\n  Ghost: {ivs: {def: 30, spd: 30}, dvs: {atk: 13, def: 14}},\n  Grass: {ivs: {atk: 30, spa: 30}, dvs: {atk: 14, def: 14}},\n  Ground: {ivs: {spa: 30, spd: 30}, dvs: {atk: 12}},\n  Ice: {ivs: {atk: 30, def: 30}, dvs: {def: 13}},\n  Poison: {ivs: {def: 30, spa: 30, spd: 30}, dvs: {atk: 12, def: 14}},\n  Psychic: {ivs: {atk: 30, spe: 30}, dvs: {def: 12}},\n  Rock: {ivs: {def: 30, spd: 30, spe: 30}, dvs: {atk: 13, def: 12}},\n  Steel: {ivs: {spd: 30}, dvs: {atk: 13}},\n  Water: {ivs: {atk: 30, def: 30, spa: 30}, dvs: {atk: 14, def: 13}},\n};\n\nexport const Stats = new (class {\n  displayStat(stat: StatID | 'spc') {\n    switch (stat) {\n    case 'hp':\n      return 'HP';\n    case 'atk':\n      return 'Atk';\n    case 'def':\n      return 'Def';\n    case 'spa':\n      return 'SpA';\n    case 'spd':\n      return 'SpD';\n    case 'spe':\n      return 'Spe';\n    case 'spc':\n      return 'Spc';\n    default:\n      throw new Error(`unknown stat ${stat}`);\n    }\n  }\n\n  shortForm(stat: StatID | 'spc') {\n    switch (stat) {\n    case 'hp':\n      return 'hp';\n    case 'atk':\n      return 'at';\n    case 'def':\n      return 'df';\n    case 'spa':\n      return 'sa';\n    case 'spd':\n      return 'sd';\n    case 'spe':\n      return 'sp';\n    case 'spc':\n      return 'sl';\n    }\n  }\n\n  getHPDV(ivs: {atk: number; def: number; spe: number; spc: number}) {\n    return (\n      (this.IVToDV(ivs.atk) % 2) * 8 +\n      (this.IVToDV(ivs.def) % 2) * 4 +\n      (this.IVToDV(ivs.spe) % 2) * 2 +\n      (this.IVToDV(ivs.spc) % 2)\n    );\n  }\n\n  IVToDV(iv: number) {\n    return Math.floor(iv / 2);\n  }\n\n  DVToIV(dv: number) {\n    return dv * 2;\n  }\n\n  DVsToIVs(dvs: Readonly<Partial<StatsTable>>) {\n    const ivs: Partial<StatsTable> = {};\n    let dv: StatID;\n    for (dv in dvs) {\n      ivs[dv] = Stats.DVToIV(dvs[dv]!);\n    }\n    return ivs;\n  }\n\n  calcStat(\n    gen: Generation,\n    stat: StatID,\n    base: number,\n    iv: number,\n    ev: number,\n    level: number,\n    nature?: string\n  ) {\n    if (gen.num < 1 || gen.num > 9) throw new Error(`Invalid generation ${gen.num}`);\n    if (gen.num < 3) return this.calcStatRBY(stat, base, iv, level);\n    return this.calcStatADV(gen.natures, stat, base, iv, ev, level, nature);\n  }\n\n  calcStatADV(\n    natures: Natures,\n    stat: StatID,\n    base: number,\n    iv: number,\n    ev: number,\n    level: number,\n    nature?: string\n  ) {\n    if (stat === 'hp') {\n      return base === 1\n        ? base\n        : Math.floor(((base * 2 + iv + Math.floor(ev / 4)) * level) / 100) + level + 10;\n    } else {\n      let mods: [StatID?, StatID?] = [undefined, undefined];\n      if (nature) {\n        const nat = natures.get(toID(nature));\n        mods = [nat?.plus, nat?.minus];\n      }\n      const n =\n        mods[0] === stat && mods[1] === stat\n          ? 1\n          : mods[0] === stat\n            ? 1.1\n            : mods[1] === stat\n              ? 0.9\n              : 1;\n\n      return Math.floor((Math.floor(((base * 2 + iv + Math.floor(ev / 4)) * level) / 100) + 5) * n);\n    }\n  }\n\n  calcStatRBY(stat: StatID, base: number, iv: number, level: number) {\n    return this.calcStatRBYFromDV(stat, base, this.IVToDV(iv), level);\n  }\n\n  calcStatRBYFromDV(stat: StatID, base: number, dv: number, level: number) {\n    if (stat === 'hp') {\n      return Math.floor((((base + dv) * 2 + 63) * level) / 100) + level + 10;\n    } else {\n      return Math.floor((((base + dv) * 2 + 63) * level) / 100) + 5;\n    }\n  }\n\n  getHiddenPowerIVs(gen: Generation, hpType: HPTypeName) {\n    const hp = HP[hpType];\n    if (!hp) return undefined;\n    return gen.num === 2 ? Stats.DVsToIVs(hp.dvs) : hp.ivs;\n  }\n\n  getHiddenPower(gen: Generation, ivs: StatsTable) {\n    const tr = (num: number, bits = 0) => {\n      if (bits) return (num >>> 0) % (2 ** bits);\n      return num >>> 0;\n    };\n    const stats = {hp: 31, atk: 31, def: 31, spe: 31, spa: 31, spd: 31};\n    if (gen.num <= 2) {\n      // Gen 2 specific Hidden Power check. IVs are still treated 0-31 so we get them 0-15\n      const atkDV = tr(ivs.atk / 2);\n      const defDV = tr(ivs.def / 2);\n      const speDV = tr(ivs.spe / 2);\n      const spcDV = tr(ivs.spa / 2);\n      return {\n        type: HP_TYPES[4 * (atkDV % 4) + (defDV % 4)] as TypeName,\n        power: tr(\n          (5 * ((spcDV >> 3) +\n            (2 * (speDV >> 3)) +\n            (4 * (defDV >> 3)) +\n            (8 * (atkDV >> 3))) +\n            (spcDV % 4)) / 2 + 31\n        ),\n      };\n    } else {\n      // Hidden Power check for Gen 3 onwards\n      let hpTypeX = 0;\n      let hpPowerX = 0;\n      let i = 1;\n      for (const s in stats) {\n        hpTypeX += i * (ivs[s as StatID] % 2);\n        hpPowerX += i * (tr(ivs[s as StatID] / 2) % 2);\n        i *= 2;\n      }\n      return {\n        type: HP_TYPES[tr(hpTypeX * 15 / 63)] as TypeName,\n        // After Gen 6, Hidden Power is always 60 base power\n        power: (gen.num && gen.num < 6) ? tr(hpPowerX * 40 / 63) + 30 : 60,\n      };\n    }\n  }\n})();\n","import {\n  Generation,\n  ID,\n  ItemName,\n  MoveCategory,\n  NatureName,\n  StatID,\n  StatsTable,\n  Terrain,\n  TypeName,\n  Weather,\n} from '../data/interface';\nimport {toID} from '../util';\nimport {Field, Side} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Stats} from '../stats';\nimport {RawDesc} from '../desc';\n\nconst EV_ITEMS = [\n  'Macho Brace',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Lens',\n  'Power Weight',\n];\n\nexport function isGrounded(pokemon: Pokemon, field: Field) {\n  return (field.isGravity || pokemon.hasItem('Iron Ball') ||\n    (!pokemon.hasType('Flying') &&\n      !pokemon.hasAbility('Levitate') &&\n      !pokemon.hasItem('Air Balloon')));\n}\n\nexport function getModifiedStat(stat: number, mod: number, gen?: Generation) {\n  if (gen && gen.num < 3) {\n    if (mod >= 0) {\n      const pastGenBoostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\n      stat = Math.floor(stat * pastGenBoostTable[mod]);\n    } else {\n      const numerators = [100, 66, 50, 40, 33, 28, 25];\n      stat = Math.floor((stat * numerators[-mod]) / 100);\n    }\n    return Math.min(999, Math.max(1, stat));\n  }\n\n  const numerator = 0;\n  const denominator = 1;\n  const modernGenBoostTable = [\n    [2, 8],\n    [2, 7],\n    [2, 6],\n    [2, 5],\n    [2, 4],\n    [2, 3],\n    [2, 2],\n    [3, 2],\n    [4, 2],\n    [5, 2],\n    [6, 2],\n    [7, 2],\n    [8, 2],\n  ];\n  stat = OF16(stat * modernGenBoostTable[6 + mod][numerator]);\n  stat = Math.floor(stat / modernGenBoostTable[6 + mod][denominator]);\n\n  return stat;\n}\n\nexport function computeFinalStats(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  field: Field,\n  ...stats: StatID[]\n) {\n  const sides: Array<[Pokemon, Side]> =\n    [[attacker, field.attackerSide], [defender, field.defenderSide]];\n  for (const [pokemon, side] of sides) {\n    for (const stat of stats) {\n      if (stat === 'spe') {\n        pokemon.stats.spe = getFinalSpeed(gen, pokemon, field, side);\n      } else {\n        pokemon.stats[stat] = getModifiedStat(pokemon.rawStats[stat]!, pokemon.boosts[stat]!, gen);\n      }\n    }\n  }\n}\n\nexport function getFinalSpeed(gen: Generation, pokemon: Pokemon, field: Field, side: Side) {\n  const weather = field.weather || '';\n  const terrain = field.terrain;\n  let speed = getModifiedStat(pokemon.rawStats.spe, pokemon.boosts.spe, gen);\n  const speedMods = [];\n\n  if (side.isTailwind) speedMods.push(8192);\n  // Pledge swamp would get applied here when implemented\n  // speedMods.push(1024);\n\n  if ((pokemon.hasAbility('Unburden') && pokemon.abilityOn) ||\n      (pokemon.hasAbility('Chlorophyll') && weather.includes('Sun')) ||\n      (pokemon.hasAbility('Sand Rush') && weather === 'Sand') ||\n      (pokemon.hasAbility('Swift Swim') && weather.includes('Rain')) ||\n      (pokemon.hasAbility('Slush Rush') && ['Hail', 'Snow'].includes(weather)) ||\n      (pokemon.hasAbility('Surge Surfer') && terrain === 'Electric')\n  ) {\n    speedMods.push(8192);\n  } else if (pokemon.hasAbility('Quick Feet') && pokemon.status) {\n    speedMods.push(6144);\n  } else if (pokemon.hasAbility('Slow Start') && pokemon.abilityOn) {\n    speedMods.push(2048);\n  } else if (isQPActive(pokemon, field) && getQPBoostedStat(pokemon, gen) === 'spe') {\n    speedMods.push(6144);\n  }\n\n  if (pokemon.hasItem('Choice Scarf')) {\n    speedMods.push(6144);\n  } else if (pokemon.hasItem('Iron Ball', ...EV_ITEMS)) {\n    speedMods.push(2048);\n  } else if (pokemon.hasItem('Quick Powder') && pokemon.named('Ditto')) {\n    speedMods.push(8192);\n  }\n\n  speed = OF32(pokeRound((speed * chainMods(speedMods, 410, 131172)) / 4096));\n  if (pokemon.hasStatus('par') && !pokemon.hasAbility('Quick Feet')) {\n    speed = Math.floor(OF32(speed * (gen.num < 7 ? 25 : 50)) / 100);\n  }\n\n  speed = Math.min(gen.num <= 2 ? 999 : 10000, speed);\n  return Math.max(0, speed);\n}\n\nexport function getMoveEffectiveness(\n  gen: Generation,\n  move: Move,\n  type: TypeName,\n  isGhostRevealed?: boolean,\n  isGravity?: boolean,\n  isRingTarget?: boolean,\n) {\n  if ((isRingTarget || isGhostRevealed) && type === 'Ghost' && move.hasType('Normal', 'Fighting')) {\n    return 1;\n  } else if ((isRingTarget || isGravity) && type === 'Flying' && move.hasType('Ground')) {\n    return 1;\n  } else if (move.named('Freeze-Dry') && type === 'Water') {\n    return 2;\n  } else if (move.named('Flying Press')) {\n    return (\n      gen.types.get('fighting' as ID)!.effectiveness[type]! *\n      gen.types.get('flying' as ID)!.effectiveness[type]!\n    );\n  } else {\n    return gen.types.get(toID(move.type))!.effectiveness[type]!;\n  }\n}\n\nexport function checkAirLock(pokemon: Pokemon, field: Field) {\n  if (pokemon.hasAbility('Air Lock', 'Cloud Nine')) {\n    field.weather = undefined;\n  }\n}\n\nexport function checkForecast(pokemon: Pokemon, weather?: Weather) {\n  if (pokemon.hasAbility('Forecast') && pokemon.named('Castform')) {\n    switch (weather) {\n    case 'Sun':\n    case 'Harsh Sunshine':\n      pokemon.types = ['Fire'];\n      break;\n    case 'Rain':\n    case 'Heavy Rain':\n      pokemon.types = ['Water'];\n      break;\n    case 'Hail':\n    case 'Snow':\n      pokemon.types = ['Ice'];\n      break;\n    default:\n      pokemon.types = ['Normal'];\n    }\n  }\n}\n\nexport function checkItem(pokemon: Pokemon, magicRoomActive?: boolean) {\n  if (\n    pokemon.hasAbility('Klutz') && !EV_ITEMS.includes(pokemon.item!) ||\n      magicRoomActive\n  ) {\n    pokemon.item = '' as ItemName;\n  }\n}\n\nexport function checkWonderRoom(pokemon: Pokemon, wonderRoomActive?: boolean) {\n  if (wonderRoomActive) {\n    [pokemon.rawStats.def, pokemon.rawStats.spd] = [pokemon.rawStats.spd, pokemon.rawStats.def];\n  }\n}\n\nexport function checkIntimidate(gen: Generation, source: Pokemon, target: Pokemon) {\n  const blocked =\n    target.hasAbility('Clear Body', 'White Smoke', 'Hyper Cutter', 'Full Metal Body') ||\n    // More abilities now block Intimidate in Gen 8+ (DaWoblefet, Cloudy Mistral)\n    (gen.num >= 8 && target.hasAbility('Inner Focus', 'Own Tempo', 'Oblivious', 'Scrappy')) ||\n    target.hasItem('Clear Amulet');\n  if (source.hasAbility('Intimidate') && source.abilityOn && !blocked) {\n    if (target.hasAbility('Contrary', 'Defiant', 'Guard Dog')) {\n      target.boosts.atk = Math.min(6, target.boosts.atk + 1);\n    } else if (target.hasAbility('Simple')) {\n      target.boosts.atk = Math.max(-6, target.boosts.atk - 2);\n    } else {\n      target.boosts.atk = Math.max(-6, target.boosts.atk - 1);\n    }\n    if (target.hasAbility('Competitive')) {\n      target.boosts.spa = Math.min(6, target.boosts.spa + 2);\n    }\n  }\n}\n\nexport function checkDownload(source: Pokemon, target: Pokemon, wonderRoomActive?: boolean) {\n  if (source.hasAbility('Download')) {\n    let def = target.stats.def;\n    let spd = target.stats.spd;\n    // We swap the defense stats again here since Download ignores Wonder Room\n    if (wonderRoomActive) [def, spd] = [spd, def];\n    if (spd <= def) {\n      source.boosts.spa = Math.min(6, source.boosts.spa + 1);\n    } else {\n      source.boosts.atk = Math.min(6, source.boosts.atk + 1);\n    }\n  }\n}\n\nexport function checkIntrepidSword(source: Pokemon, gen: Generation) {\n  if (source.hasAbility('Intrepid Sword') && gen.num < 9) {\n    source.boosts.atk = Math.min(6, source.boosts.atk + 1);\n  }\n}\n\nexport function checkDauntlessShield(source: Pokemon, gen: Generation) {\n  if (source.hasAbility('Dauntless Shield') && gen.num < 9) {\n    source.boosts.def = Math.min(6, source.boosts.def + 1);\n  }\n}\n\nexport function checkInfiltrator(pokemon: Pokemon, affectedSide: Side) {\n  if (pokemon.hasAbility('Infiltrator')) {\n    affectedSide.isReflect = false;\n    affectedSide.isLightScreen = false;\n    affectedSide.isAuroraVeil = false;\n  }\n}\n\nexport function checkSeedBoost(pokemon: Pokemon, field: Field) {\n  if (!pokemon.item) return;\n  if (field.terrain && pokemon.item.includes('Seed')) {\n    const terrainSeed = pokemon.item.substring(0, pokemon.item.indexOf(' ')) as Terrain;\n    if (field.hasTerrain(terrainSeed)) {\n      if (terrainSeed === 'Grassy' || terrainSeed === 'Electric') {\n        pokemon.boosts.def = pokemon.hasAbility('Contrary')\n          ? Math.max(-6, pokemon.boosts.def - 1)\n          : Math.min(6, pokemon.boosts.def + 1);\n      } else {\n        pokemon.boosts.spd = pokemon.hasAbility('Contrary')\n          ? Math.max(-6, pokemon.boosts.spd - 1)\n          : Math.min(6, pokemon.boosts.spd + 1);\n      }\n    }\n  }\n}\n\n// NOTE: We only need to handle guaranteed, damage-relevant boosts here for multi-hit accuracy\nexport function checkMultihitBoost(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  usedWhiteHerb = false\n) {\n  // NOTE: attacker.ability must be Parental Bond for these moves to be multi-hit\n  if (move.named('Gyro Ball', 'Electro Ball') && defender.hasAbility('Gooey', 'Tangling Hair')) {\n    // Gyro Ball (etc) makes contact into Gooey (etc) whenever its inflicting multiple hits because\n    // this can only happen if the attacker ability is Parental Bond (and thus can't be Long Reach)\n    if (attacker.hasItem('White Herb') && !usedWhiteHerb) {\n      desc.attackerItem = attacker.item;\n      usedWhiteHerb = true;\n    } else {\n      attacker.boosts.spe = Math.max(attacker.boosts.spe - 1, -6);\n      attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n      desc.defenderAbility = defender.ability;\n    }\n    // BUG: Technically Sitrus/Figy Berry + Unburden can also affect the defender's speed, but\n    // this goes far beyond what we care to implement (especially once Gluttony is considered) now\n  } else if (move.named('Power-Up Punch')) {\n    attacker.boosts.atk = Math.min(attacker.boosts.atk + 1, 6);\n    attacker.stats.atk = getModifiedStat(attacker.rawStats.atk, attacker.boosts.atk, gen);\n  }\n\n  if (defender.hasAbility('Stamina')) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      defender.boosts.def = Math.min(defender.boosts.def + 1, 6);\n      defender.stats.def = getModifiedStat(defender.rawStats.def, defender.boosts.def, gen);\n      desc.defenderAbility = defender.ability;\n    }\n  } else if (defender.hasAbility('Weak Armor')) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      if (defender.hasItem('White Herb') && !usedWhiteHerb) {\n        desc.defenderItem = defender.item;\n        usedWhiteHerb = true;\n      } else {\n        defender.boosts.def = Math.max(defender.boosts.def - 1, -6);\n        defender.stats.def = getModifiedStat(defender.rawStats.def, defender.boosts.def, gen);\n      }\n    }\n    defender.boosts.spe = Math.min(defender.boosts.spe + 2, 6);\n    defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const simple = attacker.hasAbility('Simple') ? 2 : 1;\n  if (move.dropsStats) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      // No move with dropsStats has fancy logic regarding category here\n      const stat = move.category === 'Special' ? 'spa' : 'atk';\n\n      let boosts = attacker.boosts[stat];\n      if (attacker.hasAbility('Contrary')) {\n        boosts = Math.min(6, boosts + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        boosts = Math.max(-6, boosts - move.dropsStats * simple);\n        if (simple > 1) desc.attackerAbility = attacker.ability;\n      }\n\n      if (attacker.hasItem('White Herb') && attacker.boosts[stat] < 0 && !usedWhiteHerb) {\n        boosts += move.dropsStats * simple;\n        desc.attackerItem = attacker.item;\n        usedWhiteHerb = true;\n      }\n\n      attacker.boosts[stat] = boosts;\n      attacker.stats[stat] = getModifiedStat(attacker.rawStats[stat], defender.boosts[stat], gen);\n    }\n  }\n\n  return usedWhiteHerb;\n}\n\nexport function chainMods(mods: number[], lowerBound: number, upperBound: number) {\n  let M = 4096;\n  for (const mod of mods) {\n    if (mod !== 4096) {\n      M = (M * mod + 2048) >> 12;\n    }\n  }\n  return Math.max(Math.min(M, upperBound), lowerBound);\n}\n\nexport function getBaseDamage(level: number, basePower: number, attack: number, defense: number) {\n  return Math.floor(\n    OF32(\n      Math.floor(\n        OF32(OF32(Math.floor((2 * level) / 5 + 2) * basePower) * attack) / defense\n      ) / 50 + 2\n    )\n  );\n}\n\n/**\n * Get which stat will be boosted by Quark Drive or Protosynthesis\n * In the case that `pokemon.boostedStat` is set, it will always return that stat\n * In the case that two stats have equal value, stat choices will be prioritized\n * in the following order:\n * Attack, Defense, Special Attack, Special Defense, and Speed\n *\n * @param modifiedStats\n * @returns\n */\nexport function getQPBoostedStat(\n  pokemon: Pokemon,\n  gen?: Generation\n): StatID {\n  if (pokemon.boostedStat && pokemon.boostedStat !== 'auto') {\n    return pokemon.boostedStat; // override.\n  }\n  let bestStat: StatID = 'atk';\n  for (const stat of ['def', 'spa', 'spd', 'spe'] as StatID[]) {\n    if (\n      // proto/quark ignore boosts when considering their boost\n      getModifiedStat(pokemon.rawStats[stat], pokemon.boosts[stat], gen) >\n      getModifiedStat(pokemon.rawStats[bestStat], pokemon.boosts[bestStat], gen)\n    ) {\n      bestStat = stat;\n    }\n  }\n  return bestStat;\n}\n\nexport function isQPActive(\n  pokemon: Pokemon,\n  field: Field\n): boolean {\n  if (!pokemon.boostedStat) {\n    return false;\n  }\n\n  const weather = field.weather || '';\n  const terrain = field.terrain;\n  if (\n    (pokemon.hasAbility('Protosynthesis') &&\n      (weather.includes('Sun') || pokemon.abilityOn)) ||\n    (pokemon.hasAbility('Quark Drive') &&\n      (terrain === 'Electric' || pokemon.abilityOn)) ||\n    (pokemon.boostedStat !== 'auto')\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function getFinalDamage(\n  baseAmount: number,\n  i: number,\n  effectiveness: number,\n  isBurned: boolean,\n  stabMod: number,\n  finalMod: number,\n  protect?: boolean\n) {\n  let damageAmount = Math.floor(OF32(baseAmount * (85 + i)) / 100);\n  // If the stabMod would not accomplish anything we avoid applying it because it could cause\n  // us to calculate damage overflow incorrectly (DaWoblefet)\n  if (stabMod !== 4096) damageAmount = OF32(damageAmount * stabMod) / 4096;\n  damageAmount = Math.floor(OF32(pokeRound(damageAmount) * effectiveness));\n\n  if (isBurned) damageAmount = Math.floor(damageAmount / 2);\n  if (protect) damageAmount = pokeRound(OF32(damageAmount * 1024) / 4096);\n  return OF16(pokeRound(Math.max(1, OF32(damageAmount * finalMod) / 4096)));\n}\n\n/**\n * Determines which move category Shell Side Arm should behave as.\n *\n * A simplified formula can be used here compared to what the research\n * suggests as we do not want to implement the random tiebreak element of\n * move - instead we simply default to 'Special' and allow the user to override\n * this by manually adjusting the move's category.\n *\n * See also:\n * {@link https://github.com/smogon/pokemon-showdown/commit/65d2bb5d}\n *\n * @param source Attacking pokemon (after stat modifications)\n * @param target Target pokemon (after stat modifications)\n * @returns 'Physical' | 'Special'\n */\nexport function getShellSideArmCategory(source: Pokemon, target: Pokemon): MoveCategory {\n  const physicalDamage = source.stats.atk / target.stats.def;\n  const specialDamage = source.stats.spa / target.stats.spd;\n  return physicalDamage > specialDamage ? 'Physical' : 'Special';\n}\n\nexport function getWeightFactor(pokemon: Pokemon) {\n  return pokemon.hasAbility('Heavy Metal') ? 2\n    : (pokemon.hasAbility('Light Metal') || pokemon.hasItem('Float Stone')) ? 0.5 : 1;\n}\n\nexport function countBoosts(gen: Generation, boosts: StatsTable) {\n  let sum = 0;\n\n  const STATS: StatID[] = gen.num === 1\n    ? ['atk', 'def', 'spa', 'spe']\n    : ['atk', 'def', 'spa', 'spd', 'spe'];\n\n  for (const stat of STATS) {\n    // Only positive boosts are counted\n    const boost = boosts[stat];\n    if (boost && boost > 0) sum += boost;\n  }\n  return sum;\n}\n\nexport function getEVDescriptionText(\n  gen: Generation,\n  pokemon: Pokemon,\n  stat: 'atk' | 'def' | 'spd' | 'spa',\n  natureName: NatureName\n): string {\n  const nature = gen.natures.get(toID(natureName))!;\n  return (pokemon.evs[stat] +\n    (nature.plus === nature.minus ? ''\n    : nature.plus === stat ? '+'\n    : nature.minus === stat ? '-'\n    : '') + ' ' +\n     Stats.displayStat(stat));\n}\n\nexport function handleFixedDamageMoves(attacker: Pokemon, move: Move) {\n  if (move.named('Seismic Toss', 'Night Shade')) {\n    return attacker.level;\n  } else if (move.named('Dragon Rage')) {\n    return 40;\n  } else if (move.named('Sonic Boom')) {\n    return 20;\n  }\n  return 0;\n}\n\n// Game Freak rounds DOWN on .5\nexport function pokeRound(num: number) {\n  return num % 1 > 0.5 ? Math.ceil(num) : Math.floor(num);\n}\n\n// 16-bit Overflow\nexport function OF16(n: number) {\n  return n > 65535 ? n % 65536 : n;\n}\n\n// 32-bit Overflow\nexport function OF32(n: number) {\n  return n > 4294967295 ? n % 4294967296 : n;\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nconst RBY: string[] = [];\n\nconst GSC: string[] = [];\n\nconst ADV = [\n  'Air Lock',\n  'Arena Trap',\n  'Battle Armor',\n  'Blaze',\n  'Chlorophyll',\n  'Clear Body',\n  'Cloud Nine',\n  'Color Change',\n  'Compound Eyes',\n  'Cute Charm',\n  'Drizzle',\n  'Damp',\n  'Drought',\n  'Early Bird',\n  'Effect Spore',\n  'Flame Body',\n  'Flash Fire',\n  'Forecast',\n  'Guts',\n  'Huge Power',\n  'Hustle',\n  'Hyper Cutter',\n  'Illuminate',\n  'Immunity',\n  'Inner Focus',\n  'Insomnia',\n  'Intimidate',\n  'Keen Eye',\n  'Levitate',\n  'Lightning Rod',\n  'Limber',\n  'Liquid Ooze',\n  'Magma Armor',\n  'Magnet Pull',\n  'Marvel Scale',\n  'Minus',\n  'Natural Cure',\n  'Oblivious',\n  'Overgrow',\n  'Own Tempo',\n  'Pickup',\n  'Plus',\n  'Poison Point',\n  'Pressure',\n  'Pure Power',\n  'Rain Dish',\n  'Rock Head',\n  'Rough Skin',\n  'Run Away',\n  'Sand Stream',\n  'Sand Veil',\n  'Serene Grace',\n  'Shadow Tag',\n  'Shed Skin',\n  'Shell Armor',\n  'Shield Dust',\n  'Soundproof',\n  'Speed Boost',\n  'Static',\n  'Stench',\n  'Sticky Hold',\n  'Sturdy',\n  'Suction Cups',\n  'Swarm',\n  'Swift Swim',\n  'Synchronize',\n  'Thick Fat',\n  'Torrent',\n  'Trace',\n  'Truant',\n  'Vital Spirit',\n  'Volt Absorb',\n  'Water Absorb',\n  'Water Veil',\n  'White Smoke',\n  'Wonder Guard',\n];\n\nconst DPP = ADV.concat([\n  'Adaptability',\n  'Aftermath',\n  'Anger Point',\n  'Anticipation',\n  'Bad Dreams',\n  'Download',\n  'Dry Skin',\n  'Filter',\n  'Flower Gift',\n  'Forewarn',\n  'Frisk',\n  'Gluttony',\n  'Heatproof',\n  'Honey Gather',\n  'Hydration',\n  'Ice Body',\n  'Iron Fist',\n  'Klutz',\n  'Leaf Guard',\n  'Magic Guard',\n  'Mold Breaker',\n  'Motor Drive',\n  'Mountaineer',\n  'Multitype',\n  'No Guard',\n  'Normalize',\n  'Persistent',\n  'Poison Heal',\n  'Quick Feet',\n  'Rebound',\n  'Reckless',\n  'Rivalry',\n  'Scrappy',\n  'Simple',\n  'Skill Link',\n  'Slow Start',\n  'Sniper',\n  'Snow Cloak',\n  'Snow Warning',\n  'Solar Power',\n  'Solid Rock',\n  'Stall',\n  'Steadfast',\n  'Storm Drain',\n  'Super Luck',\n  'Tangled Feet',\n  'Technician',\n  'Tinted Lens',\n  'Unaware',\n  'Unburden',\n]);\n\nconst BW = DPP.concat([\n  'Analytic',\n  'Big Pecks',\n  'Contrary',\n  'Cursed Body',\n  'Defeatist',\n  'Defiant',\n  'Flare Boost',\n  'Friend Guard',\n  'Harvest',\n  'Healer',\n  'Heavy Metal',\n  'Illusion',\n  'Imposter',\n  'Infiltrator',\n  'Iron Barbs',\n  'Light Metal',\n  'Justified',\n  'Magic Bounce',\n  'Moody',\n  'Moxie',\n  'Multiscale',\n  'Mummy',\n  'Overcoat',\n  'Pickpocket',\n  'Poison Touch',\n  'Prankster',\n  'Rattled',\n  'Regenerator',\n  'Sand Force',\n  'Sand Rush',\n  'Sap Sipper',\n  'Sheer Force',\n  'Telepathy',\n  'Teravolt',\n  'Toxic Boost',\n  'Turboblaze',\n  'Unnerve',\n  'Victory Star',\n  'Weak Armor',\n  'Wonder Skin',\n  'Zen Mode',\n]);\n\nconst XY = BW.concat([\n  'Aerilate',\n  'Aura Break',\n  'Aroma Veil',\n  'Bulletproof',\n  'Cheek Pouch',\n  'Competitive',\n  'Dark Aura',\n  'Delta Stream',\n  'Desolate Land',\n  'Fairy Aura',\n  'Flower Veil',\n  'Fur Coat',\n  'Gale Wings',\n  'Gooey',\n  'Grass Pelt',\n  'Magician',\n  'Mega Launcher',\n  'Parental Bond',\n  'Pixilate',\n  'Primordial Sea',\n  'Protean',\n  'Refrigerate',\n  'Stance Change',\n  'Strong Jaw',\n  'Sweet Veil',\n  'Symbiosis',\n  'Tough Claws',\n]);\n\nconst SM = XY.concat([\n  'Battery',\n  'Battle Bond',\n  'Beast Boost',\n  'Berserk',\n  'Comatose',\n  'Corrosion',\n  'Dancer',\n  'Dazzling',\n  'Disguise',\n  'Electric Surge',\n  'Emergency Exit',\n  'Fluffy',\n  'Full Metal Body',\n  'Galvanize',\n  'Grassy Surge',\n  'Innards Out',\n  'Liquid Voice',\n  'Long Reach',\n  'Merciless',\n  'Misty Surge',\n  'Neuroforce',\n  'Power Construct',\n  'Power of Alchemy',\n  'Prism Armor',\n  'Psychic Surge',\n  'Queenly Majesty',\n  'RKS System',\n  'Receiver',\n  'Schooling',\n  'Shadow Shield',\n  'Shields Down',\n  'Slush Rush',\n  'Stamina',\n  'Stakeout',\n  'Steelworker',\n  'Soul-Heart',\n  'Surge Surfer',\n  'Tangling Hair',\n  'Triage',\n  'Water Bubble',\n  'Water Compaction',\n  'Wimp Out',\n]);\n\nconst SS = SM.concat([\n  'As One (Glastrier)',\n  'As One (Spectrier)',\n  'Ball Fetch',\n  'Chilling Neigh',\n  'Cotton Down',\n  'Curious Medicine',\n  'Dauntless Shield',\n  'Dragon\\'s Maw',\n  'Gorilla Tactics',\n  'Grim Neigh',\n  'Gulp Missile',\n  'Hunger Switch',\n  'Ice Face',\n  'Ice Scales',\n  'Intrepid Sword',\n  'Libero',\n  'Mimicry',\n  'Mirror Armor',\n  'Neutralizing Gas',\n  'Pastel Veil',\n  'Perish Body',\n  'Power Spot',\n  'Propeller Tail',\n  'Punk Rock',\n  'Quick Draw',\n  'Ripen',\n  'Sand Spit',\n  'Screen Cleaner',\n  'Stalwart',\n  'Steam Engine',\n  'Steely Spirit',\n  'Transistor',\n  'Unseen Fist',\n  'Wandering Spirit',\n]);\n\nconst SV = SS.concat([\n  'Anger Shell',\n  'Armor Tail',\n  'Beads of Ruin',\n  'Commander',\n  'Costar',\n  'Cud Chew',\n  'Earth Eater',\n  'Electromorphosis',\n  'Good as Gold',\n  'Guard Dog',\n  'Hadron Engine',\n  'Lingering Aroma',\n  'Mycelium Might',\n  'Opportunist',\n  'Orichalcum Pulse',\n  'Protosynthesis',\n  'Purifying Salt',\n  'Quark Drive',\n  'Rocky Payload',\n  'Seed Sower',\n  'Sharpness',\n  'Supreme Overlord',\n  'Sword of Ruin',\n  'Tablets of Ruin',\n  'Thermal Exchange',\n  'Toxic Debris',\n  'Vessel of Ruin',\n  'Well-Baked Body',\n  'Wind Power',\n  'Wind Rider',\n  'Zero to Hero',\n]);\n\nexport const ABILITIES = [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Abilities implements I.Abilities {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return ABILITIES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in ABILITIES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Ability implements I.Ability {\n  readonly kind: 'Ability';\n  readonly id: I.ID;\n  readonly name: I.AbilityName;\n\n  constructor(name: string) {\n    this.kind = 'Ability';\n    this.id = toID(name);\n    this.name = name as I.AbilityName;\n  }\n}\n\nconst ABILITIES_BY_ID: Array<{[id: string]: Ability}> = [];\n\nfor (const abilities of ABILITIES) {\n  const map: {[id: string]: Ability} = {};\n  for (const ability of abilities) {\n    const a = new Ability(ability);\n    map[a.id] = a;\n  }\n  ABILITIES_BY_ID.push(map);\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nconst RBY: string[] = [];\n\nconst GSC = [\n  // 'Berry Juice',\n  // 'Berry',\n  // 'Berserk Gene',\n  // 'Bitter Berry',\n  'Black Belt',\n  'Black Glasses',\n  'Bright Powder',\n  // 'Burnt Berry',\n  'Charcoal',\n  'Dragon Fang',\n  // 'Dragon Scale',\n  'Fast Ball',\n  'Fire Stone',\n  'Focus Band',\n  'Friend Ball',\n  // 'Gold Berry',\n  'Great Ball',\n  'Hard Stone',\n  'Heavy Ball',\n  // 'Ice Berry',\n  'King\\'s Rock',\n  'Leaf Stone',\n  'Leftovers',\n  'Level Ball',\n  'Light Ball',\n  'Love Ball',\n  // 'Lucky Punch',\n  'Lure Ball',\n  'Magnet',\n  // 'Mail',\n  'Master Ball',\n  'Metal Coat',\n  // 'Metal Powder',\n  // 'Mint Berry',\n  // 'Miracle Berry',\n  'Miracle Seed',\n  'Moon Ball',\n  'Moon Stone',\n  // 'Mystery Berry',\n  'Mystic Water',\n  'Never-Melt Ice',\n  // 'Pink Bow',\n  'Poison Barb',\n  // 'Poke Ball',\n  'Pokeball',\n  // 'Polkadot Bow',\n  // 'PRZ Cure Berry',\n  // 'PSN Cure Berry',\n  'Quick Claw',\n  'Safari Ball',\n  'Scope Lens',\n  'Sharp Beak',\n  'Silver Powder',\n  'Soft Sand',\n  'Spell Tag',\n  'Sport Ball',\n  // 'Stick',\n  'Sun Stone',\n  // 'Thick Club',\n  'Thunder Stone',\n  'Twisted Spoon',\n  'Ultra Ball',\n  // 'Up-Grade',\n  'Water Stone',\n];\n\nconst GSC_ONLY = [\n  'Berry',\n  'Berserk Gene',\n  'Bitter Berry',\n  'Burnt Berry',\n  'Ice Berry',\n  'Mint Berry',\n  'Miracle Berry',\n  'Mystery Berry',\n  'PRZ Cure Berry',\n  'Gold Berry',\n  'Pink Bow',\n  'Polkadot Bow',\n  'PSN Cure Berry',\n  'Enigma Berry',\n];\n\nconst ADV = GSC.filter(i => !GSC_ONLY.includes(i)).concat([\n  'Aguav Berry',\n  'Apicot Berry',\n  'Aspear Berry',\n  'Belue Berry',\n  'Bluk Berry',\n  'Cheri Berry',\n  'Chesto Berry',\n  'Choice Band',\n  // 'Claw Fossil',\n  'Cornn Berry',\n  // 'Deep Sea Scale',\n  // 'Deep Sea Tooth',\n  'Dive Ball',\n  // 'Dome Fossil',\n  'Durin Berry',\n  'Enigma Berry',\n  'Figy Berry',\n  'Ganlon Berry',\n  'Grepa Berry',\n  // 'Helix Fossil',\n  'Hondew Berry',\n  'Iapapa Berry',\n  'Kelpsy Berry',\n  'Lansat Berry',\n  'Lax Incense',\n  'Leppa Berry',\n  'Liechi Berry',\n  'Lum Berry',\n  'Luxury Ball',\n  // 'Macho Brace',\n  'Mago Berry',\n  'Magost Berry',\n  'Mental Herb',\n  'Nanab Berry',\n  'Nest Ball',\n  'Net Ball',\n  'Nomel Berry',\n  // 'Old Amber',\n  'Oran Berry',\n  'Pamtre Berry',\n  'Pecha Berry',\n  'Persim Berry',\n  'Petaya Berry',\n  // 'Pinap Berry',\n  'Pomeg Berry',\n  'Premier Ball',\n  'Qualot Berry',\n  // 'Rabuta Berry',\n  'Rawst Berry',\n  'Razz Berry',\n  'Repeat Ball',\n  // 'Root Fossil',\n  'Salac Berry',\n  'Sea Incense',\n  'Shell Bell',\n  'Silk Scarf',\n  'Sitrus Berry',\n  // 'Soul Dew',\n  'Spelon Berry',\n  'Starf Berry',\n  'Tamato Berry',\n  'Timer Ball',\n  'Watmel Berry',\n  'Wepear Berry',\n  'White Herb',\n  'Wiki Berry',\n]);\n\nconst DPP = ADV.concat([\n  'Adamant Orb',\n  // 'Armor Fossil',\n  'Babiri Berry',\n  'Big Root',\n  'Black Sludge',\n  'Charti Berry',\n  'Cherish Ball',\n  'Chilan Berry',\n  'Choice Scarf',\n  'Choice Specs',\n  'Chople Berry',\n  'Coba Berry',\n  'Colbur Berry',\n  'Custap Berry',\n  'Damp Rock',\n  'Dawn Stone',\n  'Destiny Knot',\n  'Draco Plate',\n  'Dread Plate',\n  // 'Dubious Disc',\n  'Dusk Ball',\n  'Dusk Stone',\n  'Earth Plate',\n  // 'Electirizer',\n  'Expert Belt',\n  'Fist Plate',\n  'Flame Orb',\n  'Flame Plate',\n  'Focus Sash',\n  'Full Incense',\n  'Grip Claw',\n  'Griseous Orb',\n  'Haban Berry',\n  'Heal Ball',\n  'Heat Rock',\n  'Icicle Plate',\n  'Icy Rock',\n  'Insect Plate',\n  'Iron Ball',\n  'Iron Plate',\n  'Jaboca Berry',\n  'Kasib Berry',\n  'Kebia Berry',\n  'Lagging Tail',\n  'Life Orb',\n  'Light Clay',\n  'Lustrous Orb',\n  // 'Magmarizer',\n  'Meadow Plate',\n  'Metronome',\n  'Micle Berry',\n  'Mind Plate',\n  'Muscle Band',\n  'Occa Berry',\n  'Odd Incense',\n  'Oval Stone',\n  'Park Ball',\n  'Passho Berry',\n  'Payapa Berry',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Herb',\n  'Power Lens',\n  'Power Weight',\n  // 'Protector',\n  'Quick Ball',\n  // 'Quick Powder',\n  'Rare Bone',\n  'Razor Claw',\n  // 'Razor Fang',\n  // 'Reaper Cloth',\n  'Rindo Berry',\n  'Rock Incense',\n  'Rose Incense',\n  'Rowap Berry',\n  'Shed Shell',\n  'Shiny Stone',\n  'Shuca Berry',\n  // 'Skull Fossil',\n  'Sky Plate',\n  'Smooth Rock',\n  'Splash Plate',\n  'Spooky Plate',\n  'Sticky Barb',\n  'Stone Plate',\n  'Tanga Berry',\n  'Toxic Orb',\n  'Toxic Plate',\n  'Wacan Berry',\n  'Wave Incense',\n  'Wide Lens',\n  'Wise Glasses',\n  'Yache Berry',\n  'Zap Plate',\n  'Zoom Lens',\n]);\n\nconst BW = DPP.concat([\n  'Absorb Bulb',\n  'Air Balloon',\n  'Binding Band',\n  // 'Bug Gem',\n  // 'Burn Drive',\n  'Cell Battery',\n  // 'Chill Drive',\n  // 'Cover Fossil',\n  // 'Dark Gem',\n  // 'Douse Drive',\n  // 'Dragon Gem',\n  'Dream Ball',\n  'Eject Button',\n  // 'Electric Gem',\n  'Eviolite',\n  // 'Fighting Gem',\n  // 'Fire Gem',\n  'Float Stone',\n  // 'Flying Gem',\n  // 'Ghost Gem',\n  // 'Grass Gem',\n  // 'Ground Gem',\n  // 'Ice Gem',\n  'Normal Gem',\n  // 'Plume Fossil',\n  // 'Poison Gem',\n  // 'Prism Scale',\n  // 'Psychic Gem',\n  'Red Card',\n  'Ring Target',\n  // 'Rock Gem',\n  'Rocky Helmet',\n  // 'Shock Drive',\n  // 'Steel Gem',\n  // 'Water Gem',\n]);\n\nexport const MEGA_STONES: {[species: string]: string} = {\n  Absolite: 'Absol',\n  Abomasite: 'Abomasnow',\n  Aerodactylite: 'Aerodactyl',\n  Aggronite: 'Aggron',\n  Alakazite: 'Alakazam',\n  Altarianite: 'Altaria',\n  Ampharosite: 'Ampharos',\n  Audinite: 'Audino',\n  Banettite: 'Banette',\n  Beedrillite: 'Beedrill',\n  Blastoisinite: 'Blastoise',\n  Blazikenite: 'Blaziken',\n  Cameruptite: 'Camerupt',\n  'Charizardite X': 'Charizard',\n  'Charizardite Y': 'Charizard',\n  Crucibellite: 'Crucibelle',\n  Diancite: 'Diancie',\n  Galladite: 'Gallade',\n  Garchompite: 'Garchomp',\n  Gardevoirite: 'Gardevoir',\n  Gengarite: 'Gengar',\n  Glalitite: 'Glalie',\n  Gyaradosite: 'Gyarados',\n  Heracronite: 'Heracross',\n  Houndoominite: 'Houndoom',\n  Kangaskhanite: 'Kangaskhan',\n  Latiasite: 'Latias',\n  Latiosite: 'Latios',\n  Lopunnite: 'Lopunny',\n  Lucarionite: 'Lucario',\n  Manectite: 'Manectric',\n  Mawilite: 'Mawile',\n  Medichamite: 'Medicham',\n  Metagrossite: 'Metagross',\n  'Mewtwonite X': 'Mewtwo',\n  'Mewtwonite Y': 'Mewtwo',\n  Pidgeotite: 'Pidgeot',\n  Pinsirite: 'Pinsir',\n  Sablenite: 'Sableye',\n  Salamencite: 'Salamence',\n  Sceptilite: 'Sceptile',\n  Scizorite: 'Scizor',\n  Sharpedonite: 'Sharpedo',\n  Slowbronite: 'Slowbro',\n  Steelixite: 'Steelix',\n  Swampertite: 'Swampert',\n  Tyranitarite: 'Tyranitar',\n  Venusaurite: 'Venusaur',\n};\n\nconst XY = BW.concat(\n  [\n    // ...Object.keys(MEGA_STONES),\n    'Assault Vest',\n    // 'Blue Orb',\n    // 'Fairy Gem',\n    // 'Jaw Fossil',\n    'Kee Berry',\n    'Luminous Moss',\n    'Maranga Berry',\n    'Pixie Plate',\n    // 'Red Orb',\n    'Roseli Berry',\n    // 'Sachet',\n    'Safety Goggles',\n    // 'Sail Fossil',\n    'Snowball',\n    'Weakness Policy',\n    // 'Whipped Dream',\n  ].sort()\n);\n\nconst SM = XY.filter(i => i !== 'Old Amber').concat([\n  'Adrenaline Orb',\n  // 'Aloraichium Z',\n  'Beast Ball',\n  'Bottle Cap',\n  // 'Bug Memory',\n  // 'Buginium Z',\n  // 'Dark Memory',\n  // 'Darkinium Z',\n  // 'Decidium Z',\n  // 'Dragon Memory',\n  // 'Dragonium Z',\n  // 'Eevium Z',\n  // 'Electric Memory',\n  'Electric Seed',\n  // 'Electrium Z',\n  // 'Fairium Z',\n  // 'Fairy Memory',\n  // 'Fighting Memory',\n  // 'Fightinium Z',\n  // 'Fire Memory',\n  // 'Firium Z',\n  // 'Flying Memory',\n  // 'Flyinium Z',\n  // 'Ghost Memory',\n  // 'Ghostium Z',\n  // 'Gold Bottle Cap',\n  // 'Grass Memory',\n  // 'Grassium Z',\n  'Grassy Seed',\n  // 'Ground Memory',\n  // 'Groundium Z',\n  // 'Ice Memory',\n  'Ice Stone',\n  // 'Icium Z',\n  // 'Incinium Z',\n  // 'Kommonium Z',\n  // 'Lunalium Z',\n  // 'Lycanium Z',\n  // 'Marshadium Z',\n  // 'Mewnium Z',\n  // 'Mimikium Z',\n  'Misty Seed',\n  // 'Normalium Z',\n  // 'Pikanium Z',\n  // 'Pikashunium Z',\n  // 'Poison Memory',\n  // 'Poisonium Z',\n  // 'Primarium Z',\n  'Protective Pads',\n  // 'Psychic Memory',\n  'Psychic Seed',\n  // 'Psychium Z',\n  // 'Rock Memory',\n  // 'Rockium Z',\n  // 'Snorlium Z',\n  // 'Solganium Z',\n  // 'Steel Memory',\n  // 'Steelium Z',\n  // 'Tapunium Z',\n  'Terrain Extender',\n  // 'Ultranecrozium Z',\n  // 'Water Memory',\n  // 'Waterium Z',\n]);\n\nconst SS = SM.concat([\n  // 'Berry Sweet',\n  'Blunder Policy',\n  'Chipped Pot',\n  // 'Clover Sweet',\n  'Cracked Pot',\n  'Eject Pack',\n  // 'Flower Sweet',\n  // 'Fossilized Bird',\n  // 'Fossilized Dino',\n  // 'Fossilized Drake',\n  // 'Fossilized Fish',\n  'Galarica Cuff',\n  'Galarica Wreath',\n  'Heavy-Duty Boots',\n  // 'Leek',\n  // 'Love Sweet',\n  // 'Ribbon Sweet',\n  'Room Service',\n  'Rusted Shield',\n  'Rusted Sword',\n  // 'Star Sweet',\n  // 'Strawberry Sweet',\n  'Sweet Apple',\n  'Tart Apple',\n  'Throat Spray',\n]);\n\n// for (let i = 0; i < 100; i++) {\n//   SS.push(`TR${i < 10 ? `0${i}` : i}`);\n// }\n\n// Added after the TRs to maintain sort order\n// SS.push('Utility Umbrella', 'Vile Vial');\nSS.push('Utility Umbrella');\n\n\n// Because we support National Dex all Past items are added back in\nSS.push(...GSC_ONLY, 'Old Amber');\n\nconst SV = SS.concat([\n  'Adamant Crystal',\n  'Auspicious Armor',\n  'Ability Shield',\n  'Booster Energy',\n  'Clear Amulet',\n  'Covert Cloak',\n  'Loaded Dice',\n  'Malicious Armor',\n  'Mirror Herb',\n  'Punching Glove',\n  'Lustrous Globe',\n  'Griseous Core',\n  'Strange Ball',\n]);\n\nconst BERRIES: {[berry: string]: {t: I.TypeName; p: number}} = {\n  'Aguav Berry': {t: 'Dragon', p: 80},\n  'Apicot Berry': {t: 'Ground', p: 100},\n  'Aspear Berry': {t: 'Ice', p: 80},\n  'Babiri Berry': {t: 'Steel', p: 80},\n  'Belue Berry': {t: 'Electric', p: 100},\n  Berry: {t: 'Poison', p: 80},\n  'Bitter Berry': {t: 'Ground', p: 80},\n  'Bluk Berry': {t: 'Fire', p: 90},\n  'Burnt Berry': {t: 'Ice', p: 80},\n  'Charti Berry': {t: 'Rock', p: 80},\n  'Cheri Berry': {t: 'Fire', p: 80},\n  'Chesto Berry': {t: 'Water', p: 80},\n  'Chilan Berry': {t: 'Normal', p: 80},\n  'Chople Berry': {t: 'Fighting', p: 80},\n  'Coba Berry': {t: 'Flying', p: 80},\n  'Colbur Berry': {t: 'Dark', p: 80},\n  'Cornn Berry': {t: 'Bug', p: 90},\n  'Custap Berry': {t: 'Ghost', p: 100},\n  'Durin Berry': {t: 'Water', p: 100},\n  'Enigma Berry': {t: 'Bug', p: 100},\n  'Figy Berry': {t: 'Bug', p: 80},\n  'Ganlon Berry': {t: 'Ice', p: 100},\n  'Gold Berry': {t: 'Psychic', p: 80},\n  'Grepa Berry': {t: 'Flying', p: 90},\n  'Haban Berry': {t: 'Dragon', p: 80},\n  'Hondew Berry': {t: 'Ground', p: 90},\n  'Iapapa Berry': {t: 'Dark', p: 80},\n  'Ice Berry': {t: 'Grass', p: 80},\n  'Jaboca Berry': {t: 'Dragon', p: 100},\n  'Kasib Berry': {t: 'Ghost', p: 80},\n  'Kebia Berry': {t: 'Poison', p: 80},\n  'Kee Berry': {t: 'Fairy', p: 100},\n  'Kelpsy Berry': {t: 'Fighting', p: 90},\n  'Lansat Berry': {t: 'Flying', p: 100},\n  'Leppa Berry': {t: 'Fighting', p: 80},\n  'Liechi Berry': {t: 'Grass', p: 100},\n  'Lum Berry': {t: 'Flying', p: 80},\n  'Mago Berry': {t: 'Ghost', p: 80},\n  'Magost Berry': {t: 'Rock', p: 90},\n  'Maranga Berry': {t: 'Dark', p: 100},\n  'Micle Berry': {t: 'Rock', p: 100},\n  'Mint Berry': {t: 'Water', p: 80},\n  'Miracle Berry': {t: 'Flying', p: 80},\n  'Mystery Berry': {t: 'Fighting', p: 80},\n  'Nanab Berry': {t: 'Water', p: 90},\n  'Nomel Berry': {t: 'Dragon', p: 90},\n  'Occa Berry': {t: 'Fire', p: 80},\n  'Oran Berry': {t: 'Poison', p: 80},\n  'Pamtre Berry': {t: 'Steel', p: 90},\n  'Passho Berry': {t: 'Water', p: 80},\n  'Payapa Berry': {t: 'Psychic', p: 80},\n  'Pecha Berry': {t: 'Electric', p: 80},\n  'Persim Berry': {t: 'Ground', p: 80},\n  'Petaya Berry': {t: 'Poison', p: 100},\n  'Pinap Berry': {t: 'Grass', p: 90},\n  'Pomeg Berry': {t: 'Ice', p: 90},\n  'PRZ Cure Berry': {t: 'Fire', p: 80},\n  'PSN Cure Berry': {t: 'Electric', p: 80},\n  'Qualot Berry': {t: 'Poison', p: 90},\n  'Rabuta Berry': {t: 'Ghost', p: 90},\n  'Rawst Berry': {t: 'Grass', p: 80},\n  'Razz Berry': {t: 'Steel', p: 80},\n  'Rindo Berry': {t: 'Grass', p: 80},\n  'Roseli Berry': {t: 'Fairy', p: 80},\n  'Rowap Berry': {t: 'Dark', p: 100},\n  'Salac Berry': {t: 'Fighting', p: 100},\n  'Shuca Berry': {t: 'Ground', p: 80},\n  'Sitrus Berry': {t: 'Psychic', p: 80},\n  'Spelon Berry': {t: 'Dark', p: 90},\n  'Starf Berry': {t: 'Psychic', p: 100},\n  'Tamato Berry': {t: 'Psychic', p: 90},\n  'Tanga Berry': {t: 'Bug', p: 80},\n  'Wacan Berry': {t: 'Electric', p: 80},\n  'Watmel Berry': {t: 'Fire', p: 100},\n  'Wepear Berry': {t: 'Electric', p: 90},\n  'Wiki Berry': {t: 'Rock', p: 80},\n  'Yache Berry': {t: 'Ice', p: 80},\n};\n\nexport const ITEMS = [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Items implements I.Items {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return ITEMS_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in ITEMS_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Item implements I.Item {\n  readonly kind: 'Item';\n  readonly id: I.ID;\n  readonly name: I.ItemName;\n  readonly megaEvolves?: I.SpeciesName;\n  readonly isBerry?: boolean;\n  readonly naturalGift?: Readonly<{basePower: number; type: I.TypeName}>;\n\n  constructor(name: string, gen: number) {\n    this.kind = 'Item';\n    this.id = toID(name);\n    this.name = name as I.ItemName;\n    this.megaEvolves = MEGA_STONES[name] as I.SpeciesName;\n    const berry = BERRIES[name];\n    if (berry) {\n      this.isBerry = true;\n      this.naturalGift = {\n        basePower: gen < 6 ? berry.p - 20 : berry.p,\n        type: berry.t,\n      };\n    }\n  }\n}\n\nconst ITEMS_BY_ID: Array<{[id: string]: Item}> = [];\n\nlet gen = 0;\nfor (const items of ITEMS) {\n  const map: {[id: string]: Item} = {};\n  for (const item of items) {\n    const i = new Item(item, gen);\n    map[i.id] = i;\n  }\n  ITEMS_BY_ID.push(map);\n  gen++;\n}\n","import * as I from '../data/interface';\nimport {toID, DeepPartial, assignWithout, extend} from '../util';\n\nexport interface MoveData {\n  readonly name?: string;\n\n  readonly type: I.TypeName;\n  readonly category?: I.MoveCategory;\n  // readonly flags?: I.MoveFlags;\n  readonly secondaries?: boolean;\n  readonly target?: I.MoveTarget;\n  readonly recoil?: [number, number];\n  readonly hasCrashDamage?: boolean;\n  readonly mindBlownRecoil?: boolean;\n  readonly struggleRecoil?: boolean;\n  readonly willCrit?: boolean;\n  readonly drain?: [number, number];\n  readonly priority?: number;\n  readonly self?: I.SelfOrSecondaryEffect | null;\n  readonly ignoreDefensive?: boolean;\n  readonly overrideOffensiveStat?: I.StatIDExceptHP;\n  readonly overrideDefensiveStat?: I.StatIDExceptHP;\n  readonly overrideOffensivePokemon?: 'target' | 'source';\n  readonly overrideDefensivePokemon?: 'target' | 'source';\n  readonly breaksProtect?: boolean;\n  readonly isZ?: boolean;\n  readonly isMax?: boolean;\n  readonly multihit?: number | number[];\n\n  readonly bp: number;\n  readonly zp?: number;\n  readonly maxPower?: number;\n\n  // FIXME: migrate these to flags (above) instead\n  readonly makesContact?: boolean;\n  readonly isPunch?: boolean;\n  readonly isBite?: boolean;\n  readonly isBullet?: boolean;\n  readonly isSound?: boolean;\n  readonly isPulse?: boolean;\n  readonly isSlicing?: boolean;\n  readonly isWind?: boolean;\n}\n\nconst RBY: {[name: string]: MoveData} = {\n  '(No Move)': {bp: 0, category: 'Status', type: 'Normal'},\n  Absorb: {bp: 20, type: 'Grass', drain: [1, 2]},\n  Acid: {bp: 40, type: 'Poison'},\n  Amnesia: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Aurora Beam': {bp: 65, type: 'Ice'},\n  Barrage: {bp: 15, type: 'Normal', multihit: [2, 5]},\n  Bide: {bp: 0, type: '???'},\n  Bind: {bp: 15, type: 'Normal'},\n  Bite: {bp: 60, type: 'Normal'},\n  Blizzard: {bp: 120, type: 'Ice'},\n  Bonemerang: {bp: 50, type: 'Ground', multihit: 2},\n  Bubble: {bp: 20, type: 'Water'},\n  'Bubble Beam': {bp: 65, type: 'Water'},\n  Clamp: {bp: 35, type: 'Water'},\n  'Comet Punch': {bp: 18, type: 'Normal', multihit: [2, 5]},\n  Constrict: {bp: 10, type: 'Normal'},\n  Conversion: {bp: 0, category: 'Status', type: 'Normal'},\n  Counter: {bp: 1, type: 'Fighting'},\n  Crabhammer: {bp: 90, type: 'Water'},\n  'Defense Curl': {bp: 0, category: 'Status', type: 'Normal'},\n  Dig: {bp: 100, type: 'Ground'},\n  Disable: {bp: 0, category: 'Status', type: 'Normal'},\n  'Dizzy Punch': {bp: 70, type: 'Normal'},\n  'Double-Edge': {bp: 100, type: 'Normal', recoil: [25, 100]},\n  'Double Kick': {bp: 30, type: 'Fighting', multihit: 2},\n  'Double Slap': {bp: 15, type: 'Normal', multihit: [2, 5]},\n  'Dragon Rage': {bp: 1, type: 'Dragon'},\n  'Dream Eater': {bp: 100, type: 'Psychic', drain: [1, 2]},\n  Earthquake: {bp: 100, type: 'Ground'},\n  Explosion: {bp: 170, type: 'Normal'},\n  'Fire Blast': {bp: 120, type: 'Fire'},\n  'Fire Spin': {bp: 15, type: 'Fire'},\n  Fissure: {bp: 0, type: 'Ground'},\n  Fly: {bp: 70, type: 'Flying'},\n  'Focus Energy': {bp: 0, category: 'Status', type: 'Normal'},\n  'Fury Attack': {bp: 15, type: 'Normal', multihit: [2, 5]},\n  'Fury Swipes': {bp: 18, type: 'Normal', multihit: [2, 5]},\n  Glare: {bp: 0, category: 'Status', type: 'Normal'},\n  Growth: {bp: 0, category: 'Status', type: 'Normal'},\n  Guillotine: {bp: 0, type: 'Normal'},\n  Gust: {bp: 40, type: 'Normal'},\n  Haze: {bp: 0, category: 'Status', type: 'Ice'},\n  'High Jump Kick': {bp: 85, type: 'Fighting', hasCrashDamage: true},\n  'Horn Drill': {bp: 0, type: 'Normal'},\n  'Hyper Beam': {bp: 150, type: 'Normal'},\n  'Jump Kick': {bp: 70, type: 'Fighting', hasCrashDamage: true},\n  'Karate Chop': {bp: 50, type: 'Normal'},\n  'Leech Seed': {bp: 0, category: 'Status', type: 'Grass'},\n  'Light Screen': {bp: 0, category: 'Status', type: 'Psychic'},\n  Metronome: {bp: 0, category: 'Status', type: 'Normal'},\n  Mimic: {bp: 0, category: 'Status', type: 'Normal'},\n  Minimize: {bp: 0, category: 'Status', type: 'Normal'},\n  'Mirror Move': {bp: 0, category: 'Status', type: 'Flying'},\n  Mist: {bp: 0, category: 'Status', type: 'Ice'},\n  'Night Shade': {bp: 1, type: 'Ghost'},\n  'Petal Dance': {bp: 70, type: 'Grass'},\n  'Pin Missile': {bp: 14, type: 'Bug', multihit: [2, 5]},\n  'Poison Sting': {bp: 15, type: 'Poison'},\n  Psychic: {bp: 90, type: 'Psychic'},\n  Psywave: {bp: 1, type: 'Psychic'},\n  Rage: {bp: 20, type: 'Normal'},\n  'Razor Leaf': {bp: 55, type: 'Grass'},\n  'Razor Wind': {bp: 80, type: 'Normal'},\n  Recover: {bp: 0, category: 'Status', type: 'Normal'},\n  Reflect: {bp: 0, category: 'Status', type: 'Psychic'},\n  Rest: {bp: 0, category: 'Status', type: 'Psychic'},\n  Roar: {bp: 0, category: 'Status', type: 'Normal'},\n  'Rock Slide': {bp: 75, type: 'Rock'},\n  'Rock Throw': {bp: 50, type: 'Rock'},\n  'Sand Attack': {bp: 0, category: 'Status', type: 'Normal'},\n  'Seismic Toss': {bp: 1, type: 'Fighting'},\n  'Self-Destruct': {bp: 130, type: 'Normal'},\n  'Skull Bash': {bp: 100, type: 'Normal'},\n  Slash: {bp: 70, type: 'Normal'},\n  Sludge: {bp: 65, type: 'Poison'},\n  'Soft-Boiled': {bp: 0, category: 'Status', type: 'Normal'},\n  'Solar Beam': {bp: 120, type: 'Grass'},\n  'Sonic Boom': {bp: 1, type: 'Normal'},\n  'Spike Cannon': {bp: 20, type: 'Normal', multihit: [2, 5]},\n  Stomp: {bp: 65, type: 'Normal'},\n  Struggle: {bp: 50, type: 'Normal', recoil: [1, 2]},\n  'Stun Spore': {bp: 0, category: 'Status', type: 'Grass'},\n  Submission: {bp: 80, type: 'Fighting', recoil: [1, 4]},\n  Substitute: {bp: 0, category: 'Status', type: 'Normal'},\n  'Super Fang': {bp: 1, type: 'Normal'},\n  Swift: {bp: 60, type: 'Normal'},\n  'Take Down': {bp: 90, type: 'Normal', recoil: [1, 4]},\n  Thrash: {bp: 90, type: 'Normal'},\n  Thunder: {bp: 120, type: 'Electric'},\n  'Thunder Wave': {bp: 0, category: 'Status', type: 'Electric'},\n  Transform: {bp: 0, category: 'Status', type: 'Normal'},\n  'Tri Attack': {bp: 80, type: 'Normal'},\n  Twineedle: {bp: 25, type: 'Bug', multihit: 2},\n  Whirlwind: {bp: 0, category: 'Status', type: 'Normal'},\n  'Wing Attack': {bp: 35, type: 'Flying'},\n  Wrap: {bp: 15, type: 'Normal'},\n  Growl: {bp: 0, category: 'Status', type: 'Normal'},\n  Leer: {bp: 0, category: 'Status', type: 'Normal'},\n  'Low Kick': {bp: 50, type: 'Fighting'},\n  'Poison Gas': {bp: 0, category: 'Status', type: 'Poison'},\n  'Poison Powder': {bp: 0, category: 'Status', type: 'Poison'},\n  'Sky Attack': {bp: 140, type: 'Flying'},\n  'String Shot': {bp: 0, category: 'Status', type: 'Bug'},\n  Surf: {bp: 95, type: 'Water'},\n  'Tail Whip': {bp: 0, category: 'Status', type: 'Normal'},\n  Toxic: {bp: 0, category: 'Status', type: 'Poison'},\n  Flash: {bp: 0, category: 'Status', type: 'Normal'},\n  Hypnosis: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Leech Life': {bp: 20, type: 'Bug', drain: [1, 2]},\n  'Mega Drain': {bp: 40, type: 'Grass', drain: [1, 2]},\n  'Vine Whip': {bp: 35, type: 'Grass'},\n  Waterfall: {bp: 80, type: 'Water'},\n  Tackle: {bp: 35, type: 'Normal'},\n  'Acid Armor': {bp: 0, category: 'Status', type: 'Poison'},\n  Barrier: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Body Slam': {bp: 85, type: 'Normal'},\n  Flamethrower: {bp: 95, type: 'Fire'},\n  'Hydro Pump': {bp: 120, type: 'Water'},\n  'Ice Beam': {bp: 95, type: 'Ice'},\n  Lick: {bp: 20, type: 'Ghost'},\n  Screech: {bp: 0, category: 'Status', type: 'Normal'},\n  Sing: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sleep Powder': {bp: 0, category: 'Status', type: 'Grass'},\n  Smog: {bp: 20, type: 'Poison'},\n  Spore: {bp: 0, category: 'Status', type: 'Grass'},\n  Supersonic: {bp: 0, category: 'Status', type: 'Normal'},\n  'Swords Dance': {bp: 0, category: 'Status', type: 'Normal'},\n  Thunderbolt: {bp: 95, type: 'Electric'},\n  'Bone Club': {bp: 65, type: 'Ground'},\n  'Egg Bomb': {bp: 100, type: 'Normal'},\n  'Hyper Fang': {bp: 80, type: 'Normal'},\n  Kinesis: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Lovely Kiss': {bp: 0, category: 'Status', type: 'Normal'},\n  Meditate: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Rolling Kick': {bp: 60, type: 'Fighting'},\n  Sharpen: {bp: 0, category: 'Status', type: 'Normal'},\n  Teleport: {bp: 0, category: 'Status', type: 'Psychic'},\n  Agility: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Confuse Ray': {bp: 0, category: 'Status', type: 'Ghost'},\n  Confusion: {bp: 50, type: 'Psychic'},\n  Cut: {bp: 50, type: 'Normal'},\n  'Double Team': {bp: 0, category: 'Status', type: 'Normal'},\n  'Drill Peck': {bp: 80, type: 'Flying'},\n  Ember: {bp: 40, type: 'Fire'},\n  'Fire Punch': {bp: 75, type: 'Fire'},\n  Harden: {bp: 0, category: 'Status', type: 'Normal'},\n  Headbutt: {bp: 70, type: 'Normal'},\n  'Horn Attack': {bp: 65, type: 'Normal'},\n  'Ice Punch': {bp: 75, type: 'Ice'},\n  'Mega Kick': {bp: 120, type: 'Normal'},\n  'Mega Punch': {bp: 80, type: 'Normal'},\n  'Paleo Wave': {bp: 85, type: 'Rock'},\n  'Pay Day': {bp: 40, type: 'Normal'},\n  Peck: {bp: 35, type: 'Flying'},\n  Pound: {bp: 40, type: 'Normal'},\n  Psybeam: {bp: 65, type: 'Psychic'},\n  'Quick Attack': {bp: 40, type: 'Normal', priority: 1},\n  Scratch: {bp: 40, type: 'Normal'},\n  'Shadow Strike': {bp: 80, type: 'Ghost'},\n  Slam: {bp: 80, type: 'Normal'},\n  Smokescreen: {bp: 0, category: 'Status', type: 'Normal'},\n  Splash: {bp: 0, category: 'Status', type: 'Normal'},\n  Strength: {bp: 80, type: 'Normal'},\n  'Thunder Punch': {bp: 75, type: 'Electric'},\n  'Thunder Shock': {bp: 40, type: 'Electric'},\n  'Vise Grip': {bp: 55, type: 'Normal'},\n  'Water Gun': {bp: 40, type: 'Water'},\n  Withdraw: {bp: 0, category: 'Status', type: 'Water'},\n};\n\nconst GSC_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Bide: {type: 'Normal'},\n  Counter: {bp: 0},\n  Dig: {bp: 60},\n  'Double-Edge': {bp: 120},\n  Explosion: {bp: 250},\n  Gust: {type: 'Flying'},\n  'Karate Chop': {type: 'Fighting'},\n  Psywave: {bp: 0},\n  'Self-Destruct': {bp: 200},\n  Struggle: {recoil: [1, 4]},\n  'Dragon Rage': {bp: 0},\n  Bite: {type: 'Dark'},\n  'Night Shade': {bp: 0},\n  'Sand Attack': {type: 'Ground'},\n  'Seismic Toss': {bp: 0},\n  'Sonic Boom': {bp: 0},\n  'Super Fang': {bp: 0},\n  'Wing Attack': {bp: 60},\n  Aeroblast: {bp: 100, type: 'Flying'},\n  Attract: {bp: 0, category: 'Status', type: 'Normal'},\n  'Beat Up': {bp: 10, type: 'Dark'},\n  'Belly Drum': {bp: 0, category: 'Status', type: 'Normal'},\n  'Conversion 2': {bp: 0, category: 'Status', type: 'Normal'},\n  'Cross Chop': {bp: 100, type: 'Fighting'},\n  Curse: {bp: 0, category: 'Status', type: '???'},\n  'Destiny Bond': {bp: 0, category: 'Status', type: 'Ghost'},\n  Detect: {bp: 0, category: 'Status', type: 'Fighting', priority: 2},\n  Encore: {bp: 0, category: 'Status', type: 'Normal'},\n  Endure: {bp: 0, category: 'Status', type: 'Normal', priority: 2},\n  Flail: {bp: 0, type: 'Normal'},\n  Foresight: {bp: 0, category: 'Status', type: 'Normal'},\n  'Future Sight': {bp: 80, type: 'Psychic'},\n  'Heal Bell': {bp: 0, category: 'Status', type: 'Normal'},\n  'Icy Wind': {bp: 55, type: 'Ice'},\n  'Lock-On': {bp: 0, category: 'Status', type: 'Normal'},\n  'Mind Reader': {bp: 0, category: 'Status', type: 'Normal'},\n  'Mirror Coat': {bp: 0, type: 'Psychic'},\n  Moonlight: {bp: 0, category: 'Status', type: 'Normal'},\n  'Morning Sun': {bp: 0, category: 'Status', type: 'Normal'},\n  Nightmare: {bp: 0, category: 'Status', type: 'Ghost'},\n  Outrage: {bp: 90, type: 'Dragon'},\n  'Powder Snow': {bp: 40, type: 'Ice'},\n  Present: {bp: 0, type: 'Normal'},\n  Protect: {bp: 0, category: 'Status', type: 'Normal', priority: 2},\n  'Psych Up': {bp: 0, category: 'Status', type: 'Normal'},\n  Pursuit: {bp: 40, type: 'Dark'},\n  'Rain Dance': {bp: 0, category: 'Status', type: 'Water'},\n  Reversal: {bp: 0, type: 'Fighting'},\n  Safeguard: {bp: 0, category: 'Status', type: 'Normal'},\n  Sandstorm: {bp: 0, category: 'Status', type: 'Rock'},\n  Sketch: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sleep Talk': {bp: 0, category: 'Status', type: 'Normal'},\n  Spikes: {bp: 0, category: 'Status', type: 'Ground'},\n  Spite: {bp: 0, category: 'Status', type: 'Ghost'},\n  'Sunny Day': {bp: 0, category: 'Status', type: 'Fire'},\n  Swagger: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sweet Scent': {bp: 0, category: 'Status', type: 'Normal'},\n  Synthesis: {bp: 0, category: 'Status', type: 'Grass'},\n  Thief: {bp: 40, type: 'Dark'},\n  'Triple Kick': {bp: 10, type: 'Fighting', multihit: [1, 3]},\n  Twister: {bp: 40, type: 'Dragon'},\n  'Ancient Power': {bp: 60, type: 'Rock'},\n  'Bone Rush': {bp: 25, type: 'Ground', multihit: [2, 5]},\n  Crunch: {bp: 80, type: 'Dark'},\n  'Feint Attack': {bp: 60, type: 'Dark'},\n  'Giga Drain': {bp: 60, type: 'Grass', drain: [1, 2]},\n  'Hidden Power': {bp: 0, type: 'Normal'},\n  'Mean Look': {bp: 0, category: 'Status', type: 'Normal'},\n  'Rapid Spin': {bp: 20, type: 'Normal'},\n  'Rock Smash': {bp: 20, type: 'Fighting'},\n  'Spider Web': {bp: 0, category: 'Status', type: 'Bug'},\n  Whirlpool: {bp: 15, type: 'Water'},\n  'Zap Cannon': {bp: 100, type: 'Electric'},\n  'Cotton Spore': {bp: 0, category: 'Status', type: 'Grass'},\n  'Extreme Speed': {bp: 80, type: 'Normal', priority: 1},\n  'Fury Cutter': {bp: 10, type: 'Bug'},\n  Magnitude: {bp: 0, type: 'Ground'},\n  'Milk Drink': {bp: 0, category: 'Status', type: 'Normal'},\n  'Scary Face': {bp: 0, category: 'Status', type: 'Normal'},\n  Charm: {bp: 0, category: 'Status', type: 'Normal'},\n  'Hidden Power Bug': {bp: 70, type: 'Bug'},\n  'Hidden Power Dark': {bp: 70, type: 'Dark'},\n  'Hidden Power Dragon': {bp: 70, type: 'Dragon'},\n  'Hidden Power Electric': {bp: 70, type: 'Electric'},\n  'Hidden Power Fighting': {bp: 70, type: 'Fighting'},\n  'Hidden Power Fire': {bp: 70, type: 'Fire'},\n  'Hidden Power Flying': {bp: 70, type: 'Flying'},\n  'Hidden Power Ghost': {bp: 70, type: 'Ghost'},\n  'Hidden Power Grass': {bp: 70, type: 'Grass'},\n  'Hidden Power Ground': {bp: 70, type: 'Ground'},\n  'Hidden Power Ice': {bp: 70, type: 'Ice'},\n  'Hidden Power Poison': {bp: 70, type: 'Poison'},\n  'Hidden Power Psychic': {bp: 70, type: 'Psychic'},\n  'Hidden Power Rock': {bp: 70, type: 'Rock'},\n  'Hidden Power Steel': {bp: 70, type: 'Steel'},\n  'Hidden Power Water': {bp: 70, type: 'Water'},\n  'Perish Song': {bp: 0, category: 'Status', type: 'Normal'},\n  Snore: {bp: 40, type: 'Normal'},\n  'Sweet Kiss': {bp: 0, category: 'Status', type: 'Normal'},\n  Rollout: {bp: 30, type: 'Rock'},\n  Frustration: {bp: 0, type: 'Normal'},\n  Return: {bp: 0, type: 'Normal'},\n  'Sacred Fire': {bp: 100, type: 'Fire'},\n  'Baton Pass': {bp: 0, category: 'Status', type: 'Normal'},\n  'Dragon Breath': {bp: 60, type: 'Dragon'},\n  'Dynamic Punch': {bp: 100, type: 'Fighting'},\n  'False Swipe': {bp: 40, type: 'Normal'},\n  'Flame Wheel': {bp: 60, type: 'Fire'},\n  'Iron Tail': {bp: 100, type: 'Steel'},\n  'Mach Punch': {bp: 40, type: 'Fighting', priority: 1},\n  Megahorn: {bp: 120, type: 'Bug'},\n  'Metal Claw': {bp: 50, type: 'Steel'},\n  'Mud-Slap': {bp: 20, type: 'Ground'},\n  Octazooka: {bp: 65, type: 'Water'},\n  'Pain Split': {bp: 0, category: 'Status', type: 'Normal'},\n  'Shadow Ball': {bp: 80, type: 'Ghost'},\n  'Sludge Bomb': {bp: 90, type: 'Poison'},\n  Spark: {bp: 65, type: 'Electric'},\n  'Steel Wing': {bp: 70, type: 'Steel'},\n  'Vital Throw': {bp: 70, type: 'Fighting'},\n};\n\nconst GSC: {[name: string]: MoveData} = extend(true, {}, RBY, GSC_PATCH);\n\nconst ADV_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Acid: {target: 'allAdjacentFoes'},\n  'Ancient Power': {makesContact: true},\n  Bide: {makesContact: true},\n  Bind: {makesContact: true},\n  Blizzard: {target: 'allAdjacentFoes'},\n  Clamp: {makesContact: true},\n  'Comet Punch': {makesContact: true},\n  Counter: {makesContact: true},\n  Crunch: {makesContact: true},\n  Detect: {priority: 3},\n  Endure: {priority: 4},\n  Protect: {priority: 3},\n  Dig: {makesContact: true},\n  'Double Kick': {makesContact: true},\n  'Double Slap': {makesContact: true},\n  Explosion: {target: 'allAdjacent'},\n  Flail: {makesContact: true},\n  Fly: {makesContact: true},\n  'Fury Attack': {makesContact: true},\n  'Fury Swipes': {makesContact: true},\n  'High Jump Kick': {makesContact: true},\n  'Jump Kick': {makesContact: true},\n  'Leech Life': {makesContact: true},\n  Outrage: {makesContact: true},\n  'Petal Dance': {makesContact: true},\n  Pursuit: {makesContact: true},\n  Rage: {makesContact: true},\n  'Rapid Spin': {makesContact: true},\n  'Razor Wind': {target: 'allAdjacentFoes'},\n  Reversal: {makesContact: true},\n  'Rock Smash': {makesContact: true},\n  'Self-Destruct': {target: 'allAdjacent'},\n  'Skull Bash': {makesContact: true},\n  Stomp: {makesContact: true},\n  Struggle: {makesContact: true},\n  Surf: {target: 'allAdjacentFoes'},\n  Thief: {makesContact: true},\n  Thrash: {makesContact: true},\n  'Triple Kick': {makesContact: true, multihit: 3},\n  'Vine Whip': {makesContact: true},\n  Waterfall: {makesContact: true},\n  Wrap: {makesContact: true},\n  Crabhammer: {makesContact: true},\n  'Double-Edge': {recoil: [1, 3], makesContact: true},\n  Earthquake: {target: 'allAdjacent'},\n  'Extreme Speed': {makesContact: true},\n  'Fury Cutter': {makesContact: true},\n  'Heal Bell': {isSound: true},\n  Magnitude: {target: 'allAdjacent'},\n  Roar: {isSound: true},\n  Submission: {makesContact: true},\n  Tackle: {makesContact: true},\n  'Take Down': {makesContact: true},\n  Twister: {target: 'allAdjacentFoes'},\n  'Body Slam': {makesContact: true},\n  Bubble: {target: 'allAdjacentFoes'},\n  Growl: {isSound: true, target: 'allAdjacentFoes'},\n  Lick: {makesContact: true},\n  'Perish Song': {isSound: true},\n  Screech: {isSound: true},\n  Sing: {isSound: true},\n  Snore: {isSound: true},\n  'String Shot': {target: 'allAdjacentFoes'},\n  Supersonic: {isSound: true},\n  'Sweet Scent': {target: 'allAdjacentFoes'},\n  Rollout: {makesContact: true},\n  Constrict: {makesContact: true},\n  'Dizzy Punch': {makesContact: true},\n  Frustration: {makesContact: true},\n  'Hyper Fang': {makesContact: true},\n  'Karate Chop': {makesContact: true},\n  'Low Kick': {bp: 0, makesContact: true},\n  Return: {makesContact: true},\n  'Rolling Kick': {makesContact: true},\n  Bite: {makesContact: true},\n  'Cross Chop': {makesContact: true},\n  Cut: {makesContact: true},\n  'Drill Peck': {makesContact: true},\n  'Dynamic Punch': {makesContact: true},\n  'False Swipe': {makesContact: true},\n  'Fire Punch': {makesContact: true},\n  'Flame Wheel': {makesContact: true},\n  Guillotine: {makesContact: true},\n  Headbutt: {makesContact: true},\n  'Horn Attack': {makesContact: true},\n  'Horn Drill': {makesContact: true},\n  'Ice Punch': {makesContact: true},\n  'Icy Wind': {target: 'allAdjacentFoes'},\n  'Iron Tail': {makesContact: true},\n  Leer: {target: 'allAdjacentFoes'},\n  'Mach Punch': {makesContact: true},\n  Megahorn: {makesContact: true},\n  'Mega Kick': {makesContact: true},\n  'Mega Punch': {makesContact: true},\n  'Metal Claw': {makesContact: true},\n  Peck: {makesContact: true},\n  Pound: {makesContact: true},\n  'Powder Snow': {target: 'allAdjacentFoes'},\n  'Quick Attack': {makesContact: true},\n  'Razor Leaf': {target: 'allAdjacentFoes'},\n  'Rock Slide': {target: 'allAdjacentFoes'},\n  Scratch: {makesContact: true},\n  'Seismic Toss': {makesContact: true},\n  'Shadow Strike': {makesContact: true},\n  Slam: {makesContact: true},\n  Slash: {makesContact: true},\n  Spark: {makesContact: true},\n  'Steel Wing': {makesContact: true},\n  Strength: {makesContact: true},\n  'Super Fang': {makesContact: true},\n  Swift: {target: 'allAdjacentFoes'},\n  'Tail Whip': {target: 'allAdjacentFoes'},\n  'Thunder Punch': {makesContact: true},\n  'Vise Grip': {makesContact: true},\n  'Vital Throw': {makesContact: true},\n  'Wing Attack': {makesContact: true},\n  'Arm Thrust': {\n    bp: 15,\n    type: 'Fighting',\n    multihit: [2, 5],\n    makesContact: true,\n  },\n  Assist: {bp: 0, category: 'Status', type: 'Normal'},\n  Astonish: {bp: 30, type: 'Ghost', makesContact: true},\n  Block: {bp: 0, category: 'Status', type: 'Normal'},\n  Bounce: {bp: 85, type: 'Flying', makesContact: true},\n  'Bullet Seed': {bp: 10, type: 'Grass', multihit: [2, 5]},\n  Camouflage: {bp: 0, category: 'Status', type: 'Normal'},\n  Charge: {bp: 0, category: 'Status', type: 'Electric'},\n  Covet: {bp: 40, type: 'Normal'},\n  Dive: {bp: 60, type: 'Water', makesContact: true},\n  'Doom Desire': {bp: 120, type: 'Steel'},\n  Extrasensory: {bp: 80, type: 'Psychic'},\n  'Fake Out': {bp: 40, type: 'Normal', priority: 1},\n  'Follow Me': {bp: 0, category: 'Status', type: 'Normal', priority: 3},\n  Hail: {bp: 0, category: 'Status', type: 'Ice'},\n  'Icicle Spear': {bp: 10, type: 'Ice', multihit: [2, 5]},\n  Ingrain: {bp: 0, category: 'Status', type: 'Grass'},\n  'Knock Off': {bp: 20, type: 'Dark', makesContact: true},\n  'Leaf Blade': {bp: 70, type: 'Grass', makesContact: true},\n  'Magic Coat': {bp: 0, category: 'Status', type: 'Psychic', priority: 4},\n  Memento: {bp: 0, category: 'Status', type: 'Dark'},\n  'Nature Power': {bp: 0, category: 'Status', type: 'Normal'},\n  'Needle Arm': {bp: 60, type: 'Grass', makesContact: true},\n  'Odor Sleuth': {bp: 0, category: 'Status', type: 'Normal'},\n  Overheat: {bp: 140, type: 'Fire', self: {boosts: {spa: -2}}, makesContact: true},\n  Revenge: {bp: 60, type: 'Fighting', makesContact: true},\n  'Rock Blast': {bp: 25, type: 'Rock', multihit: [2, 5]},\n  'Role Play': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Sand Tomb': {bp: 15, type: 'Ground'},\n  'Skill Swap': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Smelling Salts': {bp: 60, type: 'Normal', makesContact: true},\n  'Spit Up': {bp: 0, type: 'Normal'},\n  Stockpile: {bp: 0, category: 'Status', type: 'Normal'},\n  Swallow: {bp: 0, category: 'Status', type: 'Normal'},\n  Taunt: {bp: 0, category: 'Status', type: 'Dark'},\n  'Teeter Dance': {bp: 0, category: 'Status', type: 'Normal', target: 'allAdjacent'},\n  Tickle: {bp: 0, category: 'Status', type: 'Normal'},\n  Trick: {bp: 0, category: 'Status', type: 'Psychic'},\n  Uproar: {bp: 50, type: 'Normal', isSound: true},\n  'Volt Tackle': {bp: 120, type: 'Electric', recoil: [1, 3], makesContact: true},\n  'Weather Ball': {bp: 50, type: 'Normal'},\n  Aromatherapy: {bp: 0, category: 'Status', type: 'Grass'},\n  'Brick Break': {bp: 75, type: 'Fighting', makesContact: true},\n  Endeavor: {bp: 0, type: 'Normal', makesContact: true},\n  'Focus Punch': {bp: 150, type: 'Fighting', makesContact: true},\n  Imprison: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Mud Sport': {bp: 0, category: 'Status', type: 'Ground'},\n  Recycle: {bp: 0, category: 'Status', type: 'Normal'},\n  'Secret Power': {bp: 70, type: 'Normal'},\n  'Sky Uppercut': {bp: 85, type: 'Fighting', makesContact: true},\n  'Slack Off': {bp: 0, category: 'Status', type: 'Normal'},\n  Snatch: {bp: 0, category: 'Status', type: 'Dark', priority: 4},\n  'Tail Glow': {bp: 0, category: 'Status', type: 'Bug'},\n  Torment: {bp: 0, category: 'Status', type: 'Dark'},\n  'Water Sport': {bp: 0, category: 'Status', type: 'Water'},\n  Wish: {bp: 0, category: 'Status', type: 'Normal'},\n  'Air Cutter': {bp: 55, type: 'Flying', target: 'allAdjacentFoes'},\n  Facade: {bp: 70, type: 'Normal', makesContact: true},\n  'Grass Whistle': {bp: 0, category: 'Status', type: 'Grass', isSound: true},\n  'Heat Wave': {bp: 100, type: 'Fire', target: 'allAdjacentFoes'},\n  'Hyper Voice': {bp: 90, type: 'Normal', isSound: true, target: 'allAdjacentFoes'},\n  'Metal Sound': {bp: 0, category: 'Status', type: 'Steel', isSound: true},\n  'Meteor Mash': {bp: 100, type: 'Steel', makesContact: true},\n  'Muddy Water': {bp: 95, type: 'Water', target: 'allAdjacentFoes'},\n  'Poison Fang': {bp: 50, type: 'Poison', makesContact: true},\n  'Rock Tomb': {bp: 50, type: 'Rock'},\n  'Will-O-Wisp': {bp: 0, category: 'Status', type: 'Fire'},\n  'Ice Ball': {bp: 30, type: 'Ice', makesContact: true},\n  'Sheer Cold': {bp: 0, type: 'Ice'},\n  Howl: {bp: 0, category: 'Status', type: 'Normal'},\n  'Luster Purge': {bp: 70, type: 'Psychic'},\n  'Mist Ball': {bp: 70, type: 'Psychic'},\n  'Psycho Boost': {bp: 140, type: 'Psychic', self: {boosts: {spa: -2}}},\n  Refresh: {bp: 0, category: 'Status', type: 'Normal'},\n  'Signal Beam': {bp: 75, type: 'Bug'},\n  'Silver Wind': {bp: 60, type: 'Bug'},\n  'Aerial Ace': {bp: 60, type: 'Flying', makesContact: true},\n  'Blast Burn': {bp: 150, type: 'Fire'},\n  'Blaze Kick': {bp: 85, type: 'Fire', makesContact: true},\n  'Bulk Up': {bp: 0, category: 'Status', type: 'Fighting'},\n  'Calm Mind': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Cosmic Power': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Crush Claw': {bp: 75, type: 'Normal', makesContact: true},\n  'Dragon Claw': {bp: 80, type: 'Dragon', makesContact: true},\n  'Dragon Dance': {bp: 0, category: 'Status', type: 'Dragon'},\n  Eruption: {bp: 150, type: 'Fire', target: 'allAdjacentFoes'},\n  'Fake Tears': {bp: 0, category: 'Status', type: 'Dark'},\n  'Feather Dance': {bp: 0, category: 'Status', type: 'Flying'},\n  Flatter: {bp: 0, category: 'Status', type: 'Dark'},\n  'Frenzy Plant': {bp: 150, type: 'Grass'},\n  Grudge: {bp: 0, category: 'Status', type: 'Ghost'},\n  'Helping Hand': {bp: 0, category: 'Status', type: 'Normal', priority: 5},\n  'Hydro Cannon': {bp: 150, type: 'Water'},\n  'Iron Defense': {bp: 0, category: 'Status', type: 'Steel'},\n  'Magical Leaf': {bp: 60, type: 'Grass'},\n  'Mud Shot': {bp: 55, type: 'Ground'},\n  'Poison Tail': {bp: 50, type: 'Poison', makesContact: true},\n  'Shadow Punch': {bp: 60, type: 'Ghost', makesContact: true},\n  'Shock Wave': {bp: 60, type: 'Electric'},\n  Superpower: {bp: 120, type: 'Fighting', self: {boosts: {atk: -1, def: -1}}, makesContact: true},\n  'Water Pulse': {bp: 60, type: 'Water'},\n  'Water Spout': {bp: 150, type: 'Water', target: 'allAdjacentFoes'},\n  Yawn: {bp: 0, category: 'Status', type: 'Normal'},\n};\n\nconst ADV: {[name: string]: MoveData} = extend(true, {}, GSC, ADV_PATCH);\n\nconst DPP_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Absorb: {category: 'Special'},\n  'Arm Thrust': {category: 'Physical'},\n  Barrage: {category: 'Physical'},\n  'Beat Up': {category: 'Physical'},\n  Bide: {priority: 1, category: 'Physical'},\n  Bind: {category: 'Physical'},\n  'Bone Rush': {category: 'Physical'},\n  Bonemerang: {category: 'Physical'},\n  Bounce: {category: 'Physical'},\n  'Brick Break': {category: 'Physical'},\n  'Bullet Seed': {category: 'Physical'},\n  Clamp: {category: 'Physical'},\n  'Comet Punch': {isPunch: true, category: 'Physical'},\n  Counter: {category: 'Physical'},\n  Covet: {makesContact: true, category: 'Physical'},\n  Crabhammer: {category: 'Physical'},\n  Dig: {bp: 80, category: 'Physical'},\n  Dive: {bp: 80, category: 'Physical'},\n  'Doom Desire': {category: 'Special'},\n  'Double-Edge': {category: 'Physical'},\n  'Double Kick': {category: 'Physical'},\n  'Double Slap': {category: 'Physical'},\n  'Dream Eater': {category: 'Special'},\n  Earthquake: {category: 'Physical'},\n  Endeavor: {category: 'Physical'},\n  Explosion: {category: 'Physical'},\n  'Extreme Speed': {category: 'Physical'},\n  'Fake Out': {makesContact: true, category: 'Physical'},\n  'Fire Spin': {category: 'Special'},\n  Flail: {category: 'Physical'},\n  Fly: {bp: 90, category: 'Physical'},\n  'Focus Punch': {isPunch: true, category: 'Physical'},\n  'Fury Attack': {category: 'Physical'},\n  'Fury Cutter': {category: 'Physical'},\n  'Fury Swipes': {category: 'Physical'},\n  'Future Sight': {category: 'Special'},\n  'Giga Drain': {category: 'Special'},\n  Gust: {category: 'Special'},\n  'High Jump Kick': {bp: 100, category: 'Physical'},\n  'Icicle Spear': {category: 'Physical'},\n  'Jump Kick': {bp: 85, category: 'Physical'},\n  'Knock Off': {category: 'Physical'},\n  'Leech Life': {category: 'Physical'},\n  Magnitude: {category: 'Physical'},\n  'Mega Drain': {category: 'Special'},\n  'Mirror Coat': {category: 'Special'},\n  Outrage: {bp: 120, category: 'Physical'},\n  'Petal Dance': {bp: 90, category: 'Special'},\n  'Pin Missile': {category: 'Physical'},\n  Psywave: {category: 'Special'},\n  Pursuit: {category: 'Physical'},\n  'Rapid Spin': {category: 'Physical'},\n  'Razor Wind': {category: 'Special'},\n  Revenge: {category: 'Physical'},\n  Reversal: {category: 'Physical'},\n  'Rock Blast': {category: 'Physical'},\n  'Sand Tomb': {category: 'Physical'},\n  'Secret Power': {category: 'Physical'},\n  'Self-Destruct': {category: 'Physical'},\n  'Sky Uppercut': {isPunch: true, category: 'Physical'},\n  'Smelling Salts': {category: 'Physical'},\n  'Solar Beam': {category: 'Special'},\n  'Spike Cannon': {category: 'Physical'},\n  'Spit Up': {category: 'Special'},\n  Stomp: {category: 'Physical'},\n  Struggle: {category: 'Physical', struggleRecoil: true},\n  Submission: {category: 'Physical'},\n  Surf: {target: 'allAdjacent', category: 'Special'},\n  Tackle: {category: 'Physical'},\n  'Take Down': {category: 'Physical'},\n  Thief: {category: 'Physical'},\n  Thrash: {category: 'Physical'},\n  Thunder: {category: 'Special'},\n  'Triple Kick': {category: 'Physical'},\n  Twineedle: {category: 'Physical'},\n  Twister: {category: 'Special'},\n  Uproar: {category: 'Special'},\n  'Volt Tackle': {category: 'Physical'},\n  Whirlpool: {category: 'Special'},\n  Wrap: {category: 'Physical'},\n  'Air Cutter': {category: 'Special'},\n  Blizzard: {category: 'Special'},\n  'Body Slam': {category: 'Physical'},\n  Bubble: {category: 'Special'},\n  Extrasensory: {category: 'Special'},\n  Facade: {category: 'Physical'},\n  'Fire Blast': {category: 'Special'},\n  Flamethrower: {category: 'Special'},\n  'Heat Wave': {category: 'Special'},\n  'Hidden Power': {category: 'Special'},\n  'Hidden Power Bug': {category: 'Special'},\n  'Hidden Power Dark': {category: 'Special'},\n  'Hidden Power Dragon': {category: 'Special'},\n  'Hidden Power Electric': {category: 'Special'},\n  'Hidden Power Fighting': {category: 'Special'},\n  'Hidden Power Fire': {category: 'Special'},\n  'Hidden Power Flying': {category: 'Special'},\n  'Hidden Power Ghost': {category: 'Special'},\n  'Hidden Power Grass': {category: 'Special'},\n  'Hidden Power Ground': {category: 'Special'},\n  'Hidden Power Ice': {category: 'Special'},\n  'Hidden Power Poison': {category: 'Special'},\n  'Hidden Power Psychic': {category: 'Special'},\n  'Hidden Power Rock': {category: 'Special'},\n  'Hidden Power Steel': {category: 'Special'},\n  'Hidden Power Water': {category: 'Special'},\n  'Hydro Pump': {category: 'Special'},\n  'Hyper Voice': {category: 'Special'},\n  'Ice Beam': {category: 'Special'},\n  Lick: {category: 'Physical'},\n  'Meteor Mash': {isPunch: true, category: 'Physical'},\n  'Muddy Water': {category: 'Special'},\n  Overheat: {category: 'Special', makesContact: false},\n  'Poison Fang': {isBite: true, category: 'Physical'},\n  'Rock Tomb': {category: 'Physical'},\n  'Skull Bash': {category: 'Physical'},\n  Smog: {category: 'Special'},\n  Snore: {category: 'Special'},\n  Thunderbolt: {category: 'Special'},\n  'Vine Whip': {category: 'Physical'},\n  'Weather Ball': {category: 'Special'},\n  'Ice Ball': {category: 'Physical'},\n  Rollout: {category: 'Physical'},\n  'Sheer Cold': {category: 'Special'},\n  Aeroblast: {category: 'Special'},\n  'Bone Club': {category: 'Physical'},\n  Constrict: {category: 'Physical'},\n  'Dizzy Punch': {isPunch: true, category: 'Physical'},\n  'Dragon Rage': {category: 'Special'},\n  'Egg Bomb': {category: 'Physical'},\n  'Feint Attack': {makesContact: true, category: 'Physical'},\n  Frustration: {category: 'Physical'},\n  'Hyper Fang': {isBite: true, category: 'Physical'},\n  'Karate Chop': {category: 'Physical'},\n  'Low Kick': {category: 'Physical'},\n  'Luster Purge': {category: 'Special'},\n  'Mist Ball': {category: 'Special'},\n  'Needle Arm': {category: 'Physical'},\n  'Psycho Boost': {category: 'Special'},\n  Rage: {category: 'Physical'},\n  Return: {category: 'Physical'},\n  'Rolling Kick': {category: 'Physical'},\n  'Sacred Fire': {category: 'Physical'},\n  'Signal Beam': {category: 'Special'},\n  'Silver Wind': {category: 'Special'},\n  'Sonic Boom': {category: 'Special'},\n  Acid: {category: 'Special'},\n  'Aerial Ace': {category: 'Physical'},\n  'Ancient Power': {category: 'Special', makesContact: false},\n  Astonish: {category: 'Physical'},\n  'Aurora Beam': {category: 'Special'},\n  Bite: {isBite: true, category: 'Physical'},\n  'Blast Burn': {category: 'Special'},\n  'Blaze Kick': {category: 'Physical'},\n  'Bubble Beam': {category: 'Special'},\n  Confusion: {category: 'Special'},\n  'Cross Chop': {category: 'Physical'},\n  Crunch: {isBite: true, category: 'Physical'},\n  'Crush Claw': {category: 'Physical'},\n  Cut: {category: 'Physical'},\n  'Dragon Breath': {category: 'Special'},\n  'Dragon Claw': {category: 'Physical'},\n  'Drill Peck': {category: 'Physical'},\n  'Dynamic Punch': {isPunch: true, category: 'Physical'},\n  Ember: {category: 'Special'},\n  Eruption: {category: 'Special'},\n  'False Swipe': {category: 'Physical'},\n  'Fire Punch': {isPunch: true, category: 'Physical'},\n  Fissure: {category: 'Physical'},\n  'Flame Wheel': {category: 'Physical'},\n  'Frenzy Plant': {category: 'Special'},\n  Guillotine: {category: 'Physical'},\n  Headbutt: {category: 'Physical'},\n  'Horn Attack': {category: 'Physical'},\n  'Horn Drill': {category: 'Physical'},\n  'Hydro Cannon': {category: 'Special'},\n  'Hyper Beam': {category: 'Special'},\n  'Ice Punch': {isPunch: true, category: 'Physical'},\n  'Icy Wind': {category: 'Special'},\n  'Iron Tail': {category: 'Physical'},\n  'Leaf Blade': {bp: 90, category: 'Physical'},\n  'Mach Punch': {isPunch: true, category: 'Physical'},\n  'Magical Leaf': {category: 'Special'},\n  Megahorn: {category: 'Physical'},\n  'Mega Kick': {category: 'Physical'},\n  'Mega Punch': {isPunch: true, category: 'Physical'},\n  'Metal Claw': {category: 'Physical'},\n  'Mud Shot': {category: 'Special'},\n  'Mud-Slap': {category: 'Special'},\n  'Night Shade': {category: 'Special'},\n  Octazooka: {category: 'Special'},\n  'Paleo Wave': {category: 'Special'},\n  'Pay Day': {category: 'Physical'},\n  Peck: {category: 'Physical'},\n  'Poison Sting': {category: 'Physical'},\n  'Poison Tail': {category: 'Physical'},\n  Pound: {category: 'Physical'},\n  'Powder Snow': {category: 'Special'},\n  Present: {category: 'Physical'},\n  Psybeam: {category: 'Special'},\n  Psychic: {category: 'Special'},\n  'Quick Attack': {category: 'Physical'},\n  'Razor Leaf': {category: 'Physical'},\n  'Rock Slide': {category: 'Physical'},\n  'Rock Smash': {bp: 40, category: 'Physical'},\n  'Rock Throw': {category: 'Physical'},\n  Scratch: {category: 'Physical'},\n  'Seismic Toss': {category: 'Physical'},\n  'Shadow Ball': {category: 'Special'},\n  'Shadow Punch': {isPunch: true, category: 'Physical'},\n  'Shadow Strike': {category: 'Physical'},\n  'Shock Wave': {category: 'Special'},\n  'Sky Attack': {category: 'Physical'},\n  Slam: {category: 'Physical'},\n  Slash: {category: 'Physical'},\n  Sludge: {category: 'Special'},\n  'Sludge Bomb': {category: 'Special'},\n  Spark: {category: 'Physical'},\n  'Steel Wing': {category: 'Physical'},\n  Strength: {category: 'Physical'},\n  'Super Fang': {category: 'Physical'},\n  Superpower: {category: 'Physical'},\n  Swift: {category: 'Special'},\n  'Thunder Punch': {isPunch: true, category: 'Physical'},\n  'Thunder Shock': {category: 'Special'},\n  'Tri Attack': {category: 'Special'},\n  'Vise Grip': {category: 'Physical'},\n  'Vital Throw': {category: 'Physical'},\n  Waterfall: {category: 'Physical'},\n  'Water Gun': {category: 'Special'},\n  'Water Pulse': {category: 'Special'},\n  'Water Spout': {category: 'Special'},\n  'Wing Attack': {category: 'Physical'},\n  'Zap Cannon': {bp: 120, category: 'Special'},\n  Acupressure: {bp: 0, type: 'Normal'},\n  'Aqua Ring': {bp: 0, type: 'Water'},\n  Assurance: {\n    bp: 50,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Avalanche: {\n    bp: 60,\n    type: 'Ice',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Brave Bird': {\n    bp: 120,\n    type: 'Flying',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Bug Bite': {\n    bp: 60,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Chatter: {bp: 60, type: 'Flying', isSound: true, category: 'Special'},\n  Copycat: {bp: 0, type: 'Normal'},\n  'Crush Grip': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Defog: {bp: 0, type: 'Flying'},\n  'Double Hit': {\n    bp: 35,\n    type: 'Normal',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Drain Punch': {\n    bp: 60,\n    type: 'Fighting',\n    drain: [1, 2],\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  Embargo: {bp: 0, type: 'Dark'},\n  Feint: {\n    bp: 50,\n    type: 'Normal',\n    priority: 2,\n    breaksProtect: true,\n    category: 'Physical',\n  },\n  'Fire Fang': {\n    bp: 65,\n    type: 'Fire',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Flare Blitz': {\n    bp: 120,\n    type: 'Fire',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  Fling: {bp: 0, type: 'Dark', category: 'Physical'},\n  Gravity: {bp: 0, type: 'Psychic'},\n  'Head Smash': {\n    bp: 150,\n    type: 'Rock',\n    recoil: [1, 2],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Heal Block': {bp: 0, type: 'Psychic', target: 'allAdjacentFoes'},\n  'Healing Wish': {bp: 0, type: 'Psychic'},\n  'Heal Order': {bp: 0, type: 'Bug'},\n  'Last Resort': {\n    bp: 130,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Lucky Chant': {bp: 0, type: 'Normal'},\n  'Lunar Dance': {bp: 0, type: 'Psychic'},\n  'Magma Storm': {bp: 120, type: 'Fire', category: 'Special'},\n  'Magnet Rise': {bp: 0, type: 'Electric'},\n  'Me First': {bp: 0, type: 'Normal'},\n  'Metal Burst': {bp: 0, type: 'Steel', category: 'Physical'},\n  'Miracle Eye': {bp: 0, type: 'Psychic'},\n  'Natural Gift': {bp: 0, type: 'Normal', category: 'Physical'},\n  Payback: {\n    bp: 50,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Pluck: {\n    bp: 60,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Power Trick': {bp: 0, type: 'Psychic'},\n  Roost: {bp: 0, type: 'Flying'},\n  'Stealth Rock': {bp: 0, type: 'Rock'},\n  'Sucker Punch': {\n    bp: 80,\n    type: 'Dark',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Switcheroo: {bp: 0, type: 'Dark'},\n  Tailwind: {bp: 0, type: 'Flying'},\n  'Toxic Spikes': {bp: 0, type: 'Poison'},\n  'Trick Room': {bp: 0, type: 'Psychic'},\n  'U-turn': {\n    bp: 70,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Wake-Up Slap': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Wood Hammer': {\n    bp: 120,\n    type: 'Grass',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Worry Seed': {bp: 0, type: 'Grass'},\n  'Wring Out': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Air Slash': {bp: 75, type: 'Flying', category: 'Special'},\n  'Aura Sphere': {bp: 90, type: 'Fighting', category: 'Special'},\n  'Bug Buzz': {bp: 90, type: 'Bug', isSound: true, category: 'Special'},\n  'Draco Meteor': {bp: 140, type: 'Dragon', self: {boosts: {spa: -2}}, category: 'Special'},\n  'Dragon Pulse': {bp: 90, type: 'Dragon', category: 'Special'},\n  'Dragon Rush': {\n    bp: 100,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Energy Ball': {bp: 80, type: 'Grass', category: 'Special'},\n  'Gunk Shot': {bp: 120, type: 'Poison', category: 'Physical'},\n  'Gyro Ball': {\n    bp: 0,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Leaf Storm': {bp: 140, type: 'Grass', self: {boosts: {spa: -2}}, category: 'Special'},\n  'Power Gem': {bp: 70, type: 'Rock', category: 'Special'},\n  'Psycho Shift': {bp: 0, type: 'Psychic'},\n  'Shadow Force': {\n    bp: 120,\n    type: 'Ghost',\n    breaksProtect: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Dark Void': {bp: 0, type: 'Dark', target: 'allAdjacentFoes'},\n  'Gastro Acid': {bp: 0, type: 'Poison'},\n  Captivate: {bp: 0, type: 'Normal', target: 'allAdjacentFoes'},\n  'Grass Knot': {\n    bp: 0,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Heart Swap': {bp: 0, type: 'Psychic'},\n  Judgment: {bp: 100, type: 'Normal', category: 'Special'},\n  'Magnet Bomb': {bp: 60, type: 'Steel', category: 'Physical'},\n  'Mirror Shot': {bp: 65, type: 'Steel', category: 'Special'},\n  'Mud Bomb': {bp: 65, type: 'Ground', category: 'Special'},\n  'Ominous Wind': {bp: 60, type: 'Ghost', category: 'Special'},\n  Punishment: {\n    bp: 0,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Roar of Time': {bp: 150, type: 'Dragon', category: 'Special'},\n  'Rock Climb': {\n    bp: 90,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Seed Flare': {bp: 120, type: 'Grass', category: 'Special'},\n  'Spacial Rend': {bp: 100, type: 'Dragon', category: 'Special'},\n  'Trump Card': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Aqua Jet': {\n    bp: 40,\n    type: 'Water',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Aqua Tail': {\n    bp: 90,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Attack Order': {bp: 90, type: 'Bug', category: 'Physical'},\n  Brine: {bp: 65, type: 'Water', category: 'Special'},\n  'Bullet Punch': {\n    bp: 40,\n    type: 'Steel',\n    priority: 1,\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  'Charge Beam': {bp: 50, type: 'Electric', category: 'Special'},\n  'Close Combat': {\n    bp: 120,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Cross Poison': {\n    bp: 70,\n    type: 'Poison',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Dark Pulse': {bp: 80, type: 'Dark', category: 'Special'},\n  'Defend Order': {bp: 0, type: 'Bug'},\n  Discharge: {\n    bp: 80,\n    type: 'Electric',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Earth Power': {bp: 90, type: 'Ground', category: 'Special'},\n  'Flash Cannon': {bp: 80, type: 'Steel', category: 'Special'},\n  'Focus Blast': {bp: 120, type: 'Fighting', category: 'Special'},\n  'Force Palm': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Giga Impact': {\n    bp: 150,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Guard Swap': {bp: 0, type: 'Psychic'},\n  'Hammer Arm': {\n    bp: 100,\n    type: 'Fighting',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  'Ice Fang': {\n    bp: 65,\n    type: 'Ice',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Ice Shard': {bp: 40, type: 'Ice', priority: 1, category: 'Physical'},\n  'Iron Head': {\n    bp: 80,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Lava Plume': {\n    bp: 80,\n    type: 'Fire',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Nasty Plot': {bp: 0, type: 'Dark'},\n  'Night Slash': {\n    bp: 70,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Poison Jab': {\n    bp: 80,\n    type: 'Poison',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Power Swap': {bp: 0, type: 'Psychic'},\n  'Power Whip': {\n    bp: 120,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Psycho Cut': {bp: 70, type: 'Psychic', category: 'Physical'},\n  'Rock Polish': {bp: 0, type: 'Rock'},\n  'Rock Wrecker': {bp: 150, type: 'Rock', category: 'Physical'},\n  'Seed Bomb': {bp: 80, type: 'Grass', category: 'Physical'},\n  'Shadow Claw': {\n    bp: 70,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Shadow Sneak': {\n    bp: 40,\n    type: 'Ghost',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Stone Edge': {bp: 100, type: 'Rock', category: 'Physical'},\n  'Thunder Fang': {\n    bp: 65,\n    type: 'Electric',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Vacuum Wave': {\n    bp: 40,\n    type: 'Fighting',\n    priority: 1,\n    category: 'Special',\n  },\n  'X-Scissor': {\n    bp: 80,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Zen Headbutt': {\n    bp: 80,\n    type: 'Psychic',\n    makesContact: true,\n    category: 'Physical',\n  },\n};\n\nconst DPP: {[name: string]: MoveData} = extend(true, {}, ADV, DPP_PATCH);\n\nconst BW_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Air Slash': {secondaries: true},\n  Blizzard: {secondaries: true},\n  'Body Slam': {secondaries: true},\n  Bounce: {secondaries: true},\n  Bubble: {secondaries: true},\n  'Brave Bird': {recoil: [33, 100]},\n  'Bug Buzz': {secondaries: true},\n  Chatter: {secondaries: true},\n  Covet: {bp: 60},\n  'Dragon Rush': {secondaries: true},\n  'Drain Punch': {bp: 75},\n  'Energy Ball': {secondaries: true},\n  Extrasensory: {secondaries: true},\n  Feint: {bp: 30},\n  Detect: {priority: 4},\n  'Double-Edge': {recoil: [33, 100]},\n  Protect: {priority: 4},\n  'Fire Blast': {secondaries: true},\n  'Fire Spin': {bp: 35},\n  Flamethrower: {secondaries: true},\n  'Fury Cutter': {bp: 20},\n  'Future Sight': {bp: 100, type: 'Psychic'},\n  'Giga Drain': {bp: 75},\n  'Gunk Shot': {secondaries: true},\n  'Heat Wave': {secondaries: true},\n  'Ice Beam': {secondaries: true},\n  Lick: {secondaries: true},\n  'Meteor Mash': {secondaries: true},\n  'Muddy Water': {secondaries: true},\n  Overheat: {},\n  'Poison Fang': {secondaries: true},\n  'Poison Gas': {target: 'allAdjacentFoes'},\n  'Rock Tomb': {secondaries: true},\n  'Sand Tomb': {bp: 35},\n  'Secret Power': {secondaries: true},\n  Smog: {secondaries: true},\n  Snore: {secondaries: true},\n  Stomp: {secondaries: true},\n  Thunder: {secondaries: true},\n  Thunderbolt: {secondaries: true},\n  Uproar: {bp: 90},\n  Whirlpool: {bp: 35},\n  'Petal Dance': {bp: 120},\n  Tackle: {bp: 50},\n  Thrash: {bp: 120},\n  'Bone Club': {secondaries: true},\n  Constrict: {secondaries: true},\n  'Dizzy Punch': {secondaries: true},\n  'Hyper Fang': {secondaries: true},\n  'Jump Kick': {bp: 100},\n  'Luster Purge': {secondaries: true},\n  'Mirror Shot': {secondaries: true},\n  'Mist Ball': {secondaries: true},\n  'Mud Bomb': {secondaries: true},\n  'Needle Arm': {secondaries: true},\n  'Ominous Wind': {secondaries: true},\n  'Rock Climb': {secondaries: true},\n  'Rolling Kick': {secondaries: true},\n  'Sacred Fire': {secondaries: true},\n  'Seed Flare': {secondaries: true},\n  'Signal Beam': {secondaries: true},\n  'Silver Wind': {secondaries: true},\n  Twineedle: {secondaries: true},\n  Acid: {secondaries: true},\n  'Ancient Power': {secondaries: true},\n  Astonish: {secondaries: true},\n  'Aurora Beam': {secondaries: true},\n  'Beat Up': {bp: 0},\n  Bite: {secondaries: true},\n  'Blaze Kick': {secondaries: true},\n  'Bubble Beam': {secondaries: true},\n  'Bullet Seed': {bp: 25},\n  'Charge Beam': {secondaries: true},\n  Confusion: {secondaries: true},\n  'Cross Poison': {secondaries: true},\n  Crunch: {secondaries: true},\n  'Crush Claw': {secondaries: true},\n  Curse: {type: 'Ghost'},\n  'Dark Pulse': {secondaries: true},\n  Discharge: {secondaries: true},\n  'Doom Desire': {bp: 140},\n  'Dragon Breath': {secondaries: true},\n  'Dynamic Punch': {secondaries: true},\n  'Earth Power': {secondaries: true},\n  'Extreme Speed': {priority: 2},\n  Ember: {secondaries: true},\n  'Fake Out': {secondaries: true, priority: 3},\n  'Fire Fang': {secondaries: true},\n  'Fire Punch': {secondaries: true},\n  'Flame Wheel': {secondaries: true},\n  'Flare Blitz': {secondaries: true, recoil: [33, 100]},\n  'Flash Cannon': {secondaries: true},\n  'Focus Blast': {secondaries: true},\n  'Force Palm': {secondaries: true},\n  Headbutt: {secondaries: true},\n  'High Jump Kick': {bp: 130},\n  'Ice Fang': {secondaries: true},\n  'Ice Punch': {secondaries: true},\n  'Icicle Spear': {bp: 25},\n  'Icy Wind': {secondaries: true},\n  'Iron Head': {secondaries: true},\n  'Iron Tail': {secondaries: true},\n  'Last Resort': {bp: 140},\n  'Lava Plume': {secondaries: true},\n  'Metal Claw': {secondaries: true},\n  'Mud Shot': {secondaries: true},\n  'Mud-Slap': {secondaries: true},\n  Octazooka: {secondaries: true},\n  'Paleo Wave': {secondaries: true},\n  'Poison Jab': {secondaries: true},\n  'Poison Sting': {secondaries: true},\n  'Poison Tail': {secondaries: true},\n  'Powder Snow': {secondaries: true},\n  Psybeam: {secondaries: true},\n  Psychic: {secondaries: true},\n  'Rock Slide': {secondaries: true},\n  'Rock Smash': {secondaries: true},\n  'Shadow Ball': {secondaries: true},\n  'Shadow Strike': {secondaries: true},\n  'Sky Attack': {secondaries: true},\n  Sludge: {secondaries: true},\n  'Sludge Bomb': {secondaries: true},\n  Spark: {secondaries: true},\n  'Steel Wing': {secondaries: true},\n  'Thunder Fang': {secondaries: true},\n  'Thunder Punch': {secondaries: true},\n  'Thunder Shock': {secondaries: true},\n  'Tri Attack': {secondaries: true},\n  Twister: {secondaries: true},\n  'Volt Tackle': {secondaries: true, recoil: [33, 100]},\n  'Wood Hammer': {recoil: [33, 100]},\n  Waterfall: {secondaries: true},\n  'Water Pulse': {secondaries: true},\n  'Zap Cannon': {secondaries: true},\n  'Zen Headbutt': {secondaries: true},\n  Autotomize: {bp: 0, type: 'Steel'},\n  Bestow: {bp: 0, type: 'Normal'},\n  'Echoed Voice': {bp: 40, type: 'Normal', isSound: true, category: 'Special'},\n  'Electro Ball': {bp: 0, type: 'Electric', category: 'Special'},\n  Entrainment: {bp: 0, type: 'Normal'},\n  'Final Gambit': {\n    bp: 0,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Fire Pledge': {bp: 50, type: 'Fire', category: 'Special'},\n  'Frost Breath': {bp: 40, type: 'Ice', willCrit: true, category: 'Special'},\n  'Grass Pledge': {bp: 50, type: 'Grass', category: 'Special'},\n  'Heal Pulse': {bp: 0, type: 'Psychic'},\n  'Heat Crash': {\n    bp: 0,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Hex: {bp: 50, type: 'Ghost', category: 'Special'},\n  'Horn Leech': {\n    bp: 75,\n    type: 'Grass',\n    drain: [1, 2],\n    makesContact: true,\n    category: 'Physical',\n  },\n  Hurricane: {\n    bp: 120,\n    type: 'Flying',\n    category: 'Special',\n    secondaries: true,\n  },\n  Incinerate: {bp: 30, type: 'Fire', target: 'allAdjacentFoes', category: 'Special'},\n  'Low Sweep': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Magic Room': {bp: 0, type: 'Psychic'},\n  'Quick Guard': {bp: 0, type: 'Fighting', priority: 3},\n  'Rage Powder': {bp: 0, type: 'Bug', priority: 3},\n  'Relic Song': {\n    bp: 75,\n    type: 'Normal',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Round: {bp: 60, type: 'Normal', isSound: true, category: 'Special'},\n  'Sacred Sword': {\n    bp: 90,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n  },\n  Scald: {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Simple Beam': {bp: 0, type: 'Normal'},\n  'Sky Drop': {\n    bp: 60,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Snarl: {\n    bp: 55,\n    type: 'Dark',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Soak: {bp: 0, type: 'Water'},\n  Steamroller: {\n    bp: 65,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Storm Throw': {\n    bp: 40,\n    type: 'Fighting',\n    willCrit: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Struggle Bug': {\n    bp: 30,\n    type: 'Bug',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Synchronoise: {\n    bp: 70,\n    type: 'Psychic',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Techno Blast': {bp: 85, type: 'Normal', category: 'Special'},\n  Telekinesis: {bp: 0, type: 'Psychic'},\n  'Water Pledge': {bp: 50, type: 'Water', category: 'Special'},\n  'Wide Guard': {bp: 0, type: 'Rock', priority: 3},\n  'Wonder Room': {bp: 0, type: 'Psychic'},\n  'Ally Switch': {bp: 0, type: 'Psychic', priority: 1},\n  'Flame Burst': {bp: 70, type: 'Fire', category: 'Special'},\n  'Heavy Slam': {\n    bp: 0,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Reflect Type': {bp: 0, type: 'Normal'},\n  'Volt Switch': {bp: 70, type: 'Electric', category: 'Special'},\n  'Chip Away': {\n    bp: 70,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n  },\n  'Fiery Dance': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Head Charge': {\n    bp: 120,\n    type: 'Normal',\n    recoil: [1, 4],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Heart Stamp': {\n    bp: 60,\n    type: 'Psychic',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Quash: {bp: 0, type: 'Dark'},\n  'Searing Shot': {\n    bp: 100,\n    type: 'Fire',\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Acid Spray': {\n    bp: 40,\n    type: 'Poison',\n    category: 'Special',\n    secondaries: true,\n  },\n  Acrobatics: {\n    bp: 55,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'After You': {bp: 0, type: 'Normal'},\n  'Blue Flare': {\n    bp: 130,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Bolt Strike': {\n    bp: 130,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Bulldoze: {\n    bp: 60,\n    type: 'Ground',\n    target: 'allAdjacent',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Circle Throw': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Clear Smog': {bp: 50, type: 'Poison', category: 'Special'},\n  Coil: {bp: 0, type: 'Poison'},\n  'Cotton Guard': {bp: 0, type: 'Grass'},\n  'Dragon Tail': {\n    bp: 60,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Drill Run': {\n    bp: 80,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Dual Chop': {\n    bp: 40,\n    type: 'Dragon',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Electroweb: {\n    bp: 55,\n    type: 'Electric',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Flame Charge': {\n    bp: 50,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Foul Play': {\n    bp: 95,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    overrideOffensivePokemon: 'target',\n  },\n  'Freeze Shock': {\n    bp: 140,\n    type: 'Ice',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Fusion Bolt': {bp: 100, type: 'Electric', category: 'Physical'},\n  'Fusion Flare': {bp: 100, type: 'Fire', category: 'Special'},\n  'Gear Grind': {\n    bp: 50,\n    type: 'Steel',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Glaciate: {\n    bp: 65,\n    type: 'Ice',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Guard Split': {bp: 0, type: 'Psychic'},\n  'Hone Claws': {bp: 0, type: 'Dark'},\n  'Ice Burn': {\n    bp: 140,\n    type: 'Ice',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Icicle Crash': {\n    bp: 85,\n    type: 'Ice',\n    category: 'Physical',\n    secondaries: true,\n  },\n  Inferno: {\n    bp: 100,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Leaf Tornado': {\n    bp: 65,\n    type: 'Grass',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Night Daze': {\n    bp: 85,\n    type: 'Dark',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Power Split': {bp: 0, type: 'Psychic'},\n  Psyshock: {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  Psystrike: {\n    bp: 100,\n    type: 'Psychic',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  'Quiver Dance': {bp: 0, type: 'Bug'},\n  'Razor Shell': {\n    bp: 75,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Retaliate: {\n    bp: 70,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Secret Sword': {\n    bp: 85,\n    type: 'Fighting',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  'Shell Smash': {bp: 0, type: 'Normal'},\n  'Shift Gear': {bp: 0, type: 'Steel'},\n  'Sludge Wave': {\n    bp: 95,\n    type: 'Poison',\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Smack Down': {bp: 50, type: 'Rock', category: 'Physical'},\n  'Stored Power': {bp: 20, type: 'Psychic', category: 'Special'},\n  'Tail Slap': {\n    bp: 25,\n    type: 'Normal',\n    multihit: [2, 5],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'V-create': {\n    bp: 180,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Venoshock: {bp: 65, type: 'Poison', category: 'Special'},\n  'Wild Charge': {\n    bp: 90,\n    type: 'Electric',\n    recoil: [1, 4],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Work Up': {bp: 0, type: 'Normal'},\n};\n\nconst BW: {[name: string]: MoveData} = extend(true, {}, DPP, BW_PATCH);\n\ndelete BW['Faint Attack'];\n\nconst XY_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Ice Ball': {isBullet: true},\n  'Knock Off': {bp: 65},\n  Thief: {bp: 60},\n  Barrage: {isBullet: true},\n  Bubble: {bp: 40},\n  Chatter: {bp: 65},\n  'Egg Bomb': {isBullet: true},\n  'Follow Me': {priority: 2},\n  Hurricane: {bp: 110},\n  'Hidden Power': {bp: 60},\n  'Hidden Power Bug': {bp: 60},\n  'Hidden Power Dark': {bp: 60},\n  'Hidden Power Dragon': {bp: 60},\n  'Hidden Power Electric': {bp: 60},\n  'Hidden Power Fighting': {bp: 60},\n  'Hidden Power Fire': {bp: 60},\n  'Hidden Power Flying': {bp: 60},\n  'Hidden Power Ghost': {bp: 60},\n  'Hidden Power Grass': {bp: 60},\n  'Hidden Power Ground': {bp: 60},\n  'Hidden Power Ice': {bp: 60},\n  'Hidden Power Poison': {bp: 60},\n  'Hidden Power Psychic': {bp: 60},\n  'Hidden Power Rock': {bp: 60},\n  'Hidden Power Steel': {bp: 60},\n  'Hidden Power Water': {bp: 60},\n  'Magma Storm': {bp: 100},\n  'Magnet Bomb': {isBullet: true},\n  'Mist Ball': {isBullet: true},\n  Moonlight: {type: 'Fairy'},\n  'Mud Bomb': {isBullet: true},\n  'Searing Shot': {isBullet: true},\n  'Smelling Salts': {bp: 70},\n  Synchronoise: {bp: 120},\n  'Techno Blast': {bp: 120},\n  Thunder: {bp: 110},\n  'Wake-Up Slap': {bp: 70},\n  'Acid Spray': {isBullet: true},\n  'Air Cutter': {bp: 60},\n  'Ancient Power': {},\n  Assurance: {bp: 60},\n  'Aura Sphere': {bp: 80, isBullet: true, isPulse: true},\n  Blizzard: {bp: 110},\n  'Bullet Seed': {isBullet: true},\n  Charm: {type: 'Fairy'},\n  'Cotton Spore': {target: 'allAdjacentFoes'},\n  Crabhammer: {bp: 100},\n  'Dark Pulse': {isPulse: true},\n  'Draco Meteor': {bp: 130},\n  'Dragon Pulse': {bp: 85, isPulse: true},\n  'Electro Ball': {isBullet: true},\n  'Energy Ball': {bp: 90, isBullet: true},\n  'Final Gambit': {makesContact: false},\n  'Fire Blast': {bp: 110},\n  'Fire Pledge': {bp: 80},\n  Flamethrower: {bp: 90},\n  'Focus Blast': {isBullet: true},\n  'Frost Breath': {bp: 60},\n  'Fury Cutter': {bp: 40},\n  'Future Sight': {bp: 120},\n  'Grass Pledge': {bp: 80},\n  'Gyro Ball': {isBullet: true},\n  'Heal Pulse': {isPulse: true},\n  'Heat Wave': {bp: 95},\n  Hex: {bp: 65},\n  'Hydro Pump': {bp: 110},\n  'Ice Beam': {bp: 90},\n  Incinerate: {bp: 60},\n  'Leaf Storm': {bp: 130},\n  Lick: {bp: 30},\n  'Low Sweep': {bp: 65},\n  'Meteor Mash': {bp: 90},\n  'Muddy Water': {bp: 90},\n  Octazooka: {isBullet: true},\n  Overheat: {bp: 130},\n  'Pin Missile': {bp: 25},\n  'Power Gem': {bp: 80},\n  'Rage Powder': {priority: 2},\n  'Rock Tomb': {bp: 60},\n  'Rock Wrecker': {isBullet: true},\n  'Seed Bomb': {isBullet: true},\n  'Shadow Ball': {isBullet: true},\n  'Skull Bash': {bp: 130},\n  'Sludge Bomb': {isBullet: true},\n  Smog: {bp: 30},\n  Snore: {bp: 50},\n  'Storm Throw': {bp: 60},\n  'Struggle Bug': {bp: 50},\n  Surf: {bp: 90},\n  'Sweet Kiss': {type: 'Fairy'},\n  Thunderbolt: {bp: 90},\n  'Vine Whip': {bp: 45},\n  'Water Pledge': {bp: 80},\n  'Water Pulse': {isPulse: true},\n  'Weather Ball': {isBullet: true},\n  'Zap Cannon': {isBullet: true},\n  'Diamond Storm': {\n    bp: 100,\n    type: 'Rock',\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Fell Stinger': {\n    bp: 30,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Flying Press': {\n    bp: 80,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Hyperspace Fury': {\n    bp: 100,\n    type: 'Dark',\n    breaksProtect: true,\n    category: 'Physical',\n  },\n  'Hyperspace Hole': {\n    bp: 80,\n    type: 'Psychic',\n    breaksProtect: true,\n    category: 'Special',\n  },\n  'King\\'s Shield': {bp: 0, type: 'Steel', priority: 4},\n  'Misty Terrain': {bp: 0, type: 'Fairy'},\n  'Mystical Fire': {\n    bp: 65,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Parabolic Charge': {\n    bp: 50,\n    type: 'Electric',\n    drain: [1, 2],\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Parting Shot': {bp: 0, type: 'Dark', isSound: true},\n  'Phantom Force': {\n    bp: 90,\n    type: 'Ghost',\n    breaksProtect: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Powder: {bp: 0, type: 'Bug', priority: 1},\n  'Spiky Shield': {bp: 0, type: 'Grass', priority: 4},\n  'Thousand Arrows': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Thousand Waves': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Water Shuriken': {\n    bp: 15,\n    type: 'Water',\n    multihit: [2, 5],\n    priority: 1,\n    category: 'Physical',\n  },\n  'Dragon Ascent': {\n    bp: 120,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Electric Terrain': {bp: 0, type: 'Electric'},\n  Geomancy: {bp: 0, type: 'Fairy'},\n  'Grassy Terrain': {bp: 0, type: 'Grass'},\n  'Ion Deluge': {bp: 0, type: 'Electric', priority: 1},\n  'Land\\'s Wrath': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Light of Ruin': {bp: 140, type: 'Fairy', recoil: [1, 2], category: 'Special'},\n  'Oblivion Wing': {\n    bp: 80,\n    type: 'Flying',\n    drain: [3, 4],\n    category: 'Special',\n  },\n  'Origin Pulse': {\n    bp: 110,\n    type: 'Water',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    isPulse: true,\n  },\n  'Precipice Blades': {\n    bp: 120,\n    type: 'Ground',\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n  },\n  Rototiller: {bp: 0, type: 'Ground'},\n  'Steam Eruption': {\n    bp: 110,\n    type: 'Water',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Aromatic Mist': {bp: 0, type: 'Fairy'},\n  'Baby-Doll Eyes': {bp: 0, type: 'Fairy', priority: 1},\n  Belch: {bp: 120, type: 'Poison', category: 'Special'},\n  Boomburst: {\n    bp: 140,\n    type: 'Normal',\n    isSound: true,\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  Celebrate: {bp: 0, type: 'Normal'},\n  Confide: {bp: 0, type: 'Normal', isSound: true},\n  'Crafty Shield': {bp: 0, type: 'Fairy', priority: 3},\n  'Dazzling Gleam': {bp: 80, type: 'Fairy', target: 'allAdjacentFoes', category: 'Special'},\n  'Disarming Voice': {\n    bp: 40,\n    type: 'Fairy',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n  },\n  'Draining Kiss': {\n    bp: 50,\n    type: 'Fairy',\n    drain: [3, 4],\n    makesContact: true,\n    category: 'Special',\n  },\n  'Eerie Impulse': {bp: 0, type: 'Electric'},\n  Electrify: {bp: 0, type: 'Electric'},\n  'Fairy Lock': {bp: 0, type: 'Fairy'},\n  'Fairy Wind': {bp: 40, type: 'Fairy', category: 'Special'},\n  'Flower Shield': {bp: 0, type: 'Fairy'},\n  'Forest\\'s Curse': {bp: 0, type: 'Grass'},\n  'Freeze-Dry': {\n    bp: 70,\n    type: 'Ice',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Happy Hour': {bp: 0, type: 'Normal'},\n  'Hold Back': {\n    bp: 40,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Hold Hands': {bp: 0, type: 'Normal'},\n  Infestation: {bp: 20, type: 'Bug', makesContact: true, category: 'Special'},\n  'Magnetic Flux': {bp: 0, type: 'Electric'},\n  'Mat Block': {bp: 0, type: 'Fighting'},\n  Moonblast: {\n    bp: 95,\n    type: 'Fairy',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Noble Roar': {bp: 0, type: 'Normal', isSound: true},\n  Nuzzle: {\n    bp: 20,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Petal Blizzard': {\n    bp: 90,\n    type: 'Grass',\n    target: 'allAdjacent',\n    category: 'Physical',\n  },\n  'Play Nice': {bp: 0, type: 'Normal'},\n  'Play Rough': {\n    bp: 90,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Power-Up Punch': {\n    bp: 40,\n    type: 'Fighting',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Sticky Web': {bp: 0, type: 'Bug'},\n  'Topsy-Turvy': {bp: 0, type: 'Dark'},\n  'Trick-or-Treat': {bp: 0, type: 'Ghost'},\n  'Venom Drench': {bp: 0, type: 'Poison', target: 'allAdjacentFoes'},\n};\n\nconst XY: {[name: string]: MoveData} = extend(true, {}, BW, XY_PATCH);\n\nconst SM_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Ally Switch': {priority: 2},\n  Aeroblast: {zp: 180},\n  Barrage: {zp: 100},\n  Bide: {zp: 100},\n  'Bone Club': {zp: 120},\n  Bonemerang: {zp: 100},\n  Bubble: {zp: 100},\n  Chatter: {zp: 120},\n  'Chip Away': {zp: 140},\n  Clamp: {zp: 100},\n  'Comet Punch': {zp: 100},\n  Constrict: {zp: 100},\n  'Crush Grip': {zp: 190},\n  'Diamond Storm': {zp: 180},\n  'Dizzy Punch': {zp: 140},\n  'Double Slap': {zp: 100},\n  'Dragon Ascent': {zp: 190},\n  'Dragon Rage': {zp: 100},\n  'Egg Bomb': {zp: 180},\n  'Feint Attack': {zp: 120},\n  'Fiery Dance': {zp: 160},\n  'Flame Burst': {zp: 140},\n  Frustration: {zp: 160},\n  'Grass Knot': {zp: 160},\n  'Head Charge': {zp: 190},\n  'Heart Stamp': {zp: 120},\n  'Heat Crash': {zp: 160},\n  'Heavy Slam': {zp: 160},\n  Hurricane: {zp: 185},\n  'Hidden Power': {zp: 120},\n  'Hidden Power Bug': {zp: 120},\n  'Hidden Power Dark': {zp: 120},\n  'Hidden Power Dragon': {zp: 120},\n  'Hidden Power Electric': {zp: 120},\n  'Hidden Power Fighting': {zp: 120},\n  'Hidden Power Fire': {zp: 120},\n  'Hidden Power Flying': {zp: 120},\n  'Hidden Power Ghost': {zp: 120},\n  'Hidden Power Grass': {zp: 120},\n  'Hidden Power Ground': {zp: 120},\n  'Hidden Power Ice': {zp: 120},\n  'Hidden Power Poison': {zp: 120},\n  'Hidden Power Psychic': {zp: 120},\n  'Hidden Power Rock': {zp: 120},\n  'Hidden Power Steel': {zp: 120},\n  'Hidden Power Water': {zp: 120},\n  'Hyper Fang': {zp: 160},\n  'Hyperspace Fury': {zp: 180},\n  'Hyperspace Hole': {zp: 160},\n  'Ice Ball': {zp: 100},\n  Judgment: {zp: 180},\n  'Jump Kick': {zp: 180},\n  'Karate Chop': {zp: 100},\n  'Knock Off': {zp: 120},\n  'Land\\'s Wrath': {zp: 185},\n  'Light of Ruin': {zp: 200},\n  'Low Kick': {zp: 160},\n  'Luster Purge': {zp: 140},\n  'Magma Storm': {zp: 180},\n  'Magnet Bomb': {zp: 120},\n  Magnitude: {zp: 140},\n  'Mirror Shot': {zp: 120},\n  'Mist Ball': {zp: 140},\n  'Mud Bomb': {zp: 120},\n  'Natural Gift': {zp: 160},\n  'Needle Arm': {zp: 120},\n  'Oblivion Wing': {zp: 160},\n  'Ominous Wind': {zp: 120},\n  'Origin Pulse': {zp: 185},\n  'Precipice Blades': {zp: 190},\n  'Psycho Boost': {zp: 200},\n  Psywave: {zp: 100},\n  Punishment: {zp: 160},\n  Pursuit: {zp: 100},\n  Rage: {zp: 100},\n  'Rapid Spin': {zp: 100},\n  'Razor Wind': {zp: 160},\n  'Relic Song': {zp: 140},\n  Return: {zp: 160},\n  'Roar of Time': {zp: 200},\n  'Rock Climb': {zp: 175},\n  'Rolling Kick': {zp: 120},\n  'Sacred Fire': {zp: 180},\n  'Searing Shot': {zp: 180},\n  'Secret Power': {zp: 140},\n  'Seed Flare': {zp: 190},\n  'Shadow Force': {zp: 190},\n  'Signal Beam': {zp: 140},\n  'Silver Wind': {zp: 120},\n  'Sky Drop': {zp: 120},\n  'Sky Uppercut': {zp: 160},\n  'Smelling Salts': {zp: 140},\n  'Solar Beam': {zp: 190},\n  'Sonic Boom': {zp: 100},\n  'Spacial Rend': {zp: 180},\n  'Spike Cannon': {zp: 120},\n  'Steam Eruption': {zp: 185},\n  Steamroller: {zp: 120},\n  Synchronoise: {zp: 190},\n  'Techno Blast': {zp: 190},\n  'Thousand Arrows': {zp: 180},\n  'Thousand Waves': {zp: 175},\n  'Trump Card': {zp: 160},\n  Thunder: {zp: 185},\n  Twineedle: {zp: 100},\n  'Wake-Up Slap': {zp: 140},\n  'Wring Out': {zp: 190},\n  Absorb: {zp: 100},\n  Acid: {zp: 100},\n  'Acid Spray': {zp: 100},\n  Acrobatics: {zp: 100},\n  'Aerial Ace': {zp: 120},\n  'Air Cutter': {zp: 120},\n  'Air Slash': {zp: 140},\n  'Ancient Power': {zp: 120},\n  'Aqua Jet': {zp: 100},\n  'Aqua Tail': {zp: 175},\n  'Arm Thrust': {zp: 100},\n  Assurance: {zp: 120},\n  Astonish: {zp: 100},\n  'Attack Order': {zp: 175},\n  'Aura Sphere': {zp: 160},\n  'Aurora Beam': {zp: 120},\n  Avalanche: {zp: 120},\n  'Beat Up': {zp: 100},\n  Belch: {zp: 190},\n  Bind: {zp: 100},\n  Bite: {zp: 120},\n  'Blast Burn': {zp: 200},\n  'Blaze Kick': {zp: 160},\n  Blizzard: {zp: 185},\n  'Blue Flare': {zp: 195},\n  'Body Slam': {zp: 160},\n  'Bolt Strike': {zp: 195},\n  'Bone Rush': {zp: 140},\n  Boomburst: {zp: 200},\n  Bounce: {zp: 160},\n  'Brave Bird': {zp: 190},\n  'Brick Break': {zp: 140},\n  Brine: {zp: 120},\n  'Bubble Beam': {zp: 120},\n  'Bug Bite': {zp: 120},\n  'Bug Buzz': {zp: 175},\n  Bulldoze: {zp: 120},\n  'Bullet Punch': {zp: 100},\n  'Bullet Seed': {zp: 140},\n  'Charge Beam': {zp: 100},\n  'Circle Throw': {zp: 120},\n  'Clear Smog': {zp: 100},\n  'Close Combat': {zp: 190},\n  Confusion: {zp: 100},\n  Counter: {zp: 100},\n  Covet: {zp: 120},\n  Crabhammer: {zp: 180},\n  'Cross Chop': {zp: 180},\n  'Cross Poison': {zp: 140},\n  Crunch: {zp: 160},\n  'Crush Claw': {zp: 140},\n  Cut: {zp: 100},\n  'Dark Pulse': {zp: 160},\n  'Dazzling Gleam': {zp: 160},\n  Dig: {zp: 160},\n  'Disarming Voice': {zp: 100},\n  Discharge: {zp: 160},\n  Dive: {zp: 160},\n  'Doom Desire': {zp: 200},\n  'Double-Edge': {zp: 190},\n  'Double Hit': {zp: 140},\n  'Double Kick': {zp: 100},\n  'Draco Meteor': {zp: 195},\n  'Dragon Breath': {zp: 120},\n  'Dragon Claw': {zp: 160},\n  'Dragon Pulse': {zp: 160},\n  'Dragon Rush': {zp: 180},\n  'Dragon Tail': {zp: 120},\n  'Draining Kiss': {zp: 100},\n  'Drain Punch': {zp: 140},\n  'Dream Eater': {zp: 180},\n  'Drill Peck': {zp: 160},\n  'Drill Run': {zp: 160},\n  'Dual Chop': {zp: 100},\n  'Dynamic Punch': {zp: 180},\n  'Earth Power': {zp: 175},\n  Earthquake: {zp: 180},\n  'Echoed Voice': {zp: 100},\n  'Electro Ball': {zp: 160},\n  Electroweb: {zp: 100},\n  Ember: {zp: 100},\n  Endeavor: {zp: 160},\n  'Energy Ball': {zp: 175},\n  Eruption: {zp: 200},\n  Explosion: {zp: 200},\n  Extrasensory: {zp: 160},\n  'Extreme Speed': {zp: 160},\n  Facade: {zp: 140},\n  'Fairy Wind': {zp: 100},\n  'Fake Out': {zp: 100},\n  'False Swipe': {zp: 100},\n  Feint: {zp: 100},\n  'Fell Stinger': {bp: 50, zp: 100},\n  'Final Gambit': {zp: 180},\n  'Fire Blast': {zp: 185},\n  'Fire Fang': {zp: 120},\n  'Fire Pledge': {zp: 160},\n  'Fire Punch': {zp: 140},\n  'Fire Spin': {zp: 100},\n  Fissure: {zp: 180},\n  Flail: {zp: 160},\n  'Flame Charge': {zp: 100},\n  'Flame Wheel': {zp: 120},\n  Flamethrower: {zp: 175},\n  'Flare Blitz': {zp: 190},\n  'Flash Cannon': {zp: 160},\n  Fling: {zp: 100},\n  Fly: {zp: 175},\n  'Flying Press': {bp: 100, zp: 170},\n  'Focus Blast': {zp: 190},\n  'Focus Punch': {zp: 200},\n  'Force Palm': {zp: 120},\n  'Foul Play': {zp: 175},\n  'Freeze-Dry': {zp: 140},\n  'Freeze Shock': {zp: 200},\n  'Frenzy Plant': {zp: 200},\n  'Frost Breath': {zp: 120},\n  'Fury Attack': {zp: 100},\n  'Fury Cutter': {zp: 100},\n  'Fury Swipes': {zp: 100},\n  'Fusion Bolt': {zp: 180},\n  'Fusion Flare': {zp: 180},\n  'Future Sight': {zp: 190},\n  'Gear Grind': {zp: 180},\n  'Giga Drain': {zp: 140},\n  'Giga Impact': {zp: 200},\n  Glaciate: {zp: 120},\n  'Grass Pledge': {zp: 160},\n  Guillotine: {zp: 180},\n  'Gunk Shot': {zp: 190},\n  Gust: {zp: 100},\n  'Gyro Ball': {zp: 160},\n  'Hammer Arm': {zp: 180},\n  Headbutt: {zp: 140},\n  'Head Smash': {zp: 200},\n  'Heat Wave': {zp: 175},\n  Hex: {zp: 160},\n  'High Jump Kick': {zp: 195},\n  'Hold Back': {zp: 100},\n  'Horn Attack': {zp: 120},\n  'Horn Drill': {zp: 180},\n  'Horn Leech': {zp: 140},\n  'Hydro Cannon': {zp: 200},\n  'Hydro Pump': {zp: 185},\n  'Hyper Beam': {zp: 200},\n  'Hyper Voice': {zp: 175},\n  'Ice Beam': {zp: 175},\n  'Ice Burn': {zp: 200},\n  'Ice Fang': {zp: 120},\n  'Ice Punch': {zp: 140},\n  'Ice Shard': {zp: 100},\n  'Icicle Crash': {zp: 160},\n  'Icicle Spear': {zp: 140},\n  'Icy Wind': {zp: 100},\n  Incinerate: {zp: 120},\n  Inferno: {zp: 180},\n  Infestation: {zp: 100},\n  'Iron Head': {zp: 160},\n  'Iron Tail': {zp: 180},\n  'Last Resort': {zp: 200},\n  'Lava Plume': {zp: 160},\n  'Leaf Blade': {zp: 175},\n  'Leaf Storm': {zp: 195},\n  'Leaf Tornado': {zp: 120},\n  'Leech Life': {bp: 80, zp: 160},\n  Lick: {zp: 100},\n  'Low Sweep': {zp: 120},\n  'Mach Punch': {zp: 100},\n  'Magical Leaf': {zp: 120},\n  'Mega Drain': {zp: 120},\n  Megahorn: {zp: 190},\n  'Mega Kick': {zp: 190},\n  'Mega Punch': {zp: 160},\n  'Metal Burst': {zp: 100},\n  'Metal Claw': {zp: 100},\n  'Meteor Mash': {zp: 175},\n  'Mirror Coat': {zp: 100},\n  Moonblast: {zp: 175},\n  'Mud Shot': {zp: 100},\n  'Mud-Slap': {zp: 100},\n  'Muddy Water': {zp: 175},\n  'Mystical Fire': {bp: 75, zp: 140},\n  'Night Daze': {zp: 160},\n  'Night Shade': {zp: 100},\n  'Night Slash': {zp: 140},\n  Nuzzle: {zp: 100},\n  Octazooka: {zp: 120},\n  Outrage: {zp: 190},\n  Overheat: {zp: 195},\n  'Paleo Wave': {zp: 160},\n  'Parabolic Charge': {bp: 65, zp: 120},\n  Payback: {zp: 100},\n  'Pay Day': {zp: 100},\n  Peck: {zp: 100},\n  'Petal Blizzard': {zp: 175},\n  'Petal Dance': {zp: 190},\n  'Phantom Force': {zp: 175},\n  'Pin Missile': {zp: 140},\n  'Play Rough': {zp: 175},\n  Pluck: {zp: 120},\n  'Poison Fang': {zp: 100},\n  'Poison Jab': {zp: 160},\n  'Poison Sting': {zp: 100},\n  'Poison Tail': {zp: 100},\n  Pound: {zp: 100},\n  'Powder Snow': {zp: 100},\n  'Power Gem': {zp: 160},\n  'Power-Up Punch': {zp: 100},\n  'Power Whip': {zp: 190},\n  Present: {zp: 100},\n  Psybeam: {zp: 120},\n  Psychic: {zp: 175},\n  'Psycho Cut': {zp: 140},\n  Psyshock: {zp: 160},\n  Psystrike: {zp: 180},\n  'Quick Attack': {zp: 100},\n  'Razor Leaf': {zp: 100},\n  'Razor Shell': {zp: 140},\n  Retaliate: {zp: 140},\n  Revenge: {zp: 120},\n  Reversal: {zp: 160},\n  'Rock Blast': {isBullet: true, zp: 140},\n  'Rock Slide': {zp: 140},\n  'Rock Smash': {zp: 100},\n  'Rock Throw': {zp: 100},\n  'Rock Tomb': {zp: 120},\n  'Rock Wrecker': {zp: 200},\n  Rollout: {zp: 100},\n  Round: {zp: 120},\n  'Sacred Sword': {zp: 175},\n  'Sand Tomb': {zp: 100},\n  Scald: {zp: 160},\n  Scratch: {zp: 100},\n  'Secret Sword': {zp: 160},\n  'Seed Bomb': {zp: 160},\n  'Seismic Toss': {zp: 100},\n  'Self-Destruct': {zp: 200},\n  'Shadow Ball': {zp: 160},\n  'Shadow Claw': {zp: 140},\n  'Shadow Punch': {zp: 120},\n  'Shadow Sneak': {zp: 100},\n  'Shadow Strike': {zp: 160},\n  'Sheer Cold': {zp: 180},\n  'Shock Wave': {zp: 120},\n  'Skull Bash': {zp: 195},\n  'Sky Attack': {zp: 200},\n  Slam: {zp: 160},\n  Slash: {zp: 140},\n  Sludge: {zp: 120},\n  'Sludge Bomb': {zp: 175},\n  'Sludge Wave': {zp: 175},\n  'Smack Down': {zp: 100},\n  Smog: {zp: 100},\n  Snarl: {zp: 100},\n  Snore: {zp: 100},\n  Spark: {zp: 120},\n  'Spit Up': {zp: 100},\n  'Steel Wing': {zp: 140},\n  Stomp: {zp: 120},\n  'Stone Edge': {zp: 180},\n  'Stored Power': {zp: 160},\n  'Storm Throw': {zp: 120},\n  Strength: {zp: 160},\n  'Struggle Bug': {zp: 100},\n  Submission: {zp: 160},\n  'Sucker Punch': {bp: 70, zp: 140},\n  'Super Fang': {zp: 100},\n  Superpower: {zp: 190},\n  Surf: {zp: 175},\n  Swift: {zp: 120},\n  Tackle: {bp: 40, zp: 100},\n  'Tail Slap': {zp: 140},\n  'Take Down': {zp: 175},\n  Thief: {zp: 120},\n  Thrash: {zp: 190},\n  Thunderbolt: {zp: 175},\n  'Thunder Fang': {zp: 120},\n  'Thunder Punch': {zp: 140},\n  'Thunder Shock': {zp: 100},\n  'Tri Attack': {zp: 160},\n  'Triple Kick': {zp: 120},\n  Twister: {zp: 100},\n  'U-turn': {zp: 140},\n  Uproar: {zp: 175},\n  'Vacuum Wave': {zp: 100},\n  'V-create': {zp: 220},\n  Venoshock: {zp: 120},\n  'Vine Whip': {zp: 100},\n  'Vise Grip': {zp: 100},\n  'Vital Throw': {zp: 140},\n  'Volt Switch': {zp: 140},\n  'Volt Tackle': {zp: 190},\n  Waterfall: {zp: 160},\n  'Water Gun': {zp: 100},\n  'Water Pledge': {zp: 160},\n  'Water Pulse': {zp: 120},\n  'Water Shuriken': {category: 'Special', zp: 100},\n  'Water Spout': {zp: 200},\n  'Weather Ball': {zp: 160},\n  Whirlpool: {zp: 100},\n  'Wild Charge': {zp: 175},\n  'Wing Attack': {zp: 120},\n  'Wood Hammer': {zp: 190},\n  Wrap: {zp: 100},\n  'X-Scissor': {zp: 160},\n  'Zap Cannon': {zp: 190},\n  'Zen Headbutt': {zp: 160},\n  '10,000,000 Volt Thunderbolt': {bp: 195, type: 'Electric', category: 'Special', isZ: true},\n  'Acid Downpour': {bp: 1, type: 'Poison', category: 'Physical', isZ: true},\n  'All-Out Pummeling': {bp: 1, type: 'Fighting', category: 'Physical', isZ: true},\n  'Baddy Bad': {bp: 90, type: 'Dark', category: 'Special', zp: 175},\n  'Baneful Bunker': {bp: 0, type: 'Poison', priority: 4},\n  'Beak Blast': {\n    bp: 100,\n    type: 'Flying',\n    category: 'Physical',\n    isBullet: true,\n    zp: 180,\n  },\n  'Black Hole Eclipse': {bp: 1, type: 'Dark', category: 'Physical', isZ: true},\n  'Bloom Doom': {bp: 1, type: 'Grass', category: 'Physical', isZ: true},\n  'Bouncy Bubble': {\n    bp: 90,\n    type: 'Water',\n    drain: [1, 2],\n    category: 'Special',\n    zp: 175,\n  },\n  'Breakneck Blitz': {bp: 1, type: 'Normal', category: 'Physical', isZ: true},\n  'Buzzy Buzz': {\n    bp: 90,\n    type: 'Electric',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  Catastropika: {\n    bp: 210,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Clangorous Soulblaze': {\n    bp: 185,\n    type: 'Dragon',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Continental Crush': {bp: 1, type: 'Rock', category: 'Physical', isZ: true},\n  'Core Enforcer': {\n    bp: 100,\n    type: 'Dragon',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 140,\n  },\n  'Corkscrew Crash': {bp: 1, type: 'Steel', category: 'Physical', isZ: true},\n  'Devastating Drake': {bp: 1, type: 'Dragon', category: 'Physical', isZ: true},\n  'Double Iron Bash': {\n    bp: 60,\n    type: 'Steel',\n    multihit: 2,\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 180,\n  },\n  'Dragon Hammer': {\n    bp: 90,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Extreme Evoboost': {bp: 0, type: 'Normal', isZ: true},\n  'Fleur Cannon': {\n    bp: 130,\n    type: 'Fairy',\n    self: {boosts: {spa: -2}},\n    category: 'Special',\n    zp: 195,\n  },\n  'Floral Healing': {bp: 0, type: 'Fairy'},\n  'Freezy Frost': {bp: 90, type: 'Ice', category: 'Special', zp: 175},\n  'Genesis Supernova': {\n    bp: 185,\n    type: 'Psychic',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Gigavolt Havoc': {bp: 1, type: 'Electric', category: 'Physical', isZ: true},\n  'Glitzy Glow': {bp: 90, type: 'Psychic', category: 'Special', zp: 175},\n  'Guardian of Alola': {bp: 0, type: 'Fairy', category: 'Special', isZ: true},\n  'Hydro Vortex': {bp: 1, type: 'Water', category: 'Physical', isZ: true},\n  'Ice Hammer': {\n    bp: 100,\n    type: 'Ice',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Inferno Overdrive': {bp: 1, type: 'Fire', category: 'Physical', isZ: true},\n  Instruct: {bp: 0, type: 'Psychic'},\n  'Let\\'s Snuggle Forever': {\n    bp: 190,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Light That Burns the Sky': {\n    bp: 200,\n    type: 'Psychic',\n    category: 'Special',\n    isZ: true,\n  },\n  'Malicious Moonsault': {\n    bp: 180,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Menacing Moonraze Maelstrom': {bp: 200, type: 'Ghost', category: 'Special', isZ: true},\n  'Mind Blown': {\n    bp: 150,\n    type: 'Fire',\n    mindBlownRecoil: true,\n    target: 'allAdjacent',\n    category: 'Special',\n    zp: 200,\n  },\n  'Multi-Attack': {\n    bp: 90,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    zp: 185,\n  },\n  'Nature\\'s Madness': {bp: 0, type: 'Fairy', category: 'Special', zp: 100},\n  'Never-Ending Nightmare': {bp: 1, type: 'Ghost', category: 'Physical', isZ: true},\n  'Oceanic Operetta': {bp: 195, type: 'Water', category: 'Special', isZ: true},\n  'Psychic Terrain': {bp: 0, type: 'Psychic'},\n  'Pulverizing Pancake': {\n    bp: 210,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Revelation Dance': {bp: 90, type: 'Normal', category: 'Special', zp: 175},\n  'Sappy Seed': {bp: 90, type: 'Grass', category: 'Physical', zp: 175},\n  'Savage Spin-Out': {bp: 1, type: 'Bug', category: 'Physical', isZ: true},\n  'Searing Sunraze Smash': {\n    bp: 200,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Shadow Bone': {\n    bp: 85,\n    type: 'Ghost',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Shattered Psyche': {bp: 1, type: 'Psychic', category: 'Physical', isZ: true},\n  'Shore Up': {bp: 0, type: 'Ground'},\n  'Sinister Arrow Raid': {bp: 180, type: 'Ghost', category: 'Physical', isZ: true},\n  'Sizzly Slide': {\n    bp: 90,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 175,\n  },\n  'Solar Blade': {\n    bp: 125,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 190,\n  },\n  'Soul-Stealing 7-Star Strike': {\n    bp: 195,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Sparkly Swirl': {bp: 90, type: 'Fairy', category: 'Special', zp: 175},\n  'Splintered Stormshards': {bp: 190, type: 'Rock', category: 'Physical', isZ: true},\n  Spotlight: {bp: 0, type: 'Normal', priority: 3},\n  'Stoked Sparksurfer': {\n    bp: 175,\n    type: 'Electric',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Subzero Slammer': {bp: 1, type: 'Ice', category: 'Physical', isZ: true},\n  'Supersonic Skystrike': {bp: 1, type: 'Flying', category: 'Physical', isZ: true},\n  'Tectonic Rage': {bp: 1, type: 'Ground', category: 'Physical', isZ: true},\n  'Throat Chop': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Toxic Thread': {bp: 0, type: 'Poison'},\n  'Twinkle Tackle': {bp: 1, type: 'Fairy', category: 'Physical', isZ: true},\n  'Zippy Zap': {\n    bp: 50,\n    type: 'Electric',\n    willCrit: true,\n    priority: 2,\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  Accelerock: {\n    bp: 40,\n    type: 'Rock',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  'Anchor Shot': {\n    bp: 80,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Aurora Veil': {bp: 0, type: 'Ice'},\n  'Brutal Swing': {\n    bp: 60,\n    type: 'Dark',\n    makesContact: true,\n    target: 'allAdjacent',\n    category: 'Physical',\n    zp: 120,\n  },\n  'Burn Up': {bp: 130, type: 'Fire', category: 'Special', zp: 195},\n  'Clanging Scales': {\n    bp: 110,\n    type: 'Dragon',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 185,\n  },\n  'Darkest Lariat': {\n    bp: 85,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n    zp: 160,\n  },\n  'Fire Lash': {\n    bp: 80,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'First Impression': {\n    bp: 90,\n    type: 'Bug',\n    priority: 2,\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Floaty Fall': {\n    bp: 90,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 175,\n  },\n  'Gear Up': {bp: 0, type: 'Steel'},\n  'High Horsepower': {\n    bp: 95,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Laser Focus': {bp: 0, type: 'Normal'},\n  Leafage: {bp: 40, type: 'Grass', category: 'Physical', zp: 100},\n  Liquidation: {\n    bp: 85,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  Lunge: {\n    bp: 80,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Moongeist Beam': {bp: 100, type: 'Ghost', category: 'Special', zp: 180},\n  'Photon Geyser': {\n    bp: 100,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 180,\n  },\n  'Pika Papow': {bp: 0, type: 'Electric', category: 'Special', zp: 100},\n  'Plasma Fists': {\n    bp: 100,\n    type: 'Electric',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Pollen Puff': {\n    bp: 90,\n    type: 'Bug',\n    category: 'Special',\n    isBullet: true,\n    zp: 175,\n  },\n  'Power Trip': {\n    bp: 20,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n  },\n  'Prismatic Laser': {bp: 160, type: 'Psychic', category: 'Special', zp: 200},\n  'Psychic Fangs': {\n    bp: 85,\n    type: 'Psychic',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n  },\n  Purify: {bp: 0, type: 'Poison'},\n  'Shell Trap': {\n    bp: 150,\n    type: 'Fire',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 200,\n  },\n  'Smart Strike': {\n    bp: 70,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n  },\n  'Sparkling Aria': {\n    bp: 90,\n    type: 'Water',\n    isSound: true,\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  'Spectral Thief': {\n    bp: 90,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Speed Swap': {bp: 0, type: 'Psychic'},\n  'Spirit Shackle': {\n    bp: 80,\n    type: 'Ghost',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Splishy Splash': {\n    bp: 90,\n    type: 'Water',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  'Stomping Tantrum': {\n    bp: 75,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n  },\n  'Strength Sap': {bp: 0, type: 'Grass'},\n  'Sunsteel Strike': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Tearful Look': {bp: 0, type: 'Normal'},\n  'Trop Kick': {\n    bp: 70,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 140,\n  },\n  'Veevee Volley': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  'Zing Zap': {\n    bp: 80,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n};\n\nconst SM: {[name: string]: MoveData} = extend(true, {}, XY, SM_PATCH);\n\nconst SS_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Apple Acid': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Special',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Astral Barrage': {\n    bp: 120,\n    type: 'Ghost',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Aura Wheel': {\n    bp: 110,\n    type: 'Electric',\n    category: 'Physical',\n    secondaries: true,\n    zp: 185,\n    maxPower: 140,\n  },\n  'Behemoth Bash': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Behemoth Blade': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Body Press': {\n    bp: 80,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    overrideOffensiveStat: 'def',\n    zp: 160,\n    maxPower: 90,\n  },\n  'Bolt Beak': {\n    bp: 85,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Branch Poke': {\n    bp: 40,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n  },\n  'Breaking Swipe': {\n    bp: 60,\n    type: 'Dragon',\n    makesContact: true,\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n    secondaries: true,\n    zp: 120,\n    maxPower: 110,\n  },\n  'Burning Jealousy': {\n    bp: 70,\n    type: 'Fire',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Clangorous Soul': {bp: 0, type: 'Dragon', isSound: true},\n  'Coaching': {\n    bp: 0,\n    type: 'Fighting',\n    category: 'Status',\n  },\n  'Corrosive Gas': {\n    bp: 0,\n    type: 'Poison',\n    category: 'Status',\n    target: 'allAdjacent',\n  },\n  'Court Change': {bp: 0, type: 'Normal'},\n  Decorate: {bp: 0, type: 'Fairy'},\n  'Dragon Darts': {\n    bp: 50,\n    type: 'Dragon',\n    multihit: 2,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 130,\n  },\n  'Dragon Energy': {\n    bp: 150,\n    type: 'Dragon',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Drum Beating': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Dual Wingbeat': {\n    bp: 40,\n    type: 'Flying',\n    category: 'Physical',\n    makesContact: true,\n    multihit: 2,\n    zp: 100,\n    maxPower: 130,\n  },\n  'Dynamax Cannon': {\n    bp: 100,\n    type: 'Dragon',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Eerie Spell': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    isSound: true,\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  Eternabeam: {\n    bp: 160,\n    type: 'Dragon',\n    category: 'Special',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Expanding Force': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'False Surrender': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Fiery Wrath': {\n    bp: 90,\n    type: 'Dark',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Fishious Rend': {\n    bp: 85,\n    type: 'Water',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Flip Turn': {\n    bp: 60,\n    type: 'Water',\n    category: 'Physical',\n    makesContact: true,\n    zp: 120,\n    maxPower: 110,\n  },\n  'Freezing Glare': {\n    bp: 90,\n    type: 'Psychic',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Glacial Lance': {\n    bp: 130,\n    type: 'Ice',\n    category: 'Physical',\n    target: 'allAdjacentFoes',\n    zp: 195,\n    maxPower: 140,\n  },\n  'G-Max Befuddle': {\n    bp: 10,\n    type: 'Bug',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Centiferno': {\n    bp: 10,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Cannonade': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Chi Strike': {\n    bp: 10,\n    type: 'Fighting',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Cuddle': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Depletion': {\n    bp: 10,\n    type: 'Dragon',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Drum Solo': {\n    bp: 160,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Fireball': {\n    bp: 160,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Finale': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Foam Burst': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Gold Rush': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Gravitas': {\n    bp: 10,\n    type: 'Psychic',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Hydrosnipe': {\n    bp: 160,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Malodor': {\n    bp: 10,\n    type: 'Poison',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Meltdown': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max One Blow': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Rapid Flow': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Replenish': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Resonance': {\n    bp: 10,\n    type: 'Ice',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Sandblast': {\n    bp: 10,\n    type: 'Ground',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Smite': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Snooze': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Steelsurge': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Stonesurge': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Stun Shock': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Sweetness': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Tartness': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Terror': {\n    bp: 10,\n    type: 'Ghost',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Vine Lash': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Volcalith': {\n    bp: 10,\n    type: 'Rock',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Volt Crash': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Wildfire': {\n    bp: 10,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Wind Rage': {\n    bp: 10,\n    type: 'Flying',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Grassy Glide': {\n    bp: 70,\n    type: 'Grass',\n    category: 'Physical',\n    makesContact: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Grav Apple': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Jaw Lock': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Jungle Healing': {\n    bp: 0,\n    type: 'Grass',\n    category: 'Status',\n  },\n  'Lash Out': {\n    bp: 75,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n    maxPower: 130,\n  },\n  'Life Dew': {bp: 0, type: 'Water'},\n  'Magic Powder': {bp: 0, type: 'Psychic'},\n  'Max Airstream': {\n    bp: 10,\n    type: 'Flying',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Darkness': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Flare': {\n    bp: 100,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Flutterby': {\n    bp: 10,\n    type: 'Bug',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Geyser': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Guard': {bp: 0, type: 'Normal', priority: 4, isMax: true},\n  'Max Hailstorm': {\n    bp: 10,\n    type: 'Ice',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Knuckle': {\n    bp: 10,\n    type: 'Fighting',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Lightning': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Mindstorm': {\n    bp: 10,\n    type: 'Psychic',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Ooze': {\n    bp: 10,\n    type: 'Poison',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Overgrowth': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Phantasm': {\n    bp: 10,\n    type: 'Ghost',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Quake': {\n    bp: 10,\n    type: 'Ground',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Rockfall': {\n    bp: 10,\n    type: 'Rock',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Starfall': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Steelspike': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Strike': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Wyrmwind': {\n    bp: 10,\n    type: 'Dragon',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Meteor Assault': {\n    bp: 150,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 200,\n    maxPower: 100,\n  },\n  'Meteor Beam': {\n    bp: 120,\n    type: 'Rock',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Misty Explosion': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Special',\n    target: 'allAdjacent',\n    zp: 180,\n    maxPower: 130,\n  },\n  'No Retreat': {bp: 0, type: 'Fighting'},\n  Obstruct: {bp: 0, type: 'Dark', priority: 4},\n  Octolock: {bp: 0, type: 'Fighting'},\n  Overdrive: {\n    bp: 80,\n    type: 'Electric',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  Poltergeist: {\n    bp: 110,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 185,\n    maxPower: 140,\n  },\n  'Pyro Ball': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Physical',\n    secondaries: true,\n    isBullet: true,\n    zp: 190,\n    maxPower: 140,\n  },\n  'Rising Voltage': {\n    bp: 70,\n    type: 'Electric',\n    category: 'Special',\n    zp: 140,\n    maxPower: 140,\n  },\n  'Scale Shot': {\n    bp: 25,\n    type: 'Dragon',\n    category: 'Physical',\n    multihit: [2, 5],\n    zp: 140,\n    maxPower: 130,\n  },\n  'Shell Side Arm': {\n    bp: 90,\n    type: 'Poison',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 90,\n  },\n  'Snap Trap': {\n    bp: 35,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n  },\n  'Snipe Shot': {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Scorching Sands': {\n    bp: 70,\n    type: 'Ground',\n    category: 'Special',\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Skitter Smack': {\n    bp: 70,\n    type: 'Bug',\n    category: 'Physical',\n    makesContact: true,\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Spirit Break': {\n    bp: 75,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 140,\n    maxPower: 130,\n  },\n  'Steel Beam': {\n    bp: 140,\n    type: 'Steel',\n    mindBlownRecoil: true,\n    category: 'Special',\n    zp: 200,\n    maxPower: 140,\n  },\n  'Steel Roller': {\n    bp: 130,\n    type: 'Steel',\n    category: 'Physical',\n    makesContact: true,\n    zp: 195,\n    maxPower: 140,\n  },\n  'Strange Steam': {\n    bp: 90,\n    type: 'Fairy',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Surging Strikes': {\n    bp: 25,\n    type: 'Water',\n    category: 'Physical',\n    makesContact: true,\n    willCrit: true,\n    isPunch: true,\n    multihit: 3,\n    zp: 140,\n    maxPower: 130,\n  },\n  'Terrain Pulse': {\n    bp: 50,\n    type: 'Normal',\n    category: 'Special',\n    isPulse: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Triple Axel': {\n    bp: 20,\n    type: 'Ice',\n    category: 'Physical',\n    makesContact: true,\n    multihit: 3,\n    zp: 120,\n    maxPower: 140,\n  },\n  'Wicked Blow': {\n    bp: 80,\n    type: 'Dark',\n    category: 'Physical',\n    makesContact: true,\n    willCrit: true,\n    isPunch: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Stuff Cheeks': {bp: 0, type: 'Normal'},\n  'Tar Shot': {bp: 0, type: 'Rock'},\n  Teatime: {bp: 0, type: 'Normal'},\n  'Thunder Cage': {\n    bp: 80,\n    type: 'Electric',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Thunderous Kick': {\n    bp: 90,\n    type: 'Fighting',\n    category: 'Physical',\n    secondaries: true,\n    makesContact: true,\n    zp: 175,\n    maxPower: 90,\n  },\n  '10,000,000 Volt Thunderbolt': {maxPower: 1},\n  Absorb: {maxPower: 90},\n  Accelerock: {maxPower: 90},\n  Acid: {maxPower: 70},\n  'Acid Downpour': {maxPower: 1},\n  'Acid Spray': {maxPower: 70},\n  Acrobatics: {maxPower: 110},\n  'Aerial Ace': {maxPower: 110},\n  Aeroblast: {maxPower: 130},\n  'Air Cutter': {maxPower: 110},\n  'Air Slash': {maxPower: 130},\n  'All-Out Pummeling': {maxPower: 1},\n  'Anchor Shot': {maxPower: 130},\n  'Ancient Power': {maxPower: 110},\n  'Aqua Jet': {maxPower: 90},\n  'Aqua Tail': {maxPower: 130},\n  'Arm Thrust': {maxPower: 70},\n  Assurance: {maxPower: 110},\n  Astonish: {maxPower: 90},\n  'Attack Order': {maxPower: 130},\n  'Aura Sphere': {maxPower: 90},\n  'Aurora Beam': {maxPower: 120},\n  Avalanche: {maxPower: 110},\n  Barrage: {maxPower: 90},\n  'Beak Blast': {maxPower: 130},\n  'Beat Up': {maxPower: 100},\n  Belch: {maxPower: 95},\n  Bide: {maxPower: 100},\n  Bind: {maxPower: 90},\n  Bite: {maxPower: 110},\n  'Black Hole Eclipse': {maxPower: 1},\n  'Blast Burn': {maxPower: 150},\n  'Blaze Kick': {maxPower: 130},\n  Blizzard: {maxPower: 140},\n  'Bloom Doom': {maxPower: 1},\n  'Blue Flare': {maxPower: 140},\n  'Body Slam': {maxPower: 130},\n  'Bolt Strike': {maxPower: 140},\n  'Bone Club': {maxPower: 120},\n  Bonemerang: {maxPower: 130},\n  'Bone Rush': {maxPower: 130},\n  Boomburst: {maxPower: 140},\n  Bounce: {maxPower: 130},\n  'Brave Bird': {maxPower: 140},\n  'Breakneck Blitz': {maxPower: 1},\n  'Brick Break': {maxPower: 90},\n  Brine: {maxPower: 120},\n  'Brutal Swing': {maxPower: 110},\n  Bubble: {maxPower: 90},\n  'Bubble Beam': {maxPower: 120},\n  'Bug Bite': {maxPower: 110},\n  'Bug Buzz': {maxPower: 130},\n  Bulldoze: {maxPower: 110},\n  'Bullet Punch': {maxPower: 90},\n  'Bullet Seed': {maxPower: 130},\n  'Burn Up': {maxPower: 140},\n  Catastropika: {maxPower: 1},\n  'Charge Beam': {maxPower: 100},\n  Chatter: {maxPower: 120},\n  'Chip Away': {maxPower: 120},\n  'Circle Throw': {maxPower: 80},\n  Clamp: {maxPower: 90},\n  'Clanging Scales': {maxPower: 140},\n  'Clangorous Soulblaze': {maxPower: 1},\n  'Clear Smog': {maxPower: 75},\n  'Close Combat': {maxPower: 95},\n  'Comet Punch': {maxPower: 100},\n  Confusion: {maxPower: 100},\n  Constrict: {maxPower: 90},\n  'Continental Crush': {maxPower: 1},\n  'Core Enforcer': {maxPower: 130},\n  'Corkscrew Crash': {maxPower: 1},\n  Counter: {maxPower: 75},\n  Covet: {maxPower: 110},\n  Crabhammer: {maxPower: 130},\n  'Cross Chop': {maxPower: 90},\n  'Cross Poison': {maxPower: 85},\n  Crunch: {maxPower: 130},\n  'Crush Claw': {maxPower: 130},\n  'Crush Grip': {maxPower: 140},\n  Cut: {maxPower: 100},\n  'Darkest Lariat': {maxPower: 130},\n  'Dark Pulse': {maxPower: 130},\n  'Dazzling Gleam': {maxPower: 130},\n  'Devastating Drake': {maxPower: 1},\n  'Diamond Storm': {maxPower: 130},\n  Dig: {maxPower: 130},\n  'Disarming Voice': {maxPower: 90},\n  Discharge: {maxPower: 130},\n  Dive: {maxPower: 130},\n  'Dizzy Punch': {maxPower: 120},\n  'Doom Desire': {maxPower: 140},\n  'Double-Edge': {maxPower: 140},\n  'Double Hit': {maxPower: 120},\n  'Double Iron Bash': {maxPower: 140},\n  'Double Kick': {maxPower: 80},\n  'Double Slap': {maxPower: 90},\n  'Draco Meteor': {maxPower: 140},\n  'Dragon Ascent': {maxPower: 140},\n  'Dragon Breath': {maxPower: 110},\n  'Dragon Claw': {maxPower: 130},\n  'Dragon Hammer': {maxPower: 130},\n  'Dragon Pulse': {maxPower: 130},\n  'Dragon Rage': {maxPower: 100},\n  'Dragon Rush': {maxPower: 130},\n  'Dragon Tail': {maxPower: 110},\n  'Draining Kiss': {maxPower: 100},\n  'Drain Punch': {maxPower: 90},\n  'Dream Eater': {maxPower: 130},\n  'Drill Peck': {maxPower: 130},\n  'Drill Run': {maxPower: 130},\n  'Dual Chop': {maxPower: 130},\n  'Dynamic Punch': {maxPower: 90},\n  'Earth Power': {maxPower: 130},\n  Earthquake: {maxPower: 130},\n  'Echoed Voice': {maxPower: 90},\n  'Egg Bomb': {maxPower: 130},\n  'Electro Ball': {maxPower: 130},\n  Electroweb: {maxPower: 110},\n  Ember: {maxPower: 90},\n  Endeavor: {maxPower: 130},\n  'Energy Ball': {maxPower: 130},\n  Eruption: {maxPower: 150},\n  Explosion: {maxPower: 150},\n  Extrasensory: {maxPower: 130},\n  'Extreme Speed': {maxPower: 130},\n  Facade: {maxPower: 120},\n  'Fairy Wind': {maxPower: 90},\n  'Fake Out': {maxPower: 90},\n  'False Swipe': {maxPower: 90},\n  Feint: {maxPower: 90},\n  'Feint Attack': {maxPower: 110},\n  'Fell Stinger': {maxPower: 100},\n  'Fiery Dance': {maxPower: 130},\n  'Final Gambit': {maxPower: 100},\n  'Fire Blast': {maxPower: 140},\n  'Fire Fang': {maxPower: 120},\n  'Fire Lash': {maxPower: 130},\n  'Fire Pledge': {maxPower: 130},\n  'Fire Punch': {maxPower: 130},\n  'Fire Spin': {maxPower: 90},\n  'First Impression': {maxPower: 130},\n  Fissure: {maxPower: 130},\n  Flail: {maxPower: 130},\n  'Flame Burst': {maxPower: 120},\n  'Flame Charge': {maxPower: 100},\n  'Flame Wheel': {maxPower: 110},\n  Flamethrower: {maxPower: 130},\n  'Flare Blitz': {maxPower: 140},\n  'Flash Cannon': {maxPower: 130},\n  'Fleur Cannon': {maxPower: 140},\n  Fling: {maxPower: 100},\n  Fly: {maxPower: 130},\n  'Flying Press': {maxPower: 90},\n  'Focus Blast': {maxPower: 95},\n  'Focus Punch': {maxPower: 100},\n  'Force Palm': {maxPower: 80},\n  'Foul Play': {maxPower: 130},\n  'Freeze-Dry': {maxPower: 120},\n  'Freeze Shock': {maxPower: 140},\n  'Frenzy Plant': {maxPower: 150},\n  'Frost Breath': {maxPower: 110},\n  Frustration: {maxPower: 130},\n  'Fury Attack': {maxPower: 90},\n  'Fury Cutter': {maxPower: 90},\n  'Fury Swipes': {maxPower: 100},\n  'Fusion Bolt': {maxPower: 130},\n  'Fusion Flare': {maxPower: 130},\n  'Future Sight': {maxPower: 140},\n  'Gear Grind': {maxPower: 130},\n  'Genesis Supernova': {maxPower: 1},\n  'Giga Drain': {maxPower: 130},\n  'Giga Impact': {maxPower: 150},\n  'Gigavolt Havoc': {maxPower: 1},\n  Glaciate: {maxPower: 120},\n  'Grass Knot': {maxPower: 130},\n  'Grass Pledge': {maxPower: 130},\n  'Guardian of Alola': {maxPower: 1},\n  Guillotine: {maxPower: 130},\n  'Gunk Shot': {maxPower: 95},\n  Gust: {maxPower: 90},\n  'Gyro Ball': {maxPower: 130},\n  'Hammer Arm': {maxPower: 90},\n  Headbutt: {maxPower: 120},\n  'Head Charge': {maxPower: 140},\n  'Head Smash': {maxPower: 150},\n  'Heart Stamp': {maxPower: 110},\n  'Heat Crash': {maxPower: 130},\n  'Heat Wave': {maxPower: 130},\n  'Heavy Slam': {maxPower: 130},\n  Hex: {maxPower: 120},\n  'Hidden Power': {maxPower: 110},\n  'Hidden Power Bug': {maxPower: 110},\n  'Hidden Power Dark': {maxPower: 110},\n  'Hidden Power Dragon': {maxPower: 110},\n  'Hidden Power Electric': {maxPower: 110},\n  'Hidden Power Fighting': {maxPower: 80},\n  'Hidden Power Fire': {maxPower: 110},\n  'Hidden Power Flying': {maxPower: 110},\n  'Hidden Power Ghost': {maxPower: 110},\n  'Hidden Power Grass': {maxPower: 110},\n  'Hidden Power Ground': {maxPower: 110},\n  'Hidden Power Ice': {maxPower: 110},\n  'Hidden Power Poison': {maxPower: 80},\n  'Hidden Power Psychic': {maxPower: 110},\n  'Hidden Power Rock': {maxPower: 110},\n  'Hidden Power Steel': {maxPower: 110},\n  'Hidden Power Water': {maxPower: 110},\n  'High Horsepower': {maxPower: 130},\n  'High Jump Kick': {maxPower: 95},\n  'Hold Back': {maxPower: 90},\n  'Horn Attack': {maxPower: 120},\n  'Horn Drill': {maxPower: 130},\n  'Horn Leech': {maxPower: 130},\n  Howl: {isSound: true},\n  Hurricane: {maxPower: 140},\n  'Hydro Cannon': {maxPower: 150},\n  'Hydro Pump': {maxPower: 140},\n  'Hydro Vortex': {maxPower: 1},\n  'Hyper Beam': {maxPower: 150},\n  'Hyper Fang': {maxPower: 130},\n  'Hyperspace Fury': {maxPower: 130},\n  'Hyperspace Hole': {maxPower: 130},\n  'Hyper Voice': {maxPower: 130},\n  'Ice Ball': {maxPower: 90},\n  'Ice Beam': {maxPower: 130},\n  'Ice Burn': {maxPower: 140},\n  'Ice Fang': {maxPower: 120},\n  'Ice Hammer': {maxPower: 130},\n  'Ice Punch': {maxPower: 130},\n  'Ice Shard': {maxPower: 90},\n  'Icicle Crash': {maxPower: 130},\n  'Icicle Spear': {maxPower: 130},\n  'Icy Wind': {maxPower: 110},\n  Incinerate: {maxPower: 110},\n  Inferno: {maxPower: 130},\n  'Inferno Overdrive': {maxPower: 1},\n  Infestation: {maxPower: 90},\n  'Iron Head': {maxPower: 130},\n  'Iron Tail': {maxPower: 130},\n  Judgment: {maxPower: 130},\n  'Jump Kick': {maxPower: 90},\n  'Karate Chop': {maxPower: 75},\n  'Knock Off': {maxPower: 120},\n  'Land\\'s Wrath': {maxPower: 130},\n  'Last Resort': {maxPower: 140},\n  'Lava Plume': {maxPower: 130},\n  Leafage: {maxPower: 90},\n  'Leaf Blade': {maxPower: 130},\n  'Leaf Storm': {maxPower: 140},\n  'Leaf Tornado': {maxPower: 120},\n  'Leech Life': {maxPower: 130},\n  'Let\\'s Snuggle Forever': {maxPower: 1},\n  Lick: {maxPower: 90},\n  'Light of Ruin': {maxPower: 140},\n  'Light That Burns the Sky': {maxPower: 1},\n  Liquidation: {maxPower: 130},\n  'Low Kick': {maxPower: 100},\n  'Low Sweep': {maxPower: 85},\n  Lunge: {maxPower: 130},\n  'Luster Purge': {maxPower: 120},\n  'Mach Punch': {maxPower: 70},\n  'Magical Leaf': {maxPower: 110},\n  'Magma Storm': {maxPower: 130},\n  'Magnet Bomb': {maxPower: 110},\n  Magnitude: {maxPower: 140},\n  'Malicious Moonsault': {maxPower: 1},\n  'Mega Drain': {maxPower: 90},\n  Megahorn: {maxPower: 140},\n  'Mega Kick': {maxPower: 140},\n  'Mega Punch': {maxPower: 130},\n  'Menacing Moonraze Maelstrom': {maxPower: 1},\n  'Metal Burst': {maxPower: 100},\n  'Metal Claw': {maxPower: 100},\n  'Meteor Mash': {maxPower: 130},\n  'Mind Blown': {maxPower: 150},\n  'Mirror Coat': {maxPower: 100},\n  'Mirror Shot': {maxPower: 120},\n  'Mist Ball': {maxPower: 120},\n  Moonblast: {maxPower: 130},\n  'Moongeist Beam': {maxPower: 130},\n  'Mud Bomb': {maxPower: 120},\n  'Mud Shot': {maxPower: 110},\n  'Mud-Slap': {maxPower: 90},\n  'Muddy Water': {maxPower: 130},\n  'Multi-Attack': {bp: 120, maxPower: 95},\n  'Mystical Fire': {maxPower: 130},\n  'Natural Gift': {maxPower: 130},\n  'Nature\\'s Madness': {maxPower: 100},\n  'Needle Arm': {maxPower: 110},\n  'Never-Ending Nightmare': {maxPower: 1},\n  'Night Daze': {maxPower: 130},\n  'Night Shade': {maxPower: 100},\n  'Night Slash': {maxPower: 120},\n  Nuzzle: {maxPower: 90},\n  'Oblivion Wing': {maxPower: 130},\n  'Oceanic Operetta': {maxPower: 1},\n  Octazooka: {maxPower: 120},\n  'Ominous Wind': {maxPower: 110},\n  'Origin Pulse': {maxPower: 140},\n  Outrage: {maxPower: 140},\n  Overheat: {maxPower: 140},\n  'Paleo Wave': {maxPower: 130},\n  'Parabolic Charge': {maxPower: 120},\n  Payback: {maxPower: 100},\n  'Pay Day': {maxPower: 90},\n  Peck: {maxPower: 90},\n  'Petal Blizzard': {maxPower: 130},\n  'Petal Dance': {maxPower: 140},\n  'Phantom Force': {maxPower: 130},\n  'Photon Geyser': {maxPower: 130},\n  'Pin Missile': {maxPower: 130},\n  'Plasma Fists': {maxPower: 130},\n  'Play Rough': {maxPower: 130},\n  Pluck: {maxPower: 110},\n  'Poison Fang': {maxPower: 75},\n  'Poison Jab': {maxPower: 90},\n  'Poison Sting': {maxPower: 70},\n  'Poison Tail': {maxPower: 75},\n  'Pollen Puff': {maxPower: 130},\n  Pound: {maxPower: 90},\n  'Powder Snow': {maxPower: 90},\n  'Power Gem': {maxPower: 130},\n  'Power Trip': {maxPower: 130},\n  'Power-Up Punch': {maxPower: 70},\n  'Power Whip': {maxPower: 140},\n  'Precipice Blades': {maxPower: 140},\n  Present: {maxPower: 100},\n  'Prismatic Laser': {maxPower: 150},\n  Psybeam: {maxPower: 120},\n  Psychic: {maxPower: 130},\n  'Psychic Fangs': {maxPower: 130},\n  'Psycho Boost': {maxPower: 140},\n  'Psycho Cut': {maxPower: 120},\n  Psyshock: {maxPower: 130},\n  Psystrike: {maxPower: 130},\n  Psywave: {maxPower: 100},\n  'Pulverizing Pancake': {maxPower: 1},\n  Punishment: {maxPower: 130},\n  Pursuit: {maxPower: 90},\n  'Quick Attack': {maxPower: 90},\n  Rage: {maxPower: 90},\n  'Rapid Spin': {bp: 50, secondaries: true, maxPower: 100},\n  'Razor Leaf': {maxPower: 110},\n  'Razor Shell': {maxPower: 130},\n  'Razor Wind': {maxPower: 130},\n  'Relic Song': {maxPower: 130},\n  Retaliate: {maxPower: 120},\n  Return: {maxPower: 130},\n  'Revelation Dance': {maxPower: 130},\n  Revenge: {maxPower: 80},\n  Reversal: {maxPower: 100},\n  'Roar of Time': {maxPower: 150},\n  'Rock Blast': {maxPower: 130},\n  'Rock Climb': {maxPower: 130},\n  'Rock Slide': {maxPower: 130},\n  'Rock Smash': {maxPower: 70},\n  'Rock Throw': {maxPower: 100},\n  'Rock Tomb': {maxPower: 110},\n  'Rock Wrecker': {maxPower: 150},\n  'Rolling Kick': {maxPower: 80},\n  Rollout: {maxPower: 90},\n  Round: {maxPower: 110},\n  'Sacred Fire': {maxPower: 130},\n  'Sacred Sword': {maxPower: 90},\n  'Sand Tomb': {maxPower: 90},\n  'Savage Spin-Out': {maxPower: 1},\n  Scald: {maxPower: 130},\n  Scratch: {maxPower: 90},\n  'Searing Shot': {maxPower: 130},\n  'Searing Sunraze Smash': {maxPower: 1},\n  'Secret Power': {maxPower: 120},\n  'Secret Sword': {maxPower: 90},\n  'Seed Bomb': {maxPower: 130},\n  'Seed Flare': {maxPower: 140},\n  'Seismic Toss': {maxPower: 75},\n  'Self-Destruct': {maxPower: 150},\n  'Shadow Ball': {maxPower: 130},\n  'Shadow Bone': {maxPower: 130},\n  'Shadow Claw': {maxPower: 120},\n  'Shadow Force': {maxPower: 140},\n  'Shadow Punch': {maxPower: 110},\n  'Shadow Sneak': {maxPower: 90},\n  'Shadow Strike': {maxPower: 130},\n  'Shattered Psyche': {maxPower: 1},\n  'Sheer Cold': {maxPower: 130},\n  'Shell Trap': {maxPower: 150},\n  'Shock Wave': {maxPower: 110},\n  'Signal Beam': {maxPower: 130},\n  'Silver Wind': {maxPower: 110},\n  'Sinister Arrow Raid': {maxPower: 1},\n  'Skull Bash': {maxPower: 140},\n  'Sky Attack': {maxPower: 140},\n  'Sky Drop': {maxPower: 110},\n  'Sky Uppercut': {maxPower: 90},\n  Slam: {maxPower: 130},\n  Slash: {maxPower: 120},\n  Sludge: {maxPower: 85},\n  'Sludge Bomb': {maxPower: 90},\n  'Sludge Wave': {maxPower: 90},\n  'Smack Down': {maxPower: 100},\n  'Smart Strike': {maxPower: 120},\n  'Smelling Salts': {maxPower: 120},\n  Smog: {maxPower: 70},\n  Snarl: {maxPower: 110},\n  Snore: {maxPower: 100},\n  'Solar Beam': {maxPower: 140},\n  'Solar Blade': {maxPower: 140},\n  'Sonic Boom': {maxPower: 100},\n  'Soul-Stealing 7-Star Strike': {maxPower: 1},\n  'Spacial Rend': {maxPower: 130},\n  Spark: {maxPower: 120},\n  'Sparkling Aria': {maxPower: 130},\n  'Spectral Thief': {maxPower: 130},\n  'Spike Cannon': {maxPower: 120},\n  'Spirit Shackle': {maxPower: 130},\n  'Spit Up': {maxPower: 100},\n  'Splintered Stormshards': {maxPower: 1},\n  'Steam Eruption': {maxPower: 140},\n  Steamroller: {maxPower: 120},\n  'Steel Wing': {maxPower: 120},\n  'Stoked Sparksurfer': {maxPower: 1},\n  Stomp: {maxPower: 120},\n  'Stomping Tantrum': {maxPower: 130},\n  'Stone Edge': {maxPower: 130},\n  'Stored Power': {maxPower: 130},\n  'Storm Throw': {maxPower: 80},\n  Strength: {maxPower: 130},\n  'Struggle Bug': {maxPower: 100},\n  Submission: {maxPower: 90},\n  'Subzero Slammer': {maxPower: 1},\n  'Sucker Punch': {maxPower: 120},\n  'Sunsteel Strike': {maxPower: 130},\n  'Super Fang': {maxPower: 100},\n  Superpower: {maxPower: 95},\n  'Supersonic Skystrike': {maxPower: 1},\n  Surf: {maxPower: 130},\n  Swift: {maxPower: 110},\n  Synchronoise: {maxPower: 140},\n  Tackle: {maxPower: 90},\n  'Tail Slap': {maxPower: 130},\n  'Take Down': {maxPower: 130},\n  'Techno Blast': {maxPower: 140},\n  'Tectonic Rage': {maxPower: 1},\n  Thief: {maxPower: 110},\n  'Thousand Arrows': {maxPower: 130},\n  'Thousand Waves': {maxPower: 130},\n  Thrash: {maxPower: 140},\n  'Throat Chop': {maxPower: 130},\n  Thunder: {maxPower: 140},\n  Thunderbolt: {maxPower: 130},\n  'Thunder Fang': {maxPower: 120},\n  'Thunder Punch': {maxPower: 130},\n  'Thunder Shock': {maxPower: 90},\n  'Tri Attack': {maxPower: 130},\n  'Triple Kick': {maxPower: 80},\n  'Trop Kick': {maxPower: 120},\n  'Trump Card': {maxPower: 130},\n  Twineedle: {maxPower: 100},\n  'Twinkle Tackle': {maxPower: 1},\n  Twister: {maxPower: 90},\n  'U-turn': {maxPower: 120},\n  Uproar: {maxPower: 130},\n  'Vacuum Wave': {maxPower: 70},\n  'V-create': {maxPower: 150},\n  Venoshock: {maxPower: 85},\n  'Vine Whip': {maxPower: 100},\n  'Vise Grip': {maxPower: 110},\n  'Vital Throw': {maxPower: 85},\n  'Volt Switch': {maxPower: 120},\n  'Volt Tackle': {maxPower: 140},\n  'Wake-Up Slap': {maxPower: 85},\n  Waterfall: {maxPower: 130},\n  'Water Gun': {maxPower: 90},\n  'Water Pledge': {maxPower: 130},\n  'Water Pulse': {maxPower: 110},\n  'Water Shuriken': {maxPower: 90},\n  'Water Spout': {maxPower: 150},\n  'Weather Ball': {maxPower: 130},\n  Whirlpool: {maxPower: 90},\n  'Wild Charge': {maxPower: 130},\n  'Wing Attack': {maxPower: 110},\n  'Wood Hammer': {maxPower: 140},\n  Wrap: {maxPower: 90},\n  'Wring Out': {maxPower: 140},\n  'X-Scissor': {maxPower: 130},\n  'Zap Cannon': {maxPower: 140},\n  'Zen Headbutt': {maxPower: 130},\n  'Zing Zap': {maxPower: 130},\n};\n\nconst SS: {[name: string]: MoveData} = extend(true, {}, SM, SS_PATCH);\n\nconst LGPE_MOVES = [\n  'Baddy Bad',\n  'Bouncy Bubble',\n  'Buzzy Buzz',\n  'Freezy Frost',\n  'Glitzy Glow',\n  'Sappy Seed',\n  'Sizzly Slide',\n  'Sparkly Swirl',\n  'Zippy Zap',\n  'Floaty Fall',\n  'Pika Papow',\n  'Splishy Splash',\n  'Veevee Volley',\n];\nfor (const m of LGPE_MOVES) {\n  delete SS[m];\n}\n\nconst SV_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Aerial Ace': {isSlicing: true},\n  'Air Cutter': {isSlicing: true, isWind: true},\n  'Air Slash': {isSlicing: true},\n  'Behemoth Blade': {isSlicing: true},\n  Blizzard: {isWind: true},\n  'Cross Poison': {isSlicing: true},\n  Cut: {isSlicing: true},\n  'Fairy Wind': {isWind: true},\n  'Fury Cutter': {isSlicing: true},\n  'Glacial Lance': {bp: 120, zp: 190},\n  'Grassy Glide': {bp: 60, zp: 120, maxPower: 110},\n  Gust: {isWind: true},\n  'Heat Wave': {isWind: true},\n  Hurricane: {isWind: true},\n  'Icy Wind': {isWind: true},\n  'Leaf Blade': {isSlicing: true},\n  'Night Slash': {isSlicing: true},\n  'Petal Blizzard': {isWind: true},\n  'Psycho Cut': {isSlicing: true},\n  'Razor Leaf': {isSlicing: true},\n  'Razor Shell': {isSlicing: true},\n  'Sacred Sword': {isSlicing: true},\n  Sandstorm: {isWind: true},\n  Slash: {isSlicing: true},\n  'Solar Blade': {isSlicing: true},\n  Tailwind: {isWind: true},\n  Twister: {isWind: true},\n  Whirlwind: {isWind: true},\n  'Wicked Blow': {bp: 75, zp: 140},\n  'X-Scissor': {isSlicing: true},\n  'Aqua Cutter': {\n    bp: 70,\n    type: 'Water',\n    category: 'Physical',\n    zp: 140,\n    maxPower: 120,\n    isSlicing: true,\n  },\n  'Aqua Step': {\n    bp: 80,\n    type: 'Water',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    makesContact: true,\n  },\n  'Armor Cannon': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Axe Kick': {\n    bp: 120,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 95,\n    secondaries: true,\n    hasCrashDamage: true,\n    makesContact: true,\n  },\n  'Barb Barrage': {\n    bp: 60,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 80,\n    secondaries: true,\n  },\n  'Bitter Blade': {\n    bp: 90,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n    drain: [1, 2],\n  },\n  'Bitter Malice': {\n    bp: 75,\n    type: 'Ghost',\n    category: 'Special',\n    zp: 140,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Blazing Torque': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Bleakwind Storm': {\n    bp: 100,\n    type: 'Flying',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Ceaseless Edge': {\n    bp: 65,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 120,\n    makesContact: true,\n    isSlicing: true,\n    secondaries: true,\n  },\n  'Chilling Water': {\n    bp: 50,\n    type: 'Water',\n    category: 'Special',\n    zp: 100,\n    maxPower: 100,\n    secondaries: true,\n  },\n  'Chilly Reception': {\n    bp: 0,\n    type: 'Ice',\n    category: 'Status',\n  },\n  'Chloroblast': {\n    bp: 150,\n    type: 'Grass',\n    mindBlownRecoil: true,\n    category: 'Special',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Collision Course': {\n    bp: 100,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    makesContact: true, // Deals 1.3x on super effective\n  },\n  'Combat Torque': {\n    bp: 100,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    secondaries: true,\n  },\n  Comeuppance: {\n    bp: 0,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n  },\n  Doodle: {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Double Shock': {\n    bp: 120,\n    type: 'Electric',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n  },\n  'Dire Claw': {\n    bp: 80,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 90,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Electro Drift': {\n    bp: 100,\n    type: 'Electric',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true, // deals 1.3x on super effective\n  },\n  'Esper Wing': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Fillet Away': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Flower Trick': {\n    bp: 70,\n    type: 'Grass',\n    category: 'Physical',\n    willCrit: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Gigaton Hammer': {\n    bp: 160,\n    type: 'Steel',\n    category: 'Physical',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Glaive Rush': {\n    bp: 120,\n    type: 'Dragon',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n  },\n  'Headlong Rush': {\n    bp: 120,\n    type: 'Ground',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n    isPunch: true,\n  },\n  'Hydro Steam': {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Hyper Drill': {\n    bp: 100,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true,\n    breaksProtect: true,\n  },\n  'Ice Spinner': {\n    bp: 80,\n    type: 'Ice',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Infernal Parade': {\n    bp: 60,\n    type: 'Ghost',\n    category: 'Special',\n    zp: 120,\n    maxPower: 110,\n    secondaries: true,\n  },\n  'Jet Punch': {\n    bp: 60,\n    type: 'Water',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 110,\n    makesContact: true,\n    isPunch: true,\n    priority: 1,\n    // Sheer Force boost implemented in gen789.ts\n  },\n  'Kowtow Cleave': {\n    bp: 85,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n  },\n  'Last Respects': {\n    bp: 50,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n  },\n  'Lumina Crash': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Lunar Blessing': {\n    bp: 0,\n    type: 'Psychic',\n    category: 'Status',\n  },\n  'Magical Torque': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Make It Rain': {\n    bp: 120,\n    type: 'Steel',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n    target: 'allAdjacentFoes',\n    self: {boosts: {spa: -1}},\n  },\n  'Mortal Spin': {\n    bp: 30,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 70,\n    makesContact: true,\n    secondaries: true,\n    target: 'allAdjacentFoes',\n  },\n  'Mountain Gale': {\n    bp: 100,\n    type: 'Ice',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Mystical Power': {\n    bp: 70,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 140,\n    maxPower: 120,\n    secondaries: true,\n  },\n  'Noxious Torque': {\n    bp: 100,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Order Up': {\n    bp: 80,\n    type: 'Dragon',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    isPulse: true,\n    // Sheer Force boost implemented in gen789.ts\n  },\n  'Population Bomb': {\n    bp: 20,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    makesContact: true,\n    isSlicing: true,\n    multihit: [2, 10],\n  },\n  Pounce: {\n    bp: 50,\n    type: 'Bug',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Power Shift': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Psyblade: {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n  },\n  'Psyshield Bash': {\n    bp: 70,\n    type: 'Psychic',\n    category: 'Physical',\n    zp: 140,\n    maxPower: 120,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Rage Fist': {\n    bp: 50,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n    isPunch: true,\n  },\n  'Raging Bull': {\n    bp: 90,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Raging Fury': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Revival Blessing': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Ruination: {\n    bp: 0,\n    type: 'Dark',\n    category: 'Special',\n    zp: 100,\n    maxPower: 100,\n  },\n  'Salt Cure': {\n    bp: 40,\n    type: 'Rock',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Sandsear Storm': {\n    bp: 100,\n    type: 'Ground',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Shed Tail': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Shelter: {\n    bp: 0,\n    type: 'Steel',\n    category: 'Status',\n  },\n  'Silk Trap': {\n    bp: 0,\n    type: 'Bug',\n    category: 'Status',\n    priority: 4,\n  },\n  Snowscape: {\n    bp: 0,\n    type: 'Ice',\n    category: 'Status',\n  },\n  'Spicy Extract': {\n    bp: 0,\n    type: 'Grass',\n    category: 'Status',\n  },\n  'Spin Out': {\n    bp: 100,\n    type: 'Steel',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Springtide Storm': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Stone Axe': {\n    bp: 65,\n    type: 'Rock',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 120,\n    makesContact: true,\n    isSlicing: true,\n    secondaries: true,\n  },\n  'Take Heart': {\n    bp: 0,\n    type: 'Psychic',\n    category: 'Status',\n  },\n  'Tera Blast': {\n    bp: 80,\n    type: 'Normal',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Tidy Up': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Torch Song': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    isSound: true,\n  },\n  Trailblaze: {\n    bp: 50,\n    type: 'Grass',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    secondaries: true,\n    makesContact: true,\n  },\n  'Triple Arrows': {\n    bp: 90,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Triple Dive': {\n    bp: 30,\n    type: 'Water',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    makesContact: true,\n    multihit: 3,\n  },\n  'Twin Beam': {\n    bp: 40,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 100,\n    maxPower: 90,\n    multihit: 2,\n  },\n  'Victory Dance': {\n    bp: 0,\n    type: 'Fighting',\n    category: 'Status',\n  },\n  'Wave Crash': {\n    bp: 120,\n    type: 'Water',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n    recoil: [33, 100],\n  },\n  'Wicked Torque': {\n    bp: 80,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Wildbolt Storm': {\n    bp: 100,\n    type: 'Electric',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n};\n\nconst SV: {[name: string]: MoveData} = extend(true, {}, SS, SV_PATCH);\n\nconst RAID_CHEERS_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Attack Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n  },\n  'Defense Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n  },\n  'Heal Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n  }\n}\n\nconst RAID: {[name: string]: MoveData} = extend(true, {}, SV, RAID_CHEERS_PATCH);\n\nexport const MOVES = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV, RAID];\n\nexport class Moves implements I.Moves {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return MOVES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in MOVES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Move implements I.Move {\n  readonly kind: 'Move';\n  readonly id: I.ID;\n  readonly name: I.MoveName;\n  readonly basePower!: number;\n  readonly type!: I.TypeName;\n  readonly category?: I.MoveCategory;\n  readonly flags: I.MoveFlags;\n  readonly secondaries?: boolean;\n  readonly target?: I.MoveTarget;\n  readonly recoil?: [number, number];\n  readonly hasCrashDamage?: boolean;\n  readonly mindBlownRecoil?: boolean;\n  readonly struggleRecoil?: boolean;\n  readonly willCrit?: boolean;\n  readonly drain?: [number, number];\n  readonly priority?: number;\n  readonly self?: I.SelfOrSecondaryEffect | null;\n  readonly ignoreDefensive?: boolean;\n  readonly overrideOffensiveStat?: I.StatIDExceptHP;\n  readonly overrideDefensiveStat?: I.StatIDExceptHP;\n  readonly overrideOffensivePokemon?: 'target' | 'source';\n  readonly overrideDefensivePokemon?: 'target' | 'source';\n  readonly breaksProtect?: boolean;\n  readonly isZ?: boolean;\n  readonly zMove?: {\n    basePower?: number;\n  };\n  readonly isMax?: boolean;\n  readonly maxMove?: {\n    basePower: number;\n  };\n  readonly zp?: number;\n  readonly maxPower?: number;\n  readonly multihit?: number | number[];\n\n  private static readonly FLAGS = new Set([\n    'bp',\n    'makesContact',\n    'isPunch',\n    'isBite',\n    'isBullet',\n    'isSound',\n    'isPulse',\n    'zp',\n    'maxPower',\n    'isSlicing',\n    'isWind',\n  ]);\n\n  constructor(name: string, data: MoveData, gen: number) {\n    this.kind = 'Move';\n    this.id = toID(name);\n    this.name = name as I.MoveName;\n\n    // TODO: remove this once MoveData is migrated to flags and Object.assign just handles this\n    this.flags = {};\n    if (data.makesContact) this.flags.contact = 1;\n    if (data.isPunch) this.flags.punch = 1;\n    if (data.isBite) this.flags.bite = 1;\n    if (data.isBullet) this.flags.bullet = 1;\n    if (data.isSound) this.flags.sound = 1;\n    if (data.isPulse) this.flags.pulse = 1;\n    if (data.isSlicing) this.flags.slicing = 1;\n    if (data.isWind) this.flags.wind = 1;\n\n    assignWithout(this, data, Move.FLAGS);\n\n    this.basePower = data.bp;\n    if (data.zp) this.zMove = {basePower: data.zp};\n    if (data.maxPower) this.maxMove = {basePower: data.maxPower};\n\n    if (!this.category && gen >= 4) this.category = 'Status';\n    if (this.struggleRecoil) delete (this as any).recoil;\n  }\n}\n\nconst MOVES_BY_ID: Array<{[id: string]: Move}> = [];\n\nlet gen = 0;\nfor (const moves of MOVES) {\n  const map: {[id: string]: Move} = {};\n  for (const move in moves) {\n    const data = moves[move];\n    const m = new Move(move, data, gen);\n    map[m.id] = m;\n  }\n  MOVES_BY_ID.push(map);\n  gen++;\n}\n","import * as I from './interface';\nimport {toID, extend, DeepPartial, assignWithout} from '../util';\n\nexport interface SpeciesData {\n  readonly types: [I.TypeName] | [I.TypeName, I.TypeName];\n  // TODO: replace with baseStats\n  readonly bs: {\n    hp: number;\n    at: number;\n    df: number;\n    sa?: number;\n    sd?: number;\n    sp: number;\n    sl?: number;\n  };\n  readonly weightkg: number; // weight\n  readonly nfe?: boolean;\n  readonly gender?: I.GenderName;\n  readonly otherFormes?: string[];\n  readonly baseSpecies?: string;\n  readonly abilities?: {0: string}; // ability\n}\n\nconst RBY: {[name: string]: SpeciesData} = {\n  // Abra: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 25, at: 20, df: 15, sp: 90, sl: 105},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  // Aerodactyl: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 80, at: 105, df: 65, sp: 130, sl: 60},\n  //   weightkg: 59,\n  // },\n  // Alakazam: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 50, df: 45, sp: 120, sl: 135},\n  //   weightkg: 48,\n  // },\n  // Arbok: {types: ['Poison'], bs: {hp: 60, at: 85, df: 69, sp: 80, sl: 65}, weightkg: 65},\n  Arcanine: {\n    types: ['Fire'],\n    bs: {hp: 90, at: 110, df: 80, sp: 95, sl: 80},\n    weightkg: 155,\n  },\n  Articuno: {\n    types: ['Ice', 'Flying'],\n    bs: {hp: 90, at: 85, df: 100, sp: 85, sl: 125},\n    weightkg: 55.4,\n  },\n  // Beedrill: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 65, at: 80, df: 40, sp: 75, sl: 45},\n  //   weightkg: 29.5,\n  // },\n  // Bellsprout: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 50, at: 75, df: 35, sp: 40, sl: 70},\n  //   weightkg: 4,\n  //   nfe: true,\n  // },\n  // Blastoise: {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 83, df: 100, sp: 78, sl: 85},\n  //   weightkg: 85.5,\n  // },\n  // Bulbasaur: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 45, at: 49, df: 49, sp: 45, sl: 65},\n  //   weightkg: 6.9,\n  //   nfe: true,\n  // },\n  // Butterfree: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 45, df: 50, sp: 70, sl: 80},\n  //   weightkg: 32,\n  // },\n  // Caterpie: {\n  //   types: ['Bug'],\n  //   bs: {hp: 45, at: 30, df: 35, sp: 45, sl: 20},\n  //   weightkg: 2.9,\n  //   nfe: true,\n  // },\n  Chansey: {\n    types: ['Normal'],\n    bs: {hp: 250, at: 5, df: 5, sp: 50, sl: 105},\n    weightkg: 34.6,\n  },\n  Charizard: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 78, at: 84, df: 78, sp: 100, sl: 85},\n    weightkg: 90.5,\n  },\n  Charmander: {\n    types: ['Fire'],\n    bs: {hp: 39, at: 52, df: 43, sp: 65, sl: 50},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  Charmeleon: {\n    types: ['Fire'],\n    bs: {hp: 58, at: 64, df: 58, sp: 80, sl: 65},\n    weightkg: 19,\n    nfe: true,\n  },\n  // Clefable: {types: ['Normal'], bs: {hp: 95, at: 70, df: 73, sp: 60, sl: 85}, weightkg: 40},\n  // Clefairy: {\n  //   types: ['Normal'],\n  //   bs: {hp: 70, at: 45, df: 48, sp: 35, sl: 60},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  // },\n  Cloyster: {\n    types: ['Water', 'Ice'],\n    bs: {hp: 50, at: 95, df: 180, sp: 70, sl: 85},\n    weightkg: 132.5,\n  },\n  // Cubone: {\n  //   types: ['Ground'],\n  //   bs: {hp: 50, at: 50, df: 95, sp: 35, sl: 40},\n  //   weightkg: 6.5,\n  //   nfe: true,\n  // },\n  // Dewgong: {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 90, at: 70, df: 80, sp: 70, sl: 95},\n  //   weightkg: 120,\n  // },\n  Diglett: {\n    types: ['Ground'],\n    bs: {hp: 10, at: 55, df: 25, sp: 95, sl: 45},\n    weightkg: 0.8,\n    nfe: true,\n  },\n  Ditto: {types: ['Normal'], bs: {hp: 48, at: 48, df: 48, sp: 48, sl: 48}, weightkg: 4},\n  // Dodrio: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 60, at: 110, df: 70, sp: 100, sl: 60},\n  //   weightkg: 85.2,\n  // },\n  // Doduo: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 35, at: 85, df: 45, sp: 75, sl: 35},\n  //   weightkg: 39.2,\n  //   nfe: true,\n  // },\n  Dragonair: {\n    types: ['Dragon'],\n    bs: {hp: 61, at: 84, df: 65, sp: 70, sl: 70},\n    weightkg: 16.5,\n    nfe: true,\n  },\n  Dragonite: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 91, at: 134, df: 95, sp: 80, sl: 100},\n    weightkg: 210,\n  },\n  Dratini: {\n    types: ['Dragon'],\n    bs: {hp: 41, at: 64, df: 45, sp: 50, sl: 50},\n    weightkg: 3.3,\n    nfe: true,\n  },\n  Drowzee: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 48, df: 45, sp: 42, sl: 90},\n    weightkg: 32.4,\n    nfe: true,\n  },\n  Dugtrio: {\n    types: ['Ground'],\n    bs: {hp: 35, at: 80, df: 50, sp: 120, sl: 70},\n    weightkg: 33.3,\n  },\n  Eevee: {\n    types: ['Normal'],\n    bs: {hp: 55, at: 55, df: 50, sp: 55, sl: 65},\n    weightkg: 6.5,\n    nfe: true,\n  },\n  // Ekans: {\n  //   types: ['Poison'],\n  //   bs: {hp: 35, at: 60, df: 44, sp: 55, sl: 40},\n  //   weightkg: 6.9,\n  //   nfe: true,\n  // },\n  // Electabuzz: {\n  //   types: ['Electric'],\n  //   bs: {hp: 65, at: 83, df: 57, sp: 105, sl: 85},\n  //   weightkg: 30,\n  // },\n  Electrode: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 50, df: 70, sp: 140, sl: 80},\n    weightkg: 66.6,\n  },\n  // Exeggcute: {\n  //   types: ['Grass', 'Psychic'],\n  //   bs: {hp: 60, at: 40, df: 80, sp: 40, sl: 60},\n  //   weightkg: 2.5,\n  //   nfe: true,\n  // },\n  // Exeggutor: {\n  //   types: ['Grass', 'Psychic'],\n  //   bs: {hp: 95, at: 95, df: 85, sp: 55, sl: 125},\n  //   weightkg: 120,\n  // },\n  // 'Farfetch\\u2019d': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 52, at: 65, df: 55, sp: 60, sl: 58},\n  //   weightkg: 15,\n  // },\n  // Fearow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 65, at: 90, df: 65, sp: 100, sl: 61},\n  //   weightkg: 38,\n  // },\n  Flareon: {types: ['Fire'], bs: {hp: 65, at: 130, df: 60, sp: 65, sl: 110}, weightkg: 25},\n  Gastly: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 30, at: 35, df: 30, sp: 80, sl: 100},\n    weightkg: 0.1,\n    nfe: true,\n  },\n  Gengar: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 60, at: 65, df: 60, sp: 110, sl: 130},\n    weightkg: 40.5,\n  },\n  // Geodude: {\n  //   types: ['Rock', 'Ground'],\n  //   bs: {hp: 40, at: 80, df: 100, sp: 20, sl: 30},\n  //   weightkg: 20,\n  //   nfe: true,\n  // },\n  // Gloom: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 70, sp: 40, sl: 85},\n  //   weightkg: 8.6,\n  //   nfe: true,\n  // },\n  // Golbat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 75, at: 80, df: 70, sp: 90, sl: 75},\n  //   weightkg: 55,\n  // },\n  // Goldeen: {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 67, df: 60, sp: 63, sl: 50},\n  //   weightkg: 15,\n  //   nfe: true,\n  // },\n  Golduck: {types: ['Water'], bs: {hp: 80, at: 82, df: 78, sp: 85, sl: 80}, weightkg: 76.6},\n  // Golem: {\n  //   types: ['Rock', 'Ground'],\n  //   bs: {hp: 80, at: 110, df: 130, sp: 45, sl: 55},\n  //   weightkg: 300,\n  // },\n  // Graveler: {\n  //   types: ['Rock', 'Ground'],\n  //   bs: {hp: 55, at: 95, df: 115, sp: 35, sl: 45},\n  //   weightkg: 105,\n  //   nfe: true,\n  // },\n  Grimer: {\n    types: ['Poison'],\n    bs: {hp: 80, at: 80, df: 50, sp: 25, sl: 40},\n    weightkg: 30,\n    nfe: true,\n  },\n  Growlithe: {\n    types: ['Fire'],\n    bs: {hp: 55, at: 70, df: 45, sp: 60, sl: 50},\n    weightkg: 19,\n    nfe: true,\n  },\n  Gyarados: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 95, at: 125, df: 79, sp: 81, sl: 100},\n    weightkg: 235,\n  },\n  Haunter: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 45, at: 50, df: 45, sp: 95, sl: 115},\n    weightkg: 0.1,\n    nfe: true,\n  },\n  // Hitmonchan: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 105, df: 79, sp: 76, sl: 35},\n  //   weightkg: 50.2,\n  // },\n  // Hitmonlee: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 120, df: 53, sp: 87, sl: 35},\n  //   weightkg: 49.8,\n  // },\n  // Horsea: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 40, df: 70, sp: 60, sl: 70},\n  //   weightkg: 8,\n  //   nfe: true,\n  // },\n  Hypno: {\n    types: ['Psychic'],\n    bs: {hp: 85, at: 73, df: 70, sp: 67, sl: 115},\n    weightkg: 75.6,\n  },\n  // Ivysaur: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 60, at: 62, df: 63, sp: 60, sl: 80},\n  //   weightkg: 13,\n  //   nfe: true,\n  // },\n  Jigglypuff: {\n    types: ['Normal'],\n    bs: {hp: 115, at: 45, df: 20, sp: 20, sl: 25},\n    weightkg: 5.5,\n    nfe: true,\n  },\n  Jolteon: {\n    types: ['Electric'],\n    bs: {hp: 65, at: 65, df: 60, sp: 130, sl: 110},\n    weightkg: 24.5,\n  },\n  // Jynx: {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 65, at: 50, df: 35, sp: 95, sl: 95},\n  //   weightkg: 40.6,\n  // },\n  // Kabuto: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 30, at: 80, df: 90, sp: 55, sl: 45},\n  //   weightkg: 11.5,\n  //   nfe: true,\n  // },\n  // Kabutops: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 60, at: 115, df: 105, sp: 80, sl: 70},\n  //   weightkg: 40.5,\n  // },\n  // Kadabra: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 40, at: 35, df: 30, sp: 105, sl: 120},\n  //   weightkg: 56.5,\n  //   nfe: true,\n  // },\n  // Kakuna: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 45, at: 25, df: 50, sp: 35, sl: 25},\n  //   weightkg: 10,\n  //   nfe: true,\n  // },\n  // Kangaskhan: {\n  //   types: ['Normal'],\n  //   bs: {hp: 105, at: 95, df: 80, sp: 90, sl: 40},\n  //   weightkg: 80,\n  // },\n  // Kingler: {types: ['Water'], bs: {hp: 55, at: 130, df: 115, sp: 75, sl: 50}, weightkg: 60},\n  // Koffing: {\n  //   types: ['Poison'],\n  //   bs: {hp: 40, at: 65, df: 95, sp: 35, sl: 60},\n  //   weightkg: 1,\n  //   nfe: true,\n  // },\n  // Krabby: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 105, df: 90, sp: 50, sl: 25},\n  //   weightkg: 6.5,\n  //   nfe: true,\n  // },\n  // Lapras: {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 130, at: 85, df: 80, sp: 60, sl: 95},\n  //   weightkg: 220,\n  // },\n  // Lickitung: {\n  //   types: ['Normal'],\n  //   bs: {hp: 90, at: 55, df: 75, sp: 30, sl: 60},\n  //   weightkg: 65.5,\n  // },\n  // Machamp: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 90, at: 130, df: 80, sp: 55, sl: 65},\n  //   weightkg: 130,\n  // },\n  // Machoke: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 80, at: 100, df: 70, sp: 45, sl: 50},\n  //   weightkg: 70.5,\n  //   nfe: true,\n  // },\n  // Machop: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 70, at: 80, df: 50, sp: 35, sl: 35},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  Magikarp: {\n    types: ['Water'],\n    bs: {hp: 20, at: 10, df: 55, sp: 80, sl: 20},\n    weightkg: 10,\n    nfe: true,\n  },\n  // Magmar: {\n  //   types: ['Fire'],\n  //   bs: {hp: 65, at: 95, df: 57, sp: 93, sl: 85},\n  //   weightkg: 44.5,\n  // },\n  Magnemite: {\n    types: ['Electric'],\n    bs: {hp: 25, at: 35, df: 70, sp: 45, sl: 95},\n    weightkg: 6,\n    nfe: true,\n  },\n  Magneton: {\n    types: ['Electric'],\n    bs: {hp: 50, at: 60, df: 95, sp: 70, sl: 120},\n    weightkg: 60,\n  },\n  Mankey: {\n    types: ['Fighting'],\n    bs: {hp: 40, at: 80, df: 35, sp: 70, sl: 35},\n    weightkg: 28,\n    nfe: true,\n  },\n  // Marowak: {types: ['Ground'], bs: {hp: 60, at: 80, df: 110, sp: 45, sl: 50}, weightkg: 45},\n  Meowth: {\n    types: ['Normal'],\n    bs: {hp: 40, at: 45, df: 35, sp: 90, sl: 40},\n    weightkg: 4.2,\n    nfe: true,\n  },\n  // Metapod: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 20, df: 55, sp: 30, sl: 25},\n  //   weightkg: 9.9,\n  //   nfe: true,\n  // },\n  Mew: {\n    types: ['Psychic'],\n    bs: {hp: 100, at: 100, df: 100, sp: 100, sl: 100},\n    weightkg: 4,\n  },\n  Mewtwo: {\n    types: ['Psychic'],\n    bs: {hp: 106, at: 110, df: 90, sp: 130, sl: 154},\n    weightkg: 122,\n  },\n  Moltres: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 90, at: 100, df: 90, sp: 90, sl: 125},\n    weightkg: 60,\n  },\n  // 'Mr. Mime': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 40, at: 45, df: 65, sp: 90, sl: 100},\n  //   weightkg: 54.5,\n  // },\n  Muk: {types: ['Poison'], bs: {hp: 105, at: 105, df: 75, sp: 50, sl: 65}, weightkg: 30},\n  // Nidoking: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 81, at: 92, df: 77, sp: 85, sl: 75},\n  //   weightkg: 62,\n  // },\n  // Nidoqueen: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 90, at: 82, df: 87, sp: 76, sl: 75},\n  //   weightkg: 60,\n  // },\n  // 'Nidoran-F': {\n  //   types: ['Poison'],\n  //   bs: {hp: 55, at: 47, df: 52, sp: 41, sl: 40},\n  //   weightkg: 7,\n  //   nfe: true,\n  // },\n  // 'Nidoran-M': {\n  //   types: ['Poison'],\n  //   bs: {hp: 46, at: 57, df: 40, sp: 50, sl: 40},\n  //   weightkg: 9,\n  //   nfe: true,\n  // },\n  // Nidorina: {\n  //   types: ['Poison'],\n  //   bs: {hp: 70, at: 62, df: 67, sp: 56, sl: 55},\n  //   weightkg: 20,\n  //   nfe: true,\n  // },\n  // Nidorino: {\n  //   types: ['Poison'],\n  //   bs: {hp: 61, at: 72, df: 57, sp: 65, sl: 55},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  // Ninetales: {\n  //   types: ['Fire'],\n  //   bs: {hp: 73, at: 76, df: 75, sp: 100, sl: 100},\n  //   weightkg: 19.9,\n  // },\n  // Oddish: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 45, at: 50, df: 55, sp: 30, sl: 75},\n  //   weightkg: 5.4,\n  //   nfe: true,\n  // },\n  // Omanyte: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 35, at: 40, df: 100, sp: 35, sl: 90},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  // },\n  // Omastar: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 70, at: 60, df: 125, sp: 55, sl: 115},\n  //   weightkg: 35,\n  // },\n  // Onix: {\n  //   types: ['Rock', 'Ground'],\n  //   bs: {hp: 35, at: 45, df: 160, sp: 70, sl: 30},\n  //   weightkg: 210,\n  // },\n  // Paras: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 35, at: 70, df: 55, sp: 25, sl: 55},\n  //   weightkg: 5.4,\n  //   nfe: true,\n  // },\n  // Parasect: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 60, at: 95, df: 80, sp: 30, sl: 80},\n  //   weightkg: 29.5,\n  // },\n  Persian: {types: ['Normal'], bs: {hp: 65, at: 70, df: 60, sp: 115, sl: 65}, weightkg: 32},\n  // Pidgeot: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 83, at: 80, df: 75, sp: 91, sl: 70},\n  //   weightkg: 39.5,\n  // },\n  // Pidgeotto: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 63, at: 60, df: 55, sp: 71, sl: 50},\n  //   weightkg: 30,\n  //   nfe: true,\n  // },\n  // Pidgey: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 45, df: 40, sp: 56, sl: 35},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  // },\n  Pikachu: {\n    types: ['Electric'],\n    bs: {hp: 35, at: 55, df: 30, sp: 90, sl: 50},\n    weightkg: 6,\n    nfe: true,\n  },\n  // Pinsir: {types: ['Bug'], bs: {hp: 65, at: 125, df: 100, sp: 85, sl: 55}, weightkg: 55},\n  // Poliwag: {\n  //   types: ['Water'],\n  //   bs: {hp: 40, at: 50, df: 40, sp: 90, sl: 40},\n  //   weightkg: 12.4,\n  //   nfe: true,\n  // },\n  // Poliwhirl: {\n  //   types: ['Water'],\n  //   bs: {hp: 65, at: 65, df: 65, sp: 90, sl: 50},\n  //   weightkg: 20,\n  //   nfe: true,\n  // },\n  // Poliwrath: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 90, at: 85, df: 95, sp: 70, sl: 70},\n  //   weightkg: 54,\n  // },\n  // Ponyta: {\n  //   types: ['Fire'],\n  //   bs: {hp: 50, at: 85, df: 55, sp: 90, sl: 65},\n  //   weightkg: 30,\n  //   nfe: true,\n  // },\n  // Porygon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 60, df: 70, sp: 40, sl: 75},\n  //   weightkg: 36.5,\n  // },\n  Primeape: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 105, df: 60, sp: 95, sl: 60},\n    weightkg: 32,\n  },\n  Psyduck: {\n    types: ['Water'],\n    bs: {hp: 50, at: 52, df: 48, sp: 55, sl: 50},\n    weightkg: 19.6,\n    nfe: true,\n  },\n  Raichu: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 90, df: 55, sp: 100, sl: 90},\n    weightkg: 30,\n  },\n  Rapidash: {types: ['Fire'], bs: {hp: 65, at: 100, df: 70, sp: 105, sl: 80}, weightkg: 95},\n  Raticate: {\n    types: ['Normal'],\n    bs: {hp: 55, at: 81, df: 60, sp: 97, sl: 50},\n    weightkg: 18.5,\n  },\n  Rattata: {\n    types: ['Normal'],\n    bs: {hp: 30, at: 56, df: 35, sp: 72, sl: 25},\n    weightkg: 3.5,\n    nfe: true,\n  },\n  // Rhydon: {\n  //   types: ['Ground', 'Rock'],\n  //   bs: {hp: 105, at: 130, df: 120, sp: 40, sl: 45},\n  //   weightkg: 120,\n  // },\n  // Rhyhorn: {\n  //   types: ['Ground', 'Rock'],\n  //   bs: {hp: 80, at: 85, df: 95, sp: 25, sl: 30},\n  //   weightkg: 115,\n  //   nfe: true,\n  // },\n  // Sandshrew: {\n  //   types: ['Ground'],\n  //   bs: {hp: 50, at: 75, df: 85, sp: 40, sl: 30},\n  //   weightkg: 12,\n  //   nfe: true,\n  // },\n  // Sandslash: {\n  //   types: ['Ground'],\n  //   bs: {hp: 75, at: 100, df: 110, sp: 65, sl: 55},\n  //   weightkg: 29.5,\n  // },\n  Scyther: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 110, df: 80, sp: 105, sl: 55},\n    weightkg: 56,\n  },\n  // Seadra: {types: ['Water'], bs: {hp: 55, at: 65, df: 95, sp: 85, sl: 95}, weightkg: 25},\n  // Seaking: {types: ['Water'], bs: {hp: 80, at: 92, df: 65, sp: 68, sl: 80}, weightkg: 39},\n  // Seel: {\n  //   types: ['Water'],\n  //   bs: {hp: 65, at: 45, df: 55, sp: 45, sl: 70},\n  //   weightkg: 90,\n  //   nfe: true,\n  // },\n  Shellder: {\n    types: ['Water'],\n    bs: {hp: 30, at: 65, df: 100, sp: 40, sl: 45},\n    weightkg: 4,\n    nfe: true,\n  },\n  Slowbro: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 95, at: 75, df: 110, sp: 30, sl: 80},\n    weightkg: 78.5,\n  },\n  Slowpoke: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 90, at: 65, df: 65, sp: 15, sl: 40},\n    weightkg: 36,\n    nfe: true,\n  },\n  // Snorlax: {\n  //   types: ['Normal'],\n  //   bs: {hp: 160, at: 110, df: 65, sp: 30, sl: 65},\n  //   weightkg: 460,\n  // },\n  // Spearow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 60, df: 30, sp: 70, sl: 31},\n  //   weightkg: 2,\n  //   nfe: true,\n  // },\n  // Squirtle: {\n  //   types: ['Water'],\n  //   bs: {hp: 44, at: 48, df: 65, sp: 43, sl: 50},\n  //   weightkg: 9,\n  //   nfe: true,\n  // },\n  // Starmie: {\n  //   types: ['Water', 'Psychic'],\n  //   bs: {hp: 60, at: 75, df: 85, sp: 115, sl: 100},\n  //   weightkg: 80,\n  // },\n  // Staryu: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 45, df: 55, sp: 85, sl: 70},\n  //   weightkg: 34.5,\n  //   nfe: true,\n  // },\n  // Tangela: {\n  //   types: ['Grass'],\n  //   bs: {hp: 65, at: 55, df: 115, sp: 60, sl: 100},\n  //   weightkg: 35,\n  // },\n  Tauros: {\n    types: ['Normal'],\n    bs: {hp: 75, at: 100, df: 95, sp: 110, sl: 70},\n    weightkg: 88.4,\n  },\n  // Tentacool: {\n  //   types: ['Water', 'Poison'],\n  //   bs: {hp: 40, at: 40, df: 35, sp: 70, sl: 100},\n  //   weightkg: 45.5,\n  //   nfe: true,\n  // },\n  // Tentacruel: {\n  //   types: ['Water', 'Poison'],\n  //   bs: {hp: 80, at: 70, df: 65, sp: 100, sl: 120},\n  //   weightkg: 55,\n  // },\n  Vaporeon: {\n    types: ['Water'],\n    bs: {hp: 130, at: 65, df: 60, sp: 65, sl: 110},\n    weightkg: 29,\n  },\n  Venomoth: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 70, at: 65, df: 60, sp: 90, sl: 90},\n    weightkg: 12.5,\n  },\n  Venonat: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 60, at: 55, df: 50, sp: 45, sl: 40},\n    weightkg: 30,\n    nfe: true,\n  },\n  // Venusaur: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 82, df: 83, sp: 80, sl: 100},\n  //   weightkg: 100,\n  // },\n  // Victreebel: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 105, df: 65, sp: 70, sl: 100},\n  //   weightkg: 15.5,\n  // },\n  // Vileplume: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 75, at: 80, df: 85, sp: 50, sl: 100},\n  //   weightkg: 18.6,\n  // },\n  Voltorb: {\n    types: ['Electric'],\n    bs: {hp: 40, at: 30, df: 50, sp: 100, sl: 55},\n    weightkg: 10.4,\n    nfe: true,\n  },\n  // Vulpix: {\n  //   types: ['Fire'],\n  //   bs: {hp: 38, at: 41, df: 40, sp: 65, sl: 65},\n  //   weightkg: 9.9,\n  //   nfe: true,\n  // },\n  // Wartortle: {\n  //   types: ['Water'],\n  //   bs: {hp: 59, at: 63, df: 80, sp: 58, sl: 65},\n  //   weightkg: 22.5,\n  //   nfe: true,\n  // },\n  // Weedle: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 40, at: 35, df: 30, sp: 50, sl: 20},\n  //   weightkg: 3.2,\n  //   nfe: true,\n  // },\n  // Weepinbell: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 65, at: 90, df: 50, sp: 55, sl: 85},\n  //   weightkg: 6.4,\n  //   nfe: true,\n  // },\n  // Weezing: {\n  //   types: ['Poison'],\n  //   bs: {hp: 65, at: 90, df: 120, sp: 60, sl: 85},\n  //   weightkg: 9.5,\n  // },\n  Wigglytuff: {\n    types: ['Normal'],\n    bs: {hp: 140, at: 70, df: 45, sp: 45, sl: 50},\n    weightkg: 12,\n  },\n  Zapdos: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 90, at: 90, df: 85, sp: 100, sl: 125},\n    weightkg: 52.6,\n  },\n  // Zubat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 40, at: 45, df: 35, sp: 55, sl: 40},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  // },\n};\n\nconst GSC_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // gen 1 pokemon changes\n  // Abra: {bs: {sa: 105, sd: 55}},\n  // Aerodactyl: {bs: {sa: 60, sd: 75}},\n  // Alakazam: {bs: {sa: 135, sd: 85}},\n  // Arbok: {bs: {sa: 65, sd: 79}},\n  Arcanine: {bs: {sa: 100, sd: 80}},\n  Articuno: {bs: {sa: 95, sd: 125}, gender: 'N'},\n  // Beedrill: {bs: {sa: 45, sd: 80}},\n  // Bellsprout: {bs: {sa: 70, sd: 30}},\n  // Blastoise: {bs: {sa: 85, sd: 105}},\n  // Bulbasaur: {bs: {sa: 65, sd: 65}},\n  // Butterfree: {bs: {sa: 80, sd: 80}},\n  // Caterpie: {bs: {sa: 20, sd: 20}},\n  Chansey: {bs: {sa: 35, sd: 105}, nfe: true},\n  Charizard: {bs: {sa: 109, sd: 85}},\n  Charmander: {bs: {sa: 60, sd: 50}},\n  Charmeleon: {bs: {sa: 80, sd: 65}},\n  // Clefable: {bs: {sa: 85, sd: 90}},\n  // Clefairy: {bs: {sa: 60, sd: 65}},\n  Cloyster: {bs: {sa: 85, sd: 45}},\n  // Cubone: {bs: {sa: 40, sd: 50}},\n  // Dewgong: {bs: {sa: 70, sd: 95}},\n  Diglett: {bs: {sa: 35, sd: 45}},\n  Ditto: {bs: {sa: 48, sd: 48}, gender: 'N'},\n  // Dodrio: {bs: {sa: 60, sd: 60}},\n  // Doduo: {bs: {sa: 35, sd: 35}},\n  Dragonair: {bs: {sa: 70, sd: 70}},\n  Dragonite: {bs: {sa: 100, sd: 100}},\n  Dratini: {bs: {sa: 50, sd: 50}},\n  Drowzee: {bs: {sa: 43, sd: 90}},\n  Dugtrio: {bs: {sa: 50, sd: 70}},\n  Eevee: {bs: {sa: 45, sd: 65}},\n  // Ekans: {bs: {sa: 40, sd: 54}},\n  // Electabuzz: {bs: {sa: 95, sd: 85}},\n  Electrode: {bs: {sa: 80, sd: 80}, gender: 'N'},\n  // Exeggcute: {bs: {sa: 60, sd: 45}},\n  // Exeggutor: {bs: {sa: 125, sd: 65}},\n  // 'Farfetch\\u2019d': {bs: {sa: 58, sd: 62}},\n  // Fearow: {bs: {sa: 61, sd: 61}},\n  Flareon: {bs: {sa: 95, sd: 110}},\n  Gastly: {bs: {sa: 100, sd: 35}},\n  Gengar: {bs: {sa: 130, sd: 75}},\n  // Geodude: {bs: {sa: 30, sd: 30}},\n  // Gloom: {bs: {sa: 85, sd: 75}},\n  // Golbat: {bs: {sa: 65, sd: 75}, nfe: true},\n  // Goldeen: {bs: {sa: 35, sd: 50}},\n  Golduck: {bs: {sa: 95, sd: 80}},\n  // Golem: {bs: {sa: 55, sd: 65}},\n  // Graveler: {bs: {sa: 45, sd: 45}},\n  Grimer: {bs: {sa: 40, sd: 50}},\n  Growlithe: {bs: {sa: 70, sd: 50}},\n  Gyarados: {bs: {sa: 60, sd: 100}},\n  Haunter: {bs: {sa: 115, sd: 55}},\n  // Hitmonchan: {bs: {sa: 35, sd: 110}},\n  // Hitmonlee: {bs: {sa: 35, sd: 110}},\n  // Horsea: {bs: {sa: 70, sd: 25}},\n  Hypno: {bs: {sa: 73, sd: 115}},\n  // Ivysaur: {bs: {sa: 80, sd: 80}},\n  Jigglypuff: {bs: {sa: 45, sd: 25}},\n  Jolteon: {bs: {sa: 110, sd: 95}},\n  // Jynx: {bs: {sa: 115, sd: 95}},\n  // Kabuto: {bs: {sa: 55, sd: 45}},\n  // Kabutops: {bs: {sa: 65, sd: 70}},\n  // Kadabra: {bs: {sa: 120, sd: 70}},\n  // Kakuna: {bs: {sa: 25, sd: 25}},\n  // Kangaskhan: {bs: {sa: 40, sd: 80}},\n  // Kingler: {bs: {sa: 50, sd: 50}},\n  // Koffing: {bs: {sa: 60, sd: 45}},\n  // Krabby: {bs: {sa: 25, sd: 25}},\n  // Lapras: {bs: {sa: 85, sd: 95}},\n  // Lickitung: {bs: {sa: 60, sd: 75}},\n  // Machamp: {bs: {sa: 65, sd: 85}},\n  // Machoke: {bs: {sa: 50, sd: 60}},\n  // Machop: {bs: {sa: 35, sd: 35}},\n  Magikarp: {bs: {sa: 15, sd: 20}},\n  // Magmar: {bs: {sa: 100, sd: 85}},\n  Magnemite: {types: ['Electric', 'Steel'], bs: {sa: 95, sd: 55}, gender: 'N'},\n  Magneton: {types: ['Electric', 'Steel'], bs: {sa: 120, sd: 70}, gender: 'N'},\n  Mankey: {bs: {sa: 35, sd: 45}},\n  // Marowak: {bs: {sa: 50, sd: 80}},\n  Meowth: {bs: {sa: 40, sd: 40}},\n  // Metapod: {bs: {sa: 25, sd: 25}},\n  Mew: {bs: {sa: 100, sd: 100}, gender: 'N'},\n  Mewtwo: {bs: {sa: 154, sd: 90}, gender: 'N'},\n  Moltres: {bs: {sa: 125, sd: 85}, gender: 'N'},\n  'Mr. Mime': {bs: {sa: 100, sd: 120}},\n  Muk: {bs: {sa: 65, sd: 100}},\n  // Nidoking: {bs: {sa: 85, sd: 75}},\n  // Nidoqueen: {bs: {sa: 75, sd: 85}},\n  // 'Nidoran-F': {bs: {sa: 40, sd: 40}},\n  // 'Nidoran-M': {bs: {sa: 40, sd: 40}},\n  // Nidorina: {bs: {sa: 55, sd: 55}},\n  // Nidorino: {bs: {sa: 55, sd: 55}},\n  // Ninetales: {bs: {sa: 81, sd: 100}},\n  // Oddish: {bs: {sa: 75, sd: 65}},\n  // Omanyte: {bs: {sa: 90, sd: 55}},\n  // Omastar: {bs: {sa: 115, sd: 70}},\n  // Onix: {bs: {sa: 30, sd: 45}, nfe: true},\n  // Paras: {bs: {sa: 45, sd: 55}},\n  // Parasect: {bs: {sa: 60, sd: 80}},\n  Persian: {bs: {sa: 65, sd: 65}},\n  // Pidgeot: {bs: {sa: 70, sd: 70}},\n  // Pidgeotto: {bs: {sa: 50, sd: 50}},\n  // Pidgey: {bs: {sa: 35, sd: 35}},\n  Pikachu: {bs: {sa: 50, sd: 40}},\n  // Pinsir: {bs: {sa: 55, sd: 70}},\n  // Poliwag: {bs: {sa: 40, sd: 40}},\n  // Poliwhirl: {bs: {sa: 50, sd: 50}},\n  // Poliwrath: {bs: {sa: 70, sd: 90}},\n  // Ponyta: {bs: {sa: 65, sd: 65}},\n  // Porygon: {bs: {sa: 85, sd: 75}, nfe: true, gender: 'N'},\n  Primeape: {bs: {sa: 60, sd: 70}},\n  Psyduck: {bs: {sa: 65, sd: 50}},\n  Raichu: {bs: {sa: 90, sd: 80}},\n  // Rapidash: {bs: {sa: 80, sd: 80}},\n  // Raticate: {bs: {sa: 50, sd: 70}},\n  // Rattata: {bs: {sa: 25, sd: 35}},\n  // Rhydon: {bs: {sa: 45, sd: 45}},\n  // Rhyhorn: {bs: {sa: 30, sd: 30}},\n  // Sandshrew: {bs: {sa: 20, sd: 30}},\n  // Sandslash: {bs: {sa: 45, sd: 55}},\n  Scyther: {bs: {sa: 55, sd: 80}, nfe: true},\n  // Seadra: {bs: {sa: 95, sd: 45}, nfe: true},\n  // Seaking: {bs: {sa: 65, sd: 80}},\n  // Seel: {bs: {sa: 45, sd: 70}},\n  Shellder: {bs: {sa: 45, sd: 25}},\n  Slowbro: {bs: {sa: 100, sd: 80}},\n  Slowpoke: {bs: {sa: 40, sd: 40}},\n  // Snorlax: {bs: {sa: 65, sd: 110}},\n  // Spearow: {bs: {sa: 31, sd: 31}},\n  // Squirtle: {bs: {sa: 50, sd: 64}},\n  // Starmie: {bs: {sa: 100, sd: 85}, gender: 'N'},\n  // Staryu: {bs: {sa: 70, sd: 55}, gender: 'N'},\n  // Tangela: {bs: {sa: 100, sd: 40}},\n  Tauros: {bs: {sa: 40, sd: 70}},\n  // Tentacool: {bs: {sa: 50, sd: 100}},\n  // Tentacruel: {bs: {sa: 80, sd: 120}},\n  Vaporeon: {bs: {sa: 110, sd: 95}},\n  Venomoth: {bs: {sa: 90, sd: 75}},\n  Venonat: {bs: {sa: 40, sd: 55}},\n  // Venusaur: {bs: {sa: 100, sd: 100}},\n  // Victreebel: {bs: {sa: 100, sd: 60}},\n  // Vileplume: {bs: {sa: 100, sd: 90}},\n  Voltorb: {bs: {sa: 55, sd: 55}, gender: 'N'},\n  // Vulpix: {bs: {sa: 50, sd: 65}},\n  // Wartortle: {bs: {sa: 65, sd: 80}},\n  // Weedle: {bs: {sa: 20, sd: 20}},\n  // Weepinbell: {bs: {sa: 85, sd: 45}},\n  // Weezing: {bs: {sa: 85, sd: 70}},\n  Wigglytuff: {bs: {sa: 75, sd: 50}},\n  Zapdos: {bs: {sa: 125, sd: 90}, gender: 'N'},\n  // Zubat: {bs: {sa: 30, sd: 40}},\n  // gen 2 pokemon\n  // Aipom: {types: ['Normal'], bs: {hp: 55, at: 70, df: 55, sa: 40, sd: 55, sp: 85}, weightkg: 11.5},\n  Ampharos: {\n    types: ['Electric'],\n    bs: {hp: 90, at: 75, df: 75, sa: 115, sd: 90, sp: 55},\n    weightkg: 61.5,\n  },\n  // Ariados: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 70, at: 90, df: 70, sa: 60, sd: 60, sp: 40},\n  //   weightkg: 33.5,\n  // },\n  Azumarill: {\n    types: ['Water'],\n    bs: {hp: 100, at: 50, df: 80, sa: 50, sd: 80, sp: 50},\n    weightkg: 28.5,\n  },\n  // Bayleef: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 62, df: 80, sa: 63, sd: 80, sp: 60},\n  //   weightkg: 15.8,\n  //   nfe: true,\n  // },\n  // Bellossom: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 80, df: 85, sa: 90, sd: 100, sp: 50},\n  //   weightkg: 5.8,\n  // },\n  Blissey: {\n    types: ['Normal'],\n    bs: {hp: 255, at: 10, df: 10, sa: 75, sd: 135, sp: 55},\n    weightkg: 46.8,\n  },\n  // Celebi: {\n  //   types: ['Psychic', 'Grass'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 5,\n  //   gender: 'N',\n  // },\n  // Chikorita: {\n  //   types: ['Grass'],\n  //   bs: {hp: 45, at: 49, df: 65, sa: 49, sd: 65, sp: 45},\n  //   weightkg: 6.4,\n  //   nfe: true,\n  // },\n  // Chinchou: {\n  //   types: ['Water', 'Electric'],\n  //   bs: {hp: 75, at: 38, df: 38, sa: 56, sd: 56, sp: 67},\n  //   weightkg: 12,\n  //   nfe: true,\n  // },\n  // Cleffa: {\n  //   types: ['Normal'],\n  //   bs: {hp: 50, at: 25, df: 28, sa: 45, sd: 55, sp: 15},\n  //   weightkg: 3,\n  //   nfe: true,\n  // },\n  // Corsola: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 55, at: 55, df: 85, sa: 65, sd: 85, sp: 35},\n  //   weightkg: 5,\n  // },\n  // Crobat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 90, df: 80, sa: 70, sd: 80, sp: 130},\n  //   weightkg: 75,\n  // },\n  // Croconaw: {\n  //   types: ['Water'],\n  //   bs: {hp: 65, at: 80, df: 80, sa: 59, sd: 63, sp: 58},\n  //   weightkg: 25,\n  //   nfe: true,\n  // },\n  Cyndaquil: {\n    types: ['Fire'],\n    bs: {hp: 39, at: 52, df: 43, sa: 60, sd: 50, sp: 65},\n    weightkg: 7.9,\n    nfe: true,\n  },\n  Delibird: {\n    types: ['Ice', 'Flying'],\n    bs: {hp: 45, at: 55, df: 45, sa: 65, sd: 45, sp: 75},\n    weightkg: 16,\n  },\n  Donphan: {\n    types: ['Ground'],\n    bs: {hp: 90, at: 120, df: 120, sa: 60, sd: 60, sp: 50},\n    weightkg: 120,\n  },\n  Dunsparce: {\n    types: ['Normal'],\n    bs: {hp: 100, at: 70, df: 70, sa: 65, sd: 65, sp: 45},\n    weightkg: 14,\n  },\n  // Elekid: {\n  //   types: ['Electric'],\n  //   bs: {hp: 45, at: 63, df: 37, sa: 65, sd: 55, sp: 95},\n  //   weightkg: 23.5,\n  //   nfe: true,\n  // },\n  // Entei: {\n  //   types: ['Fire'],\n  //   bs: {hp: 115, at: 115, df: 85, sa: 90, sd: 75, sp: 100},\n  //   weightkg: 198,\n  //   gender: 'N',\n  // },\n  Espeon: {\n    types: ['Psychic'],\n    bs: {hp: 65, at: 65, df: 60, sa: 130, sd: 95, sp: 110},\n    weightkg: 26.5,\n  },\n  // Feraligatr: {\n  //   types: ['Water'],\n  //   bs: {hp: 85, at: 105, df: 100, sa: 79, sd: 83, sp: 78},\n  //   weightkg: 88.8,\n  // },\n  Flaaffy: {\n    types: ['Electric'],\n    bs: {hp: 70, at: 55, df: 55, sa: 80, sd: 60, sp: 45},\n    weightkg: 13.3,\n    nfe: true,\n  },\n  Forretress: {\n    types: ['Bug', 'Steel'],\n    bs: {hp: 75, at: 90, df: 140, sa: 60, sd: 60, sp: 40},\n    weightkg: 125.8,\n  },\n  // Furret: {types: ['Normal'], bs: {hp: 85, at: 76, df: 64, sa: 45, sd: 55, sp: 90}, weightkg: 32.5},\n  Girafarig: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 70, at: 80, df: 65, sa: 90, sd: 65, sp: 85},\n    weightkg: 41.5,\n  },\n  // Gligar: {\n  //   types: ['Ground', 'Flying'],\n  //   bs: {hp: 65, at: 75, df: 105, sa: 35, sd: 65, sp: 85},\n  //   weightkg: 64.8,\n  // },\n  // Granbull: {\n  //   types: ['Normal'],\n  //   bs: {hp: 90, at: 120, df: 75, sa: 60, sd: 60, sp: 45},\n  //   weightkg: 48.7,\n  // },\n  Heracross: {\n    types: ['Bug', 'Fighting'],\n    bs: {hp: 80, at: 125, df: 75, sa: 40, sd: 95, sp: 85},\n    weightkg: 54,\n  },\n  // Hitmontop: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 95, df: 95, sa: 35, sd: 110, sp: 70},\n  //   weightkg: 48,\n  // },\n  // 'Ho-Oh': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 106, at: 130, df: 90, sa: 110, sd: 154, sp: 90},\n  //   weightkg: 199,\n  //   gender: 'N',\n  // },\n  // Hoothoot: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 60, at: 30, df: 30, sa: 36, sd: 56, sp: 50},\n  //   weightkg: 21.2,\n  //   nfe: true,\n  // },\n  Hoppip: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 35, at: 35, df: 40, sa: 35, sd: 55, sp: 50},\n    weightkg: 0.5,\n    nfe: true,\n  },\n  Houndoom: {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 75, at: 90, df: 50, sa: 110, sd: 80, sp: 95},\n    weightkg: 35,\n  },\n  Houndour: {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 45, at: 60, df: 30, sa: 80, sd: 50, sp: 65},\n    weightkg: 10.8,\n    nfe: true,\n  },\n  Igglybuff: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 30, df: 15, sa: 40, sd: 20, sp: 15},\n    weightkg: 1,\n    nfe: true,\n  },\n  Jumpluff: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 75, at: 55, df: 70, sa: 55, sd: 85, sp: 110},\n    weightkg: 3,\n  },\n  // Kingdra: {\n  //   types: ['Water', 'Dragon'],\n  //   bs: {hp: 75, at: 95, df: 95, sa: 95, sd: 95, sp: 85},\n  //   weightkg: 152,\n  // },\n  // Lanturn: {\n  //   types: ['Water', 'Electric'],\n  //   bs: {hp: 125, at: 58, df: 58, sa: 76, sd: 76, sp: 67},\n  //   weightkg: 22.5,\n  // },\n  Larvitar: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 50, at: 64, df: 50, sa: 45, sd: 50, sp: 41},\n    weightkg: 72,\n    nfe: true,\n  },\n  // Ledian: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 55, at: 35, df: 50, sa: 55, sd: 110, sp: 85},\n  //   weightkg: 35.6,\n  // },\n  // Ledyba: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 40, at: 20, df: 30, sa: 40, sd: 80, sp: 55},\n  //   weightkg: 10.8,\n  //   nfe: true,\n  // },\n  // Lugia: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 106, at: 90, df: 130, sa: 90, sd: 154, sp: 110},\n  //   weightkg: 216,\n  //   gender: 'N',\n  // },\n  // Magby: {\n  //   types: ['Fire'],\n  //   bs: {hp: 45, at: 75, df: 37, sa: 70, sd: 55, sp: 83},\n  //   weightkg: 21.4,\n  //   nfe: true,\n  // },\n  // Magcargo: {\n  //   types: ['Fire', 'Rock'],\n  //   bs: {hp: 50, at: 50, df: 120, sa: 80, sd: 80, sp: 30},\n  //   weightkg: 55,\n  // },\n  // Mantine: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 65, at: 40, df: 70, sa: 80, sd: 140, sp: 70},\n  //   weightkg: 220,\n  // },\n  Mareep: {\n    types: ['Electric'],\n    bs: {hp: 55, at: 40, df: 40, sa: 65, sd: 45, sp: 35},\n    weightkg: 7.8,\n    nfe: true,\n  },\n  Marill: {\n    types: ['Water'],\n    bs: {hp: 70, at: 20, df: 50, sa: 20, sd: 50, sp: 40},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  // Meganium: {\n  //   types: ['Grass'],\n  //   bs: {hp: 80, at: 82, df: 100, sa: 83, sd: 100, sp: 80},\n  //   weightkg: 100.5,\n  // },\n  // Miltank: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 80, df: 105, sa: 40, sd: 70, sp: 100},\n  //   weightkg: 75.5,\n  // },\n  Misdreavus: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 60, df: 60, sa: 85, sd: 85, sp: 85},\n    weightkg: 1,\n  },\n  Murkrow: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 60, at: 85, df: 42, sa: 85, sd: 42, sp: 91},\n    weightkg: 2.1,\n  },\n  // Natu: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 40, at: 50, df: 45, sa: 70, sd: 45, sp: 70},\n  //   weightkg: 2,\n  //   nfe: true,\n  // },\n  // Noctowl: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 100, at: 50, df: 50, sa: 76, sd: 96, sp: 70},\n  //   weightkg: 40.8,\n  // },\n  // Octillery: {\n  //   types: ['Water'],\n  //   bs: {hp: 75, at: 105, df: 75, sa: 105, sd: 75, sp: 45},\n  //   weightkg: 28.5,\n  // },\n  Phanpy: {\n    types: ['Ground'],\n    bs: {hp: 90, at: 60, df: 60, sa: 40, sd: 40, sp: 40},\n    weightkg: 33.5,\n    nfe: true,\n  },\n  Pichu: {\n    types: ['Electric'],\n    bs: {hp: 20, at: 40, df: 15, sa: 35, sd: 35, sp: 60},\n    weightkg: 2,\n    nfe: true,\n  },\n  // Piloswine: {\n  //   types: ['Ice', 'Ground'],\n  //   bs: {hp: 100, at: 100, df: 80, sa: 60, sd: 60, sp: 50},\n  //   weightkg: 55.8,\n  // },\n  Pineco: {\n    types: ['Bug'],\n    bs: {hp: 50, at: 65, df: 90, sa: 35, sd: 35, sp: 15},\n    weightkg: 7.2,\n    nfe: true,\n  },\n  // Politoed: {\n  //   types: ['Water'],\n  //   bs: {hp: 90, at: 75, df: 75, sa: 90, sd: 100, sp: 70},\n  //   weightkg: 33.9,\n  // },\n  // Porygon2: {\n  //   types: ['Normal'],\n  //   bs: {hp: 85, at: 80, df: 90, sa: 105, sd: 95, sp: 60},\n  //   weightkg: 32.5,\n  //   gender: 'N',\n  // },\n  Pupitar: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 70, at: 84, df: 70, sa: 65, sd: 70, sp: 51},\n    weightkg: 152,\n    nfe: true,\n  },\n  Quagsire: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 95, at: 85, df: 85, sa: 65, sd: 65, sp: 35},\n    weightkg: 75,\n  },\n  Quilava: {\n    types: ['Fire'],\n    bs: {hp: 58, at: 64, df: 58, sa: 80, sd: 65, sp: 80},\n    weightkg: 19,\n    nfe: true,\n  },\n  Qwilfish: {\n    types: ['Water', 'Poison'],\n    bs: {hp: 65, at: 95, df: 75, sa: 55, sd: 55, sp: 85},\n    weightkg: 3.9,\n  },\n  // Raikou: {\n  //   types: ['Electric'],\n  //   bs: {hp: 90, at: 85, df: 75, sa: 115, sd: 100, sp: 115},\n  //   weightkg: 178,\n  //   gender: 'N',\n  // },\n  // Remoraid: {\n  //   types: ['Water'],\n  //   bs: {hp: 35, at: 65, df: 35, sa: 65, sd: 35, sp: 65},\n  //   weightkg: 12,\n  //   nfe: true,\n  // },\n  Scizor: {\n    types: ['Bug', 'Steel'],\n    bs: {hp: 70, at: 130, df: 100, sa: 55, sd: 80, sp: 65},\n    weightkg: 118,\n  },\n  // Sentret: {\n  //   types: ['Normal'],\n  //   bs: {hp: 35, at: 46, df: 34, sa: 35, sd: 45, sp: 20},\n  //   weightkg: 6,\n  //   nfe: true,\n  // },\n  // Shuckle: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 20, at: 10, df: 230, sa: 10, sd: 230, sp: 5},\n  //   weightkg: 20.5,\n  // },\n  // Skarmory: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 65, at: 80, df: 140, sa: 40, sd: 70, sp: 70},\n  //   weightkg: 50.5,\n  // },\n  Skiploom: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 55, at: 45, df: 50, sa: 45, sd: 65, sp: 80},\n    weightkg: 1,\n    nfe: true,\n  },\n  Slowking: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 95, at: 75, df: 80, sa: 100, sd: 110, sp: 30},\n    weightkg: 79.5,\n  },\n  // Slugma: {\n  //   types: ['Fire'],\n  //   bs: {hp: 40, at: 40, df: 40, sa: 70, sd: 40, sp: 20},\n  //   weightkg: 35,\n  //   nfe: true,\n  // },\n  // Smeargle: {types: ['Normal'], bs: {hp: 55, at: 20, df: 35, sa: 20, sd: 45, sp: 75}, weightkg: 58},\n  // Smoochum: {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 45, at: 30, df: 15, sa: 85, sd: 65, sp: 65},\n  //   weightkg: 6,\n  //   nfe: true,\n  // },\n  Sneasel: {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 55, at: 95, df: 55, sa: 35, sd: 75, sp: 115},\n    weightkg: 28,\n  },\n  // Snubbull: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 80, df: 50, sa: 40, sd: 40, sp: 30},\n  //   weightkg: 7.8,\n  //   nfe: true,\n  // },\n  // Spinarak: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 40, at: 60, df: 40, sa: 40, sd: 40, sp: 30},\n  //   weightkg: 8.5,\n  //   nfe: true,\n  // },\n  Stantler: {\n    types: ['Normal'],\n    bs: {hp: 73, at: 95, df: 62, sa: 85, sd: 65, sp: 85},\n    weightkg: 71.2,\n  },\n  // Steelix: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 75, at: 85, df: 200, sa: 55, sd: 65, sp: 30},\n  //   weightkg: 400,\n  // },\n  Sudowoodo: {\n    types: ['Rock'],\n    bs: {hp: 70, at: 100, df: 115, sa: 30, sd: 65, sp: 30},\n    weightkg: 38,\n  },\n  // Suicune: {\n  //   types: ['Water'],\n  //   bs: {hp: 100, at: 75, df: 115, sa: 90, sd: 115, sp: 85},\n  //   weightkg: 187,\n  //   gender: 'N',\n  // },\n  Sunflora: {\n    types: ['Grass'],\n    bs: {hp: 75, at: 75, df: 55, sa: 105, sd: 85, sp: 30},\n    weightkg: 8.5,\n  },\n  Sunkern: {\n    types: ['Grass'],\n    bs: {hp: 30, at: 30, df: 30, sa: 30, sd: 30, sp: 30},\n    weightkg: 1.8,\n    nfe: true,\n  },\n  // Swinub: {\n  //   types: ['Ice', 'Ground'],\n  //   bs: {hp: 50, at: 50, df: 40, sa: 30, sd: 30, sp: 50},\n  //   weightkg: 6.5,\n  //   nfe: true,\n  // },\n  Teddiursa: {\n    types: ['Normal'],\n    bs: {hp: 60, at: 80, df: 50, sa: 50, sd: 50, sp: 40},\n    weightkg: 8.8,\n    nfe: true,\n  },\n  // Togepi: {\n  //   types: ['Normal'],\n  //   bs: {hp: 35, at: 20, df: 65, sa: 40, sd: 65, sp: 20},\n  //   weightkg: 1.5,\n  //   nfe: true,\n  // },\n  // Togetic: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 55, at: 40, df: 85, sa: 80, sd: 105, sp: 40},\n  //   weightkg: 3.2,\n  // },\n  // Totodile: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 65, df: 64, sa: 44, sd: 48, sp: 43},\n  //   weightkg: 9.5,\n  //   nfe: true,\n  // },\n  Typhlosion: {\n    types: ['Fire'],\n    bs: {hp: 78, at: 84, df: 78, sa: 109, sd: 85, sp: 100},\n    weightkg: 79.5,\n  },\n  Tyranitar: {\n    types: ['Rock', 'Dark'],\n    bs: {hp: 100, at: 134, df: 110, sa: 95, sd: 100, sp: 61},\n    weightkg: 202,\n  },\n  // Tyrogue: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 35, at: 35, df: 35, sa: 35, sd: 35, sp: 35},\n  //   weightkg: 21,\n  //   nfe: true,\n  // },\n  Umbreon: {types: ['Dark'], bs: {hp: 95, at: 65, df: 110, sa: 60, sd: 130, sp: 65}, weightkg: 27},\n  // Unown: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 48, at: 72, df: 48, sa: 72, sd: 48, sp: 48},\n  //   weightkg: 5,\n  //   gender: 'N',\n  // },\n  Ursaring: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 130, df: 75, sa: 75, sd: 75, sp: 55},\n    weightkg: 125.8,\n  },\n  // Wobbuffet: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 190, at: 33, df: 58, sa: 33, sd: 58, sp: 33},\n  //   weightkg: 28.5,\n  // },\n  Wooper: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 55, at: 45, df: 45, sa: 25, sd: 25, sp: 15},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  // Xatu: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 65, at: 75, df: 70, sa: 95, sd: 70, sp: 95},\n  //   weightkg: 15,\n  // },\n  // Yanma: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 65, at: 65, df: 45, sa: 75, sd: 45, sp: 95},\n  //   weightkg: 38,\n  // },\n};\nconst GSC: {[name: string]: SpeciesData} = extend(true, {}, RBY, GSC_PATCH);\n\nconst ADV_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // gen 1 pokemon changes\n  // Abra: {abilities: {0: 'Synchronize'}},\n  // Aerodactyl: {abilities: {0: 'Rock Head'}},\n  // Alakazam: {abilities: {0: 'Synchronize'}},\n  // Arbok: {abilities: {0: 'Intimidate'}},\n  Arcanine: {abilities: {0: 'Intimidate'}},\n  Articuno: {abilities: {0: 'Pressure'}},\n  // Beedrill: {abilities: {0: 'Swarm'}},\n  // Bellsprout: {abilities: {0: 'Chlorophyll'}},\n  // Blastoise: {abilities: {0: 'Torrent'}},\n  // Bulbasaur: {abilities: {0: 'Overgrow'}},\n  // Butterfree: {abilities: {0: 'Compound Eyes'}},\n  // Caterpie: {abilities: {0: 'Shield Dust'}},\n  Chansey: {abilities: {0: 'Natural Cure'}},\n  Charizard: {abilities: {0: 'Blaze'}},\n  Charmander: {abilities: {0: 'Blaze'}},\n  Charmeleon: {abilities: {0: 'Blaze'}},\n  // Clefable: {abilities: {0: 'Cute Charm'}},\n  // Clefairy: {abilities: {0: 'Cute Charm'}},\n  Cloyster: {abilities: {0: 'Shell Armor'}},\n  // Cubone: {abilities: {0: 'Rock Head'}},\n  // Dewgong: {abilities: {0: 'Thick Fat'}},\n  Diglett: {abilities: {0: 'Sand Veil'}},\n  Ditto: {abilities: {0: 'Limber'}},\n  // Dodrio: {abilities: {0: 'Run Away'}},\n  // Doduo: {abilities: {0: 'Run Away'}},\n  Dragonair: {abilities: {0: 'Shed Skin'}},\n  Dragonite: {abilities: {0: 'Inner Focus'}},\n  Dratini: {abilities: {0: 'Shed Skin'}},\n  Drowzee: {abilities: {0: 'Insomnia'}},\n  Dugtrio: {abilities: {0: 'Sand Veil'}},\n  Eevee: {abilities: {0: 'Run Away'}},\n  // Ekans: {abilities: {0: 'Intimidate'}},\n  // Electabuzz: {abilities: {0: 'Static'}},\n  Electrode: {abilities: {0: 'Soundproof'}},\n  // Exeggcute: {abilities: {0: 'Chlorophyll'}},\n  // Exeggutor: {abilities: {0: 'Chlorophyll'}},\n  // 'Farfetch\\u2019d': {abilities: {0: 'Keen Eye'}},\n  // Fearow: {abilities: {0: 'Keen Eye'}},\n  Flareon: {abilities: {0: 'Flash Fire'}},\n  Gastly: {abilities: {0: 'Levitate'}},\n  Gengar: {abilities: {0: 'Levitate'}},\n  // Geodude: {abilities: {0: 'Rock Head'}},\n  // Gloom: {abilities: {0: 'Chlorophyll'}},\n  // Golbat: {abilities: {0: 'Inner Focus'}},\n  // Goldeen: {abilities: {0: 'Swift Swim'}},\n  Golduck: {abilities: {0: 'Damp'}},\n  // Golem: {abilities: {0: 'Rock Head'}},\n  // Graveler: {abilities: {0: 'Rock Head'}},\n  Grimer: {abilities: {0: 'Stench'}},\n  Growlithe: {abilities: {0: 'Intimidate'}},\n  Gyarados: {abilities: {0: 'Intimidate'}},\n  Haunter: {abilities: {0: 'Levitate'}},\n  // Hitmonchan: {abilities: {0: 'Keen Eye'}},\n  // Hitmonlee: {abilities: {0: 'Limber'}},\n  // Horsea: {abilities: {0: 'Swift Swim'}},\n  Hypno: {abilities: {0: 'Insomnia'}},\n  // Ivysaur: {abilities: {0: 'Overgrow'}},\n  Jigglypuff: {abilities: {0: 'Cute Charm'}},\n  Jolteon: {abilities: {0: 'Volt Absorb'}},\n  // Jynx: {abilities: {0: 'Oblivious'}},\n  // Kabuto: {abilities: {0: 'Swift Swim'}},\n  // Kabutops: {abilities: {0: 'Swift Swim'}},\n  // Kadabra: {abilities: {0: 'Synchronize'}},\n  // Kakuna: {abilities: {0: 'Shed Skin'}},\n  // Kangaskhan: {abilities: {0: 'Early Bird'}},\n  // Kingler: {abilities: {0: 'Hyper Cutter'}},\n  // Koffing: {abilities: {0: 'Levitate'}},\n  // Krabby: {abilities: {0: 'Hyper Cutter'}},\n  // Lapras: {abilities: {0: 'Water Absorb'}},\n  // Lickitung: {abilities: {0: 'Own Tempo'}},\n  // Machamp: {abilities: {0: 'Guts'}},\n  // Machoke: {abilities: {0: 'Guts'}},\n  // Machop: {abilities: {0: 'Guts'}},\n  Magikarp: {abilities: {0: 'Swift Swim'}},\n  // Magmar: {abilities: {0: 'Flame Body'}},\n  Magnemite: {abilities: {0: 'Magnet Pull'}},\n  Magneton: {abilities: {0: 'Magnet Pull'}},\n  Mankey: {abilities: {0: 'Vital Spirit'}},\n  // Marowak: {abilities: {0: 'Rock Head'}},\n  Meowth: {abilities: {0: 'Pickup'}},\n  // Metapod: {abilities: {0: 'Shed Skin'}},\n  Mew: {abilities: {0: 'Synchronize'}},\n  Mewtwo: {abilities: {0: 'Pressure'}},\n  Moltres: {abilities: {0: 'Pressure'}},\n  // 'Mr. Mime': {abilities: {0: 'Soundproof'}},\n  Muk: {abilities: {0: 'Stench'}},\n  // Nidoking: {abilities: {0: 'Poison Point'}},\n  // Nidoqueen: {abilities: {0: 'Poison Point'}},\n  // 'Nidoran-F': {abilities: {0: 'Poison Point'}},\n  // 'Nidoran-M': {abilities: {0: 'Poison Point'}},\n  // Nidorina: {abilities: {0: 'Poison Point'}},\n  // Nidorino: {abilities: {0: 'Poison Point'}},\n  // Ninetales: {abilities: {0: 'Flash Fire'}},\n  // Oddish: {abilities: {0: 'Chlorophyll'}},\n  // Omanyte: {abilities: {0: 'Swift Swim'}},\n  // Omastar: {abilities: {0: 'Swift Swim'}},\n  // Onix: {abilities: {0: 'Rock Head'}},\n  // Paras: {abilities: {0: 'Effect Spore'}},\n  // Parasect: {abilities: {0: 'Effect Spore'}},\n  Persian: {abilities: {0: 'Limber'}},\n  // Pidgeot: {abilities: {0: 'Keen Eye'}},\n  // Pidgeotto: {abilities: {0: 'Keen Eye'}},\n  // Pidgey: {abilities: {0: 'Keen Eye'}},\n  Pikachu: {abilities: {0: 'Static'}},\n  // Pinsir: {abilities: {0: 'Hyper Cutter'}},\n  // Poliwag: {abilities: {0: 'Water Absorb'}},\n  // Poliwhirl: {abilities: {0: 'Water Absorb'}},\n  // Poliwrath: {abilities: {0: 'Water Absorb'}},\n  // Ponyta: {abilities: {0: 'Run Away'}},\n  // Porygon: {abilities: {0: 'Trace'}},\n  Primeape: {abilities: {0: 'Vital Spirit'}},\n  Psyduck: {abilities: {0: 'Damp'}},\n  Raichu: {abilities: {0: 'Static'}},\n  // Rapidash: {abilities: {0: 'Run Away'}},\n  // Raticate: {abilities: {0: 'Run Away'}},\n  // Rattata: {abilities: {0: 'Run Away'}},\n  // Rhydon: {abilities: {0: 'Lightning Rod'}},\n  // Rhyhorn: {abilities: {0: 'Lightning Rod'}},\n  // Sandshrew: {abilities: {0: 'Sand Veil'}},\n  // Sandslash: {abilities: {0: 'Sand Veil'}},\n  Scyther: {abilities: {0: 'Swarm'}},\n  // Seadra: {abilities: {0: 'Poison Point'}},\n  // Seaking: {abilities: {0: 'Swift Swim'}},\n  // Seel: {abilities: {0: 'Thick Fat'}},\n  Shellder: {abilities: {0: 'Shell Armor'}},\n  Slowbro: {abilities: {0: 'Oblivious'}},\n  Slowpoke: {abilities: {0: 'Oblivious'}},\n  // Snorlax: {abilities: {0: 'Immunity'}},\n  // Spearow: {abilities: {0: 'Keen Eye'}},\n  // Squirtle: {abilities: {0: 'Torrent'}},\n  // Starmie: {abilities: {0: 'Illuminate'}},\n  // Staryu: {abilities: {0: 'Illuminate'}},\n  // Tangela: {abilities: {0: 'Chlorophyll'}},\n  Tauros: {abilities: {0: 'Intimidate'}},\n  // Tentacool: {abilities: {0: 'Clear Body'}},\n  // Tentacruel: {abilities: {0: 'Clear Body'}},\n  Vaporeon: {abilities: {0: 'Water Absorb'}},\n  Venomoth: {abilities: {0: 'Shield Dust'}},\n  Venonat: {abilities: {0: 'Compound Eyes'}},\n  // Venusaur: {abilities: {0: 'Overgrow'}},\n  // Victreebel: {abilities: {0: 'Chlorophyll'}},\n  // Vileplume: {abilities: {0: 'Chlorophyll'}},\n  Voltorb: {abilities: {0: 'Soundproof'}},\n  // Vulpix: {abilities: {0: 'Flash Fire'}},\n  // Wartortle: {abilities: {0: 'Torrent'}},\n  // Weedle: {abilities: {0: 'Shield Dust'}},\n  // Weepinbell: {abilities: {0: 'Chlorophyll'}},\n  // Weezing: {abilities: {0: 'Levitate'}},\n  Wigglytuff: {abilities: {0: 'Cute Charm'}},\n  Zapdos: {abilities: {0: 'Pressure'}},\n  // Zubat: {abilities: {0: 'Inner Focus'}},\n  // gen 2 pokemon changes\n  // Aipom: {abilities: {0: 'Run Away'}},\n  Ampharos: {abilities: {0: 'Static'}},\n  // Ariados: {abilities: {0: 'Swarm'}},\n  Azumarill: {abilities: {0: 'Thick Fat'}},\n  // Bayleef: {abilities: {0: 'Overgrow'}},\n  // Bellossom: {abilities: {0: 'Chlorophyll'}},\n  Blissey: {abilities: {0: 'Natural Cure'}},\n  // Celebi: {abilities: {0: 'Natural Cure'}},\n  // Chikorita: {abilities: {0: 'Overgrow'}},\n  // Chinchou: {abilities: {0: 'Volt Absorb'}},\n  // Cleffa: {abilities: {0: 'Cute Charm'}},\n  // Corsola: {abilities: {0: 'Hustle'}},\n  // Crobat: {abilities: {0: 'Inner Focus'}},\n  // Croconaw: {abilities: {0: 'Torrent'}},\n  Cyndaquil: {abilities: {0: 'Blaze'}},\n  Delibird: {abilities: {0: 'Vital Spirit'}},\n  Donphan: {abilities: {0: 'Sturdy'}},\n  Dunsparce: {abilities: {0: 'Serene Grace'}},\n  // Elekid: {abilities: {0: 'Static'}},\n  // Entei: {abilities: {0: 'Pressure'}},\n  Espeon: {abilities: {0: 'Synchronize'}},\n  // Feraligatr: {abilities: {0: 'Torrent'}},\n  Flaaffy: {abilities: {0: 'Static'}},\n  Forretress: {abilities: {0: 'Sturdy'}},\n  // Furret: {abilities: {0: 'Run Away'}},\n  Girafarig: {abilities: {0: 'Inner Focus'}},\n  // Gligar: {abilities: {0: 'Hyper Cutter'}},\n  // Granbull: {abilities: {0: 'Intimidate'}},\n  Heracross: {abilities: {0: 'Swarm'}},\n  // Hitmontop: {abilities: {0: 'Intimidate'}},\n  // 'Ho-Oh': {abilities: {0: 'Pressure'}},\n  // Hoothoot: {abilities: {0: 'Insomnia'}},\n  Hoppip: {abilities: {0: 'Chlorophyll'}},\n  Houndoom: {abilities: {0: 'Early Bird'}},\n  Houndour: {abilities: {0: 'Early Bird'}},\n  Igglybuff: {abilities: {0: 'Cute Charm'}},\n  Jumpluff: {abilities: {0: 'Chlorophyll'}},\n  // Kingdra: {abilities: {0: 'Swift Swim'}},\n  // Lanturn: {abilities: {0: 'Volt Absorb'}},\n  Larvitar: {abilities: {0: 'Guts'}},\n  // Ledian: {abilities: {0: 'Swarm'}},\n  // Ledyba: {abilities: {0: 'Swarm'}},\n  // Lugia: {abilities: {0: 'Pressure'}},\n  // Magby: {abilities: {0: 'Flame Body'}},\n  // Magcargo: {abilities: {0: 'Magma Armor'}},\n  // Mantine: {abilities: {0: 'Swift Swim'}},\n  Mareep: {abilities: {0: 'Static'}},\n  Marill: {abilities: {0: 'Thick Fat'}},\n  // Meganium: {abilities: {0: 'Overgrow'}},\n  // Miltank: {abilities: {0: 'Thick Fat'}},\n  Misdreavus: {abilities: {0: 'Levitate'}},\n  Murkrow: {abilities: {0: 'Insomnia'}},\n  // Natu: {abilities: {0: 'Synchronize'}},\n  // Noctowl: {abilities: {0: 'Insomnia'}},\n  // Octillery: {abilities: {0: 'Suction Cups'}},\n  Phanpy: {abilities: {0: 'Pickup'}},\n  Pichu: {abilities: {0: 'Static'}},\n  // Piloswine: {abilities: {0: 'Oblivious'}},\n  Pineco: {abilities: {0: 'Sturdy'}},\n  // Politoed: {abilities: {0: 'Water Absorb'}},\n  // Porygon2: {abilities: {0: 'Trace'}},\n  Pupitar: {abilities: {0: 'Shed Skin'}},\n  Quagsire: {abilities: {0: 'Damp'}},\n  Quilava: {abilities: {0: 'Blaze'}},\n  Qwilfish: {abilities: {0: 'Poison Point'}},\n  // Raikou: {abilities: {0: 'Pressure'}},\n  // Remoraid: {abilities: {0: 'Hustle'}},\n  Scizor: {abilities: {0: 'Swarm'}},\n  // Sentret: {abilities: {0: 'Run Away'}},\n  // Shuckle: {abilities: {0: 'Sturdy'}},\n  // Skarmory: {abilities: {0: 'Keen Eye'}},\n  Skiploom: {abilities: {0: 'Chlorophyll'}},\n  Slowking: {abilities: {0: 'Oblivious'}},\n  // Slugma: {abilities: {0: 'Magma Armor'}},\n  // Smeargle: {abilities: {0: 'Own Tempo'}},\n  // Smoochum: {abilities: {0: 'Oblivious'}},\n  Sneasel: {abilities: {0: 'Inner Focus'}},\n  // Snubbull: {abilities: {0: 'Intimidate'}},\n  // Spinarak: {abilities: {0: 'Swarm'}},\n  Stantler: {abilities: {0: 'Intimidate'}},\n  // Steelix: {abilities: {0: 'Rock Head'}},\n  Sudowoodo: {abilities: {0: 'Sturdy'}},\n  // Suicune: {abilities: {0: 'Pressure'}},\n  Sunflora: {abilities: {0: 'Chlorophyll'}},\n  Sunkern: {abilities: {0: 'Chlorophyll'}},\n  // Swinub: {abilities: {0: 'Oblivious'}},\n  Teddiursa: {abilities: {0: 'Pickup'}},\n  // Togepi: {abilities: {0: 'Hustle'}},\n  // Togetic: {abilities: {0: 'Hustle'}},\n  // Totodile: {abilities: {0: 'Torrent'}},\n  Typhlosion: {abilities: {0: 'Blaze'}},\n  Tyranitar: {abilities: {0: 'Sand Stream'}},\n  // Tyrogue: {abilities: {0: 'Guts'}},\n  Umbreon: {abilities: {0: 'Synchronize'}},\n  // Unown: {abilities: {0: 'Levitate'}},\n  Ursaring: {abilities: {0: 'Guts'}},\n  // Wobbuffet: {abilities: {0: 'Shadow Tag'}},\n  Wooper: {abilities: {0: 'Damp'}},\n  // Xatu: {abilities: {0: 'Synchronize'}},\n  // Yanma: {abilities: {0: 'Speed Boost'}},\n  // gen 3 pokemon\n  // Absol: {\n  //   types: ['Dark'],\n  //   bs: {hp: 65, at: 130, df: 60, sa: 75, sd: 60, sp: 75},\n  //   weightkg: 47,\n  //   abilities: {0: 'Pressure'},\n  // },\n  // Aggron: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 70, at: 110, df: 180, sa: 60, sd: 60, sp: 50},\n  //   weightkg: 360,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Altaria: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 75, at: 70, df: 90, sa: 70, sd: 105, sp: 80},\n    weightkg: 20.6,\n    abilities: {0: 'Natural Cure'},\n  },\n  // Anorith: {\n  //   types: ['Rock', 'Bug'],\n  //   bs: {hp: 45, at: 95, df: 50, sa: 40, sd: 50, sp: 75},\n  //   weightkg: 12.5,\n  //   nfe: true,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  // Armaldo: {\n  //   types: ['Rock', 'Bug'],\n  //   bs: {hp: 75, at: 125, df: 100, sa: 70, sd: 80, sp: 45},\n  //   weightkg: 68.2,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  // Aron: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 50, at: 70, df: 100, sa: 40, sd: 40, sp: 30},\n  //   weightkg: 60,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Azurill: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 20, df: 40, sa: 20, sd: 40, sp: 20},\n    weightkg: 2,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  Bagon: {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 75, df: 60, sa: 40, sd: 30, sp: 50},\n    weightkg: 42.1,\n    nfe: true,\n    abilities: {0: 'Rock Head'},\n  },\n  // Baltoy: {\n  //   types: ['Ground', 'Psychic'],\n  //   bs: {hp: 40, at: 40, df: 55, sa: 40, sd: 70, sp: 55},\n  //   weightkg: 21.5,\n  //   abilities: {0: 'Levitate'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  Banette: {\n    types: ['Ghost'],\n    bs: {hp: 64, at: 115, df: 65, sa: 83, sd: 63, sp: 65},\n    weightkg: 12.5,\n    abilities: {0: 'Insomnia'},\n  },\n  Barboach: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 50, at: 48, df: 43, sa: 46, sd: 41, sp: 60},\n    weightkg: 1.9,\n    nfe: true,\n    abilities: {0: 'Oblivious'},\n  },\n  // Beautifly: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 70, df: 50, sa: 90, sd: 50, sp: 65},\n  //   weightkg: 28.4,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Beldum: {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 40, at: 55, df: 80, sa: 35, sd: 60, sp: 30},\n  //   weightkg: 95.2,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Blaziken: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 80, at: 120, df: 70, sa: 110, sd: 70, sp: 80},\n  //   weightkg: 52,\n  //   abilities: {0: 'Blaze'},\n  // },\n  Breloom: {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 60, at: 130, df: 80, sa: 60, sd: 60, sp: 70},\n    weightkg: 39.2,\n    abilities: {0: 'Effect Spore'},\n  },\n  Cacnea: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 85, df: 40, sa: 85, sd: 40, sp: 35},\n    weightkg: 51.3,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Cacturne: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 70, at: 115, df: 60, sa: 115, sd: 60, sp: 55},\n    weightkg: 77.4,\n    abilities: {0: 'Sand Veil'},\n  },\n  Camerupt: {\n    types: ['Fire', 'Ground'],\n    bs: {hp: 70, at: 100, df: 70, sa: 105, sd: 75, sp: 40},\n    weightkg: 220,\n    abilities: {0: 'Magma Armor'},\n  },\n  // Carvanha: {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 45, at: 90, df: 20, sa: 65, sd: 20, sp: 65},\n  //   weightkg: 20.8,\n  //   nfe: true,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  // Cascoon: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 35, df: 55, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Shed Skin'},\n  //   nfe: true,\n  // },\n  // Castform: {\n  //   types: ['Normal'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   otherFormes: ['Castform-Rainy', 'Castform-Snowy', 'Castform-Sunny'],\n  // },\n  // 'Castform-Rainy': {\n  //   types: ['Water'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  // 'Castform-Snowy': {\n  //   types: ['Ice'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  // 'Castform-Sunny': {\n  //   types: ['Fire'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  // Chimecho: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 65, at: 50, df: 70, sa: 95, sd: 80, sp: 65},\n  //   weightkg: 1,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Clamperl: {\n  //   types: ['Water'],\n  //   bs: {hp: 35, at: 64, df: 85, sa: 74, sd: 55, sp: 32},\n  //   weightkg: 52.5,\n  //   nfe: true,\n  //   abilities: {0: 'Shell Armor'},\n  // },\n  // Claydol: {\n  //   types: ['Ground', 'Psychic'],\n  //   bs: {hp: 60, at: 70, df: 105, sa: 70, sd: 120, sp: 75},\n  //   weightkg: 108,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Combusken: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 60, at: 85, df: 60, sa: 85, sd: 60, sp: 55},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Corphish: {\n  //   types: ['Water'],\n  //   bs: {hp: 43, at: 80, df: 65, sa: 50, sd: 35, sp: 35},\n  //   weightkg: 11.5,\n  //   nfe: true,\n  //   abilities: {0: 'Hyper Cutter'},\n  // },\n  // Cradily: {\n  //   types: ['Rock', 'Grass'],\n  //   bs: {hp: 86, at: 81, df: 97, sa: 81, sd: 107, sp: 43},\n  //   weightkg: 60.4,\n  //   abilities: {0: 'Suction Cups'},\n  // },\n  // Crawdaunt: {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 63, at: 120, df: 85, sa: 90, sd: 55, sp: 55},\n  //   weightkg: 32.8,\n  //   abilities: {0: 'Hyper Cutter'},\n  // },\n  // Delcatty: {\n  //   types: ['Normal'],\n  //   bs: {hp: 70, at: 65, df: 65, sa: 55, sd: 55, sp: 70},\n  //   weightkg: 32.6,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  // Deoxys: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 150, df: 50, sa: 150, sd: 50, sp: 150},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   otherFormes: ['Deoxys-Attack', 'Deoxys-Defense', 'Deoxys-Speed'],\n  // },\n  // 'Deoxys-Attack': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 180, df: 20, sa: 180, sd: 20, sp: 150},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Deoxys',\n  // },\n  // 'Deoxys-Defense': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 70, df: 160, sa: 70, sd: 160, sp: 90},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Deoxys',\n  // },\n  // 'Deoxys-Speed': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 95, df: 90, sa: 95, sd: 90, sp: 180},\n  //   weightkg: 60.8,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Deoxys',\n  // },\n  // Dusclops: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 40, at: 70, df: 130, sa: 60, sd: 130, sp: 25},\n  //   weightkg: 30.6,\n  //   abilities: {0: 'Pressure'},\n  // },\n  // Duskull: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 20, at: 40, df: 90, sa: 30, sd: 90, sp: 25},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Dustox: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 60, at: 50, df: 70, sa: 50, sd: 90, sp: 65},\n  //   weightkg: 31.6,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Electrike: {\n  //   types: ['Electric'],\n  //   bs: {hp: 40, at: 45, df: 40, sa: 65, sd: 40, sp: 65},\n  //   weightkg: 15.2,\n  //   nfe: true,\n  //   abilities: {0: 'Static'},\n  // },\n  // Exploud: {\n  //   types: ['Normal'],\n  //   bs: {hp: 104, at: 91, df: 63, sa: 91, sd: 63, sp: 68},\n  //   weightkg: 84,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  // Feebas: {\n  //   types: ['Water'],\n  //   bs: {hp: 20, at: 15, df: 20, sa: 10, sd: 55, sp: 80},\n  //   weightkg: 7.4,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Flygon: {\n  //   types: ['Ground', 'Dragon'],\n  //   bs: {hp: 80, at: 100, df: 80, sa: 80, sd: 80, sp: 100},\n  //   weightkg: 82,\n  //   abilities: {0: 'Levitate'},\n  // },\n  Gardevoir: {\n    types: ['Psychic'],\n    bs: {hp: 68, at: 65, df: 65, sa: 125, sd: 115, sp: 80},\n    weightkg: 48.4,\n    abilities: {0: 'Synchronize'},\n  },\n  Glalie: {\n    types: ['Ice'],\n    bs: {hp: 80, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 256.5,\n    abilities: {0: 'Inner Focus'},\n  },\n  // Gorebyss: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 84, df: 105, sa: 114, sd: 75, sp: 52},\n  //   weightkg: 22.6,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Groudon: {\n    types: ['Ground'],\n    bs: {hp: 100, at: 150, df: 140, sa: 100, sd: 90, sp: 90},\n    weightkg: 950,\n    abilities: {0: 'Drought'},\n    gender: 'N',\n  },\n  // Grovyle: {\n  //   types: ['Grass'],\n  //   bs: {hp: 50, at: 65, df: 45, sa: 85, sd: 65, sp: 95},\n  //   weightkg: 21.6,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Grumpig: {\n    types: ['Psychic'],\n    bs: {hp: 80, at: 45, df: 65, sa: 90, sd: 110, sp: 80},\n    weightkg: 71.5,\n    abilities: {0: 'Thick Fat'},\n  },\n  Gulpin: {\n    types: ['Poison'],\n    bs: {hp: 70, at: 43, df: 53, sa: 43, sd: 53, sp: 40},\n    weightkg: 10.3,\n    nfe: true,\n    abilities: {0: 'Liquid Ooze'},\n  },\n  Hariyama: {\n    types: ['Fighting'],\n    bs: {hp: 144, at: 120, df: 60, sa: 40, sd: 60, sp: 50},\n    weightkg: 253.8,\n    abilities: {0: 'Thick Fat'},\n  },\n  // Huntail: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 104, df: 105, sa: 94, sd: 75, sp: 52},\n  //   weightkg: 27,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Illumise: {\n  //   types: ['Bug'],\n  //   bs: {hp: 65, at: 47, df: 55, sa: 73, sd: 75, sp: 85},\n  //   abilities: {0: 'Oblivious'},\n  //   weightkg: 17.7,\n  // },\n  // Jirachi: {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 1.1,\n  //   abilities: {0: 'Serene Grace'},\n  //   gender: 'N',\n  // },\n  // Kecleon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 90, df: 70, sa: 60, sd: 120, sp: 40},\n  //   weightkg: 22,\n  //   abilities: {0: 'Color Change'},\n  // },\n  Kirlia: {\n    types: ['Psychic'],\n    bs: {hp: 38, at: 35, df: 35, sa: 65, sd: 55, sp: 50},\n    weightkg: 20.2,\n    nfe: true,\n    abilities: {0: 'Synchronize'},\n  },\n  Kyogre: {\n    types: ['Water'],\n    bs: {hp: 100, at: 100, df: 90, sa: 150, sd: 140, sp: 90},\n    weightkg: 352,\n    abilities: {0: 'Drizzle'},\n    gender: 'N',\n  },\n  // Lairon: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 60, at: 90, df: 140, sa: 50, sd: 50, sp: 40},\n  //   weightkg: 120,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Latias: {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 80, df: 90, sa: 110, sd: 130, sp: 110},\n  //   weightkg: 40,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Latios: {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 90, df: 80, sa: 130, sd: 110, sp: 110},\n  //   weightkg: 60,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Lileep: {\n  //   types: ['Rock', 'Grass'],\n  //   bs: {hp: 66, at: 41, df: 77, sa: 61, sd: 87, sp: 23},\n  //   weightkg: 23.8,\n  //   nfe: true,\n  //   abilities: {0: 'Suction Cups'},\n  // },\n  // Linoone: {\n  //   types: ['Normal'],\n  //   bs: {hp: 78, at: 70, df: 61, sa: 50, sd: 61, sp: 100},\n  //   weightkg: 32.5,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Lombre: {\n  //   types: ['Water', 'Grass'],\n  //   bs: {hp: 60, at: 50, df: 50, sa: 60, sd: 70, sp: 50},\n  //   weightkg: 32.5,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Lotad: {\n  //   types: ['Water', 'Grass'],\n  //   bs: {hp: 40, at: 30, df: 30, sa: 40, sd: 50, sp: 30},\n  //   weightkg: 2.6,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Loudred: {\n  //   types: ['Normal'],\n  //   bs: {hp: 84, at: 71, df: 43, sa: 71, sd: 43, sp: 48},\n  //   weightkg: 40.5,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  // Ludicolo: {\n  //   types: ['Water', 'Grass'],\n  //   bs: {hp: 80, at: 70, df: 70, sa: 90, sd: 100, sp: 70},\n  //   weightkg: 55,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Lunatone: {\n  //   types: ['Rock', 'Psychic'],\n  //   bs: {hp: 70, at: 55, df: 65, sa: 95, sd: 85, sp: 70},\n  //   weightkg: 168,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  Luvdisc: {\n    types: ['Water'],\n    bs: {hp: 43, at: 30, df: 55, sa: 40, sd: 65, sp: 97},\n    weightkg: 8.7,\n    abilities: {0: 'Swift Swim'},\n  },\n  Makuhita: {\n    types: ['Fighting'],\n    bs: {hp: 72, at: 60, df: 30, sa: 20, sd: 30, sp: 25},\n    weightkg: 86.4,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  // Manectric: {\n    // types: ['Electric'],\n    // bs: {hp: 70, at: 75, df: 60, sa: 105, sd: 60, sp: 105},\n    // weightkg: 40.2,\n    // abilities: {0: 'Static'},\n  // },\n  // Marshtomp: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 70, at: 85, df: 70, sa: 60, sd: 70, sp: 50},\n  //   weightkg: 28,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  Masquerain: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 60, df: 62, sa: 80, sd: 82, sp: 60},\n    weightkg: 3.6,\n    abilities: {0: 'Intimidate'},\n  },\n  // Mawile: {\n    // types: ['Steel'],\n    // bs: {hp: 50, at: 85, df: 85, sa: 55, sd: 55, sp: 50},\n    // weightkg: 11.5,\n    // abilities: {0: 'Hyper Cutter'},\n  // },\n  Medicham: {\n    types: ['Fighting', 'Psychic'],\n    bs: {hp: 60, at: 60, df: 75, sa: 60, sd: 75, sp: 80},\n    weightkg: 31.5,\n    abilities: {0: 'Pure Power'},\n  },\n  Meditite: {\n    types: ['Fighting', 'Psychic'],\n    bs: {hp: 30, at: 40, df: 55, sa: 40, sd: 55, sp: 60},\n    weightkg: 11.2,\n    nfe: true,\n    abilities: {0: 'Pure Power'},\n  },\n  // Metagross: {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 80, at: 135, df: 130, sa: 95, sd: 90, sp: 70},\n  //   weightkg: 550,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Metang: {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 60, at: 75, df: 100, sa: 55, sd: 80, sp: 50},\n  //   weightkg: 202.5,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Mightyena: {\n  //   types: ['Dark'],\n  //   bs: {hp: 70, at: 90, df: 70, sa: 60, sd: 60, sp: 70},\n  //   weightkg: 37,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  // Milotic: {\n  //   types: ['Water'],\n  //   bs: {hp: 95, at: 60, df: 79, sa: 100, sd: 125, sp: 81},\n  //   weightkg: 162,\n  //   abilities: {0: 'Marvel Scale'},\n  // },\n  // Minun: {\n  //   types: ['Electric'],\n  //   bs: {hp: 60, at: 40, df: 50, sa: 75, sd: 85, sp: 95},\n  //   weightkg: 4.2,\n  //   abilities: {0: 'Minus'},\n  // },\n  // Mudkip: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 70, df: 50, sa: 50, sd: 50, sp: 40},\n  //   weightkg: 7.6,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Nincada: {\n  //   types: ['Bug', 'Ground'],\n  //   bs: {hp: 31, at: 45, df: 90, sa: 30, sd: 30, sp: 40},\n  //   weightkg: 5.5,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Ninjask: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 61, at: 90, df: 45, sa: 50, sd: 50, sp: 160},\n  //   weightkg: 12,\n  //   abilities: {0: 'Speed Boost'},\n  // },\n  // Nosepass: {\n  //   types: ['Rock'],\n  //   bs: {hp: 30, at: 45, df: 135, sa: 45, sd: 90, sp: 30},\n  //   weightkg: 97,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Numel: {\n    types: ['Fire', 'Ground'],\n    bs: {hp: 60, at: 60, df: 40, sa: 65, sd: 45, sp: 35},\n    weightkg: 24,\n    nfe: true,\n    abilities: {0: 'Oblivious'},\n  },\n  // Nuzleaf: {\n  //   types: ['Grass', 'Dark'],\n  //   bs: {hp: 70, at: 70, df: 40, sa: 60, sd: 40, sp: 60},\n  //   weightkg: 28,\n  //   nfe: true,\n  //   abilities: {0: 'Chlorophyll'},\n  // },\n  Pelipper: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 60, at: 50, df: 100, sa: 85, sd: 70, sp: 65},\n    weightkg: 28,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Plusle: {\n  //   types: ['Electric'],\n  //   bs: {hp: 60, at: 50, df: 40, sa: 85, sd: 75, sp: 95},\n  //   weightkg: 4.2,\n  //   abilities: {0: 'Plus'},\n  // },\n  // Poochyena: {\n  //   types: ['Dark'],\n  //   bs: {hp: 35, at: 55, df: 35, sa: 30, sd: 30, sp: 35},\n  //   weightkg: 13.6,\n  //   nfe: true,\n  //   abilities: {0: 'Run Away'},\n  // },\n  Ralts: {\n    types: ['Psychic'],\n    bs: {hp: 28, at: 25, df: 25, sa: 45, sd: 35, sp: 40},\n    weightkg: 6.6,\n    nfe: true,\n    abilities: {0: 'Synchronize'},\n  },\n  Rayquaza: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 105, at: 150, df: 90, sa: 150, sd: 90, sp: 95},\n    weightkg: 206.5,\n    abilities: {0: 'Air Lock'},\n    gender: 'N',\n  },\n  // Regice: {\n  //   types: ['Ice'],\n  //   bs: {hp: 80, at: 50, df: 100, sa: 100, sd: 200, sp: 50},\n  //   weightkg: 175,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Regirock: {\n  //   types: ['Rock'],\n  //   bs: {hp: 80, at: 100, df: 200, sa: 50, sd: 100, sp: 50},\n  //   weightkg: 230,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Registeel: {\n  //   types: ['Steel'],\n  //   bs: {hp: 80, at: 75, df: 150, sa: 75, sd: 150, sp: 50},\n  //   weightkg: 205,\n  //   gender: 'N',\n  //   abilities: {0: 'Clear Body'},\n  // },\n  // Relicanth: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 100, at: 90, df: 130, sa: 45, sd: 65, sp: 55},\n  //   weightkg: 23.4,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Roselia: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 50, at: 60, df: 45, sa: 100, sd: 80, sp: 65},\n  //   weightkg: 2,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Sableye: {\n    types: ['Dark', 'Ghost'],\n    bs: {hp: 50, at: 75, df: 75, sa: 65, sd: 65, sp: 50},\n    weightkg: 11,\n    abilities: {0: 'Keen Eye'},\n  },\n  Salamence: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 95, at: 135, df: 80, sa: 110, sd: 80, sp: 100},\n    weightkg: 102.6,\n    abilities: {0: 'Intimidate'},\n  },\n  // Sceptile: {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 85, df: 65, sa: 105, sd: 85, sp: 120},\n  //   weightkg: 52.2,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Sealeo: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 90, at: 60, df: 70, sa: 75, sd: 70, sp: 45},\n  //   weightkg: 87.6,\n  //   nfe: true,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  // Seedot: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 40, df: 50, sa: 30, sd: 30, sp: 30},\n  //   weightkg: 4,\n  //   nfe: true,\n  //   abilities: {0: 'Chlorophyll'},\n  // },\n  Seviper: {\n    types: ['Poison'],\n    bs: {hp: 73, at: 100, df: 60, sa: 100, sd: 60, sp: 65},\n    weightkg: 52.5,\n    abilities: {0: 'Shed Skin'},\n  },\n  // Sharpedo: {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 70, at: 120, df: 40, sa: 95, sd: 40, sp: 95},\n  //   weightkg: 88.8,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  // Shedinja: {\n  //   types: ['Bug', 'Ghost'],\n  //   bs: {hp: 1, at: 90, df: 45, sa: 30, sd: 30, sp: 40},\n  //   weightkg: 1.2,\n  //   abilities: {0: 'Wonder Guard'},\n  //   gender: 'N',\n  // },\n  // Shelgon: {\n  //   types: ['Dragon'],\n  //   bs: {hp: 65, at: 95, df: 100, sa: 60, sd: 50, sp: 50},\n  //   weightkg: 110.5,\n  //   nfe: true,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  // Shiftry: {\n  //   types: ['Grass', 'Dark'],\n  //   bs: {hp: 90, at: 100, df: 60, sa: 90, sd: 60, sp: 80},\n  //   weightkg: 59.6,\n  //   abilities: {0: 'Chlorophyll'},\n  // },\n  Shroomish: {\n    types: ['Grass'],\n    bs: {hp: 60, at: 40, df: 60, sa: 40, sd: 60, sp: 35},\n    weightkg: 4.5,\n    nfe: true,\n    abilities: {0: 'Effect Spore'},\n  },\n  Shuppet: {\n    types: ['Ghost'],\n    bs: {hp: 44, at: 75, df: 35, sa: 63, sd: 33, sp: 45},\n    weightkg: 2.3,\n    nfe: true,\n    abilities: {0: 'Insomnia'},\n  },\n  // Silcoon: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 35, df: 55, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 10,\n  //   abilities: {0: 'Shed Skin'},\n  //   nfe: true,\n  // },\n  // Skitty: {\n  //   types: ['Normal'],\n  //   bs: {hp: 50, at: 45, df: 45, sa: 35, sd: 35, sp: 50},\n  //   weightkg: 11,\n  //   nfe: true,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  Slaking: {\n    types: ['Normal'],\n    bs: {hp: 150, at: 160, df: 100, sa: 95, sd: 65, sp: 100},\n    weightkg: 130.5,\n    abilities: {0: 'Truant'},\n  },\n  Slakoth: {\n    types: ['Normal'],\n    bs: {hp: 60, at: 60, df: 60, sa: 35, sd: 35, sp: 30},\n    weightkg: 24,\n    abilities: {0: 'Truant'},\n    nfe: true,\n  },\n  Snorunt: {\n    types: ['Ice'],\n    bs: {hp: 50, at: 50, df: 50, sa: 50, sd: 50, sp: 50},\n    weightkg: 16.8,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  // Solrock: {\n  //   types: ['Rock', 'Psychic'],\n  //   bs: {hp: 70, at: 95, df: 85, sa: 55, sd: 65, sp: 70},\n  //   weightkg: 154,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Spheal: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 70, at: 40, df: 50, sa: 55, sd: 50, sp: 25},\n  //   weightkg: 39.5,\n  //   nfe: true,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  // Spinda: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 60, df: 60, sa: 60, sd: 60, sp: 60},\n  //   weightkg: 5,\n  //   abilities: {0: 'Own Tempo'},\n  // },\n  Spoink: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 25, df: 35, sa: 70, sd: 80, sp: 60},\n    weightkg: 30.6,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  Surskit: {\n    types: ['Bug', 'Water'],\n    bs: {hp: 40, at: 30, df: 32, sa: 50, sd: 52, sp: 65},\n    weightkg: 1.7,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  Swablu: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 45, at: 40, df: 60, sa: 40, sd: 75, sp: 50},\n    weightkg: 1.2,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n  },\n  Swalot: {\n    types: ['Poison'],\n    bs: {hp: 100, at: 73, df: 83, sa: 73, sd: 83, sp: 55},\n    weightkg: 80,\n    abilities: {0: 'Liquid Ooze'},\n  },\n  // Swampert: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 100, at: 110, df: 90, sa: 85, sd: 90, sp: 60},\n  //   weightkg: 81.9,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Swellow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 60, at: 85, df: 60, sa: 50, sd: 50, sp: 125},\n  //   weightkg: 19.8,\n  //   abilities: {0: 'Guts'},\n  // },\n  // Taillow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 55, df: 30, sa: 30, sd: 30, sp: 85},\n  //   weightkg: 2.3,\n  //   nfe: true,\n  //   abilities: {0: 'Guts'},\n  // },\n  // Torchic: {\n  //   types: ['Fire'],\n  //   bs: {hp: 45, at: 60, df: 40, sa: 70, sd: 50, sp: 45},\n  //   weightkg: 2.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  Torkoal: {\n    types: ['Fire'],\n    bs: {hp: 70, at: 85, df: 140, sa: 85, sd: 70, sp: 20},\n    weightkg: 80.4,\n    abilities: {0: 'White Smoke'},\n  },\n  // Trapinch: {\n  //   types: ['Ground'],\n  //   bs: {hp: 45, at: 100, df: 45, sa: 45, sd: 45, sp: 10},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Hyper Cutter'},\n  // },\n  // Treecko: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 45, df: 35, sa: 65, sd: 55, sp: 70},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Tropius: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 99, at: 68, df: 83, sa: 72, sd: 87, sp: 51},\n    weightkg: 100,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Vibrava: {\n  //   types: ['Ground', 'Dragon'],\n  //   bs: {hp: 50, at: 70, df: 50, sa: 50, sd: 50, sp: 70},\n  //   weightkg: 15.3,\n  //   abilities: {0: 'Levitate'},\n  //   nfe: true,\n  // },\n  Vigoroth: {\n    types: ['Normal'],\n    bs: {hp: 80, at: 80, df: 80, sa: 55, sd: 55, sp: 90},\n    weightkg: 46.5,\n    abilities: {0: 'Vital Spirit'},\n    nfe: true,\n  },\n  // Volbeat: {\n  //   types: ['Bug'],\n  //   bs: {hp: 65, at: 73, df: 55, sa: 47, sd: 75, sp: 85},\n  //   weightkg: 17.7,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  // Wailmer: {\n  //   types: ['Water'],\n  //   bs: {hp: 130, at: 70, df: 35, sa: 70, sd: 35, sp: 60},\n  //   weightkg: 130,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  // Wailord: {\n  //   types: ['Water'],\n  //   bs: {hp: 170, at: 90, df: 45, sa: 90, sd: 45, sp: 60},\n  //   weightkg: 398,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  // Walrein: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 110, at: 80, df: 90, sa: 95, sd: 90, sp: 65},\n  //   weightkg: 150.6,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  Whiscash: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 110, at: 78, df: 73, sa: 76, sd: 71, sp: 60},\n    weightkg: 23.6,\n    abilities: {0: 'Oblivious'},\n  },\n  // Whismur: {\n  //   types: ['Normal'],\n  //   bs: {hp: 64, at: 51, df: 23, sa: 51, sd: 23, sp: 28},\n  //   weightkg: 16.3,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Wingull: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 40, at: 30, df: 30, sa: 55, sd: 30, sp: 85},\n    weightkg: 9.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Wurmple: {\n  //   types: ['Bug'],\n  //   bs: {hp: 45, at: 45, df: 35, sa: 20, sd: 30, sp: 20},\n  //   weightkg: 3.6,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Wynaut: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 95, at: 23, df: 48, sa: 23, sd: 48, sp: 23},\n  //   weightkg: 14,\n  //   nfe: true,\n  //   abilities: {0: 'Shadow Tag'},\n  // },\n  Zangoose: {\n    types: ['Normal'],\n    bs: {hp: 73, at: 115, df: 60, sa: 60, sd: 60, sp: 90},\n    weightkg: 40.3,\n    abilities: {0: 'Immunity'},\n  },\n  // Zigzagoon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 38, at: 30, df: 41, sa: 30, sd: 41, sp: 60},\n  //   weightkg: 17.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  // },\n};\n\nconst ADV: {[name: string]: SpeciesData} = extend(true, {}, GSC, ADV_PATCH);\n\nconst DPP_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // Aipom: {nfe: true},\n  // Dusclops: {nfe: true},\n  // Electabuzz: {nfe: true},\n  // Gligar: {nfe: true},\n  // Lickitung: {nfe: true},\n  // Magmar: {nfe: true},\n  Magneton: {nfe: true},\n  Misdreavus: {nfe: true},\n  Murkrow: {nfe: true},\n  // Nosepass: {nfe: true},\n  // Piloswine: {nfe: true},\n  // Pichu: {otherFormes: ['Pichu-Spiky-eared']},\n  // Porygon2: {nfe: true},\n  // Rhydon: {nfe: true},\n  // Roselia: {nfe: true},\n  Sneasel: {nfe: true},\n  // Tangela: {nfe: true},\n  // Togetic: {nfe: true},\n  // Yanma: {nfe: true},\n  Abomasnow: {\n    types: ['Grass', 'Ice'],\n    bs: {hp: 90, at: 92, df: 75, sa: 92, sd: 85, sp: 60},\n    weightkg: 135.5,\n    abilities: {0: 'Snow Warning'},\n  },\n  // Ambipom: {\n  //   types: ['Normal'],\n  //   bs: {hp: 75, at: 100, df: 66, sa: 60, sd: 66, sp: 115},\n  //   weightkg: 20.3,\n  //   abilities: {0: 'Technician'},\n  // },\n  Arceus: {\n    types: ['Normal'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    otherFormes: [\n      // 'Arceus-Bug',\n      // 'Arceus-Dark',\n      // 'Arceus-Dragon',\n      // 'Arceus-Electric',\n      // 'Arceus-Fighting',\n      // 'Arceus-Fire',\n      // 'Arceus-Flying',\n      // 'Arceus-Ghost',\n      // 'Arceus-Grass',\n      // 'Arceus-Ground',\n      // 'Arceus-Ice',\n      // 'Arceus-Poison',\n      // 'Arceus-Psychic',\n      // 'Arceus-Rock',\n      // 'Arceus-Steel',\n      // 'Arceus-Water',\n    ],\n  },\n  // 'Arceus-Bug': {\n  //   types: ['Bug'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Dark': {\n  //   types: ['Dark'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Dragon': {\n  //   types: ['Dragon'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Electric': {\n  //   types: ['Electric'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Fighting': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Fire': {\n  //   types: ['Fire'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Flying': {\n  //   types: ['Flying'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Ghost': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Grass': {\n  //   types: ['Grass'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Ground': {\n  //   types: ['Ground'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Ice': {\n  //   types: ['Ice'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Poison': {\n  //   types: ['Poison'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Psychic': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Rock': {\n  //   types: ['Rock'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Steel': {\n  //   types: ['Steel'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // 'Arceus-Water': {\n  //   types: ['Water'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   gender: 'N',\n  //   baseSpecies: 'Arceus',\n  // },\n  // Arghonaut: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 105, at: 110, df: 95, sa: 70, sd: 100, sp: 75},\n  //   weightkg: 151,\n  //   abilities: {0: 'Unaware'},\n  // },\n  Azelf: {\n    types: ['Psychic'],\n    bs: {hp: 75, at: 125, df: 70, sa: 125, sd: 70, sp: 115},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  // Bastiodon: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 60, at: 52, df: 168, sa: 47, sd: 138, sp: 30},\n  //   weightkg: 149.5,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Bibarel: {\n  //   types: ['Normal', 'Water'],\n  //   bs: {hp: 79, at: 85, df: 60, sa: 55, sd: 60, sp: 71},\n  //   weightkg: 31.5,\n  //   abilities: {0: 'Simple'},\n  // },\n  // Bidoof: {\n  //   types: ['Normal'],\n  //   bs: {hp: 59, at: 45, df: 40, sa: 35, sd: 40, sp: 31},\n  //   weightkg: 20,\n  //   nfe: true,\n  //   abilities: {0: 'Simple'},\n  // },\n  Bonsly: {\n    types: ['Rock'],\n    bs: {hp: 50, at: 80, df: 95, sa: 10, sd: 45, sp: 10},\n    weightkg: 15,\n    nfe: true,\n    abilities: {0: 'Sturdy'},\n  },\n  // Breezi: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 50, at: 46, df: 69, sa: 60, sd: 50, sp: 75},\n  //   weightkg: 0.6,\n  //   nfe: true,\n  //   abilities: {0: 'Unburden'},\n  // },\n  Bronzong: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 67, at: 89, df: 116, sa: 79, sd: 116, sp: 33},\n    weightkg: 187,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n  },\n  Bronzor: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 57, at: 24, df: 86, sa: 24, sd: 86, sp: 23},\n    weightkg: 60.5,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n  },\n  // Budew: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 40, at: 30, df: 35, sa: 50, sd: 70, sp: 55},\n  //   weightkg: 1.2,\n  //   nfe: true,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Buizel: {\n    types: ['Water'],\n    bs: {hp: 55, at: 65, df: 35, sa: 60, sd: 30, sp: 85},\n    weightkg: 29.5,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Buneary: {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 66, df: 44, sa: 44, sd: 56, sp: 85},\n  //   weightkg: 5.5,\n  //   nfe: true,\n  //   abilities: {0: 'Run Away'},\n  // },\n  // Burmy: {\n  //   types: ['Bug'],\n  //   bs: {hp: 40, at: 29, df: 45, sa: 29, sd: 45, sp: 36},\n  //   weightkg: 3.4,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Carnivine: {\n  //   types: ['Grass'],\n  //   bs: {hp: 74, at: 100, df: 72, sa: 90, sd: 72, sp: 46},\n  //   weightkg: 27,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Chatot: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 76, at: 65, df: 45, sa: 92, sd: 42, sp: 91},\n  //   weightkg: 1.9,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Cherrim: {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 60, df: 70, sa: 87, sd: 78, sp: 85},\n  //   weightkg: 9.3,\n  //   abilities: {0: 'Flower Gift'},\n  //   otherFormes: ['Cherrim-Sunshine'],\n  // },\n  // 'Cherrim-Sunshine': {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 60, df: 70, sa: 87, sd: 78, sp: 85},\n  //   weightkg: 9.3,\n  //   abilities: {0: 'Flower Gift'},\n  //   baseSpecies: 'Cherrim',\n  // },\n  // Cherubi: {\n  //   types: ['Grass'],\n  //   bs: {hp: 45, at: 35, df: 45, sa: 62, sd: 53, sp: 35},\n  //   weightkg: 3.3,\n  //   abilities: {0: 'Chlorophyll'},\n  //   nfe: true,\n  // },\n  // Chimchar: {\n  //   types: ['Fire'],\n  //   bs: {hp: 44, at: 58, df: 44, sa: 58, sd: 44, sp: 61},\n  //   weightkg: 6.2,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Chingling: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 45, at: 30, df: 50, sa: 65, sd: 50, sp: 45},\n  //   weightkg: 0.6,\n  //   abilities: {0: 'Levitate'},\n  //   nfe: true,\n  // },\n  // Colossoil: {\n  //   types: ['Ground', 'Dark'],\n  //   bs: {hp: 133, at: 122, df: 72, sa: 71, sd: 72, sp: 95},\n  //   weightkg: 683.6,\n  //   abilities: {0: 'Rebound'},\n  // },\n  Combee: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 30, at: 30, df: 42, sa: 30, sd: 42, sp: 70},\n    weightkg: 5.5,\n    nfe: true,\n    abilities: {0: 'Honey Gather'},\n  },\n  // Cranidos: {\n  //   types: ['Rock'],\n  //   bs: {hp: 67, at: 125, df: 40, sa: 30, sd: 30, sp: 58},\n  //   weightkg: 31.5,\n  //   nfe: true,\n  //   abilities: {0: 'Mold Breaker'},\n  // },\n  Cresselia: {\n    types: ['Psychic'],\n    bs: {hp: 120, at: 70, df: 120, sa: 75, sd: 130, sp: 85},\n    weightkg: 85.6,\n    abilities: {0: 'Levitate'},\n  },\n  Croagunk: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 48, at: 61, df: 40, sa: 61, sd: 40, sp: 50},\n    weightkg: 23,\n    nfe: true,\n    abilities: {0: 'Anticipation'},\n  },\n  // Cyclohm: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 108, at: 60, df: 118, sa: 112, sd: 70, sp: 80},\n  //   weightkg: 59,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Darkrai: {\n  //   types: ['Dark'],\n  //   bs: {hp: 70, at: 90, df: 90, sa: 135, sd: 90, sp: 125},\n  //   weightkg: 50.5,\n  //   abilities: {0: 'Bad Dreams'},\n  //   gender: 'N',\n  // },\n  Dialga: {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 100, at: 120, df: 120, sa: 150, sd: 100, sp: 90},\n    weightkg: 683,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n  },\n  // Dorsoil: {\n  //   types: ['Ground'],\n  //   bs: {hp: 103, at: 72, df: 52, sa: 61, sd: 52, sp: 65},\n  //   weightkg: 145,\n  //   nfe: true,\n  //   abilities: {0: 'Oblivious'},\n  // },\n  // Drapion: {\n  //   types: ['Poison', 'Dark'],\n  //   bs: {hp: 70, at: 90, df: 110, sa: 60, sd: 75, sp: 95},\n  //   weightkg: 61.5,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  Drifblim: {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 150, at: 80, df: 44, sa: 90, sd: 54, sp: 80},\n    weightkg: 15,\n    abilities: {0: 'Aftermath'},\n  },\n  Drifloon: {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 90, at: 50, df: 34, sa: 60, sd: 44, sp: 70},\n    weightkg: 1.2,\n    nfe: true,\n    abilities: {0: 'Aftermath'},\n  },\n  // Duohm: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 88, at: 40, df: 103, sa: 77, sd: 60, sp: 60},\n  //   weightkg: 19.2,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Dusknoir: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 45, at: 100, df: 135, sa: 65, sd: 135, sp: 45},\n  //   weightkg: 106.6,\n  //   abilities: {0: 'Pressure'},\n  // },\n  // Electivire: {\n  //   types: ['Electric'],\n  //   bs: {hp: 75, at: 123, df: 67, sa: 95, sd: 85, sp: 95},\n  //   weightkg: 138.6,\n  //   abilities: {0: 'Motor Drive'},\n  // },\n  // Embirch: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 60, at: 40, df: 55, sa: 65, sd: 40, sp: 60},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Reckless'},\n  // },\n  // Empoleon: {\n  //   types: ['Water', 'Steel'],\n  //   bs: {hp: 84, at: 86, df: 88, sa: 111, sd: 101, sp: 60},\n  //   weightkg: 84.5,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Fidgit: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 95, at: 76, df: 109, sa: 90, sd: 80, sp: 105},\n  //   weightkg: 53,\n  //   abilities: {0: 'Persistent'},\n  // },\n  Finneon: {\n    types: ['Water'],\n    bs: {hp: 49, at: 49, df: 56, sa: 49, sd: 61, sp: 66},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Flarelm: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 90, at: 50, df: 95, sa: 75, sd: 70, sp: 40},\n  //   weightkg: 73,\n  //   nfe: true,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  Floatzel: {\n    types: ['Water'],\n    bs: {hp: 85, at: 105, df: 55, sa: 85, sd: 50, sp: 115},\n    weightkg: 33.5,\n    abilities: {0: 'Swift Swim'},\n  },\n  Froslass: {\n    types: ['Ice', 'Ghost'],\n    bs: {hp: 70, at: 80, df: 70, sa: 80, sd: 70, sp: 110},\n    weightkg: 26.6,\n    abilities: {0: 'Snow Cloak'},\n  },\n  Gabite: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 68, at: 90, df: 65, sa: 50, sd: 55, sp: 82},\n    weightkg: 56,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Gallade: {\n    types: ['Psychic', 'Fighting'],\n    bs: {hp: 68, at: 125, df: 65, sa: 65, sd: 115, sp: 80},\n    weightkg: 52,\n    abilities: {0: 'Steadfast'},\n  },\n  Garchomp: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 108, at: 130, df: 95, sa: 80, sd: 85, sp: 102},\n    weightkg: 95,\n    abilities: {0: 'Sand Veil'},\n  },\n  Gastrodon: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 111, at: 83, df: 68, sa: 92, sd: 82, sp: 39},\n    weightkg: 29.9,\n    abilities: {0: 'Sticky Hold'},\n  },\n  Gible: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 58, at: 70, df: 45, sa: 40, sd: 45, sp: 42},\n    weightkg: 20.5,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Giratina: {\n    types: ['Ghost', 'Dragon'],\n    bs: {hp: 150, at: 100, df: 120, sa: 100, sd: 120, sp: 90},\n    weightkg: 750,\n    gender: 'N',\n    otherFormes: ['Giratina-Origin'],\n    abilities: {0: 'Pressure'},\n  },\n  'Giratina-Origin': {\n    types: ['Ghost', 'Dragon'],\n    bs: {hp: 150, at: 120, df: 100, sa: 120, sd: 100, sp: 90},\n    weightkg: 650,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n    baseSpecies: 'Giratina',\n  },\n  Glaceon: {\n    types: ['Ice'],\n    bs: {hp: 65, at: 60, df: 110, sa: 130, sd: 95, sp: 65},\n    weightkg: 25.9,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Glameow: {\n  //   types: ['Normal'],\n  //   bs: {hp: 49, at: 55, df: 42, sa: 42, sd: 37, sp: 85},\n  //   weightkg: 3.9,\n  //   nfe: true,\n  //   abilities: {0: 'Limber'},\n  // },\n  // Gliscor: {\n  //   types: ['Ground', 'Flying'],\n  //   bs: {hp: 75, at: 95, df: 125, sa: 45, sd: 75, sp: 95},\n  //   weightkg: 42.5,\n  //   abilities: {0: 'Hyper Cutter'},\n  // },\n  // Grotle: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 89, df: 85, sa: 55, sd: 65, sp: 36},\n  //   weightkg: 97,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Happiny: {\n    types: ['Normal'],\n    bs: {hp: 100, at: 5, df: 5, sa: 15, sd: 65, sp: 30},\n    weightkg: 24.4,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n  },\n  Heatran: {\n    types: ['Fire', 'Steel'],\n    bs: {hp: 91, at: 90, df: 106, sa: 130, sd: 106, sp: 77},\n    weightkg: 430,\n    abilities: {0: 'Flash Fire'},\n  },\n  Hippopotas: {\n    types: ['Ground'],\n    bs: {hp: 68, at: 72, df: 78, sa: 38, sd: 42, sp: 32},\n    weightkg: 49.5,\n    nfe: true,\n    abilities: {0: 'Sand Stream'},\n  },\n  Hippowdon: {\n    types: ['Ground'],\n    bs: {hp: 108, at: 112, df: 118, sa: 68, sd: 72, sp: 47},\n    weightkg: 300,\n    abilities: {0: 'Sand Stream'},\n  },\n  Honchkrow: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 100, at: 125, df: 52, sa: 105, sd: 52, sp: 71},\n    weightkg: 27.3,\n    abilities: {0: 'Insomnia'},\n  },\n  // Infernape: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 76, at: 104, df: 71, sa: 104, sd: 71, sp: 108},\n  //   weightkg: 55,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Kitsunoh: {\n  //   types: ['Ghost', 'Steel'],\n  //   bs: {hp: 80, at: 103, df: 85, sa: 55, sd: 80, sp: 110},\n  //   weightkg: 51,\n  //   abilities: {0: 'Frisk'},\n  // },\n  Kricketot: {\n    types: ['Bug'],\n    bs: {hp: 37, at: 25, df: 41, sa: 25, sd: 41, sp: 25},\n    weightkg: 2.2,\n    nfe: true,\n    abilities: {0: 'Shed Skin'},\n  },\n  Kricketune: {\n    types: ['Bug'],\n    bs: {hp: 77, at: 85, df: 51, sa: 55, sd: 51, sp: 65},\n    weightkg: 25.5,\n    abilities: {0: 'Swarm'},\n  },\n  // Krilowatt: {\n  //   types: ['Electric', 'Water'],\n  //   bs: {hp: 151, at: 84, df: 73, sa: 83, sd: 74, sp: 105},\n  //   weightkg: 10.6,\n  //   abilities: {0: 'Trace'},\n  // },\n  Leafeon: {\n    types: ['Grass'],\n    bs: {hp: 65, at: 110, df: 130, sa: 60, sd: 65, sp: 95},\n    weightkg: 25.5,\n    abilities: {0: 'Leaf Guard'},\n  },\n  // Lickilicky: {\n  //   types: ['Normal'],\n  //   bs: {hp: 110, at: 85, df: 95, sa: 80, sd: 95, sp: 50},\n  //   weightkg: 140,\n  //   abilities: {0: 'Own Tempo'},\n  // },\n  // Lopunny: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 76, df: 84, sa: 54, sd: 96, sp: 105},\n  //   weightkg: 33.3,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  Lucario: {\n    types: ['Fighting', 'Steel'],\n    bs: {hp: 70, at: 110, df: 70, sa: 115, sd: 70, sp: 90},\n    weightkg: 54,\n    abilities: {0: 'Steadfast'},\n  },\n  Lumineon: {\n    types: ['Water'],\n    bs: {hp: 69, at: 69, df: 76, sa: 69, sd: 86, sp: 91},\n    weightkg: 24,\n    abilities: {0: 'Swift Swim'},\n  },\n  Luxio: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 85, df: 49, sa: 60, sd: 49, sp: 60},\n    weightkg: 30.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  Luxray: {\n    types: ['Electric'],\n    bs: {hp: 80, at: 120, df: 79, sa: 95, sd: 79, sp: 70},\n    weightkg: 42,\n    abilities: {0: 'Rivalry'},\n  },\n  // Magmortar: {\n  //   types: ['Fire'],\n  //   bs: {hp: 75, at: 95, df: 67, sa: 125, sd: 95, sp: 83},\n  //   weightkg: 68,\n  //   abilities: {0: 'Flame Body'},\n  // },\n  Magnezone: {\n    types: ['Electric', 'Steel'],\n    bs: {hp: 70, at: 70, df: 115, sa: 130, sd: 90, sp: 60},\n    weightkg: 180,\n    gender: 'N',\n    abilities: {0: 'Magnet Pull'},\n  },\n  // Mamoswine: {\n  //   types: ['Ice', 'Ground'],\n  //   bs: {hp: 110, at: 130, df: 80, sa: 70, sd: 60, sp: 80},\n  //   weightkg: 291,\n  //   abilities: {0: 'Oblivious'},\n  // },\n  // Manaphy: {\n  //   types: ['Water'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 1.4,\n  //   abilities: {0: 'Hydration'},\n  //   gender: 'N',\n  // },\n  // Mantyke: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 45, at: 20, df: 50, sa: 60, sd: 120, sp: 50},\n  //   weightkg: 65,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Mesprit: {\n    types: ['Psychic'],\n    bs: {hp: 80, at: 105, df: 105, sa: 105, sd: 105, sp: 80},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  // 'Mime Jr.': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 20, at: 25, df: 45, sa: 70, sd: 90, sp: 60},\n  //   weightkg: 13,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Mismagius: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 60, df: 60, sa: 105, sd: 105, sp: 105},\n    weightkg: 4.4,\n    abilities: {0: 'Levitate'},\n  },\n  // Monferno: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 64, at: 78, df: 52, sa: 78, sd: 52, sp: 81},\n  //   weightkg: 22,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Monohm: {\n  //   types: ['Electric'],\n  //   bs: {hp: 53, at: 40, df: 58, sa: 67, sd: 55, sp: 55},\n  //   weightkg: 4.1,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Mothim: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 70, at: 94, df: 50, sa: 94, sd: 50, sp: 66},\n  //   weightkg: 23.3,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Munchlax: {\n  //   types: ['Normal'],\n  //   bs: {hp: 135, at: 85, df: 40, sa: 40, sd: 85, sp: 5},\n  //   weightkg: 105,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Nohface: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 50, at: 73, df: 50, sa: 30, sd: 50, sp: 80},\n  //   weightkg: 5.9,\n  //   nfe: true,\n  //   abilities: {0: 'Frisk'},\n  // },\n  Pachirisu: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 45, df: 70, sa: 45, sd: 90, sp: 95},\n    weightkg: 3.9,\n    abilities: {0: 'Run Away'},\n  },\n  Palkia: {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 90, at: 120, df: 100, sa: 150, sd: 120, sp: 100},\n    weightkg: 336,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n  },\n  Phione: {\n    types: ['Water'],\n    bs: {hp: 80, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 3.1,\n    abilities: {0: 'Hydration'},\n    gender: 'N',\n  },\n  // 'Pichu-Spiky-eared': {\n  //   types: ['Electric'],\n  //   bs: {hp: 20, at: 40, df: 15, sa: 35, sd: 35, sp: 60},\n  //   weightkg: 2,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pichu',\n  // },\n  // Piplup: {\n  //   types: ['Water'],\n  //   bs: {hp: 53, at: 51, df: 53, sa: 61, sd: 56, sp: 40},\n  //   weightkg: 5.2,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // 'Porygon-Z': {\n  //   types: ['Normal'],\n  //   bs: {hp: 85, at: 80, df: 70, sa: 135, sd: 75, sp: 90},\n  //   weightkg: 34,\n  //   gender: 'N',\n  //   abilities: {0: 'Adaptability'},\n  // },\n  // Prinplup: {\n  //   types: ['Water'],\n  //   bs: {hp: 64, at: 66, df: 68, sa: 81, sd: 76, sp: 50},\n  //   weightkg: 23,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Privatyke: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 65, at: 75, df: 65, sa: 40, sd: 60, sp: 45},\n  //   weightkg: 35,\n  //   nfe: true,\n  //   abilities: {0: 'Unaware'},\n  // },\n  // Probopass: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 60, at: 55, df: 145, sa: 75, sd: 150, sp: 40},\n  //   weightkg: 340,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Protowatt: {\n  //   types: ['Electric', 'Water'],\n  //   bs: {hp: 51, at: 44, df: 33, sa: 43, sd: 34, sp: 65},\n  //   weightkg: 0.1,\n  //   nfe: true,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Purugly: {\n  //   types: ['Normal'],\n  //   bs: {hp: 71, at: 82, df: 64, sa: 64, sd: 59, sp: 112},\n  //   weightkg: 43.8,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  // Pyroak: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 120, at: 70, df: 105, sa: 95, sd: 90, sp: 60},\n  //   weightkg: 168,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  // Rampardos: {\n  //   types: ['Rock'],\n  //   bs: {hp: 97, at: 165, df: 60, sa: 65, sd: 50, sp: 58},\n  //   weightkg: 102.5,\n  //   abilities: {0: 'Mold Breaker'},\n  // },\n  // Rebble: {\n  //   types: ['Rock'],\n  //   bs: {hp: 45, at: 25, df: 65, sa: 75, sd: 55, sp: 80},\n  //   weightkg: 7,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  Regigigas: {\n    types: ['Normal'],\n    bs: {hp: 110, at: 160, df: 110, sa: 80, sd: 110, sp: 100},\n    weightkg: 420,\n    abilities: {0: 'Slow Start'},\n    gender: 'N',\n  },\n  // Revenankh: {\n  //   types: ['Ghost', 'Fighting'],\n  //   bs: {hp: 90, at: 105, df: 90, sa: 65, sd: 110, sp: 65},\n  //   weightkg: 44,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Rhyperior: {\n  //   types: ['Ground', 'Rock'],\n  //   bs: {hp: 115, at: 140, df: 130, sa: 55, sd: 55, sp: 40},\n  //   weightkg: 282.8,\n  //   abilities: {0: 'Lightning Rod'},\n  // },\n  Riolu: {\n    types: ['Fighting'],\n    bs: {hp: 40, at: 70, df: 40, sa: 35, sd: 40, sp: 60},\n    weightkg: 20.2,\n    nfe: true,\n    abilities: {0: 'Steadfast'},\n  },\n  // Roserade: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 60, at: 70, df: 55, sa: 125, sd: 105, sp: 90},\n  //   weightkg: 14.5,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Rotom: {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 50, df: 77, sa: 95, sd: 77, sp: 91},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    otherFormes: ['Rotom-Fan', 'Rotom-Frost', 'Rotom-Heat', 'Rotom-Mow', 'Rotom-Wash'],\n  },\n  'Rotom-Mow': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Frost': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Heat': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Fan': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Wash': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  // Shaymin: {\n  //   types: ['Grass'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 2.1,\n  //   abilities: {0: 'Natural Cure'},\n  //   gender: 'N',\n  //   otherFormes: ['Shaymin-Sky'],\n  // },\n  // 'Shaymin-Sky': {\n  //   types: ['Grass', 'Flying'],\n  //   bs: {hp: 100, at: 103, df: 75, sa: 120, sd: 75, sp: 127},\n  //   weightkg: 5.2,\n  //   abilities: {0: 'Serene Grace'},\n  //   gender: 'N',\n  //   baseSpecies: 'Shaymin',\n  // },\n  Shellos: {\n    types: ['Water'],\n    bs: {hp: 76, at: 48, df: 48, sa: 57, sd: 62, sp: 34},\n    weightkg: 6.3,\n    nfe: true,\n    abilities: {0: 'Sticky Hold'},\n  },\n  // Shieldon: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 30, at: 42, df: 118, sa: 42, sd: 88, sp: 30},\n  //   weightkg: 57,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Shinx: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 65, df: 34, sa: 40, sd: 34, sp: 45},\n    weightkg: 9.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  // Skorupi: {\n  //   types: ['Poison', 'Bug'],\n  //   bs: {hp: 40, at: 50, df: 90, sa: 30, sd: 55, sp: 65},\n  //   weightkg: 12,\n  //   nfe: true,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  Skuntank: {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 103, at: 93, df: 67, sa: 71, sd: 61, sp: 84},\n    weightkg: 38,\n    abilities: {0: 'Stench'},\n  },\n  Snover: {\n    types: ['Grass', 'Ice'],\n    bs: {hp: 60, at: 62, df: 50, sa: 62, sd: 60, sp: 40},\n    weightkg: 50.5,\n    nfe: true,\n    abilities: {0: 'Snow Warning'},\n  },\n  Spiritomb: {\n    types: ['Ghost', 'Dark'],\n    bs: {hp: 50, at: 92, df: 108, sa: 92, sd: 108, sp: 35},\n    weightkg: 108,\n    abilities: {0: 'Pressure'},\n  },\n  Staraptor: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 85, at: 120, df: 70, sa: 50, sd: 50, sp: 100},\n    weightkg: 24.9,\n    abilities: {0: 'Intimidate'},\n  },\n  Staravia: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 55, at: 75, df: 50, sa: 40, sd: 40, sp: 80},\n    weightkg: 15.5,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  Starly: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 40, at: 55, df: 30, sa: 30, sd: 30, sp: 60},\n    weightkg: 2,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Stratagem: {\n  //   types: ['Rock'],\n  //   bs: {hp: 90, at: 60, df: 65, sa: 120, sd: 70, sp: 130},\n  //   weightkg: 45,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  Stunky: {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 63, at: 63, df: 47, sa: 41, sd: 41, sp: 74},\n    weightkg: 19.2,\n    nfe: true,\n    abilities: {0: 'Stench'},\n  },\n  // Syclant: {\n  //   types: ['Ice', 'Bug'],\n  //   bs: {hp: 70, at: 116, df: 70, sa: 114, sd: 64, sp: 121},\n  //   weightkg: 52,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Syclar: {\n  //   types: ['Ice', 'Bug'],\n  //   bs: {hp: 40, at: 76, df: 45, sa: 74, sd: 39, sp: 91},\n  //   weightkg: 4,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Tactite: {\n  //   types: ['Rock'],\n  //   bs: {hp: 70, at: 40, df: 65, sa: 100, sd: 65, sp: 95},\n  //   weightkg: 16,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Tangrowth: {\n  //   types: ['Grass'],\n  //   bs: {hp: 100, at: 100, df: 125, sa: 110, sd: 50, sp: 50},\n  //   weightkg: 128.6,\n  //   abilities: {0: 'Chlorophyll'},\n  // },\n  // Togekiss: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 85, at: 50, df: 95, sa: 120, sd: 115, sp: 80},\n  //   weightkg: 38,\n  //   abilities: {0: 'Hustle'},\n  // },\n  // Torterra: {\n  //   types: ['Grass', 'Ground'],\n  //   bs: {hp: 95, at: 109, df: 105, sa: 75, sd: 85, sp: 56},\n  //   weightkg: 310,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Toxicroak: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 83, at: 106, df: 65, sa: 86, sd: 65, sp: 85},\n    weightkg: 44.4,\n    abilities: {0: 'Anticipation'},\n  },\n  // Turtwig: {\n  //   types: ['Grass'],\n  //   bs: {hp: 55, at: 68, df: 64, sa: 45, sd: 55, sp: 31},\n  //   weightkg: 10.2,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Uxie: {\n    types: ['Psychic'],\n    bs: {hp: 75, at: 75, df: 130, sa: 75, sd: 130, sp: 95},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  Vespiquen: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 80, df: 102, sa: 80, sd: 102, sp: 40},\n    weightkg: 38.5,\n    abilities: {0: 'Pressure'},\n  },\n  // Voodoll: {\n  //   types: ['Normal', 'Dark'],\n  //   bs: {hp: 55, at: 40, df: 55, sa: 75, sd: 50, sp: 70},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Volt Absorb'},\n  // },\n  // Voodoom: {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 90, at: 85, df: 80, sa: 105, sd: 80, sp: 110},\n  //   weightkg: 75.5,\n  //   abilities: {0: 'Volt Absorb'},\n  // },\n  Weavile: {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 70, at: 120, df: 65, sa: 45, sd: 85, sp: 125},\n    weightkg: 34,\n    abilities: {0: 'Pressure'},\n  },\n  // Wormadam: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 60, at: 59, df: 85, sa: 79, sd: 105, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   otherFormes: ['Wormadam-Sandy', 'Wormadam-Trash'],\n  // },\n  // 'Wormadam-Sandy': {\n  //   types: ['Bug', 'Ground'],\n  //   bs: {hp: 60, at: 79, df: 105, sa: 59, sd: 85, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   baseSpecies: 'Wormadam',\n  // },\n  // 'Wormadam-Trash': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 60, at: 69, df: 95, sa: 69, sd: 95, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   baseSpecies: 'Wormadam',\n  // },\n  // Yanmega: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 86, at: 76, df: 86, sa: 116, sd: 56, sp: 95},\n  //   weightkg: 51.5,\n  //   abilities: {0: 'Speed Boost'},\n  // },\n};\n\nconst DPP: {[name: string]: SpeciesData} = extend(true, {}, ADV, DPP_PATCH);\n\nconst BW_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  'Rotom-Fan': {types: ['Electric', 'Flying']},\n  'Rotom-Frost': {types: ['Electric', 'Ice']},\n  'Rotom-Heat': {types: ['Electric', 'Fire']},\n  'Rotom-Mow': {types: ['Electric', 'Grass']},\n  'Rotom-Wash': {types: ['Electric', 'Water']},\n  // Accelgor: {\n  //   types: ['Bug'],\n  //   bs: {hp: 80, at: 70, df: 40, sa: 100, sd: 60, sp: 145},\n  //   weightkg: 25.3,\n  //   abilities: {0: 'Hydration'},\n  // },\n  Alomomola: {\n    types: ['Water'],\n    bs: {hp: 165, at: 75, df: 80, sa: 40, sd: 45, sp: 65},\n    weightkg: 31.6,\n    abilities: {0: 'Healer'},\n  },\n  Amoonguss: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 114, at: 85, df: 70, sa: 85, sd: 80, sp: 30},\n    weightkg: 10.5,\n    abilities: {0: 'Effect Spore'},\n  },\n  // Archen: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 55, at: 112, df: 45, sa: 74, sd: 45, sp: 70},\n  //   weightkg: 9.5,\n  //   abilities: {0: 'Defeatist'},\n  //   nfe: true,\n  // },\n  // Archeops: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 75, at: 140, df: 65, sa: 112, sd: 65, sp: 110},\n  //   weightkg: 32,\n  //   abilities: {0: 'Defeatist'},\n  // },\n  // Argalis: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 90, df: 89, sa: 87, sd: 40, sp: 54},\n  //   weightkg: 341.4,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Audino: {\n  //   types: ['Normal'],\n  //   bs: {hp: 103, at: 60, df: 86, sa: 60, sd: 86, sp: 50},\n  //   weightkg: 31,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Aurumoth: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 110, at: 120, df: 99, sa: 117, sd: 60, sp: 94},\n  //   weightkg: 193,\n  //   abilities: {0: 'Weak Armor'},\n  // },\n  Axew: {\n    types: ['Dragon'],\n    bs: {hp: 46, at: 87, df: 60, sa: 30, sd: 40, sp: 57},\n    weightkg: 18,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  Basculin: {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Reckless'},\n    otherFormes: ['Basculin-Blue-Striped'],\n  },\n  'Basculin-Blue-Striped': {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Rock Head'},\n    baseSpecies: 'Basculin',\n  },\n  Beartic: {\n    types: ['Ice'],\n    bs: {hp: 95, at: 110, df: 80, sa: 70, sd: 80, sp: 50},\n    weightkg: 260,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Beheeyem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 75, at: 75, df: 75, sa: 125, sd: 95, sp: 40},\n  //   weightkg: 34.5,\n  //   abilities: {0: 'Telepathy'},\n  // },\n  Bisharp: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 65, at: 125, df: 100, sa: 60, sd: 70, sp: 70},\n    weightkg: 70,\n    abilities: {0: 'Defiant'},\n  },\n  // Blitzle: {\n  //   types: ['Electric'],\n  //   bs: {hp: 45, at: 60, df: 32, sa: 50, sd: 32, sp: 76},\n  //   weightkg: 29.8,\n  //   nfe: true,\n  //   abilities: {0: 'Lightning Rod'},\n  // },\n  // Boldore: {\n  //   types: ['Rock'],\n  //   bs: {hp: 70, at: 105, df: 105, sa: 50, sd: 40, sp: 20},\n  //   weightkg: 102,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Bouffalant: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 110, df: 95, sa: 40, sd: 95, sp: 55},\n  //   weightkg: 94.6,\n  //   abilities: {0: 'Reckless'},\n  // },\n  // Brattler: {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 80, at: 70, df: 40, sa: 20, sd: 90, sp: 30},\n  //   weightkg: 11.5,\n  //   nfe: true,\n  //   abilities: {0: 'Harvest'},\n  // },\n  Braviary: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 100, at: 123, df: 75, sa: 57, sd: 75, sp: 80},\n    weightkg: 41,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Carracosta: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 74, at: 108, df: 133, sa: 83, sd: 65, sp: 32},\n  //   weightkg: 81,\n  //   abilities: {0: 'Solid Rock'},\n  // },\n  // Cawdet: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 35, at: 72, df: 85, sa: 40, sd: 55, sp: 88},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Cawmodore: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 50, at: 92, df: 130, sa: 65, sd: 75, sp: 118},\n  //   weightkg: 37,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  // Chandelure: {\n  //   types: ['Ghost', 'Fire'],\n  //   bs: {hp: 60, at: 55, df: 90, sa: 145, sd: 90, sp: 80},\n  //   weightkg: 34.3,\n  //   abilities: {0: 'Flash Fire'},\n  // },\n  // Cinccino: {\n  //   types: ['Normal'],\n  //   bs: {hp: 75, at: 95, df: 60, sa: 65, sd: 60, sp: 115},\n  //   weightkg: 7.5,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  // Cobalion: {\n  //   types: ['Steel', 'Fighting'],\n  //   bs: {hp: 91, at: 90, df: 129, sa: 90, sd: 72, sp: 108},\n  //   weightkg: 250,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  // },\n  // Cofagrigus: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 58, at: 50, df: 145, sa: 95, sd: 105, sp: 30},\n  //   weightkg: 76.5,\n  //   abilities: {0: 'Mummy'},\n  // },\n  // Conkeldurr: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 105, at: 140, df: 95, sa: 55, sd: 65, sp: 45},\n  //   weightkg: 87,\n  //   abilities: {0: 'Guts'},\n  // },\n  // Cottonee: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 27, df: 60, sa: 37, sd: 50, sp: 66},\n  //   weightkg: 0.6,\n  //   nfe: true,\n  //   abilities: {0: 'Prankster'},\n  // },\n  // Crustle: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 70, at: 95, df: 125, sa: 65, sd: 75, sp: 45},\n  //   weightkg: 200,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Cryogonal: {\n    types: ['Ice'],\n    bs: {hp: 70, at: 50, df: 30, sa: 95, sd: 135, sp: 105},\n    weightkg: 148,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  Cubchoo: {\n    types: ['Ice'],\n    bs: {hp: 55, at: 70, df: 40, sa: 60, sd: 40, sp: 40},\n    weightkg: 8.5,\n    nfe: true,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Cupra: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 50, at: 60, df: 49, sa: 67, sd: 30, sp: 44},\n  //   weightkg: 4.8,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Darmanitan: {\n  //   types: ['Fire'],\n  //   bs: {hp: 105, at: 140, df: 55, sa: 30, sd: 55, sp: 95},\n  //   weightkg: 92.9,\n  //   abilities: {0: 'Sheer Force'},\n  //   otherFormes: ['Darmanitan-Zen'],\n  // },\n  // 'Darmanitan-Zen': {\n  //   types: ['Fire', 'Psychic'],\n  //   bs: {hp: 105, at: 30, df: 105, sa: 140, sd: 105, sp: 55},\n  //   weightkg: 92.9,\n  //   baseSpecies: 'Darmanitan',\n  //   abilities: {0: 'Zen Mode'},\n  // },\n  // Darumaka: {\n  //   types: ['Fire'],\n  //   bs: {hp: 70, at: 90, df: 45, sa: 15, sd: 45, sp: 50},\n  //   weightkg: 37.5,\n  //   nfe: true,\n  //   abilities: {0: 'Hustle'},\n  // },\n  Deerling: {\n    types: ['Normal', 'Grass'],\n    bs: {hp: 60, at: 60, df: 50, sa: 40, sd: 50, sp: 75},\n    weightkg: 19.5,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Deino: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 52, at: 65, df: 50, sa: 45, sd: 50, sp: 38},\n    weightkg: 17.3,\n    abilities: {0: 'Hustle'},\n    nfe: true,\n  },\n  Dewott: {\n    types: ['Water'],\n    bs: {hp: 75, at: 75, df: 60, sa: 83, sd: 60, sp: 60},\n    weightkg: 24.5,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Drilbur: {\n  //   types: ['Ground'],\n  //   bs: {hp: 60, at: 85, df: 40, sa: 30, sd: 45, sp: 68},\n  //   weightkg: 8.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sand Rush'},\n  // },\n  // Druddigon: {\n  //   types: ['Dragon'],\n  //   bs: {hp: 77, at: 120, df: 90, sa: 60, sd: 90, sp: 48},\n  //   weightkg: 139,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  // Ducklett: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 62, at: 44, df: 50, sa: 44, sd: 50, sp: 55},\n  //   weightkg: 5.5,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Duosion: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 65, at: 40, df: 50, sa: 125, sd: 60, sp: 30},\n  //   weightkg: 8,\n  //   nfe: true,\n  //   abilities: {0: 'Overcoat'},\n  // },\n  // Durant: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 58, at: 109, df: 112, sa: 48, sd: 48, sp: 109},\n  //   weightkg: 33,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Dwebble: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 50, at: 65, df: 85, sa: 35, sd: 35, sp: 55},\n  //   weightkg: 14.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Eelektrik: {\n    types: ['Electric'],\n    bs: {hp: 65, at: 85, df: 70, sa: 75, sd: 70, sp: 40},\n    weightkg: 22,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  Eelektross: {\n    types: ['Electric'],\n    bs: {hp: 85, at: 115, df: 80, sa: 105, sd: 80, sp: 50},\n    weightkg: 80.5,\n    abilities: {0: 'Levitate'},\n  },\n  // Elgyem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 55, df: 55, sa: 85, sd: 55, sp: 30},\n  //   weightkg: 9,\n  //   nfe: true,\n  //   abilities: {0: 'Telepathy'},\n  // },\n  // Emboar: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 110, at: 123, df: 65, sa: 100, sd: 65, sp: 65},\n  //   weightkg: 150,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Emolga: {\n  //   types: ['Electric', 'Flying'],\n  //   bs: {hp: 55, at: 75, df: 60, sa: 75, sd: 60, sp: 103},\n  //   weightkg: 5,\n  //   abilities: {0: 'Static'},\n  // },\n  // Escavalier: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 70, at: 135, df: 105, sa: 60, sd: 105, sp: 20},\n  //   weightkg: 33,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Excadrill: {\n  //   types: ['Ground', 'Steel'],\n  //   bs: {hp: 110, at: 135, df: 60, sa: 50, sd: 65, sp: 88},\n  //   weightkg: 40.4,\n  //   abilities: {0: 'Sand Rush'},\n  // },\n  // Ferroseed: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 44, at: 50, df: 91, sa: 24, sd: 86, sp: 10},\n  //   weightkg: 18.8,\n  //   nfe: true,\n  //   abilities: {0: 'Iron Barbs'},\n  // },\n  // Ferrothorn: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 74, at: 94, df: 131, sa: 54, sd: 116, sp: 20},\n  //   weightkg: 110,\n  //   abilities: {0: 'Iron Barbs'},\n  // },\n  Foongus: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 69, at: 55, df: 45, sa: 55, sd: 55, sp: 15},\n    weightkg: 1,\n    nfe: true,\n    abilities: {0: 'Effect Spore'},\n  },\n  // Fraxure: {\n  //   types: ['Dragon'],\n  //   bs: {hp: 66, at: 117, df: 70, sa: 40, sd: 50, sp: 67},\n  //   weightkg: 36,\n  //   nfe: true,\n  //   abilities: {0: 'Rivalry'},\n  // },\n  // Frillish: {\n  //   types: ['Water', 'Ghost'],\n  //   bs: {hp: 55, at: 40, df: 50, sa: 65, sd: 85, sp: 40},\n  //   weightkg: 33,\n  //   nfe: true,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  // Galvantula: {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 70, at: 77, df: 60, sa: 97, sd: 60, sp: 108},\n  //   weightkg: 14.3,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Garbodor: {\n  //   types: ['Poison'],\n  //   bs: {hp: 80, at: 95, df: 82, sa: 60, sd: 82, sp: 75},\n  //   weightkg: 107.3,\n  //   abilities: {0: 'Stench'},\n  // },\n  // Genesect: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   otherFormes: ['Genesect-Burn', 'Genesect-Chill', 'Genesect-Douse', 'Genesect-Shock'],\n  // },\n  // 'Genesect-Burn': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Chill': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Douse': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Shock': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // Gigalith: {\n  //   types: ['Rock'],\n  //   bs: {hp: 85, at: 135, df: 130, sa: 60, sd: 70, sp: 25},\n  //   weightkg: 260,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Golett: {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 59, at: 74, df: 50, sa: 35, sd: 50, sp: 35},\n  //   weightkg: 92,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Golurk: {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 89, at: 124, df: 80, sa: 55, sd: 80, sp: 55},\n  //   weightkg: 330,\n  //   gender: 'N',\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  Gothita: {\n    types: ['Psychic'],\n    bs: {hp: 45, at: 30, df: 50, sa: 55, sd: 65, sp: 45},\n    weightkg: 5.8,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Gothitelle: {\n    types: ['Psychic'],\n    bs: {hp: 70, at: 55, df: 95, sa: 95, sd: 110, sp: 65},\n    weightkg: 44,\n    abilities: {0: 'Frisk'},\n  },\n  Gothorita: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 45, df: 70, sa: 75, sd: 85, sp: 55},\n    weightkg: 18,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  // Gurdurr: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 85, at: 105, df: 85, sa: 40, sd: 50, sp: 40},\n  //   weightkg: 40,\n  //   nfe: true,\n  //   abilities: {0: 'Guts'},\n  // },\n  Haxorus: {\n    types: ['Dragon'],\n    bs: {hp: 76, at: 147, df: 90, sa: 60, sd: 70, sp: 97},\n    weightkg: 105.5,\n    abilities: {0: 'Rivalry'},\n  },\n  // Heatmor: {\n  //   types: ['Fire'],\n  //   bs: {hp: 85, at: 97, df: 66, sa: 105, sd: 66, sp: 65},\n  //   weightkg: 58,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Herdier: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 80, df: 65, sa: 35, sd: 65, sp: 60},\n  //   weightkg: 14.7,\n  //   nfe: true,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Hydreigon: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 92, at: 105, df: 90, sa: 125, sd: 90, sp: 98},\n    weightkg: 160,\n    abilities: {0: 'Levitate'},\n  },\n  // Jellicent: {\n  //   types: ['Water', 'Ghost'],\n  //   bs: {hp: 100, at: 60, df: 70, sa: 85, sd: 105, sp: 60},\n  //   weightkg: 135,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  // Joltik: {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 50, at: 47, df: 50, sa: 57, sd: 50, sp: 65},\n  //   weightkg: 0.6,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Karrablast: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 75, df: 45, sa: 40, sd: 45, sp: 60},\n  //   weightkg: 5.9,\n  //   nfe: true,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Keldeo: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 91, at: 72, df: 90, sa: 129, sd: 90, sp: 108},\n  //   weightkg: 48.5,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  //   otherFormes: ['Keldeo-Resolute'],\n  // },\n  // 'Keldeo-Resolute': {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 91, at: 72, df: 90, sa: 129, sd: 90, sp: 108},\n  //   weightkg: 48.5,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  //   baseSpecies: 'Keldeo',\n  // },\n  // Klang: {\n  //   types: ['Steel'],\n  //   bs: {hp: 60, at: 80, df: 95, sa: 70, sd: 85, sp: 50},\n  //   weightkg: 51,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  // Klink: {\n  //   types: ['Steel'],\n  //   bs: {hp: 40, at: 55, df: 70, sa: 45, sd: 60, sp: 30},\n  //   weightkg: 21,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  // Klinklang: {\n  //   types: ['Steel'],\n  //   bs: {hp: 60, at: 100, df: 115, sa: 70, sd: 85, sp: 90},\n  //   weightkg: 81,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  Krokorok: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 60, at: 82, df: 45, sa: 45, sd: 45, sp: 74},\n    weightkg: 33.4,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  Krookodile: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 95, at: 117, df: 70, sa: 65, sd: 70, sp: 92},\n    weightkg: 96.3,\n    abilities: {0: 'Intimidate'},\n  },\n  // Kyurem: {\n  //   types: ['Dragon', 'Ice'],\n  //   bs: {hp: 125, at: 130, df: 90, sa: 130, sd: 90, sp: 95},\n  //   weightkg: 325,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   otherFormes: ['Kyurem-Black', 'Kyurem-White'],\n  // },\n  // 'Kyurem-Black': {\n  //   types: ['Dragon', 'Ice'],\n  //   bs: {hp: 125, at: 170, df: 100, sa: 120, sd: 90, sp: 95},\n  //   weightkg: 325,\n  //   abilities: {0: 'Teravolt'},\n  //   gender: 'N',\n  //   baseSpecies: 'Kyurem',\n  // },\n  // 'Kyurem-White': {\n  //   types: ['Dragon', 'Ice'],\n  //   bs: {hp: 125, at: 120, df: 90, sa: 170, sd: 100, sp: 95},\n  //   weightkg: 325,\n  //   abilities: {0: 'Turboblaze'},\n  //   gender: 'N',\n  //   baseSpecies: 'Kyurem',\n  // },\n  // Lampent: {\n  //   types: ['Ghost', 'Fire'],\n  //   bs: {hp: 60, at: 40, df: 60, sa: 95, sd: 60, sp: 55},\n  //   weightkg: 13,\n  //   nfe: true,\n  //   abilities: {0: 'Flash Fire'},\n  // },\n  Landorus: {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 89, at: 125, df: 90, sa: 115, sd: 80, sp: 101},\n    weightkg: 68,\n    abilities: {0: 'Sand Force'},\n    otherFormes: ['Landorus-Therian'],\n  },\n  'Landorus-Therian': {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 89, at: 145, df: 90, sa: 105, sd: 80, sp: 91},\n    weightkg: 68,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Landorus',\n  },\n  Larvesta: {\n    types: ['Bug', 'Fire'],\n    bs: {hp: 55, at: 85, df: 55, sa: 50, sd: 55, sp: 60},\n    weightkg: 28.8,\n    nfe: true,\n    abilities: {0: 'Flame Body'},\n  },\n  // Leavanny: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 75, at: 103, df: 80, sa: 70, sd: 70, sp: 92},\n  //   weightkg: 20.5,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Liepard: {\n  //   types: ['Dark'],\n  //   bs: {hp: 64, at: 88, df: 50, sa: 88, sd: 50, sp: 106},\n  //   weightkg: 37.5,\n  //   abilities: {0: 'Limber'},\n  // },\n  Lilligant: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 60, df: 75, sa: 110, sd: 75, sp: 90},\n    weightkg: 16.3,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Lillipup: {\n  //   types: ['Normal'],\n  //   bs: {hp: 45, at: 60, df: 45, sa: 25, sd: 45, sp: 55},\n  //   weightkg: 4.1,\n  //   nfe: true,\n  //   abilities: {0: 'Vital Spirit'},\n  // },\n  // Litwick: {\n  //   types: ['Ghost', 'Fire'],\n  //   bs: {hp: 50, at: 30, df: 55, sa: 65, sd: 55, sp: 20},\n  //   weightkg: 3.1,\n  //   nfe: true,\n  //   abilities: {0: 'Flash Fire'},\n  // },\n  // Malaconda: {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 115, at: 100, df: 60, sa: 40, sd: 130, sp: 55},\n  //   weightkg: 108.8,\n  //   abilities: {0: 'Harvest'},\n  // },\n  Mandibuzz: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 110, at: 65, df: 105, sa: 55, sd: 95, sp: 80},\n    weightkg: 39.5,\n    abilities: {0: 'Big Pecks'},\n  },\n  // Maractus: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 86, df: 67, sa: 106, sd: 67, sp: 60},\n  //   weightkg: 28,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  'Meloetta-Aria': {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 100, at: 77, df: 77, sa: 128, sd: 128, sp: 90},\n    weightkg: 6.5,\n    abilities: {0: 'Serene Grace'},\n    otherFormes: ['Meloetta-Pirouette'],\n    gender: 'N',\n  },\n  'Meloetta-Pirouette': {\n    types: ['Normal', 'Fighting'],\n    bs: {hp: 100, at: 128, df: 90, sa: 77, sd: 77, sp: 128},\n    weightkg: 6.5,\n    abilities: {0: 'Serene Grace'},\n    baseSpecies: 'Meloetta-Aria',\n    gender: 'N',\n  },\n  // Mienfoo: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 45, at: 85, df: 50, sa: 55, sd: 50, sp: 65},\n  //   weightkg: 20,\n  //   nfe: true,\n  //   abilities: {0: 'Inner Focus'},\n  // },\n  // Mienshao: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 65, at: 125, df: 60, sa: 95, sd: 60, sp: 105},\n  //   weightkg: 35.5,\n  //   abilities: {0: 'Inner Focus'},\n  // },\n  // Minccino: {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 50, df: 40, sa: 40, sd: 40, sp: 75},\n  //   weightkg: 5.8,\n  //   nfe: true,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  // Mollux: {\n  //   types: ['Fire', 'Poison'],\n  //   bs: {hp: 95, at: 45, df: 83, sa: 131, sd: 105, sp: 76},\n  //   weightkg: 41,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Munna: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 76, at: 25, df: 45, sa: 67, sd: 55, sp: 24},\n  //   weightkg: 23.3,\n  //   nfe: true,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  // Musharna: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 116, at: 55, df: 85, sa: 107, sd: 95, sp: 29},\n  //   weightkg: 60.5,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  // Necturine: {\n  //   types: ['Grass', 'Ghost'],\n  //   bs: {hp: 49, at: 55, df: 60, sa: 50, sd: 75, sp: 51},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  //   abilities: {0: 'Anticipation'},\n  // },\n  // Necturna: {\n  //   types: ['Grass', 'Ghost'],\n  //   bs: {hp: 64, at: 120, df: 100, sa: 85, sd: 120, sp: 81},\n  //   weightkg: 49.6,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  Oshawott: {\n    types: ['Water'],\n    bs: {hp: 55, at: 55, df: 45, sa: 63, sd: 45, sp: 45},\n    weightkg: 5.9,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Palpitoad: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 75, at: 65, df: 55, sa: 65, sd: 55, sp: 69},\n  //   weightkg: 17,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Panpour: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 13.5,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Pansage: {\n  //   types: ['Grass'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 10.5,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Pansear: {\n  //   types: ['Fire'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 11,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Patrat: {\n  //   types: ['Normal'],\n  //   bs: {hp: 45, at: 55, df: 39, sa: 35, sd: 39, sp: 42},\n  //   weightkg: 11.6,\n  //   nfe: true,\n  //   abilities: {0: 'Run Away'},\n  // },\n  Pawniard: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 45, at: 85, df: 70, sa: 40, sd: 40, sp: 60},\n    weightkg: 10.2,\n    nfe: true,\n    abilities: {0: 'Defiant'},\n  },\n  Petilil: {\n    types: ['Grass'],\n    bs: {hp: 45, at: 35, df: 50, sa: 70, sd: 50, sp: 30},\n    weightkg: 6.6,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Pidove: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 50, at: 55, df: 50, sa: 36, sd: 30, sp: 43},\n  //   weightkg: 2.1,\n  //   nfe: true,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Pignite: {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 90, at: 93, df: 55, sa: 70, sd: 55, sp: 55},\n  //   weightkg: 55.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Purrloin: {\n  //   types: ['Dark'],\n  //   bs: {hp: 41, at: 50, df: 37, sa: 50, sd: 37, sp: 66},\n  //   weightkg: 10.1,\n  //   nfe: true,\n  //   abilities: {0: 'Limber'},\n  // },\n  // Reshiram: {\n  //   types: ['Dragon', 'Fire'],\n  //   bs: {hp: 100, at: 120, df: 100, sa: 150, sd: 120, sp: 90},\n  //   weightkg: 330,\n  //   abilities: {0: 'Turboblaze'},\n  //   gender: 'N',\n  // },\n  // Reuniclus: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 110, at: 65, df: 75, sa: 125, sd: 85, sp: 30},\n  //   weightkg: 20.1,\n  //   abilities: {0: 'Overcoat'},\n  // },\n  // Roggenrola: {\n  //   types: ['Rock'],\n  //   bs: {hp: 55, at: 75, df: 85, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 18,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Rufflet: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 70, at: 83, df: 50, sa: 37, sd: 50, sp: 60},\n    weightkg: 10.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Samurott: {\n    types: ['Water'],\n    bs: {hp: 95, at: 100, df: 85, sa: 108, sd: 70, sp: 70},\n    weightkg: 94.6,\n    abilities: {0: 'Torrent'},\n  },\n  Sandile: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 50, at: 72, df: 35, sa: 35, sd: 35, sp: 65},\n    weightkg: 15.2,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  // Sawk: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 75, at: 125, df: 75, sa: 30, sd: 75, sp: 85},\n  //   weightkg: 51,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Sawsbuck: {\n    types: ['Normal', 'Grass'],\n    bs: {hp: 80, at: 100, df: 70, sa: 60, sd: 70, sp: 95},\n    weightkg: 92.5,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Scolipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 60, at: 90, df: 89, sa: 55, sd: 69, sp: 112},\n  //   weightkg: 200.5,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Scrafty: {\n  //   types: ['Dark', 'Fighting'],\n  //   bs: {hp: 65, at: 90, df: 115, sa: 45, sd: 115, sp: 58},\n  //   weightkg: 30,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Scraggy: {\n  //   types: ['Dark', 'Fighting'],\n  //   bs: {hp: 50, at: 75, df: 70, sa: 35, sd: 70, sp: 48},\n  //   weightkg: 11.8,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Scratchet: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 55, at: 85, df: 80, sa: 20, sd: 70, sp: 40},\n  //   weightkg: 20,\n  //   nfe: true,\n  //   abilities: {0: 'Scrappy'},\n  // },\n  // Seismitoad: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 105, at: 85, df: 75, sa: 85, sd: 75, sp: 74},\n  //   weightkg: 62,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Serperior: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 75, df: 95, sa: 75, sd: 95, sp: 113},\n  //   weightkg: 63,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Servine: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 60, df: 75, sa: 60, sd: 75, sp: 83},\n  //   weightkg: 16,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Sewaddle: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 45, at: 53, df: 70, sa: 40, sd: 60, sp: 42},\n  //   weightkg: 2.5,\n  //   nfe: true,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Shelmet: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 40, df: 85, sa: 40, sd: 65, sp: 25},\n  //   weightkg: 7.7,\n  //   nfe: true,\n  //   abilities: {0: 'Hydration'},\n  // },\n  // Sigilyph: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 72, at: 58, df: 80, sa: 103, sd: 80, sp: 97},\n  //   weightkg: 14,\n  //   abilities: {0: 'Wonder Skin'},\n  // },\n  // Simipour: {\n  //   types: ['Water'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 29,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Simisage: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 30.5,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Simisear: {\n  //   types: ['Fire'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 28,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Snivy: {\n  //   types: ['Grass'],\n  //   bs: {hp: 45, at: 45, df: 55, sa: 45, sd: 55, sp: 63},\n  //   weightkg: 8.1,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Solosis: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 45, at: 30, df: 40, sa: 105, sd: 50, sp: 20},\n  //   weightkg: 1,\n  //   nfe: true,\n  //   abilities: {0: 'Overcoat'},\n  // },\n  // Stoutland: {\n  //   types: ['Normal'],\n  //   bs: {hp: 85, at: 100, df: 90, sa: 45, sd: 90, sp: 80},\n  //   weightkg: 61,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  // Stunfisk: {\n  //   types: ['Ground', 'Electric'],\n  //   bs: {hp: 109, at: 66, df: 84, sa: 81, sd: 99, sp: 32},\n  //   weightkg: 11,\n  //   abilities: {0: 'Static'},\n  // },\n  // Swadloon: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 55, at: 63, df: 90, sa: 50, sd: 80, sp: 42},\n  //   weightkg: 7.3,\n  //   nfe: true,\n  //   abilities: {0: 'Leaf Guard'},\n  // },\n  // Swanna: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 75, at: 87, df: 63, sa: 87, sd: 63, sp: 98},\n  //   weightkg: 24.2,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Swoobat: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 67, at: 57, df: 55, sa: 77, sd: 55, sp: 114},\n  //   weightkg: 10.5,\n  //   abilities: {0: 'Unaware'},\n  // },\n  // Tepig: {\n  //   types: ['Fire'],\n  //   bs: {hp: 65, at: 63, df: 45, sa: 45, sd: 45, sp: 45},\n  //   weightkg: 9.9,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Terrakion: {\n  //   types: ['Rock', 'Fighting'],\n  //   bs: {hp: 91, at: 129, df: 90, sa: 72, sd: 90, sp: 108},\n  //   weightkg: 260,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  // },\n  // Throh: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 120, at: 100, df: 85, sa: 30, sd: 85, sp: 45},\n  //   weightkg: 55.5,\n  //   abilities: {0: 'Guts'},\n  // },\n  Thundurus: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 79, at: 115, df: 70, sa: 125, sd: 80, sp: 111},\n    weightkg: 61,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Thundurus-Therian'],\n  },\n  'Thundurus-Therian': {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 79, at: 105, df: 70, sa: 145, sd: 80, sp: 101},\n    weightkg: 61,\n    abilities: {0: 'Volt Absorb'},\n    baseSpecies: 'Thundurus',\n  },\n  // Timburr: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 75, at: 80, df: 55, sa: 25, sd: 35, sp: 35},\n  //   weightkg: 12.5,\n  //   nfe: true,\n  //   abilities: {0: 'Guts'},\n  // },\n  // Tirtouga: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 54, at: 78, df: 103, sa: 53, sd: 45, sp: 22},\n  //   weightkg: 16.5,\n  //   nfe: true,\n  //   abilities: {0: 'Solid Rock'},\n  // },\n  // Tomohawk: {\n  //   types: ['Flying', 'Fighting'],\n  //   bs: {hp: 105, at: 60, df: 90, sa: 115, sd: 80, sp: 85},\n  //   weightkg: 37.2,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Tornadus: {\n    types: ['Flying'],\n    bs: {hp: 79, at: 115, df: 70, sa: 125, sd: 80, sp: 111},\n    weightkg: 63,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Tornadus-Therian'],\n  },\n  'Tornadus-Therian': {\n    types: ['Flying'],\n    bs: {hp: 79, at: 100, df: 80, sa: 110, sd: 90, sp: 121},\n    weightkg: 63,\n    abilities: {0: 'Regenerator'},\n    baseSpecies: 'Tornadus',\n  },\n  // Tranquill: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 62, at: 77, df: 62, sa: 50, sd: 42, sp: 65},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Trubbish: {\n  //   types: ['Poison'],\n  //   bs: {hp: 50, at: 50, df: 62, sa: 40, sd: 62, sp: 65},\n  //   weightkg: 31,\n  //   nfe: true,\n  //   abilities: {0: 'Stench'},\n  // },\n  // Tympole: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 50, df: 40, sa: 50, sd: 40, sp: 64},\n  //   weightkg: 4.5,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Tynamo: {\n    types: ['Electric'],\n    bs: {hp: 35, at: 55, df: 40, sa: 45, sd: 40, sp: 60},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  // Unfezant: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 80, at: 105, df: 80, sa: 65, sd: 55, sp: 93},\n  //   weightkg: 29,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Vanillish: {\n  //   types: ['Ice'],\n  //   bs: {hp: 51, at: 65, df: 65, sa: 80, sd: 75, sp: 59},\n  //   weightkg: 41,\n  //   nfe: true,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Vanillite: {\n  //   types: ['Ice'],\n  //   bs: {hp: 36, at: 50, df: 50, sa: 65, sd: 60, sp: 44},\n  //   weightkg: 5.7,\n  //   nfe: true,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Vanilluxe: {\n  //   types: ['Ice'],\n  //   bs: {hp: 71, at: 95, df: 85, sa: 110, sd: 95, sp: 79},\n  //   weightkg: 57.5,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Venipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 30, at: 45, df: 59, sa: 30, sd: 39, sp: 57},\n  //   weightkg: 5.3,\n  //   nfe: true,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Victini: {\n  //   types: ['Psychic', 'Fire'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 4,\n  //   abilities: {0: 'Victory Star'},\n  //   gender: 'N',\n  // },\n  // Virizion: {\n  //   types: ['Grass', 'Fighting'],\n  //   bs: {hp: 91, at: 90, df: 72, sa: 90, sd: 129, sp: 108},\n  //   weightkg: 200,\n  //   abilities: {0: 'Justified'},\n  //   gender: 'N',\n  // },\n  Volcarona: {\n    types: ['Bug', 'Fire'],\n    bs: {hp: 85, at: 60, df: 65, sa: 135, sd: 105, sp: 100},\n    weightkg: 46,\n    abilities: {0: 'Flame Body'},\n  },\n  // Vullaby: {\n  //   types: ['Dark', 'Flying'],\n  //   bs: {hp: 70, at: 55, df: 75, sa: 45, sd: 65, sp: 60},\n  //   weightkg: 9,\n  //   nfe: true,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Watchog: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 85, df: 69, sa: 60, sd: 69, sp: 77},\n  //   weightkg: 27,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  // Whimsicott: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 67, df: 85, sa: 77, sd: 75, sp: 116},\n  //   weightkg: 6.6,\n  //   abilities: {0: 'Prankster'},\n  // },\n  // Whirlipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 40, at: 55, df: 99, sa: 40, sd: 79, sp: 47},\n  //   weightkg: 58.5,\n  //   nfe: true,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Woobat: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 55, at: 45, df: 43, sa: 55, sd: 43, sp: 72},\n  //   weightkg: 2.1,\n  //   nfe: true,\n  //   abilities: {0: 'Unaware'},\n  // },\n  // Yamask: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 38, at: 30, df: 85, sa: 55, sd: 65, sp: 30},\n  //   weightkg: 1.5,\n  //   abilities: {0: 'Mummy'},\n  //   nfe: true,\n  // },\n  // Zebstrika: {\n  //   types: ['Electric'],\n  //   bs: {hp: 75, at: 100, df: 63, sa: 80, sd: 63, sp: 116},\n  //   weightkg: 79.5,\n  //   abilities: {0: 'Lightning Rod'},\n  // },\n  // Zekrom: {\n  //   types: ['Dragon', 'Electric'],\n  //   bs: {hp: 100, at: 150, df: 120, sa: 120, sd: 100, sp: 90},\n  //   weightkg: 345,\n  //   abilities: {0: 'Teravolt'},\n  //   gender: 'N',\n  // },\n  Zoroark: {\n    types: ['Dark'],\n    bs: {hp: 60, at: 105, df: 60, sa: 120, sd: 60, sp: 105},\n    weightkg: 81.1,\n    abilities: {0: 'Illusion'},\n  },\n  Zorua: {\n    types: ['Dark'],\n    bs: {hp: 40, at: 65, df: 40, sa: 80, sd: 40, sp: 65},\n    weightkg: 12.5,\n    abilities: {0: 'Illusion'},\n    nfe: true,\n  },\n  Zweilous: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 72, at: 85, df: 70, sa: 65, sd: 70, sp: 58},\n    weightkg: 50,\n    abilities: {0: 'Hustle'},\n    nfe: true,\n  },\n};\n\nconst BW: {[name: string]: SpeciesData} = extend(true, {}, DPP, BW_PATCH);\n\n// @ts-ignore readonly\ndelete BW['Pichu'].otherFormes;\n// delete BW['Pichu-Spiky-eared'];\n\nconst XY_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // Abomasnow: {otherFormes: ['Abomasnow-Mega']},\n  // Absol: {otherFormes: ['Absol-Mega']},\n  // Aerodactyl: {otherFormes: ['Aerodactyl-Mega']},\n  // Aggron: {otherFormes: ['Aggron-Mega']},\n  // Alakazam: {bs: {sd: 95}, otherFormes: ['Alakazam-Mega']},\n  // Altaria: {otherFormes: ['Altaria-Mega']},\n  // Ampharos: {bs: {df: 85}, otherFormes: ['Ampharos-Mega']},\n  // Audino: {otherFormes: ['Audino-Mega']},\n  Azumarill: {types: ['Water', 'Fairy'], bs: {sa: 60}},\n  Azurill: {types: ['Normal', 'Fairy']},\n  // Banette: {otherFormes: ['Banette-Mega']},\n  // Beautifly: {bs: {sa: 100}},\n  // Beedrill: {bs: {at: 90}, otherFormes: ['Beedrill-Mega']},\n  // Bellossom: {bs: {df: 95}},\n  // Blastoise: {otherFormes: ['Blastoise-Mega']},\n  // Blaziken: {otherFormes: ['Blaziken-Mega']},\n  // Butterfree: {bs: {sa: 90}},\n  // Camerupt: {otherFormes: ['Camerupt-Mega']},\n  // Charizard: {otherFormes: ['Charizard-Mega-X', 'Charizard-Mega-Y']},\n  // Clefable: {types: ['Fairy'], bs: {sa: 95}},\n  // Clefairy: {types: ['Fairy']},\n  // Cleffa: {types: ['Fairy']},\n  // Cottonee: {types: ['Grass', 'Fairy']},\n  // Exploud: {bs: {sd: 73}},\n  // Gallade: {otherFormes: ['Gallade-Mega']},\n  // Garchomp: {otherFormes: ['Garchomp-Mega']},\n  // Gardevoir: {types: ['Psychic', 'Fairy'], otherFormes: ['Gardevoir-Mega']},\n  // Gengar: {otherFormes: ['Gengar-Mega']},\n  // Gigalith: {bs: {sd: 80}},\n  // Glalie: {otherFormes: ['Glalie-Mega']},\n  // Golem: {bs: {at: 120}},\n  // Granbull: {types: ['Fairy']},\n  // Groudon: {otherFormes: ['Groudon-Primal']},\n  // Gyarados: {otherFormes: ['Gyarados-Mega']},\n  // Heracross: {otherFormes: ['Heracross-Mega']},\n  // Houndoom: {otherFormes: ['Houndoom-Mega']},\n  Igglybuff: {types: ['Normal', 'Fairy']},\n  Jigglypuff: {types: ['Normal', 'Fairy']},\n  Jumpluff: {bs: {sd: 95}},\n  // Kangaskhan: {otherFormes: ['Kangaskhan-Mega']},\n  Kirlia: {types: ['Psychic', 'Fairy']},\n  Krookodile: {bs: {df: 80}},\n  // Kyogre: {otherFormes: ['Kyogre-Primal']},\n  // Latias: {otherFormes: ['Latias-Mega']},\n  // Latios: {otherFormes: ['Latios-Mega']},\n  // Leavanny: {bs: {sd: 80}},\n  // Lopunny: {otherFormes: ['Lopunny-Mega']},\n  // Lucario: {otherFormes: ['Lucario-Mega']},\n  // Manectric: {otherFormes: ['Manectric-Mega']},\n  Marill: {types: ['Water', 'Fairy']},\n  // Mawile: {types: ['Steel', 'Fairy'], otherFormes: ['Mawile-Mega']},\n  Medicham: {otherFormes: ['Medicham-Mega']},\n  // Metagross: {otherFormes: ['Metagross-Mega']},\n  // Mewtwo: {otherFormes: ['Mewtwo-Mega-X', 'Mewtwo-Mega-Y']},\n  // 'Mime Jr.': {types: ['Psychic', 'Fairy']},\n  // 'Mr. Mime': {types: ['Psychic', 'Fairy']},\n  // Nidoking: {bs: {at: 102}},\n  // Nidoqueen: {bs: {at: 92}},\n  // Pidgeot: {bs: {sp: 101}, otherFormes: ['Pidgeot-Mega']},\n  Pikachu: {\n    bs: {df: 40, sd: 50},\n    // otherFormes: [\n    //   'Pikachu-Belle',\n    //   'Pikachu-Cosplay',\n    //   'Pikachu-Libre',\n    //   'Pikachu-PhD',\n    //   'Pikachu-Pop-Star',\n    //   'Pikachu-Rock-Star',\n    // ],\n  },\n  // Pinsir: {otherFormes: ['Pinsir-Mega']},\n  // Poliwrath: {bs: {at: 95}},\n  Raichu: {bs: {sp: 110}},\n  Ralts: {types: ['Psychic', 'Fairy']},\n  // Rayquaza: {otherFormes: ['Rayquaza-Mega']},\n  // Roserade: {bs: {df: 65}},\n  // Sableye: {otherFormes: ['Sableye-Mega']},\n  // Salamence: {otherFormes: ['Salamence-Mega']},\n  // Sceptile: {otherFormes: ['Sceptile-Mega']},\n  // Scizor: {otherFormes: ['Scizor-Mega']},\n  // Scolipede: {bs: {at: 100}},\n  // Seismitoad: {bs: {at: 95}},\n  // Sharpedo: {otherFormes: ['Sharpedo-Mega']},\n  // Slowbro: {otherFormes: ['Slowbro-Mega']},\n  // Snubbull: {types: ['Fairy']},\n  Staraptor: {bs: {sd: 60}},\n  // Steelix: {otherFormes: ['Steelix-Mega']},\n  // Stoutland: {bs: {at: 110}},\n  // Swampert: {otherFormes: ['Swampert-Mega']},\n  // Togekiss: {types: ['Fairy', 'Flying']},\n  // Togepi: {types: ['Fairy']},\n  // Togetic: {types: ['Fairy', 'Flying']},\n  // Tyranitar: {otherFormes: ['Tyranitar-Mega']},\n  // Unfezant: {bs: {at: 115}},\n  // Venusaur: {otherFormes: ['Venusaur-Mega']},\n  // Victreebel: {bs: {sd: 70}},\n  // Vileplume: {bs: {sa: 110}},\n  // Whimsicott: {types: ['Grass', 'Fairy']},\n  Wigglytuff: {types: ['Normal', 'Fairy'], bs: {sa: 85}},\n  // 'Aegislash-Blade': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 150, df: 50, sa: 150, sd: 50, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   otherFormes: ['Aegislash-Shield', 'Aegislash-Both'],\n  // },\n  // 'Aegislash-Shield': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 50, df: 150, sa: 50, sd: 150, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   baseSpecies: 'Aegislash-Blade',\n  // },\n  // 'Aegislash-Both': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 150, df: 150, sa: 150, sd: 150, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   baseSpecies: 'Aegislash-Blade',\n  // },\n  // Amaura: {\n  //   types: ['Rock', 'Ice'],\n  //   bs: {hp: 77, at: 59, df: 50, sa: 67, sd: 63, sp: 46},\n  //   weightkg: 25.2,\n  //   nfe: true,\n  //   abilities: {0: 'Refrigerate'},\n  // },\n  // 'Arceus-Fairy': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n  //   weightkg: 320,\n  //   abilities: {0: 'Multitype'},\n  //   baseSpecies: 'Arceus',\n  //   gender: 'N',\n  // },\n  // Aromatisse: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 101, at: 72, df: 72, sa: 99, sd: 89, sp: 29},\n  //   weightkg: 15.5,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Aurorus: {\n  //   types: ['Rock', 'Ice'],\n  //   bs: {hp: 123, at: 77, df: 72, sa: 99, sd: 92, sp: 58},\n  //   weightkg: 225,\n  //   abilities: {0: 'Refrigerate'},\n  // },\n  Avalugg: {\n    types: ['Ice'],\n    bs: {hp: 95, at: 117, df: 184, sa: 44, sd: 46, sp: 28},\n    weightkg: 505,\n    abilities: {0: 'Own Tempo'},\n  },\n  // Barbaracle: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 72, at: 105, df: 115, sa: 54, sd: 86, sp: 68},\n  //   weightkg: 96,\n  //   abilities: {0: 'Tough Claws'},\n  // },\n  Bergmite: {\n    types: ['Ice'],\n    bs: {hp: 55, at: 69, df: 85, sa: 32, sd: 35, sp: 28},\n    weightkg: 99.5,\n    nfe: true,\n    abilities: {0: 'Own Tempo'},\n  },\n  // Binacle: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 42, at: 52, df: 67, sa: 39, sd: 56, sp: 50},\n  //   weightkg: 31,\n  //   nfe: true,\n  //   abilities: {0: 'Tough Claws'},\n  // },\n  // Braixen: {\n  //   types: ['Fire'],\n  //   bs: {hp: 59, at: 59, df: 58, sa: 90, sd: 70, sp: 73},\n  //   weightkg: 14.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Bunnelby: {\n  //   types: ['Normal'],\n  //   bs: {hp: 38, at: 36, df: 38, sa: 32, sd: 36, sp: 57},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Caimanoe: {\n  //   types: ['Water', 'Steel'],\n  //   bs: {hp: 73, at: 85, df: 65, sa: 80, sd: 40, sp: 87},\n  //   weightkg: 72.5,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Carbink: {\n    types: ['Rock', 'Fairy'],\n    bs: {hp: 50, at: 50, df: 150, sa: 50, sd: 150, sp: 50},\n    weightkg: 5.7,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Chesnaught: {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 88, at: 107, df: 122, sa: 74, sd: 75, sp: 64},\n    weightkg: 90,\n    abilities: {0: 'Overgrow'},\n  },\n  Chespin: {\n    types: ['Grass'],\n    bs: {hp: 56, at: 61, df: 65, sa: 48, sd: 45, sp: 38},\n    weightkg: 9,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Clauncher: {\n    types: ['Water'],\n    bs: {hp: 50, at: 53, df: 62, sa: 58, sd: 63, sp: 44},\n    weightkg: 8.3,\n    abilities: {0: 'Mega Launcher'},\n    nfe: true,\n  },\n  Clawitzer: {\n    types: ['Water'],\n    bs: {hp: 71, at: 73, df: 88, sa: 120, sd: 89, sp: 59},\n    weightkg: 35.3,\n    abilities: {0: 'Mega Launcher'},\n  },\n  // Crucibelle: {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 106, at: 105, df: 65, sa: 75, sd: 85, sp: 104},\n  //   weightkg: 23.6,\n  //   abilities: {0: 'Regenerator'},\n  //   otherFormes: ['Crucibelle-Mega'],\n  // },\n  Diancie: {\n    types: ['Rock', 'Fairy'],\n    bs: {hp: 50, at: 100, df: 150, sa: 100, sd: 150, sp: 50},\n    weightkg: 8.8,\n    abilities: {0: 'Clear Body'},\n    otherFormes: ['Diancie-Mega'],\n    gender: 'N',\n  },\n  Dedenne: {\n    types: ['Electric', 'Fairy'],\n    bs: {hp: 67, at: 58, df: 57, sa: 81, sd: 67, sp: 101},\n    weightkg: 2.2,\n    abilities: {0: 'Cheek Pouch'},\n  },\n  Delphox: {\n    types: ['Fire', 'Psychic'],\n    bs: {hp: 75, at: 69, df: 72, sa: 114, sd: 100, sp: 104},\n    weightkg: 39,\n    abilities: {0: 'Blaze'},\n  },\n  // Diggersby: {\n  //   types: ['Normal', 'Ground'],\n  //   bs: {hp: 85, at: 56, df: 77, sa: 50, sd: 77, sp: 78},\n  //   weightkg: 42.4,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Doublade: {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 59, at: 110, df: 150, sa: 45, sd: 49, sp: 35},\n  //   weightkg: 4.5,\n  //   abilities: {0: 'No Guard'},\n  //   nfe: true,\n  // },\n  Dragalge: {\n    types: ['Poison', 'Dragon'],\n    bs: {hp: 65, at: 75, df: 90, sa: 97, sd: 123, sp: 44},\n    weightkg: 81.5,\n    abilities: {0: 'Poison Point'},\n  },\n  // Espurr: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 62, at: 48, df: 54, sa: 63, sd: 60, sp: 68},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  Fennekin: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 45, df: 40, sa: 62, sd: 60, sp: 60},\n    weightkg: 9.4,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Flabébé: {\n    types: ['Fairy'],\n    bs: {hp: 44, at: 38, df: 39, sa: 61, sd: 79, sp: 42},\n    weightkg: 0.1,\n    nfe: true,\n    abilities: {0: 'Flower Veil'},\n  },\n  Fletchinder: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 62, at: 73, df: 55, sa: 56, sd: 52, sp: 84},\n    weightkg: 16,\n    nfe: true,\n    abilities: {0: 'Flame Body'},\n  },\n  Fletchling: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 45, at: 50, df: 43, sa: 40, sd: 38, sp: 62},\n    weightkg: 1.7,\n    nfe: true,\n    abilities: {0: 'Big Pecks'},\n  },\n  // Floatoy: {\n  //   types: ['Water'],\n  //   bs: {hp: 48, at: 70, df: 40, sa: 70, sd: 30, sp: 77},\n  //   weightkg: 1.9,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Floette: {\n    types: ['Fairy'],\n    bs: {hp: 54, at: 45, df: 47, sa: 75, sd: 98, sp: 52},\n    weightkg: 0.9,\n    nfe: true,\n    // otherFormes: ['Floette-Eternal'],\n    abilities: {0: 'Flower Veil'},\n  },\n  // 'Floette-Eternal': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 74, at: 65, df: 67, sa: 125, sd: 128, sp: 92},\n  //   weightkg: 0.9,\n  //   abilities: {0: 'Flower Veil'},\n  //   baseSpecies: 'Floette',\n  // },\n  Florges: {\n    types: ['Fairy'],\n    bs: {hp: 78, at: 65, df: 68, sa: 112, sd: 154, sp: 75},\n    weightkg: 10,\n    abilities: {0: 'Flower Veil'},\n  },\n  Froakie: {\n    types: ['Water'],\n    bs: {hp: 41, at: 56, df: 40, sa: 62, sd: 44, sp: 71},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  Frogadier: {\n    types: ['Water'],\n    bs: {hp: 54, at: 63, df: 52, sa: 83, sd: 56, sp: 97},\n    weightkg: 10.9,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Furfrou: {\n  //   types: ['Normal'],\n  //   bs: {hp: 75, at: 80, df: 60, sa: 65, sd: 90, sp: 102},\n  //   weightkg: 28,\n  //   abilities: {0: 'Fur Coat'},\n  // },\n  Gogoat: {\n    types: ['Grass'],\n    bs: {hp: 123, at: 100, df: 62, sa: 97, sd: 81, sp: 68},\n    weightkg: 91,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Goodra: {\n    types: ['Dragon'],\n    bs: {hp: 90, at: 100, df: 70, sa: 110, sd: 150, sp: 80},\n    weightkg: 150.5,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Goomy: {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 50, df: 35, sa: 55, sd: 75, sp: 40},\n    weightkg: 2.8,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  // 'Gourgeist': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 65, at: 90, df: 122, sa: 58, sd: 75, sp: 84},\n  //   weightkg: 12.5,\n  //   abilities: {0: 'Pickup'},\n  //   otherFormes: ['Gourgeist-Large', 'Gourgeist-Small', 'Gourgeist-Super'],\n  // },\n  // 'Gourgeist-Large': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 75, at: 95, df: 122, sa: 58, sd: 75, sp: 69},\n  //   weightkg: 14,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  // 'Gourgeist-Small': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 55, at: 85, df: 122, sa: 58, sd: 75, sp: 99},\n  //   weightkg: 9.5,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  // 'Gourgeist-Super': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 85, at: 100, df: 122, sa: 58, sd: 75, sp: 54},\n  //   weightkg: 39,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  Greninja: {\n    types: ['Water', 'Dark'],\n    bs: {hp: 72, at: 95, df: 67, sa: 103, sd: 71, sp: 122},\n    weightkg: 40,\n    abilities: {0: 'Torrent'},\n  },\n  Hawlucha: {\n    types: ['Fighting', 'Flying'],\n    bs: {hp: 78, at: 92, df: 75, sa: 74, sd: 63, sp: 118},\n    weightkg: 21.5,\n    abilities: {0: 'Limber'},\n  },\n  // Heliolisk: {\n  //   types: ['Electric', 'Normal'],\n  //   bs: {hp: 62, at: 55, df: 52, sa: 109, sd: 94, sp: 109},\n  //   weightkg: 21,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Helioptile: {\n  //   types: ['Electric', 'Normal'],\n  //   bs: {hp: 44, at: 38, df: 33, sa: 61, sd: 43, sp: 70},\n  //   weightkg: 6,\n  //   nfe: true,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Honedge: {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 45, at: 80, df: 100, sa: 35, sd: 37, sp: 28},\n  //   weightkg: 2,\n  //   abilities: {0: 'No Guard'},\n  //   nfe: true,\n  // },\n  Hoopa: {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 80, at: 110, df: 60, sa: 150, sd: 130, sp: 70},\n    weightkg: 9,\n    gender: 'N',\n    abilities: {0: 'Magician'},\n    otherFormes: ['Hoopa-Unbound'],\n  },\n  'Hoopa-Unbound': {\n    types: ['Psychic', 'Dark'],\n    bs: {hp: 80, at: 160, df: 60, sa: 170, sd: 130, sp: 80},\n    weightkg: 490,\n    gender: 'N',\n    abilities: {0: 'Magician'},\n    baseSpecies: 'Hoopa',\n  },\n  // Inkay: {\n  //   types: ['Dark', 'Psychic'],\n  //   bs: {hp: 53, at: 54, df: 53, sa: 37, sd: 46, sp: 45},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Contrary'},\n  // },\n  // Kerfluffle: {\n  //   types: ['Fairy', 'Fighting'],\n  //   bs: {hp: 84, at: 78, df: 86, sa: 115, sd: 88, sp: 119},\n  //   weightkg: 24.2,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Klefki: {\n    types: ['Steel', 'Fairy'],\n    bs: {hp: 57, at: 80, df: 91, sa: 80, sd: 87, sp: 75},\n    weightkg: 3,\n    abilities: {0: 'Prankster'},\n  },\n  Litleo: {\n    types: ['Fire', 'Normal'],\n    bs: {hp: 62, at: 50, df: 58, sa: 73, sd: 54, sp: 72},\n    weightkg: 13.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  // Malamar: {\n  //   types: ['Dark', 'Psychic'],\n  //   bs: {hp: 86, at: 92, df: 88, sa: 68, sd: 75, sp: 73},\n  //   weightkg: 47,\n  //   abilities: {0: 'Contrary'},\n  // },\n  // 'Abomasnow-Mega': {\n  //   types: ['Grass', 'Ice'],\n  //   bs: {hp: 90, at: 132, df: 105, sa: 132, sd: 105, sp: 30},\n  //   weightkg: 185,\n  //   abilities: {0: 'Snow Warning'},\n  //   baseSpecies: 'Abomasnow',\n  // },\n  // 'Absol-Mega': {\n  //   types: ['Dark'],\n  //   bs: {hp: 65, at: 150, df: 60, sa: 115, sd: 60, sp: 115},\n  //   weightkg: 49,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Absol',\n  // },\n  // 'Aerodactyl-Mega': {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 80, at: 135, df: 85, sa: 70, sd: 95, sp: 150},\n  //   weightkg: 79,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Aerodactyl',\n  // },\n  // 'Aggron-Mega': {\n  //   types: ['Steel'],\n  //   bs: {hp: 70, at: 140, df: 230, sa: 60, sd: 80, sp: 50},\n  //   weightkg: 395,\n  //   abilities: {0: 'Filter'},\n  //   baseSpecies: 'Aggron',\n  // },\n  // 'Alakazam-Mega': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 50, df: 65, sa: 175, sd: 95, sp: 150},\n  //   weightkg: 48,\n  //   abilities: {0: 'Trace'},\n  //   baseSpecies: 'Alakazam',\n  // },\n  // 'Altaria-Mega': {\n  //   types: ['Dragon', 'Fairy'],\n  //   bs: {hp: 75, at: 110, df: 110, sa: 110, sd: 105, sp: 80},\n  //   weightkg: 20.6,\n  //   abilities: {0: 'Pixilate'},\n  //   baseSpecies: 'Altaria',\n  // },\n  // 'Ampharos-Mega': {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 90, at: 95, df: 105, sa: 165, sd: 110, sp: 45},\n  //   weightkg: 61.5,\n  //   abilities: {0: 'Mold Breaker'},\n  //   baseSpecies: 'Ampharos',\n  // },\n  // 'Audino-Mega': {\n  //   types: ['Normal', 'Fairy'],\n  //   bs: {hp: 103, at: 60, df: 126, sa: 80, sd: 126, sp: 50},\n  //   weightkg: 32,\n  //   abilities: {0: 'Healer'},\n  //   baseSpecies: 'Audino',\n  // },\n  // 'Banette-Mega': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 64, at: 165, df: 75, sa: 93, sd: 83, sp: 75},\n  //   weightkg: 13,\n  //   abilities: {0: 'Prankster'},\n  //   baseSpecies: 'Banette',\n  // },\n  // 'Beedrill-Mega': {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 65, at: 150, df: 40, sa: 15, sd: 80, sp: 145},\n  //   weightkg: 40.5,\n  //   abilities: {0: 'Adaptability'},\n  //   baseSpecies: 'Beedrill',\n  // },\n  // 'Blastoise-Mega': {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 103, df: 120, sa: 135, sd: 115, sp: 78},\n  //   weightkg: 101.1,\n  //   abilities: {0: 'Mega Launcher'},\n  //   baseSpecies: 'Blastoise',\n  // },\n  // 'Blaziken-Mega': {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 80, at: 160, df: 80, sa: 130, sd: 80, sp: 100},\n  //   weightkg: 52,\n  //   abilities: {0: 'Speed Boost'},\n  //   baseSpecies: 'Blaziken',\n  // },\n  // 'Camerupt-Mega': {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 70, at: 120, df: 100, sa: 145, sd: 105, sp: 20},\n  //   weightkg: 320.5,\n  //   abilities: {0: 'Sheer Force'},\n  //   baseSpecies: 'Camerupt',\n  // },\n  // 'Charizard-Mega-X': {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 78, at: 130, df: 111, sa: 130, sd: 85, sp: 100},\n  //   weightkg: 110.5,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Charizard',\n  // },\n  // 'Charizard-Mega-Y': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 78, at: 104, df: 78, sa: 159, sd: 115, sp: 100},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'Drought'},\n  //   baseSpecies: 'Charizard',\n  // },\n  // 'Crucibelle-Mega': {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 106, at: 135, df: 75, sa: 85, sd: 125, sp: 114},\n  //   weightkg: 22.5,\n  //   abilities: {0: 'Magic Guard'},\n  //   baseSpecies: 'Crucibelle',\n  // },\n  // 'Diancie-Mega': {\n  //   types: ['Rock', 'Fairy'],\n  //   bs: {hp: 50, at: 160, df: 110, sa: 160, sd: 110, sp: 110},\n  //   weightkg: 27.8,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Diancie',\n  //   gender: 'N',\n  // },\n  // 'Gallade-Mega': {\n  //   types: ['Psychic', 'Fighting'],\n  //   bs: {hp: 68, at: 165, df: 95, sa: 65, sd: 115, sp: 110},\n  //   weightkg: 56.4,\n  //   abilities: {0: 'Inner Focus'},\n  //   baseSpecies: 'Gallade',\n  // },\n  // 'Garchomp-Mega': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 108, at: 170, df: 115, sa: 120, sd: 95, sp: 92},\n  //   weightkg: 95,\n  //   abilities: {0: 'Sand Force'},\n  //   baseSpecies: 'Garchomp',\n  // },\n  // 'Gardevoir-Mega': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 68, at: 85, df: 65, sa: 165, sd: 135, sp: 100},\n  //   weightkg: 48.4,\n  //   abilities: {0: 'Pixilate'},\n  //   baseSpecies: 'Gardevoir',\n  // },\n  // 'Gengar-Mega': {\n  //   types: ['Ghost', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 80, sa: 170, sd: 95, sp: 130},\n  //   weightkg: 40.5,\n  //   abilities: {0: 'Shadow Tag'},\n  //   baseSpecies: 'Gengar',\n  // },\n  // 'Glalie-Mega': {\n  //   types: ['Ice'],\n  //   bs: {hp: 80, at: 120, df: 80, sa: 120, sd: 80, sp: 100},\n  //   weightkg: 350.2,\n  //   abilities: {0: 'Refrigerate'},\n  //   baseSpecies: 'Glalie',\n  // },\n  // 'Gyarados-Mega': {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 95, at: 155, df: 109, sa: 70, sd: 130, sp: 81},\n  //   weightkg: 305,\n  //   abilities: {0: 'Mold Breaker'},\n  //   baseSpecies: 'Gyarados',\n  // },\n  // 'Heracross-Mega': {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 80, at: 185, df: 115, sa: 40, sd: 105, sp: 75},\n  //   weightkg: 62.5,\n  //   abilities: {0: 'Skill Link'},\n  //   baseSpecies: 'Heracross',\n  // },\n  // 'Houndoom-Mega': {\n  //   types: ['Dark', 'Fire'],\n  //   bs: {hp: 75, at: 90, df: 90, sa: 140, sd: 90, sp: 115},\n  //   weightkg: 49.5,\n  //   abilities: {0: 'Solar Power'},\n  //   baseSpecies: 'Houndoom',\n  // },\n  // 'Kangaskhan-Mega': {\n  //   types: ['Normal'],\n  //   bs: {hp: 105, at: 125, df: 100, sa: 60, sd: 100, sp: 100},\n  //   weightkg: 100,\n  //   abilities: {0: 'Parental Bond'},\n  //   baseSpecies: 'Kangaskhan',\n  // },\n  // 'Latias-Mega': {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 100, df: 120, sa: 140, sd: 150, sp: 110},\n  //   weightkg: 52,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Latias',\n  // },\n  // 'Latios-Mega': {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 130, df: 100, sa: 160, sd: 120, sp: 110},\n  //   weightkg: 70,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Latios',\n  // },\n  // 'Lopunny-Mega': {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 65, at: 136, df: 94, sa: 54, sd: 96, sp: 135},\n  //   weightkg: 28.3,\n  //   abilities: {0: 'Scrappy'},\n  //   baseSpecies: 'Lopunny',\n  // },\n  // 'Lucario-Mega': {\n  //   types: ['Fighting', 'Steel'],\n  //   bs: {hp: 70, at: 145, df: 88, sa: 140, sd: 70, sp: 112},\n  //   weightkg: 57.5,\n  //   abilities: {0: 'Adaptability'},\n  //   baseSpecies: 'Lucario',\n  // },\n  // 'Manectric-Mega': {\n  //   types: ['Electric'],\n  //   bs: {hp: 70, at: 75, df: 80, sa: 135, sd: 80, sp: 135},\n  //   weightkg: 44,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Manectric',\n  // },\n  // 'Mawile-Mega': {\n  //   types: ['Steel', 'Fairy'],\n  //   bs: {hp: 50, at: 105, df: 125, sa: 55, sd: 95, sp: 50},\n  //   weightkg: 23.5,\n  //   abilities: {0: 'Huge Power'},\n  //   baseSpecies: 'Mawile',\n  // },\n  // 'Medicham-Mega': {\n  //   types: ['Fighting', 'Psychic'],\n  //   bs: {hp: 60, at: 100, df: 85, sa: 80, sd: 85, sp: 100},\n  //   weightkg: 31.5,\n  //   abilities: {0: 'Pure Power'},\n  //   baseSpecies: 'Medicham',\n  // },\n  // 'Metagross-Mega': {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 80, at: 145, df: 150, sa: 105, sd: 110, sp: 110},\n  //   weightkg: 942.9,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Metagross',\n  //   gender: 'N',\n  // },\n  // 'Mewtwo-Mega-X': {\n  //   types: ['Psychic', 'Fighting'],\n  //   bs: {hp: 106, at: 190, df: 100, sa: 154, sd: 100, sp: 130},\n  //   weightkg: 127,\n  //   abilities: {0: 'Steadfast'},\n  //   baseSpecies: 'Mewtwo',\n  //   gender: 'N',\n  // },\n  // 'Mewtwo-Mega-Y': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 106, at: 150, df: 70, sa: 194, sd: 120, sp: 140},\n  //   weightkg: 33,\n  //   abilities: {0: 'Insomnia'},\n  //   baseSpecies: 'Mewtwo',\n  //   gender: 'N',\n  // },\n  // 'Pidgeot-Mega': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 83, at: 80, df: 80, sa: 135, sd: 80, sp: 121},\n  //   weightkg: 50.5,\n  //   abilities: {0: 'No Guard'},\n  //   baseSpecies: 'Pidgeot',\n  // },\n  // 'Pinsir-Mega': {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 65, at: 155, df: 120, sa: 65, sd: 90, sp: 105},\n  //   weightkg: 59,\n  //   abilities: {0: 'Aerilate'},\n  //   baseSpecies: 'Pinsir',\n  // },\n  // 'Rayquaza-Mega': {\n  //   types: ['Dragon', 'Flying'],\n  //   bs: {hp: 105, at: 180, df: 100, sa: 180, sd: 100, sp: 115},\n  //   weightkg: 392,\n  //   gender: 'N',\n  //   abilities: {0: 'Delta Stream'},\n  //   baseSpecies: 'Rayquaza',\n  // },\n  // 'Sableye-Mega': {\n  //   types: ['Dark', 'Ghost'],\n  //   bs: {hp: 50, at: 85, df: 125, sa: 85, sd: 115, sp: 20},\n  //   weightkg: 161,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Sableye',\n  // },\n  // 'Salamence-Mega': {\n  //   types: ['Dragon', 'Flying'],\n  //   bs: {hp: 95, at: 145, df: 130, sa: 120, sd: 90, sp: 120},\n  //   weightkg: 112.6,\n  //   abilities: {0: 'Aerilate'},\n  //   baseSpecies: 'Salamence',\n  // },\n  // 'Sceptile-Mega': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 70, at: 110, df: 75, sa: 145, sd: 85, sp: 145},\n  //   weightkg: 55.2,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Sceptile',\n  // },\n  // 'Scizor-Mega': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 70, at: 150, df: 140, sa: 65, sd: 100, sp: 75},\n  //   weightkg: 125,\n  //   abilities: {0: 'Technician'},\n  //   baseSpecies: 'Scizor',\n  // },\n  // 'Sharpedo-Mega': {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 70, at: 140, df: 70, sa: 110, sd: 65, sp: 105},\n  //   weightkg: 130.3,\n  //   abilities: {0: 'Strong Jaw'},\n  //   baseSpecies: 'Sharpedo',\n  // },\n  // 'Slowbro-Mega': {\n  //   types: ['Water', 'Psychic'],\n  //   bs: {hp: 95, at: 75, df: 180, sa: 130, sd: 80, sp: 30},\n  //   weightkg: 120,\n  //   abilities: {0: 'Shell Armor'},\n  //   baseSpecies: 'Slowbro',\n  // },\n  // 'Steelix-Mega': {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 75, at: 125, df: 230, sa: 55, sd: 95, sp: 30},\n  //   weightkg: 740,\n  //   abilities: {0: 'Sand Force'},\n  //   baseSpecies: 'Steelix',\n  // },\n  // 'Swampert-Mega': {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 100, at: 150, df: 110, sa: 95, sd: 110, sp: 70},\n  //   weightkg: 102,\n  //   abilities: {0: 'Swift Swim'},\n  //   baseSpecies: 'Swampert',\n  // },\n  // 'Tyranitar-Mega': {\n  //   types: ['Rock', 'Dark'],\n  //   bs: {hp: 100, at: 164, df: 150, sa: 95, sd: 120, sp: 71},\n  //   weightkg: 255,\n  //   abilities: {0: 'Sand Stream'},\n  //   baseSpecies: 'Tyranitar',\n  // },\n  // 'Venusaur-Mega': {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 100, df: 123, sa: 122, sd: 120, sp: 80},\n  //   weightkg: 155.5,\n  //   abilities: {0: 'Thick Fat'},\n  //   baseSpecies: 'Venusaur',\n  // },\n  // 'Meowstic-M': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 74, at: 48, df: 76, sa: 83, sd: 81, sp: 104},\n  //   weightkg: 8.5,\n  //   abilities: {0: 'Keen Eye'},\n  //   otherFormes: ['Meowstic-F'],\n  // },\n  // 'Meowstic-F': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 74, at: 48, df: 76, sa: 83, sd: 81, sp: 104},\n  //   weightkg: 8.5,\n  //   abilities: {0: 'Keen Eye'},\n  //   baseSpecies: 'Meowstic-M',\n  // },\n  // Naviathan: {\n  //   types: ['Water', 'Steel'],\n  //   bs: {hp: 103, at: 110, df: 90, sa: 95, sd: 65, sp: 97},\n  //   weightkg: 510,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Noibat: {\n    types: ['Flying', 'Dragon'],\n    bs: {hp: 40, at: 30, df: 35, sa: 45, sd: 40, sp: 55},\n    weightkg: 8,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Noivern: {\n    types: ['Flying', 'Dragon'],\n    bs: {hp: 85, at: 70, df: 80, sa: 97, sd: 80, sp: 123},\n    weightkg: 85,\n    abilities: {0: 'Frisk'},\n  },\n  // Pancham: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 67, at: 82, df: 62, sa: 46, sd: 48, sp: 43},\n  //   weightkg: 8,\n  //   nfe: true,\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Pangoro: {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 95, at: 124, df: 78, sa: 69, sd: 71, sp: 58},\n  //   weightkg: 136,\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Phantump: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 43, at: 70, df: 48, sa: 50, sd: 60, sp: 38},\n  //   weightkg: 7,\n  //   nfe: true,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  // 'Pikachu-Cosplay': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Rock-Star': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Belle': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-PhD': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Pop-Star': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Libre': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // Plasmanta: {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 60, at: 57, df: 119, sa: 131, sd: 98, sp: 100},\n  //   weightkg: 460,\n  //   abilities: {0: 'Storm Drain'},\n  // },\n  // Pluffle: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 74, at: 38, df: 51, sa: 65, sd: 78, sp: 49},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  // 'Groudon-Primal': {\n  //   types: ['Ground', 'Fire'],\n  //   bs: {hp: 100, at: 180, df: 160, sa: 150, sd: 90, sp: 90},\n  //   weightkg: 999.7,\n  //   abilities: {0: 'Desolate Land'},\n  //   baseSpecies: 'Groudon',\n  //   gender: 'N',\n  // },\n  // 'Kyogre-Primal': {\n  //   types: ['Water'],\n  //   bs: {hp: 100, at: 150, df: 90, sa: 180, sd: 160, sp: 90},\n  //   weightkg: 430,\n  //   abilities: {0: 'Primordial Sea'},\n  //   baseSpecies: 'Kyogre',\n  //   gender: 'N',\n  // },\n  // Pumpkaboo: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 49, at: 66, df: 70, sa: 44, sd: 55, sp: 51},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   otherFormes: ['Pumpkaboo-Large', 'Pumpkaboo-Small', 'Pumpkaboo-Super'],\n  // },\n  // 'Pumpkaboo-Large': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 54, at: 66, df: 70, sa: 44, sd: 55, sp: 46},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  // 'Pumpkaboo-Small': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 44, at: 66, df: 70, sa: 44, sd: 55, sp: 56},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  // 'Pumpkaboo-Super': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 59, at: 66, df: 70, sa: 44, sd: 55, sp: 41},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  Pyroar: {\n    types: ['Fire', 'Normal'],\n    bs: {hp: 86, at: 68, df: 72, sa: 109, sd: 66, sp: 106},\n    weightkg: 81.5,\n    abilities: {0: 'Rivalry'},\n  },\n  Quilladin: {\n    types: ['Grass'],\n    bs: {hp: 61, at: 78, df: 95, sa: 56, sd: 58, sp: 57},\n    weightkg: 29,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Scatterbug: {\n    types: ['Bug'],\n    bs: {hp: 38, at: 35, df: 40, sa: 27, sd: 25, sp: 35},\n    weightkg: 2.5,\n    nfe: true,\n    abilities: {0: 'Shield Dust'},\n  },\n  Skiddo: {\n    types: ['Grass'],\n    bs: {hp: 66, at: 65, df: 48, sa: 62, sd: 57, sp: 52},\n    weightkg: 31,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Skrelp: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 60, df: 60, sa: 60, sd: 60, sp: 30},\n    weightkg: 7.3,\n    nfe: true,\n    abilities: {0: 'Poison Point'},\n  },\n  Sliggoo: {\n    types: ['Dragon'],\n    bs: {hp: 68, at: 75, df: 53, sa: 83, sd: 113, sp: 60},\n    weightkg: 17.5,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  // Slurpuff: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 82, at: 80, df: 86, sa: 85, sd: 75, sp: 72},\n  //   weightkg: 5,\n  //   abilities: {0: 'Sweet Veil'},\n  // },\n  // Snugglow: {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 40, at: 37, df: 79, sa: 91, sd: 68, sp: 70},\n  //   weightkg: 6,\n  //   nfe: true,\n  //   abilities: {0: 'Storm Drain'},\n  // },\n  Spewpa: {\n    types: ['Bug'],\n    bs: {hp: 45, at: 22, df: 60, sa: 27, sd: 30, sp: 29},\n    weightkg: 8.4,\n    nfe: true,\n    abilities: {0: 'Shed Skin'},\n  },\n  // Spritzee: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 78, at: 52, df: 60, sa: 63, sd: 65, sp: 23},\n  //   weightkg: 0.5,\n  //   nfe: true,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Swirlix: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 62, at: 48, df: 66, sa: 59, sd: 57, sp: 49},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sweet Veil'},\n  // },\n  Sylveon: {\n    types: ['Fairy'],\n    bs: {hp: 95, at: 65, df: 65, sa: 110, sd: 130, sp: 60},\n    weightkg: 23.5,\n    abilities: {0: 'Cute Charm'},\n  },\n  Talonflame: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 78, at: 81, df: 71, sa: 74, sd: 69, sp: 126},\n    weightkg: 24.5,\n    abilities: {0: 'Flame Body'},\n  },\n  // Trevenant: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 85, at: 110, df: 76, sa: 65, sd: 82, sp: 56},\n  //   weightkg: 71,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  // Tyrantrum: {\n  //   types: ['Rock', 'Dragon'],\n  //   bs: {hp: 82, at: 121, df: 119, sa: 69, sd: 59, sp: 71},\n  //   weightkg: 270,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  // Tyrunt: {\n  //   types: ['Rock', 'Dragon'],\n  //   bs: {hp: 58, at: 89, df: 77, sa: 45, sd: 45, sp: 48},\n  //   weightkg: 26,\n  //   nfe: true,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  Vivillon: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    otherFormes: ['Vivillon-Fancy', 'Vivillon-Pokeball'],\n  },\n  'Vivillon-Fancy': {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    baseSpecies: 'Vivillon',\n  },\n  'Vivillon-Pokeball': {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    baseSpecies: 'Vivillon',\n  },\n  Volcanion: {\n    types: ['Fire', 'Water'],\n    bs: {hp: 80, at: 110, df: 120, sa: 130, sd: 90, sp: 70},\n    weightkg: 195,\n    gender: 'N',\n    abilities: {0: 'Water Absorb'},\n  },\n  // Volkraken: {\n  //   types: ['Water', 'Fire'],\n  //   bs: {hp: 100, at: 45, df: 80, sa: 135, sd: 100, sp: 95},\n  //   weightkg: 44.5,\n  //   abilities: {0: 'Analytic'},\n  // },\n  // Volkritter: {\n  //   types: ['Water', 'Fire'],\n  //   bs: {hp: 60, at: 30, df: 50, sa: 80, sd: 60, sp: 70},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Anticipation'},\n  // },\n  // Xerneas: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 126, at: 131, df: 95, sa: 131, sd: 98, sp: 99},\n  //   weightkg: 215,\n  //   abilities: {0: 'Fairy Aura'},\n  //   gender: 'N',\n  // },\n  // Yveltal: {\n  //   types: ['Dark', 'Flying'],\n  //   bs: {hp: 126, at: 131, df: 95, sa: 131, sd: 98, sp: 99},\n  //   weightkg: 203,\n  //   abilities: {0: 'Dark Aura'},\n  //   gender: 'N',\n  // },\n  // Zygarde: {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 108, at: 100, df: 121, sa: 81, sd: 95, sp: 95},\n  //   weightkg: 305,\n  //   abilities: {0: 'Aura Break'},\n  //   gender: 'N',\n  // },\n};\n\nconst XY: {[name: string]: SpeciesData} = extend(true, {}, BW, XY_PATCH);\n\n// XY['Arceus'].otherFormes!.push('Arceus-Fairy');\n// XY['Arceus'].otherFormes!.sort();\n\nconst SM_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // 'Alakazam-Mega': {bs: {sd: 105}},\n  // Arbok: {bs: {at: 95}},\n  // Ariados: {bs: {sd: 70}},\n  Beartic: {bs: {at: 130}},\n  // Chimecho: {bs: {hp: 75, df: 80, sd: 90}},\n  // Corsola: {bs: {hp: 65, df: 95, sd: 95}},\n  // 'Crucibelle-Mega': {bs: {sa: 91, sp: 108}},\n  // Crustle: {bs: {at: 105}},\n  Cryogonal: {bs: {hp: 80, df: 50}},\n  // Delcatty: {bs: {sp: 90}},\n  Diglett: {otherFormes: ['Diglett-Alola']},\n  // Dodrio: {bs: {sp: 110}},\n  // Dugtrio: {bs: {at: 100}, otherFormes: ['Dugtrio-Alola']},\n  // Eevee: {otherFormes: ['Eevee-Starter']},\n  Electrode: {bs: {sp: 150}},\n  // Exeggutor: {bs: {sd: 75}, otherFormes: ['Exeggutor-Alola']},\n  // 'Farfetch\\u2019d': {bs: {at: 90}},\n  Gengar: {abilities: {0: 'Cursed Body'}},\n  // Geodude: {otherFormes: ['Geodude-Alola']},\n  // Golem: {otherFormes: ['Golem-Alola']},\n  // Graveler: {otherFormes: ['Graveler-Alola']},\n  Greninja: {otherFormes: ['Greninja-Ash']},\n  Grimer: {otherFormes: ['Grimer-Alola']},\n  // Illumise: {bs: {df: 75, sd: 85}},\n  // Lunatone: {bs: {hp: 90}},\n  // Magcargo: {bs: {hp: 60, sa: 90}},\n  // Mantine: {bs: {hp: 85}},\n  // Marowak: {otherFormes: ['Marowak-Alola', 'Marowak-Alola-Totem']},\n  Masquerain: {bs: {sa: 100, sp: 80}},\n  Meowth: {otherFormes: ['Meowth-Alola']},\n  Muk: {otherFormes: ['Muk-Alola']},\n  // Necturna: {bs: {sp: 58}},\n  // Ninetales: {otherFormes: ['Ninetales-Alola']},\n  // Naviathan: {abilities: {0: 'Guts'}},\n  // Noctowl: {bs: {sa: 86}},\n  Pelipper: {bs: {sa: 95}},\n  Persian: {otherFormes: ['Persian-Alola']},\n  // Pikachu: {\n    // otherFormes: [\n    //   'Pikachu-Alola',\n    //   'Pikachu-Hoenn',\n    //   'Pikachu-Kalos',\n    //   'Pikachu-Original',\n    //   'Pikachu-Partner',\n    //   'Pikachu-Sinnoh',\n    //   'Pikachu-Starter',\n    //   'Pikachu-Unova',\n    // ],\n  // },\n  Qwilfish: {bs: {df: 85}},\n  Raichu: {otherFormes: ['Raichu-Alola']},\n  // Raticate: {otherFormes: ['Raticate-Alola', 'Raticate-Alola-Totem']},\n  // Rattata: {otherFormes: ['Rattata-Alola']},\n  // Sandshrew: {otherFormes: ['Sandshrew-Alola']},\n  // Sandslash: {otherFormes: ['Sandslash-Alola']},\n  // Solrock: {bs: {hp: 90}},\n  // Swellow: {bs: {sa: 75}},\n  // Volbeat: {bs: {df: 75, sd: 85}},\n  // Vulpix: {otherFormes: ['Vulpix-Alola']},\n  // Woobat: {bs: {hp: 65}},\n  // Zygarde: {otherFormes: ['Zygarde-10%', 'Zygarde-Complete']},\n  // Araquanid: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 68, at: 70, df: 92, sa: 50, sd: 132, sp: 42},\n  //   abilities: {0: 'Water Bubble'},\n  //   weightkg: 82,\n  //   otherFormes: ['Araquanid-Totem'],\n  // },\n  // 'Araquanid-Totem': {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 68, at: 70, df: 92, sa: 50, sd: 132, sp: 42},\n  //   abilities: {0: 'Water Bubble'},\n  //   weightkg: 217.5,\n  //   baseSpecies: 'Araquanid',\n  // },\n  // Bewear: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 120, at: 125, df: 80, sa: 55, sd: 60, sp: 60},\n  //   abilities: {0: 'Fluffy'},\n  //   weightkg: 135,\n  // },\n  // Blacephalon: {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 53, at: 127, df: 53, sa: 151, sd: 79, sp: 107},\n  //   weightkg: 13,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Bounsweet: {\n  //   types: ['Grass'],\n  //   bs: {hp: 42, at: 30, df: 38, sa: 30, sd: 38, sp: 32},\n  //   weightkg: 3.2,\n  //   nfe: true,\n  //   abilities: {0: 'Leaf Guard'},\n  // },\n  // Brionne: {\n  //   types: ['Water'],\n  //   bs: {hp: 60, at: 69, df: 69, sa: 91, sd: 81, sp: 50},\n  //   weightkg: 17.5,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  Bruxish: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 68, at: 105, df: 70, sa: 70, sd: 70, sp: 92},\n    weightkg: 19,\n    abilities: {0: 'Dazzling'},\n  },\n  // Buzzwole: {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 107, at: 139, df: 139, sa: 53, sd: 53, sp: 79},\n  //   weightkg: 333.6,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Caribolt: {\n  //   types: ['Grass', 'Electric'],\n  //   bs: {hp: 84, at: 106, df: 82, sa: 77, sd: 80, sp: 106},\n  //   weightkg: 140,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Celesteela: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 97, at: 101, df: 103, sa: 107, sd: 101, sp: 61},\n  //   weightkg: 999.9,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Charjabug: {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 57, at: 82, df: 95, sa: 55, sd: 75, sp: 36},\n  //   weightkg: 10.5,\n  //   nfe: true,\n  //   abilities: {0: 'Battery'},\n  // },\n  // Comfey: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 51, at: 52, df: 90, sa: 82, sd: 110, sp: 100},\n  //   weightkg: 0.3,\n  //   abilities: {0: 'Flower Veil'},\n  // },\n  // Cosmoem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 43, at: 29, df: 131, sa: 29, sd: 131, sp: 37},\n  //   weightkg: 999.9,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Coribalis: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 76, at: 69, df: 90, sa: 65, sd: 77, sp: 43},\n  //   weightkg: 24.5,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Cosmog: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 43, at: 29, df: 31, sa: 29, sd: 31, sp: 37},\n  //   weightkg: 0.1,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Unaware'},\n  // },\n  Crabominable: {\n    types: ['Fighting', 'Ice'],\n    bs: {hp: 97, at: 132, df: 77, sa: 62, sd: 67, sp: 43},\n    weightkg: 180,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Crabrawler: {\n    types: ['Fighting'],\n    bs: {hp: 47, at: 82, df: 57, sa: 42, sd: 47, sp: 63},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  // Cutiefly: {\n  //   types: ['Bug', 'Fairy'],\n  //   bs: {hp: 40, at: 45, df: 40, sa: 55, sd: 40, sp: 84},\n  //   weightkg: 0.2,\n  //   nfe: true,\n  //   abilities: {0: 'Honey Gather'},\n  // },\n  // Dartrix: {\n  //   types: ['Grass', 'Flying'],\n  //   bs: {hp: 78, at: 75, df: 75, sa: 70, sd: 70, sp: 52},\n  //   weightkg: 16,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Decidueye: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 78, at: 107, df: 75, sa: 100, sd: 100, sp: 70},\n    weightkg: 36.6,\n    abilities: {0: 'Overgrow'},\n  },\n  // Dewpider: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 38, at: 40, df: 52, sa: 40, sd: 72, sp: 27},\n  //   weightkg: 4,\n  //   nfe: true,\n  //   abilities: {0: 'Water Bubble'},\n  // },\n  // Dhelmise: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 70, at: 131, df: 100, sa: 86, sd: 90, sp: 40},\n  //   weightkg: 210,\n  //   gender: 'N',\n  //   abilities: {0: 'Steelworker'},\n  // },\n  // Drampa: {\n  //   types: ['Normal', 'Dragon'],\n  //   bs: {hp: 78, at: 60, df: 85, sa: 135, sd: 91, sp: 36},\n  //   weightkg: 185,\n  //   abilities: {0: 'Berserk'},\n  // },\n  'Diglett-Alola': {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 10, at: 55, df: 30, sa: 35, sd: 45, sp: 90},\n    weightkg: 1,\n    baseSpecies: 'Diglett',\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  // 'Dugtrio-Alola': {\n  //   types: ['Ground', 'Steel'],\n  //   bs: {hp: 35, at: 100, df: 60, sa: 50, sd: 70, sp: 110},\n  //   weightkg: 66.6,\n  //   baseSpecies: 'Dugtrio',\n  //   abilities: {0: 'Sand Veil'},\n  // },\n  // 'Eevee-Starter': {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 75, df: 70, sa: 65, sd: 85, sp: 75},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Eevee',\n  // },\n  // Electrelk: {\n  //   types: ['Grass', 'Electric'],\n  //   bs: {hp: 59, at: 81, df: 67, sa: 57, sd: 55, sp: 101},\n  //   weightkg: 41.5,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Equilibra: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 102, at: 50, df: 96, sa: 133, sd: 118, sp: 60},\n  //   weightkg: 51.3,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  // 'Exeggutor-Alola': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 95, at: 105, df: 85, sa: 125, sd: 75, sp: 45},\n  //   weightkg: 415.6,\n  //   baseSpecies: 'Exeggutor',\n  //   abilities: {0: 'Frisk'},\n  // },\n  // Fawnifer: {\n  //   types: ['Grass'],\n  //   bs: {hp: 49, at: 61, df: 42, sa: 52, sd: 40, sp: 76},\n  //   weightkg: 6.9,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Fomantis: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 55, df: 35, sa: 50, sd: 35, sp: 35},\n    weightkg: 1.5,\n    nfe: true,\n    abilities: {0: 'Leaf Guard'},\n  },\n  // 'Geodude-Alola': {\n  //   types: ['Rock', 'Electric'],\n  //   bs: {hp: 40, at: 80, df: 100, sa: 30, sd: 30, sp: 20},\n  //   weightkg: 20.3,\n  //   baseSpecies: 'Geodude',\n  //   nfe: true,\n  //   abilities: {0: 'Magnet Pull'},\n  // },\n  // 'Golem-Alola': {\n  //   types: ['Rock', 'Electric'],\n  //   bs: {hp: 80, at: 120, df: 130, sa: 55, sd: 65, sp: 45},\n  //   weightkg: 316,\n  //   abilities: {0: 'Magnet Pull'},\n  //   baseSpecies: 'Golem',\n  // },\n  // Golisopod: {\n  //   types: ['Bug', 'Water'],\n  //   bs: {hp: 75, at: 125, df: 140, sa: 60, sd: 90, sp: 40},\n  //   weightkg: 108,\n  //   abilities: {0: 'Emergency Exit'},\n  // },\n  // 'Graveler-Alola': {\n  //   types: ['Rock', 'Electric'],\n  //   bs: {hp: 55, at: 95, df: 115, sa: 45, sd: 45, sp: 35},\n  //   weightkg: 110,\n  //   baseSpecies: 'Graveler',\n  //   nfe: true,\n  //   abilities: {0: 'Magnet Pull'},\n  // },\n  'Grimer-Alola': {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 80, at: 80, df: 50, sa: 40, sd: 50, sp: 25},\n    weightkg: 42,\n    baseSpecies: 'Grimer',\n    nfe: true,\n    abilities: {0: 'Poison Touch'},\n  },\n  'Greninja-Ash': {\n    types: ['Water', 'Dark'],\n    bs: {hp: 72, at: 145, df: 67, sa: 153, sd: 71, sp: 132},\n    weightkg: 40,\n    abilities: {0: 'Battle Bond'},\n    baseSpecies: 'Greninja',\n  },\n  // Grubbin: {\n  //   types: ['Bug'],\n  //   bs: {hp: 47, at: 62, df: 45, sa: 55, sd: 45, sp: 46},\n  //   weightkg: 4.4,\n  //   nfe: true,\n  //   abilities: {0: 'Swarm'},\n  // },\n  Gumshoos: {\n    types: ['Normal'],\n    bs: {hp: 88, at: 110, df: 60, sa: 55, sd: 60, sp: 45},\n    weightkg: 14.2,\n    // otherFormes: ['Gumshoos-Totem'],\n    abilities: {0: 'Stakeout'},\n  },\n  // 'Gumshoos-Totem': {\n  //   types: ['Normal'],\n  //   bs: {hp: 88, at: 110, df: 60, sa: 55, sd: 60, sp: 45},\n  //   weightkg: 60,\n  //   baseSpecies: 'Gumshoos',\n  //   abilities: {0: 'Adaptability'},\n  // },\n  // Guzzlord: {\n  //   types: ['Dark', 'Dragon'],\n  //   bs: {hp: 223, at: 101, df: 53, sa: 97, sd: 53, sp: 43},\n  //   weightkg: 888,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // 'Hakamo-o': {\n  //   types: ['Dragon', 'Fighting'],\n  //   bs: {hp: 55, at: 75, df: 90, sa: 65, sd: 70, sp: 65},\n  //   weightkg: 47,\n  //   nfe: true,\n  //   abilities: {0: 'Bulletproof'},\n  // },\n  // Incineroar: {\n  //   types: ['Fire', 'Dark'],\n  //   bs: {hp: 95, at: 115, df: 90, sa: 80, sd: 90, sp: 60},\n  //   weightkg: 83,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // 'Jangmo-o': {\n  //   types: ['Dragon'],\n  //   bs: {hp: 45, at: 55, df: 65, sa: 45, sd: 45, sp: 45},\n  //   weightkg: 29.7,\n  //   nfe: true,\n  //   abilities: {0: 'Bulletproof'},\n  // },\n  // Justyke: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 72, at: 70, df: 56, sa: 83, sd: 68, sp: 30},\n  //   weightkg: 36.5,\n  //   nfe: true,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Jumbao: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 92, at: 63, df: 97, sa: 124, sd: 104, sp: 96},\n  //   weightkg: 200,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Kartana: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 59, at: 181, df: 131, sa: 59, sd: 31, sp: 109},\n  //   weightkg: 0.1,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Komala: {\n    types: ['Normal'],\n    bs: {hp: 65, at: 115, df: 65, sa: 75, sd: 95, sp: 65},\n    weightkg: 19.9,\n    abilities: {0: 'Comatose'},\n  },\n  // 'Kommo-o': {\n  //   types: ['Dragon', 'Fighting'],\n  //   bs: {hp: 75, at: 110, df: 125, sa: 100, sd: 105, sp: 85},\n  //   weightkg: 78.2,\n  //   otherFormes: ['Kommo-o-Totem'],\n  //   abilities: {0: 'Bulletproof'},\n  // },\n  // 'Kommo-o-Totem': {\n  //   types: ['Dragon', 'Fighting'],\n  //   bs: {hp: 75, at: 110, df: 125, sa: 100, sd: 105, sp: 85},\n  //   weightkg: 207.5,\n  //   abilities: {0: 'Overcoat'},\n  //   baseSpecies: 'Kommo-o',\n  // },\n  // Litten: {\n  //   types: ['Fire'],\n  //   bs: {hp: 45, at: 65, df: 40, sa: 60, sd: 40, sp: 70},\n  //   weightkg: 4.3,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Lunala: {\n  //   types: ['Psychic', 'Ghost'],\n  //   bs: {hp: 137, at: 113, df: 89, sa: 137, sd: 107, sp: 97},\n  //   weightkg: 120,\n  //   abilities: {0: 'Shadow Shield'},\n  //   gender: 'N',\n  // },\n  Lurantis: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 105, df: 90, sa: 80, sd: 90, sp: 45},\n    weightkg: 18.5,\n    // otherFormes: ['Lurantis-Totem'],\n    abilities: {0: 'Leaf Guard'},\n  },\n  // 'Lurantis-Totem': {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 105, df: 90, sa: 80, sd: 90, sp: 45},\n  //   weightkg: 58,\n  //   abilities: {0: 'Leaf Guard'},\n  //   baseSpecies: 'Lurantis',\n  // },\n  Lycanroc: {\n    types: ['Rock'],\n    bs: {hp: 75, at: 115, df: 65, sa: 55, sd: 65, sp: 112},\n    weightkg: 25,\n    otherFormes: ['Lycanroc-Dusk', 'Lycanroc-Midnight'],\n    abilities: {0: 'Keen Eye'},\n  },\n  'Lycanroc-Dusk': {\n    types: ['Rock'],\n    bs: {hp: 75, at: 117, df: 65, sa: 55, sd: 65, sp: 110},\n    weightkg: 25,\n    abilities: {0: 'Tough Claws'},\n    baseSpecies: 'Lycanroc',\n  },\n  'Lycanroc-Midnight': {\n    types: ['Rock'],\n    bs: {hp: 85, at: 115, df: 75, sa: 55, sd: 75, sp: 82},\n    weightkg: 25,\n    baseSpecies: 'Lycanroc',\n    abilities: {0: 'Keen Eye'},\n  },\n  Magearna: {\n    types: ['Steel', 'Fairy'],\n    bs: {hp: 80, at: 95, df: 115, sa: 130, sd: 115, sp: 65},\n    weightkg: 80.5,\n    gender: 'N',\n    abilities: {0: 'Soul-Heart'},\n  },\n  Mareanie: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 53, df: 62, sa: 43, sd: 52, sp: 45},\n    weightkg: 8,\n    nfe: true,\n    abilities: {0: 'Merciless'},\n  },\n  // 'Marowak-Alola': {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 60, at: 80, df: 110, sa: 50, sd: 80, sp: 45},\n  //   weightkg: 34,\n  //   abilities: {0: 'Cursed Body'},\n  //   baseSpecies: 'Marowak',\n  // },\n  // 'Marowak-Alola-Totem': {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 60, at: 80, df: 110, sa: 50, sd: 80, sp: 45},\n  //   weightkg: 98,\n  //   abilities: {0: 'Rock Head'},\n  //   baseSpecies: 'Marowak',\n  // },\n  // Marshadow: {\n  //   types: ['Fighting', 'Ghost'],\n  //   bs: {hp: 90, at: 125, df: 80, sa: 90, sd: 90, sp: 125},\n  //   weightkg: 22.2,\n  //   gender: 'N',\n  //   abilities: {0: 'Technician'},\n  // },\n  // Melmetal: {\n  //   types: ['Steel'],\n  //   bs: {hp: 135, at: 143, df: 143, sa: 80, sd: 65, sp: 34},\n  //   weightkg: 800,\n  //   gender: 'N',\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Meltan does NOT benefit from Eviolite and should not have nfe: true (credit: Anubis)\n  // https://smogon.com/forums/threads/sword-shield-battle-mechanics-research.3655528/post-8295399\n  // Meltan: {\n  //   types: ['Steel'],\n  //   bs: {hp: 46, at: 65, df: 65, sa: 55, sd: 35, sp: 34},\n  //   weightkg: 8,\n  //   gender: 'N',\n  //   abilities: {0: 'Magnet Pull'},\n  // },\n  'Meowth-Alola': {\n    types: ['Dark'],\n    bs: {hp: 40, at: 35, df: 35, sa: 50, sd: 40, sp: 90},\n    weightkg: 4.2,\n    baseSpecies: 'Meowth',\n    nfe: true,\n    abilities: {0: 'Pickup'},\n  },\n  Mimikyu: {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n    weightkg: 0.7,\n    otherFormes: ['Mimikyu-Busted'] , // , 'Mimikyu-Busted-Totem', 'Mimikyu-Totem'],\n    abilities: {0: 'Disguise'},\n  },\n  'Mimikyu-Busted': {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n    weightkg: 0.7,\n    baseSpecies: 'Mimikyu',\n    abilities: {0: 'Disguise'},\n  },\n  // 'Mimikyu-Totem-Busted': {\n  //   types: ['Ghost', 'Fairy'],\n  //   bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n  //   weightkg: 2.8,\n  //   baseSpecies: 'Mimikyu',\n  //   abilities: {0: 'Disguise'},\n  // },\n  // 'Mimikyu-Totem-Disguised': {\n  //   types: ['Ghost', 'Fairy'],\n  //   bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n  //   weightkg: 2.8,\n  //   baseSpecies: 'Mimikyu',\n  //   abilities: {0: 'Disguise'},\n  // },\n  // Minior: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 60, at: 100, df: 60, sa: 100, sd: 60, sp: 120},\n  //   weightkg: 0.3,\n  //   otherFormes: ['Minior-Meteor'],\n  //   gender: 'N',\n  //   abilities: {0: 'Shields Down'},\n  // },\n  // 'Minior-Meteor': {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 60, at: 60, df: 100, sa: 60, sd: 100, sp: 60},\n  //   weightkg: 40,\n  //   gender: 'N',\n  //   baseSpecies: 'Minior',\n  //   abilities: {0: 'Shields Down'},\n  // },\n  // Morelull: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 40, at: 35, df: 55, sa: 65, sd: 75, sp: 15},\n  //   weightkg: 1.5,\n  //   nfe: true,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  Mudbray: {\n    types: ['Ground'],\n    bs: {hp: 70, at: 100, df: 70, sa: 45, sd: 55, sp: 45},\n    weightkg: 110,\n    nfe: true,\n    abilities: {0: 'Own Tempo'},\n  },\n  Mudsdale: {\n    types: ['Ground'],\n    bs: {hp: 100, at: 125, df: 100, sa: 55, sd: 85, sp: 35},\n    weightkg: 920,\n    abilities: {0: 'Own Tempo'},\n  },\n  'Muk-Alola': {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 105, at: 105, df: 75, sa: 65, sd: 100, sp: 50},\n    weightkg: 52,\n    baseSpecies: 'Muk',\n    abilities: {0: 'Poison Touch'},\n  },\n  // Mumbao: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 55, at: 30, df: 64, sa: 87, sd: 73, sp: 66},\n  //   weightkg: 83,\n  //   nfe: true,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Naganadel: {\n  //   types: ['Poison', 'Dragon'],\n  //   bs: {hp: 73, at: 73, df: 73, sa: 127, sd: 73, sp: 121},\n  //   weightkg: 150,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Necrozma: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 97, at: 107, df: 101, sa: 127, sd: 89, sp: 79},\n  //   weightkg: 230,\n  //   abilities: {0: 'Prism Armor'},\n  //   otherFormes: ['Necrozma-Dawn-Wings', 'Necrozma-Dusk-Mane', 'Necrozma-Ultra'],\n  //   gender: 'N',\n  // },\n  // 'Necrozma-Dawn-Wings': {\n  //   types: ['Psychic', 'Ghost'],\n  //   bs: {hp: 97, at: 113, df: 109, sa: 157, sd: 127, sp: 77},\n  //   weightkg: 350,\n  //   abilities: {0: 'Prism Armor'},\n  //   baseSpecies: 'Necrozma',\n  //   gender: 'N',\n  // },\n  // 'Necrozma-Dusk-Mane': {\n  //   types: ['Psychic', 'Steel'],\n  //   bs: {hp: 97, at: 157, df: 127, sa: 113, sd: 109, sp: 77},\n  //   weightkg: 460,\n  //   abilities: {0: 'Prism Armor'},\n  //   baseSpecies: 'Necrozma',\n  //   gender: 'N',\n  // },\n  // 'Necrozma-Ultra': {\n  //   types: ['Psychic', 'Dragon'],\n  //   bs: {hp: 97, at: 167, df: 97, sa: 167, sd: 97, sp: 129},\n  //   weightkg: 230,\n  //   abilities: {0: 'Neuroforce'},\n  //   baseSpecies: 'Necrozma',\n  //   gender: 'N',\n  // },\n  // Nihilego: {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 109, at: 53, df: 47, sa: 127, sd: 131, sp: 103},\n  //   weightkg: 55.5,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // 'Ninetales-Alola': {\n  //   types: ['Ice', 'Fairy'],\n  //   bs: {hp: 73, at: 67, df: 75, sa: 81, sd: 100, sp: 109},\n  //   weightkg: 19.9,\n  //   abilities: {0: 'Snow Cloak'},\n  //   baseSpecies: 'Ninetales',\n  // },\n  Oranguru: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 90, at: 60, df: 80, sa: 90, sd: 110, sp: 60},\n    weightkg: 76,\n    abilities: {0: 'Inner Focus'},\n  },\n  'Oricorio-Baile': {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    otherFormes: ['Oricorio-Pa\\'u', 'Oricorio-Pom-Pom', 'Oricorio-Sensu'],\n  },\n  'Oricorio-Pa\\'u': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio-Baile',\n  },\n  'Oricorio-Pom-Pom': {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio-Baile',\n  },\n  'Oricorio-Sensu': {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio-Baile',\n  },\n  // Pajantom: {\n  //   types: ['Dragon', 'Ghost'],\n  //   bs: {hp: 84, at: 133, df: 71, sa: 51, sd: 111, sp: 101},\n  //   weightkg: 3.1,\n  //   abilities: {0: 'Comatose'},\n  // },\n  Palossand: {\n    types: ['Ghost', 'Ground'],\n    bs: {hp: 85, at: 75, df: 110, sa: 100, sd: 75, sp: 35},\n    weightkg: 250,\n    abilities: {0: 'Water Compaction'},\n  },\n  Passimian: {\n    types: ['Fighting'],\n    bs: {hp: 100, at: 120, df: 90, sa: 40, sd: 60, sp: 80},\n    weightkg: 82.8,\n    abilities: {0: 'Receiver'},\n  },\n  'Persian-Alola': {\n    types: ['Dark'],\n    bs: {hp: 65, at: 60, df: 60, sa: 75, sd: 65, sp: 115},\n    weightkg: 33,\n    baseSpecies: 'Persian',\n    abilities: {0: 'Fur Coat'},\n  },\n  // Pheromosa: {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 71, at: 137, df: 37, sa: 137, sd: 37, sp: 151},\n  //   weightkg: 25,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // 'Pikachu-Alola': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Hoenn': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Kalos': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Original': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Partner': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Sinnoh': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Starter': {\n  //   types: ['Electric'],\n  //   bs: {hp: 45, at: 80, df: 50, sa: 75, sd: 60, sp: 120},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Unova': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // Pikipek: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 35, at: 75, df: 30, sa: 30, sd: 30, sp: 65},\n  //   weightkg: 1.2,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Poipole: {\n  //   types: ['Poison'],\n  //   bs: {hp: 67, at: 73, df: 67, sa: 73, sd: 67, sp: 73},\n  //   weightkg: 1.8,\n  //   abilities: {0: 'Beast Boost'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  // Popplio: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 54, df: 54, sa: 66, sd: 56, sp: 40},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Primarina: {\n  //   types: ['Water', 'Fairy'],\n  //   bs: {hp: 80, at: 74, df: 74, sa: 126, sd: 116, sp: 60},\n  //   weightkg: 44,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Pyukumuku: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 60, df: 130, sa: 30, sd: 130, sp: 5},\n  //   weightkg: 1.2,\n  //   abilities: {0: 'Innards Out'},\n  // },\n  'Raichu-Alola': {\n    types: ['Electric', 'Psychic'],\n    bs: {hp: 60, at: 85, df: 50, sa: 95, sd: 85, sp: 110},\n    weightkg: 21,\n    baseSpecies: 'Raichu',\n    abilities: {0: 'Surge Surfer'},\n  },\n  // 'Raticate-Alola': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 75, at: 71, df: 70, sa: 40, sd: 80, sp: 77},\n  //   weightkg: 25.5,\n  //   baseSpecies: 'Raticate',\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // 'Raticate-Alola-Totem': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 75, at: 71, df: 70, sa: 40, sd: 80, sp: 77},\n  //   weightkg: 105,\n  //   abilities: {0: 'Thick Fat'},\n  //   baseSpecies: 'Raticate',\n  // },\n  // 'Rattata-Alola': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 30, at: 56, df: 35, sa: 25, sd: 35, sp: 72},\n  //   weightkg: 3.8,\n  //   baseSpecies: 'Rattata',\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Ribombee: {\n  //   types: ['Bug', 'Fairy'],\n  //   bs: {hp: 60, at: 55, df: 60, sa: 95, sd: 70, sp: 124},\n  //   weightkg: 0.5,\n  //   otherFormes: ['Ribombee-Totem'],\n  //   abilities: {0: 'Honey Gather'},\n  // },\n  // 'Ribombee-Totem': {\n  //   types: ['Bug', 'Fairy'],\n  //   bs: {hp: 60, at: 55, df: 60, sa: 95, sd: 70, sp: 124},\n  //   weightkg: 2,\n  //   abilities: {0: 'Sweet Veil'},\n  //   baseSpecies: 'Ribombee',\n  // },\n  Rockruff: {\n    types: ['Rock'],\n    bs: {hp: 45, at: 65, df: 40, sa: 30, sd: 40, sp: 60},\n    weightkg: 9.2,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Rowlet: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 68, at: 55, df: 55, sa: 50, sd: 50, sp: 42},\n    weightkg: 1.5,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Salandit: {\n    types: ['Poison', 'Fire'],\n    bs: {hp: 48, at: 44, df: 40, sa: 71, sd: 40, sp: 77},\n    weightkg: 4.8,\n    nfe: true,\n    abilities: {0: 'Corrosion'},\n  },\n  Salazzle: {\n    types: ['Poison', 'Fire'],\n    bs: {hp: 68, at: 64, df: 60, sa: 111, sd: 60, sp: 117},\n    weightkg: 22.2,\n    otherFormes: ['Salazzle-Totem'],\n    abilities: {0: 'Corrosion'},\n  },\n  // 'Salazzle-Totem': {\n  //   types: ['Poison', 'Fire'],\n  //   bs: {hp: 68, at: 64, df: 60, sa: 111, sd: 60, sp: 117},\n  //   weightkg: 81,\n  //   abilities: {0: 'Corrosion'},\n  //   baseSpecies: 'Salazzle',\n  // },\n  // 'Sandshrew-Alola': {\n  //   types: ['Ice', 'Steel'],\n  //   bs: {hp: 50, at: 75, df: 90, sa: 10, sd: 35, sp: 40},\n  //   weightkg: 40,\n  //   baseSpecies: 'Sandshrew',\n  //   nfe: true,\n  //   abilities: {0: 'Snow Cloak'},\n  // },\n  // 'Sandslash-Alola': {\n  //   types: ['Ice', 'Steel'],\n  //   bs: {hp: 75, at: 100, df: 120, sa: 25, sd: 65, sp: 65},\n  //   weightkg: 55,\n  //   baseSpecies: 'Sandslash',\n  //   abilities: {0: 'Snow Cloak'},\n  // },\n  Sandygast: {\n    types: ['Ghost', 'Ground'],\n    bs: {hp: 55, at: 55, df: 80, sa: 70, sd: 45, sp: 15},\n    weightkg: 70,\n    nfe: true,\n    abilities: {0: 'Water Compaction'},\n  },\n  // Shiinotic: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 60, at: 45, df: 80, sa: 90, sd: 100, sp: 30},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  // Silvally: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   gender: 'N',\n  //   otherFormes: [\n  //     'Silvally-Bug',\n  //     'Silvally-Dark',\n  //     'Silvally-Dragon',\n  //     'Silvally-Electric',\n  //     'Silvally-Fairy',\n  //     'Silvally-Fighting',\n  //     'Silvally-Fire',\n  //     'Silvally-Flying',\n  //     'Silvally-Ghost',\n  //     'Silvally-Grass',\n  //     'Silvally-Ground',\n  //     'Silvally-Ice',\n  //     'Silvally-Poison',\n  //     'Silvally-Psychic',\n  //     'Silvally-Rock',\n  //     'Silvally-Steel',\n  //     'Silvally-Water',\n  //   ],\n  // },\n  // 'Silvally-Bug': {\n  //   types: ['Bug'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Dark': {\n  //   types: ['Dark'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Dragon': {\n  //   types: ['Dragon'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Electric': {\n  //   types: ['Electric'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fairy': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fighting': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fire': {\n  //   types: ['Fire'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Flying': {\n  //   types: ['Flying'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ghost': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Grass': {\n  //   types: ['Grass'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ground': {\n  //   types: ['Ground'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ice': {\n  //   types: ['Ice'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Poison': {\n  //   types: ['Poison'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Psychic': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Rock': {\n  //   types: ['Rock'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Steel': {\n  //   types: ['Steel'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Water': {\n  //   types: ['Water'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // Smogecko: {\n  //   types: ['Fire'],\n  //   bs: {hp: 48, at: 66, df: 43, sa: 58, sd: 48, sp: 56},\n  //   weightkg: 8.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Smoguana: {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 68, at: 86, df: 53, sa: 68, sd: 68, sp: 76},\n  //   weightkg: 22.2,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Smokomodo: {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 88, at: 116, df: 67, sa: 88, sd: 78, sp: 97},\n  //   weightkg: 205,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Snaelstrom: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 91, at: 94, df: 110, sa: 80, sd: 97, sp: 63},\n  //   weightkg: 120,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // Solgaleo: {\n  //   types: ['Psychic', 'Steel'],\n  //   bs: {hp: 137, at: 137, df: 107, sa: 113, sd: 89, sp: 97},\n  //   weightkg: 230,\n  //   abilities: {0: 'Full Metal Body'},\n  //   gender: 'N',\n  // },\n  // Stakataka: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 61, at: 131, df: 211, sa: 53, sd: 101, sp: 13},\n  //   weightkg: 820,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Steenee: {\n  //   types: ['Grass'],\n  //   bs: {hp: 52, at: 40, df: 48, sa: 40, sd: 48, sp: 62},\n  //   weightkg: 8.2,\n  //   nfe: true,\n  //   abilities: {0: 'Leaf Guard'},\n  // },\n  // Stufful: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 70, at: 75, df: 50, sa: 45, sd: 50, sp: 50},\n  //   weightkg: 6.8,\n  //   abilities: {0: 'Fluffy'},\n  //   nfe: true,\n  // },\n  // Swirlpool: {\n  //   types: ['Water'],\n  //   bs: {hp: 61, at: 49, df: 70, sa: 50, sd: 62, sp: 28},\n  //   weightkg: 7,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // 'Tapu Bulu': {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 70, at: 130, df: 115, sa: 85, sd: 95, sp: 75},\n  //   weightkg: 45.5,\n  //   abilities: {0: 'Grassy Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Fini': {\n  //   types: ['Water', 'Fairy'],\n  //   bs: {hp: 70, at: 75, df: 115, sa: 95, sd: 130, sp: 85},\n  //   weightkg: 21.2,\n  //   abilities: {0: 'Misty Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Koko': {\n  //   types: ['Electric', 'Fairy'],\n  //   bs: {hp: 70, at: 115, df: 85, sa: 95, sd: 75, sp: 130},\n  //   weightkg: 20.5,\n  //   abilities: {0: 'Electric Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Lele': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 70, at: 85, df: 75, sa: 130, sd: 115, sp: 95},\n  //   weightkg: 18.6,\n  //   abilities: {0: 'Psychic Surge'},\n  //   gender: 'N',\n  // },\n  // Togedemaru: {\n  //   types: ['Electric', 'Steel'],\n  //   bs: {hp: 65, at: 98, df: 63, sa: 40, sd: 73, sp: 96},\n  //   weightkg: 3.3,\n  //   abilities: {0: 'Iron Barbs'},\n  //   otherFormes: ['Togedemaru-Totem'],\n  // },\n  // 'Togedemaru-Totem': {\n  //   types: ['Electric', 'Steel'],\n  //   bs: {hp: 65, at: 98, df: 63, sa: 40, sd: 73, sp: 96},\n  //   weightkg: 13,\n  //   abilities: {0: 'Sturdy'},\n  //   baseSpecies: 'Togedemaru',\n  // },\n  // Torracat: {\n  //   types: ['Fire'],\n  //   bs: {hp: 65, at: 85, df: 50, sa: 80, sd: 50, sp: 90},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Toucannon: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 80, at: 120, df: 75, sa: 75, sd: 75, sp: 60},\n  //   weightkg: 26,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  Toxapex: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 63, df: 152, sa: 53, sd: 142, sp: 35},\n    weightkg: 14.5,\n    abilities: {0: 'Merciless'},\n  },\n  // Trumbeak: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 55, at: 85, df: 50, sa: 40, sd: 50, sp: 75},\n  //   weightkg: 14.8,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  Tsareena: {\n    types: ['Grass'],\n    bs: {hp: 72, at: 120, df: 98, sa: 50, sd: 98, sp: 72},\n    weightkg: 21.4,\n    abilities: {0: 'Leaf Guard'},\n  },\n  // Turtonator: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 60, at: 78, df: 135, sa: 91, sd: 85, sp: 36},\n  //   weightkg: 212,\n  //   abilities: {0: 'Shell Armor'},\n  // },\n  // 'Type: Null': {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 59},\n  //   weightkg: 120.5,\n  //   abilities: {0: 'Battle Armor'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  // Vikavolt: {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 77, at: 70, df: 90, sa: 145, sd: 75, sp: 43},\n  //   weightkg: 45,\n  //   abilities: {0: 'Levitate'},\n  //   otherFormes: ['Vikavolt-Totem'],\n  // },\n  // 'Vikavolt-Totem': {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 77, at: 70, df: 90, sa: 145, sd: 75, sp: 43},\n  //   weightkg: 147.5,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Vikavolt',\n  // },\n  // 'Vulpix-Alola': {\n  //   types: ['Ice'],\n  //   bs: {hp: 38, at: 41, df: 40, sa: 50, sd: 65, sp: 65},\n  //   weightkg: 9.9,\n  //   baseSpecies: 'Vulpix',\n  //   nfe: true,\n  //   abilities: {0: 'Snow Cloak'},\n  // },\n  // Wimpod: {\n  //   types: ['Bug', 'Water'],\n  //   bs: {hp: 25, at: 35, df: 40, sa: 20, sd: 30, sp: 80},\n  //   weightkg: 12,\n  //   abilities: {0: 'Wimp Out'},\n  //   nfe: true,\n  // },\n  // Wishiwashi: {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 20, df: 20, sa: 25, sd: 25, sp: 40},\n  //   weightkg: 0.3,\n  //   otherFormes: ['Wishiwashi-School'],\n  //   abilities: {0: 'Schooling'},\n  // },\n  // 'Wishiwashi-School': {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 140, df: 130, sa: 140, sd: 135, sp: 30},\n  //   weightkg: 78.6,\n  //   baseSpecies: 'Wishiwashi',\n  //   abilities: {0: 'Schooling'},\n  // },\n  // Xurkitree: {\n  //   types: ['Electric'],\n  //   bs: {hp: 83, at: 89, df: 71, sa: 173, sd: 71, sp: 83},\n  //   weightkg: 100,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Yungoos: {\n    types: ['Normal'],\n    bs: {hp: 48, at: 70, df: 30, sa: 30, sd: 30, sp: 45},\n    weightkg: 6,\n    nfe: true,\n    abilities: {0: 'Stakeout'},\n  },\n  // Zeraora: {\n  //   types: ['Electric'],\n  //   bs: {hp: 88, at: 112, df: 75, sa: 102, sd: 80, sp: 143},\n  //   weightkg: 44.5,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  // 'Zygarde-10%': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 54, at: 100, df: 71, sa: 61, sd: 85, sp: 115},\n  //   weightkg: 33.5,\n  //   abilities: {0: 'Aura Break'},\n  //   baseSpecies: 'Zygarde',\n  //   gender: 'N',\n  // },\n  // 'Zygarde-Complete': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 216, at: 100, df: 121, sa: 91, sd: 95, sp: 85},\n  //   weightkg: 610,\n  //   abilities: {0: 'Power Construct'},\n  //   baseSpecies: 'Zygarde',\n  //   gender: 'N',\n  // },\n};\n\nconst SM: {[name: string]: SpeciesData} = extend(true, {}, XY, SM_PATCH);\n\n// delete SM['Pikachu-Cosplay'];\n// delete SM['Pikachu-Rock-Star'];\n// delete SM['Pikachu-Belle'];\n// delete SM['Pikachu-PhD'];\n// delete SM['Pikachu-Pop-Star'];\n// delete SM['Pikachu-Libre'];\n\nconst SS_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // 'Aegislash-Blade': {bs: {at: 140, sa: 140}},\n  // 'Aegislash-Both': {bs: {at: 140, df: 140, sa: 140, sd: 140}},\n  // 'Aegislash-Shield': {bs: {df: 140, sd: 140}},\n  Articuno: {otherFormes: ['Articuno-Galar']},\n  // Blastoise: {otherFormes: ['Blastoise-Gmax', 'Blastoise-Mega']},\n  // Butterfree: {otherFormes: ['Butterfree-Gmax']},\n  // Charizard: {otherFormes: ['Charizard-Gmax', 'Charizard-Mega-X', 'Charizard-Mega-Y']},\n  // Corsola: {otherFormes: ['Corsola-Galar']},\n  // Darmanitan: {\n  //   otherFormes: ['Darmanitan-Galar', 'Darmanitan-Galar-Zen', 'Darmanitan-Zen'],\n  // },\n  // Darumaka: {otherFormes: ['Darumaka-Galar']},\n  // Eevee: {otherFormes: ['Eevee-Gmax']},\n  // Equilibra: {bs: {sa: 133}},\n  // 'Farfetch\\u2019d': {otherFormes: ['Farfetch\\u2019d-Galar']},\n  // Garbodor: {otherFormes: ['Garbodor-Gmax']},\n  // Gengar: {otherFormes: ['Gengar-Gmax', 'Gengar-Mega']},\n  // Kingler: {otherFormes: ['Kingler-Gmax']},\n  // Lapras: {otherFormes: ['Lapras-Gmax']},\n  // Linoone: {otherFormes: ['Linoone-Galar']},\n  // Machamp: {otherFormes: ['Machamp-Gmax']},\n  // Melmetal: {otherFormes: ['Melmetal-Gmax']},\n  Meowth: {otherFormes: ['Meowth-Alola', 'Meowth-Galar']}, //, 'Meowth-Gmax']},\n  Moltres: {otherFormes: ['Moltres-Galar']},\n  // 'Mr. Mime': {otherFormes: ['Mr. Mime-Galar']},\n  // Pikachu: {\n  //   otherFormes: [\n  //     'Pikachu-Alola',\n  //     'Pikachu-Gmax',\n  //     'Pikachu-Hoenn',\n  //     'Pikachu-Kalos',\n  //     'Pikachu-Original',\n  //     'Pikachu-Partner',\n  //     'Pikachu-Sinnoh',\n  //     'Pikachu-Unova',\n  //     'Pikachu-World',\n  //   ],\n  // },\n  // Ponyta: {otherFormes: ['Ponyta-Galar']},\n  // Pyroak: {bs: {sa: 70, sd: 65}},\n  // Rapidash: {otherFormes: ['Rapidash-Galar']},\n  Slowbro: {otherFormes: ['Slowbro-Galar']}, // , 'Slowbro-Mega']},\n  Slowking: {otherFormes: ['Slowking-Galar']},\n  Slowpoke: {otherFormes: ['Slowpoke-Galar']},\n  // Snorlax: {otherFormes: ['Snorlax-Gmax']},\n  // Stunfisk: {otherFormes: ['Stunfisk-Galar']},\n  // Venusaur: {otherFormes: ['Venusaur-Gmax', 'Venusaur-Mega']},\n  // Voodoom: {bs: {sa: 130}},\n  // Weezing: {otherFormes: ['Weezing-Galar']},\n  // Yamask: {otherFormes: ['Yamask-Galar']},\n  Zapdos: {otherFormes: ['Zapdos-Galar']},\n  // Zigzagoon: {otherFormes: ['Zigzagoon-Galar']},\n  // Alcremie: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 65, at: 60, df: 75, sa: 110, sd: 121, sp: 64},\n  //   weightkg: 0.5,\n  //   abilities: {0: 'Sweet Veil'},\n  //   otherFormes: ['Alcremie-Gmax'],\n  // },\n  // 'Alcremie-Gmax': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 65, at: 60, df: 75, sa: 110, sd: 121, sp: 64},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sweet Veil'},\n  //   baseSpecies: 'Alcremie',\n  // },\n  Appletun: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 110, at: 85, df: 80, sa: 100, sd: 80, sp: 30},\n    weightkg: 13,\n    abilities: {0: 'Ripen'},\n    otherFormes: ['Appletun-Gmax'],\n  },\n  // 'Appletun-Gmax': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 110, at: 85, df: 80, sa: 100, sd: 80, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Ripen'},\n  //   baseSpecies: 'Appletun',\n  // },\n  Applin: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 40, at: 40, df: 80, sa: 40, sd: 40, sp: 20},\n    weightkg: 0.5,\n    abilities: {0: 'Ripen'},\n    nfe: true,\n  },\n  // Arctovish: {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 90, at: 90, df: 100, sa: 80, sd: 90, sp: 55},\n  //   weightkg: 175,\n  //   abilities: {0: 'Water Absorb'},\n  //   gender: 'N',\n  // },\n  // Arctozolt: {\n  //   types: ['Electric', 'Ice'],\n  //   bs: {hp: 90, at: 100, df: 90, sa: 90, sd: 80, sp: 55},\n  //   weightkg: 150,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  Arrokuda: {\n    types: ['Water'],\n    bs: {hp: 41, at: 63, df: 40, sa: 40, sd: 30, sp: 66},\n    weightkg: 1,\n    abilities: {0: 'Swift Swim'},\n    nfe: true,\n  },\n  'Articuno-Galar': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 90, at: 85, df: 85, sa: 125, sd: 100, sp: 95},\n    weightkg: 50.9,\n    abilities: {0: 'Competitive'},\n    gender: 'N',\n    baseSpecies: 'Articuno',\n  },\n  // Astrolotl: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 108, at: 108, df: 74, sa: 92, sd: 64, sp: 114},\n  //   weightkg: 50,\n  //   abilities: {0: 'Regenerator'},\n  // },\n  Barraskewda: {\n    types: ['Water'],\n    bs: {hp: 61, at: 123, df: 60, sa: 60, sd: 50, sp: 136},\n    weightkg: 30,\n    abilities: {0: 'Swift Swim'},\n  },\n  // 'Blastoise-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 83, df: 100, sa: 85, sd: 105, sp: 78},\n  //   weightkg: 0,\n  //   abilities: {0: 'Torrent'},\n  //   baseSpecies: 'Blastoise',\n  // },\n  // Blipbug: {\n  //   types: ['Bug'],\n  //   bs: {hp: 25, at: 20, df: 20, sa: 25, sd: 45, sp: 45},\n  //   weightkg: 8,\n  //   abilities: {0: 'Swarm'},\n  //   nfe: true,\n  // },\n  // Boltund: {\n  //   types: ['Electric'],\n  //   bs: {hp: 69, at: 90, df: 60, sa: 90, sd: 60, sp: 121},\n  //   weightkg: 34,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  // 'Butterfree-Gmax': {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 45, df: 50, sa: 90, sd: 80, sp: 70},\n  //   weightkg: 0,\n  //   abilities: {0: 'Compound Eyes'},\n  //   baseSpecies: 'Butterfree',\n  // },\n  Calyrex: {\n    types: ['Psychic', 'Grass'],\n    bs: {hp: 100, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 7.7,\n    abilities: {0: 'Unnerve'},\n    gender: 'N',\n    otherFormes: ['Calyrex-Ice', 'Calyrex-Shadow'],\n  },\n  'Calyrex-Ice': {\n    types: ['Psychic', 'Ice'],\n    bs: {hp: 100, at: 165, df: 150, sa: 85, sd: 130, sp: 50},\n    weightkg: 809.1,\n    abilities: {0: 'As One (Glastrier)'},\n    gender: 'N',\n    baseSpecies: 'Calyrex',\n  },\n  'Calyrex-Shadow': {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 100, at: 85, df: 80, sa: 165, sd: 100, sp: 150},\n    weightkg: 53.6,\n    abilities: {0: 'As One (Spectrier)'},\n    gender: 'N',\n    baseSpecies: 'Calyrex',\n  },\n  Carkol: {\n    types: ['Rock', 'Fire'],\n    bs: {hp: 80, at: 60, df: 90, sa: 60, sd: 70, sp: 50},\n    weightkg: 78,\n    abilities: {0: 'Steam Engine'},\n    nfe: true,\n  },\n  // Centiskorch: {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 100, at: 115, df: 65, sa: 90, sd: 90, sp: 65},\n  //   weightkg: 120,\n  //   abilities: {0: 'Flash Fire'},\n  //   otherFormes: ['Centiskorch-Gmax'],\n  // },\n  // 'Centiskorch-Gmax': {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 100, at: 115, df: 65, sa: 90, sd: 90, sp: 65},\n  //   weightkg: 0,\n  //   abilities: {0: 'Flash Fire'},\n  //   baseSpecies: 'Centiskorch',\n  // },\n  // 'Charizard-Gmax': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 78, at: 84, df: 78, sa: 109, sd: 85, sp: 100},\n  //   weightkg: 0,\n  //   abilities: {0: 'Blaze'},\n  //   baseSpecies: 'Charizard',\n  // },\n  Chewtle: {\n    types: ['Water'],\n    bs: {hp: 50, at: 64, df: 50, sa: 38, sd: 38, sp: 44},\n    weightkg: 8.5,\n    abilities: {0: 'Strong Jaw'},\n    nfe: true,\n  },\n  // Chromera: {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 85, at: 85, df: 115, sa: 115, sd: 100, sp: 100},\n  //   weightkg: 215,\n  //   abilities: {0: 'Color Change'},\n  //   gender: 'N',\n  // },\n  Cinderace: {\n    types: ['Fire'],\n    bs: {hp: 80, at: 116, df: 75, sa: 65, sd: 75, sp: 119},\n    weightkg: 33,\n    abilities: {0: 'Blaze'},\n    otherFormes: ['Cinderace-Gmax'],\n  },\n  // 'Cinderace-Gmax': {\n  //   types: ['Fire'],\n  //   bs: {hp: 80, at: 116, df: 75, sa: 65, sd: 75, sp: 119},\n  //   weightkg: 0,\n  //   abilities: {0: 'Blaze'},\n  //   baseSpecies: 'Cinderace',\n  // },\n  // Clobbopus: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 68, df: 60, sa: 50, sd: 50, sp: 32},\n  //   weightkg: 4,\n  //   abilities: {0: 'Limber'},\n  //   nfe: true,\n  // },\n  Coalossal: {\n    types: ['Rock', 'Fire'],\n    bs: {hp: 110, at: 80, df: 120, sa: 80, sd: 90, sp: 30},\n    weightkg: 310.5,\n    abilities: {0: 'Steam Engine'},\n    otherFormes: ['Coalossal-Gmax'],\n  },\n  // 'Coalossal-Gmax': {\n  //   types: ['Rock', 'Fire'],\n  //   bs: {hp: 110, at: 80, df: 120, sa: 80, sd: 90, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Steam Engine'},\n  //   baseSpecies: 'Coalossal',\n  // },\n  Copperajah: {\n    types: ['Steel'],\n    bs: {hp: 122, at: 130, df: 69, sa: 80, sd: 69, sp: 30},\n    weightkg: 650,\n    abilities: {0: 'Sheer Force'},\n    otherFormes: ['Copperajah-Gmax'],\n  },\n  // 'Copperajah-Gmax': {\n  //   types: ['Steel'],\n  //   bs: {hp: 122, at: 130, df: 69, sa: 80, sd: 69, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sheer Force'},\n  //   baseSpecies: 'Copperajah',\n  // },\n  // 'Corsola-Galar': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 55, df: 100, sa: 65, sd: 100, sp: 30},\n  //   weightkg: 0.5,\n  //   abilities: {0: 'Weak Armor'},\n  //   nfe: true,\n  //   baseSpecies: 'Corsola',\n  // },\n  Corviknight: {\n    types: ['Flying', 'Steel'],\n    bs: {hp: 98, at: 87, df: 105, sa: 53, sd: 85, sp: 67},\n    weightkg: 75,\n    abilities: {0: 'Pressure'},\n    otherFormes: ['Corviknight-Gmax'],\n  },\n  // 'Corviknight-Gmax': {\n  //   types: ['Flying', 'Steel'],\n  //   bs: {hp: 98, at: 87, df: 105, sa: 53, sd: 85, sp: 67},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pressure'},\n  //   baseSpecies: 'Corviknight',\n  // },\n  Corvisquire: {\n    types: ['Flying'],\n    bs: {hp: 68, at: 67, df: 55, sa: 43, sd: 55, sp: 77},\n    weightkg: 16,\n    abilities: {0: 'Keen Eye'},\n    nfe: true,\n  },\n  // Cramorant: {\n  //   types: ['Flying', 'Water'],\n  //   bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n  //   weightkg: 18,\n  //   abilities: {0: 'Gulp Missile'},\n  //   otherFormes: ['Cramorant-Gorging', 'Cramorant-Gulping'],\n  // },\n  // 'Cramorant-Gorging': {\n  //   types: ['Flying', 'Water'],\n  //   bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n  //   weightkg: 18,\n  //   abilities: {0: 'Gulp Missile'},\n  //   baseSpecies: 'Cramorant',\n  // },\n  // 'Cramorant-Gulping': {\n  //   types: ['Flying', 'Water'],\n  //   bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n  //   weightkg: 18,\n  //   abilities: {0: 'Gulp Missile'},\n  //   baseSpecies: 'Cramorant',\n  // },\n  Cufant: {\n    types: ['Steel'],\n    bs: {hp: 72, at: 80, df: 49, sa: 40, sd: 49, sp: 40},\n    weightkg: 100,\n    abilities: {0: 'Sheer Force'},\n    nfe: true,\n  },\n  // Cursola: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 95, df: 50, sa: 145, sd: 130, sp: 30},\n  //   weightkg: 0.4,\n  //   abilities: {0: 'Weak Armor'},\n  // },\n  // 'Darmanitan-Galar': {\n  //   types: ['Ice'],\n  //   bs: {hp: 105, at: 140, df: 55, sa: 30, sd: 55, sp: 95},\n  //   weightkg: 120,\n  //   abilities: {0: 'Gorilla Tactics'},\n  //   baseSpecies: 'Darmanitan',\n  // },\n  // 'Darmanitan-Galar-Zen': {\n  //   types: ['Ice', 'Fire'],\n  //   bs: {hp: 105, at: 160, df: 55, sa: 30, sd: 55, sp: 135},\n  //   weightkg: 120,\n  //   abilities: {0: 'Zen Mode'},\n  //   baseSpecies: 'Darmanitan',\n  // },\n  // 'Darumaka-Galar': {\n  //   types: ['Ice'],\n  //   bs: {hp: 70, at: 90, df: 45, sa: 15, sd: 45, sp: 50},\n  //   weightkg: 40,\n  //   abilities: {0: 'Hustle'},\n  //   nfe: true,\n  //   baseSpecies: 'Darumaka',\n  // },\n  // Dottler: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 50, at: 35, df: 80, sa: 50, sd: 90, sp: 30},\n  //   weightkg: 19.5,\n  //   abilities: {0: 'Swarm'},\n  //   nfe: true,\n  // },\n  // Dracovish: {\n  //   types: ['Water', 'Dragon'],\n  //   bs: {hp: 90, at: 90, df: 100, sa: 70, sd: 80, sp: 75},\n  //   weightkg: 215,\n  //   abilities: {0: 'Water Absorb'},\n  //   gender: 'N',\n  // },\n  // Dracozolt: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 90, at: 100, df: 90, sa: 80, sd: 70, sp: 75},\n  //   weightkg: 190,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  Dragapult: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 88, at: 120, df: 75, sa: 100, sd: 75, sp: 142},\n    weightkg: 50,\n    abilities: {0: 'Clear Body'},\n  },\n  Drakloak: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 68, at: 80, df: 50, sa: 60, sd: 50, sp: 102},\n    weightkg: 11,\n    abilities: {0: 'Clear Body'},\n    nfe: true,\n  },\n  Drednaw: {\n    types: ['Water', 'Rock'],\n    bs: {hp: 90, at: 115, df: 90, sa: 48, sd: 68, sp: 74},\n    weightkg: 115.5,\n    abilities: {0: 'Strong Jaw'},\n    otherFormes: ['Drednaw-Gmax'],\n  },\n  // 'Drednaw-Gmax': {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 90, at: 115, df: 90, sa: 48, sd: 68, sp: 74},\n  //   weightkg: 0,\n  //   abilities: {0: 'Strong Jaw'},\n  //   baseSpecies: 'Drednaw',\n  // },\n  Dreepy: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 28, at: 60, df: 30, sa: 40, sd: 30, sp: 82},\n    weightkg: 2,\n    abilities: {0: 'Clear Body'},\n    nfe: true,\n  },\n  // Drizzile: {\n  //   types: ['Water'],\n  //   bs: {hp: 65, at: 60, df: 55, sa: 95, sd: 55, sp: 90},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Torrent'},\n  //   nfe: true,\n  // },\n  // Dubwool: {\n  //   types: ['Normal'],\n  //   bs: {hp: 72, at: 80, df: 100, sa: 60, sd: 90, sp: 88},\n  //   weightkg: 43,\n  //   abilities: {0: 'Fluffy'},\n  // },\n  // Duraludon: {\n  //   types: ['Steel', 'Dragon'],\n  //   bs: {hp: 70, at: 95, df: 115, sa: 120, sd: 50, sp: 85},\n  //   weightkg: 40,\n  //   abilities: {0: 'Light Metal'},\n  //   otherFormes: ['Duraludon-Gmax'],\n  // },\n  // 'Duraludon-Gmax': {\n  //   types: ['Steel', 'Dragon'],\n  //   bs: {hp: 70, at: 95, df: 115, sa: 120, sd: 50, sp: 85},\n  //   weightkg: 0,\n  //   abilities: {0: 'Light Metal'},\n  //   baseSpecies: 'Duraludon',\n  // },\n  // 'Eevee-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 55, df: 50, sa: 45, sd: 65, sp: 55},\n  //   weightkg: 0,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Eevee',\n  // },\n  Eiscue: {\n    types: ['Ice'],\n    bs: {hp: 75, at: 80, df: 110, sa: 65, sd: 90, sp: 50},\n    weightkg: 89,\n    abilities: {0: 'Ice Face'},\n    otherFormes: ['Eiscue-Noice'],\n  },\n  'Eiscue-Noice': {\n    types: ['Ice'],\n    bs: {hp: 75, at: 80, df: 70, sa: 65, sd: 50, sp: 130},\n    weightkg: 89,\n    abilities: {0: 'Ice Face'},\n    baseSpecies: 'Eiscue',\n  },\n  // Eldegoss: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 50, df: 90, sa: 80, sd: 120, sp: 60},\n  //   weightkg: 2.5,\n  //   abilities: {0: 'Cotton Down'},\n  // },\n  Eternatus: {\n    types: ['Poison', 'Dragon'],\n    bs: {hp: 140, at: 85, df: 95, sa: 145, sd: 95, sp: 130},\n    weightkg: 950,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    otherFormes: ['Eternatus-Eternamax'],\n  },\n  // 'Eternatus-Eternamax': {\n  //   types: ['Poison', 'Dragon'],\n  //   bs: {hp: 255, at: 115, df: 250, sa: 125, sd: 250, sp: 130},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Eternatus',\n  // },\n  Falinks: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 100, df: 100, sa: 70, sd: 60, sp: 75},\n    weightkg: 62,\n    abilities: {0: 'Battle Armor'},\n    gender: 'N',\n  },\n  // 'Farfetch\\u2019d-Galar': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 52, at: 95, df: 55, sa: 58, sd: 62, sp: 55},\n  //   weightkg: 15,\n  //   abilities: {0: 'Steadfast'},\n  //   nfe: true,\n  //   baseSpecies: 'Farfetch\\u2019d',\n  // },\n  Flapple: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 70, at: 110, df: 80, sa: 95, sd: 60, sp: 70},\n    weightkg: 1,\n    abilities: {0: 'Ripen'},\n    otherFormes: ['Flapple-Gmax'],\n  },\n  // 'Flapple-Gmax': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 70, at: 110, df: 80, sa: 95, sd: 60, sp: 70},\n  //   weightkg: 0,\n  //   abilities: {0: 'Ripen'},\n  //   baseSpecies: 'Flapple',\n  // },\n  Frosmoth: {\n    types: ['Ice', 'Bug'],\n    bs: {hp: 70, at: 65, df: 60, sa: 125, sd: 90, sp: 65},\n    weightkg: 42,\n    abilities: {0: 'Shield Dust'},\n  },\n  // 'Garbodor-Gmax': {\n  //   types: ['Poison'],\n  //   bs: {hp: 80, at: 95, df: 82, sa: 60, sd: 82, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Stench'},\n  //   baseSpecies: 'Garbodor',\n  // },\n  // 'Gengar-Gmax': {\n  //   types: ['Ghost', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 60, sa: 130, sd: 75, sp: 110},\n  //   weightkg: 0,\n  //   abilities: {0: 'Cursed Body'},\n  //   baseSpecies: 'Gengar',\n  // },\n  Glastrier: {\n    types: ['Ice'],\n    bs: {hp: 100, at: 145, df: 130, sa: 65, sd: 110, sp: 30},\n    weightkg: 800,\n    abilities: {0: 'Chilling Neigh'},\n    gender: 'N',\n  },\n  // Gossifleur: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 40, df: 60, sa: 40, sd: 60, sp: 10},\n  //   weightkg: 2.2,\n  //   abilities: {0: 'Cotton Down'},\n  //   nfe: true,\n  // },\n  // Grapploct: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 80, at: 118, df: 90, sa: 70, sd: 80, sp: 42},\n  //   weightkg: 39,\n  //   abilities: {0: 'Limber'},\n  // },\n  Greedent: {\n    types: ['Normal'],\n    bs: {hp: 120, at: 95, df: 95, sa: 55, sd: 75, sp: 20},\n    weightkg: 6,\n    abilities: {0: 'Cheek Pouch'},\n  },\n  Grimmsnarl: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 95, at: 120, df: 65, sa: 95, sd: 75, sp: 60},\n    weightkg: 61,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Grimmsnarl-Gmax'],\n  },\n  // 'Grimmsnarl-Gmax': {\n  //   types: ['Dark', 'Fairy'],\n  //   bs: {hp: 95, at: 120, df: 65, sa: 95, sd: 75, sp: 60},\n  //   weightkg: 0,\n  //   abilities: {0: 'Prankster'},\n  //   baseSpecies: 'Grimmsnarl',\n  // },\n  Grookey: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 65, df: 50, sa: 40, sd: 40, sp: 65},\n    weightkg: 5,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Hatenna: {\n    types: ['Psychic'],\n    bs: {hp: 42, at: 30, df: 45, sa: 56, sd: 53, sp: 39},\n    weightkg: 3.4,\n    abilities: {0: 'Healer'},\n    nfe: true,\n  },\n  Hatterene: {\n    types: ['Psychic', 'Fairy'],\n    bs: {hp: 57, at: 90, df: 95, sa: 136, sd: 103, sp: 29},\n    weightkg: 5.1,\n    abilities: {0: 'Healer'},\n    otherFormes: ['Hatterene-Gmax'],\n  },\n  // 'Hatterene-Gmax': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 57, at: 90, df: 95, sa: 136, sd: 103, sp: 29},\n  //   weightkg: 0,\n  //   abilities: {0: 'Healer'},\n  //   baseSpecies: 'Hatterene',\n  // },\n  Hattrem: {\n    types: ['Psychic'],\n    bs: {hp: 57, at: 40, df: 65, sa: 86, sd: 73, sp: 49},\n    weightkg: 4.8,\n    abilities: {0: 'Healer'},\n    nfe: true,\n  },\n  Impidimp: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 45, at: 45, df: 30, sa: 55, sd: 40, sp: 50},\n    weightkg: 5.5,\n    abilities: {0: 'Prankster'},\n    nfe: true,\n  },\n  'Indeedee-M': {\n    types: ['Psychic', 'Normal'],\n    bs: {hp: 60, at: 65, df: 55, sa: 105, sd: 95, sp: 95},\n    weightkg: 28,\n    abilities: {0: 'Inner Focus'},\n    otherFormes: ['Indeedee-F'],\n  },\n  'Indeedee-F': {\n    types: ['Psychic', 'Normal'],\n    bs: {hp: 70, at: 55, df: 65, sa: 95, sd: 105, sp: 85},\n    weightkg: 28,\n    abilities: {0: 'Own Tempo'},\n    baseSpecies: 'Indeedee-M',\n  },\n  Inteleon: {\n    types: ['Water'],\n    bs: {hp: 70, at: 85, df: 65, sa: 125, sd: 65, sp: 120},\n    weightkg: 45.2,\n    abilities: {0: 'Torrent'},\n    // otherFormes: ['Inteleon-Gmax'],\n  },\n  // 'Inteleon-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 70, at: 85, df: 65, sa: 125, sd: 65, sp: 120},\n  //   weightkg: 0,\n  //   abilities: {0: 'Torrent'},\n  //   baseSpecies: 'Inteleon',\n  // },\n  // 'Kingler-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 130, df: 115, sa: 50, sd: 50, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Hyper Cutter'},\n  //   baseSpecies: 'Kingler',\n  // },\n  'Kubfu': {\n    types: ['Fighting'],\n    bs: {hp: 60, at: 90, df: 60, sa: 53, sd: 50, sp: 72},\n    weightkg: 12,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  // 'Lapras-Gmax': {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 130, at: 85, df: 80, sa: 85, sd: 95, sp: 60},\n  //   weightkg: 0,\n  //   abilities: {0: 'Water Absorb'},\n  //   baseSpecies: 'Lapras',\n  // },\n  // 'Linoone-Galar': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 78, at: 70, df: 61, sa: 50, sd: 61, sp: 100},\n  //   weightkg: 32.5,\n  //   abilities: {0: 'Pickup'},\n  //   nfe: true,\n  //   baseSpecies: 'Linoone',\n  // },\n  // Magearna: {otherFormes: ['Magearna-Original']},\n  // 'Magearna-Original': {\n  //   baseSpecies: 'Magearna',\n  //   types: ['Steel', 'Fairy'],\n  //   bs: {hp: 80, at: 95, df: 115, sa: 130, sd: 115, sp: 65},\n  //   weightkg: 80.5,\n  //   gender: 'N',\n  //   abilities: {0: 'Soul-Heart'},\n  // },\n  // 'Machamp-Gmax': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 90, at: 130, df: 80, sa: 65, sd: 85, sp: 55},\n  //   weightkg: 0,\n  //   abilities: {0: 'Guts'},\n  //   baseSpecies: 'Machamp',\n  // },\n  // 'Melmetal-Gmax': {\n  //   types: ['Steel'],\n  //   bs: {hp: 135, at: 143, df: 143, sa: 80, sd: 65, sp: 34},\n  //   weightkg: 0,\n  //   abilities: {0: 'Iron Fist'},\n  //   baseSpecies: 'Melmetal',\n  //   gender: 'N',\n  // },\n  'Meowth-Galar': {\n    types: ['Steel'],\n    bs: {hp: 50, at: 65, df: 55, sa: 40, sd: 40, sp: 40},\n    weightkg: 7.5,\n    abilities: {0: 'Pickup'},\n    nfe: true,\n    baseSpecies: 'Meowth',\n  },\n  // 'Meowth-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 40, at: 45, df: 35, sa: 40, sd: 40, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Meowth',\n  // },\n  // Miasmaw: {\n  //   types: ['Bug', 'Dragon'],\n  //   bs: {hp: 85, at: 135, df: 60, sa: 88, sd: 105, sp: 99},\n  //   weightkg: 57,\n  //   abilities: {0: 'Neutralizing Gas'},\n  // },\n  // Miasmite: {\n  //   types: ['Bug', 'Dragon'],\n  //   bs: {hp: 40, at: 85, df: 60, sa: 52, sd: 52, sp: 44},\n  //   weightkg: 10.1,\n  //   abilities: {0: 'Neutralizing Gas'},\n  //   nfe: true,\n  // },\n  // Milcery: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 45, at: 40, df: 40, sa: 50, sd: 61, sp: 34},\n  //   weightkg: 0.3,\n  //   abilities: {0: 'Sweet Veil'},\n  //   nfe: true,\n  // },\n  'Moltres-Galar': {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 90, at: 85, df: 90, sa: 100, sd: 125, sp: 90},\n    weightkg: 66,\n    abilities: {0: 'Berserk'},\n    gender: 'N',\n    baseSpecies: 'Moltres',\n  },\n  Morgrem: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 65, at: 60, df: 45, sa: 75, sd: 55, sp: 70},\n    weightkg: 12.5,\n    abilities: {0: 'Prankster'},\n    nfe: true,\n  },\n  // Morpeko: {\n  //   types: ['Electric', 'Dark'],\n  //   bs: {hp: 58, at: 95, df: 58, sa: 70, sd: 58, sp: 97},\n  //   weightkg: 3,\n  //   abilities: {0: 'Hunger Switch'},\n  //   otherFormes: ['Morpeko-Hangry'],\n  // },\n  // 'Morpeko-Hangry': {\n  //   types: ['Electric', 'Dark'],\n  //   bs: {hp: 58, at: 95, df: 58, sa: 70, sd: 58, sp: 97},\n  //   weightkg: 3,\n  //   abilities: {0: 'Hunger Switch'},\n  //   baseSpecies: 'Morpeko',\n  // },\n  // 'Mr. Mime-Galar': {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 50, at: 65, df: 65, sa: 90, sd: 90, sp: 100},\n  //   weightkg: 56.8,\n  //   abilities: {0: 'Vital Spirit'},\n  //   nfe: true,\n  //   baseSpecies: 'Mr. Mime',\n  // },\n  // 'Mr. Rime': {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 80, at: 85, df: 75, sa: 110, sd: 100, sp: 70},\n  //   weightkg: 58.2,\n  //   abilities: {0: 'Tangled Feet'},\n  // },\n  // Nickit: {\n  //   types: ['Dark'],\n  //   bs: {hp: 40, at: 28, df: 28, sa: 47, sd: 52, sp: 50},\n  //   weightkg: 8.9,\n  //   abilities: {0: 'Run Away'},\n  //   nfe: true,\n  // },\n  // Obstagoon: {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 93, at: 90, df: 101, sa: 60, sd: 81, sp: 95},\n  //   weightkg: 46,\n  //   abilities: {0: 'Reckless'},\n  // },\n  // Orbeetle: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 45, df: 110, sa: 80, sd: 120, sp: 90},\n  //   weightkg: 40.8,\n  //   abilities: {0: 'Swarm'},\n  //   otherFormes: ['Orbeetle-Gmax'],\n  // },\n  // 'Orbeetle-Gmax': {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 45, df: 110, sa: 80, sd: 120, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Swarm'},\n  //   baseSpecies: 'Orbeetle',\n  // },\n  Perrserker: {\n    types: ['Steel'],\n    bs: {hp: 70, at: 110, df: 100, sa: 50, sd: 60, sp: 50},\n    weightkg: 28,\n    abilities: {0: 'Battle Armor'},\n  },\n  // 'Pikachu-Gmax': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-World': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  Pincurchin: {\n    types: ['Electric'],\n    bs: {hp: 48, at: 101, df: 95, sa: 91, sd: 85, sp: 15},\n    weightkg: 1,\n    abilities: {0: 'Lightning Rod'},\n  },\n  Polteageist: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 65, df: 65, sa: 134, sd: 114, sp: 70},\n    weightkg: 0.4,\n    abilities: {0: 'Weak Armor'},\n    // otherFormes: ['Polteageist-Antique'],\n    gender: 'N',\n  },\n  // 'Polteageist-Antique': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 65, df: 65, sa: 134, sd: 114, sp: 70},\n  //   weightkg: 0.4,\n  //   abilities: {0: 'Weak Armor'},\n  //   baseSpecies: 'Polteageist',\n  //   gender: 'N',\n  // },\n  // 'Ponyta-Galar': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 85, df: 55, sa: 65, sd: 65, sp: 90},\n  //   weightkg: 24,\n  //   abilities: {0: 'Run Away'},\n  //   nfe: true,\n  //   baseSpecies: 'Ponyta',\n  // },\n  Raboot: {\n    types: ['Fire'],\n    bs: {hp: 65, at: 86, df: 60, sa: 55, sd: 60, sp: 94},\n    weightkg: 9,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  // 'Rapidash-Galar': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 65, at: 100, df: 70, sa: 80, sd: 80, sp: 105},\n  //   weightkg: 80,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Rapidash',\n  // },\n  Regidrago: {\n    types: ['Dragon'],\n    bs: {hp: 200, at: 100, df: 50, sa: 100, sd: 50, sp: 80},\n    weightkg: 200,\n    abilities: {0: 'Dragon\\'s Maw'},\n    gender: 'N',\n  },\n  Regieleki: {\n    types: ['Electric'],\n    bs: {hp: 80, at: 100, df: 50, sa: 100, sd: 50, sp: 200},\n    weightkg: 145,\n    abilities: {0: 'Transistor'},\n    gender: 'N',\n  },\n  Rillaboom: {\n    types: ['Grass'],\n    bs: {hp: 100, at: 125, df: 90, sa: 60, sd: 70, sp: 85},\n    weightkg: 90,\n    abilities: {0: 'Overgrow'},\n    otherFormes: ['Rillaboom-Gmax'],\n  },\n  // 'Rillaboom-Gmax': {\n  //   types: ['Grass'],\n  //   bs: {hp: 100, at: 125, df: 90, sa: 60, sd: 70, sp: 85},\n  //   weightkg: 0,\n  //   abilities: {0: 'Overgrow'},\n  //   baseSpecies: 'Rillaboom',\n  // },\n  Rolycoly: {\n    types: ['Rock'],\n    bs: {hp: 30, at: 40, df: 50, sa: 40, sd: 50, sp: 30},\n    weightkg: 12,\n    abilities: {0: 'Steam Engine'},\n    nfe: true,\n  },\n  Rookidee: {\n    types: ['Flying'],\n    bs: {hp: 38, at: 47, df: 35, sa: 33, sd: 35, sp: 57},\n    weightkg: 1.8,\n    abilities: {0: 'Keen Eye'},\n    nfe: true,\n  },\n  // Runerigus: {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 58, at: 95, df: 145, sa: 50, sd: 105, sp: 30},\n  //   weightkg: 66.6,\n  //   abilities: {0: 'Wandering Spirit'},\n  // },\n  // Saharaja: {\n  //   types: ['Ground'],\n  //   bs: {hp: 70, at: 112, df: 105, sa: 65, sd: 123, sp: 78},\n  //   weightkg: 303.9,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  // Saharascal: {\n  //   types: ['Ground'],\n  //   bs: {hp: 50, at: 80, df: 65, sa: 45, sd: 90, sp: 70},\n  //   weightkg: 48,\n  //   abilities: {0: 'Water Absorb'},\n  //   nfe: true,\n  // },\n  Sandaconda: {\n    types: ['Ground'],\n    bs: {hp: 72, at: 107, df: 125, sa: 65, sd: 70, sp: 71},\n    weightkg: 65.5,\n    abilities: {0: 'Sand Spit'},\n    otherFormes: ['Sandaconda-Gmax'],\n  },\n  // 'Sandaconda-Gmax': {\n  //   types: ['Ground'],\n  //   bs: {hp: 72, at: 107, df: 125, sa: 65, sd: 70, sp: 71},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sand Spit'},\n  //   baseSpecies: 'Sandaconda',\n  // },\n  Scorbunny: {\n    types: ['Fire'],\n    bs: {hp: 50, at: 71, df: 40, sa: 40, sd: 40, sp: 69},\n    weightkg: 4.5,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Silicobra: {\n    types: ['Ground'],\n    bs: {hp: 52, at: 57, df: 75, sa: 35, sd: 50, sp: 46},\n    weightkg: 7.6,\n    abilities: {0: 'Sand Spit'},\n    nfe: true,\n  },\n  Sinistea: {\n    types: ['Ghost'],\n    bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 50},\n    weightkg: 0.2,\n    abilities: {0: 'Weak Armor'},\n    nfe: true,\n    // otherFormes: ['Sinistea-Antique'],\n    gender: 'N',\n  },\n  // 'Sinistea-Antique': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 50},\n  //   weightkg: 0.2,\n  //   abilities: {0: 'Weak Armor'},\n  //   nfe: true,\n  //   baseSpecies: 'Sinistea',\n  //   gender: 'N',\n  // },\n  // 'Sirfetch\\u2019d': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 62, at: 135, df: 95, sa: 68, sd: 82, sp: 65},\n  //   weightkg: 117,\n  //   abilities: {0: 'Steadfast'},\n  // },\n  // Sizzlipede: {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 50, at: 65, df: 45, sa: 50, sd: 50, sp: 45},\n  //   weightkg: 1,\n  //   abilities: {0: 'Flash Fire'},\n  //   nfe: true,\n  // },\n  Skwovet: {\n    types: ['Normal'],\n    bs: {hp: 70, at: 55, df: 55, sa: 35, sd: 35, sp: 25},\n    weightkg: 2.5,\n    abilities: {0: 'Cheek Pouch'},\n    nfe: true,\n  },\n  'Slowbro-Galar': {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 95, at: 100, df: 95, sa: 100, sd: 70, sp: 30},\n    weightkg: 70.5,\n    abilities: {0: 'Quick Draw'},\n    baseSpecies: 'Slowbro',\n  },\n  'Slowking-Galar': {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 95, at: 65, df: 80, sa: 110, sd: 110, sp: 30},\n    weightkg: 79.5,\n    abilities: {0: 'Curious Medicine'},\n    baseSpecies: 'Slowking',\n  },\n  'Slowpoke-Galar': {\n    types: ['Psychic'],\n    bs: {hp: 90, at: 65, df: 65, sa: 40, sd: 40, sp: 15},\n    weightkg: 36,\n    nfe: true,\n    abilities: {0: 'Gluttony'},\n    baseSpecies: 'Slowpoke',\n  },\n  // Solotl: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 68, at: 48, df: 34, sa: 72, sd: 24, sp: 84},\n  //   weightkg: 11.8,\n  //   nfe: true,\n  //   abilities: {0: 'Regenerator'},\n  // },\n  Snom: {\n    types: ['Ice', 'Bug'],\n    bs: {hp: 30, at: 25, df: 35, sa: 45, sd: 30, sp: 20},\n    weightkg: 3.8,\n    abilities: {0: 'Shield Dust'},\n    nfe: true,\n  },\n  // 'Snorlax-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 160, at: 110, df: 65, sa: 65, sd: 110, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Immunity'},\n  //   baseSpecies: 'Snorlax',\n  // },\n  Sobble: {\n    types: ['Water'],\n    bs: {hp: 50, at: 40, df: 40, sa: 70, sd: 40, sp: 70},\n    weightkg: 4,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Spectrier: {\n    types: ['Ghost'],\n    bs: {hp: 100, at: 65, df: 60, sa: 145, sd: 80, sp: 130},\n    weightkg: 44.5,\n    abilities: {0: 'Grim Neigh'},\n    gender: 'N',\n  },\n  Stonjourner: {\n    types: ['Rock'],\n    bs: {hp: 100, at: 125, df: 135, sa: 20, sd: 20, sp: 70},\n    weightkg: 520,\n    abilities: {0: 'Power Spot'},\n  },\n  // 'Stunfisk-Galar': {\n  //   types: ['Ground', 'Steel'],\n  //   bs: {hp: 109, at: 81, df: 99, sa: 66, sd: 84, sp: 32},\n  //   weightkg: 20.5,\n  //   abilities: {0: 'Mimicry'},\n  //   baseSpecies: 'Stunfisk',\n  // },\n  // Thievul: {\n  //   types: ['Dark'],\n  //   bs: {hp: 70, at: 58, df: 58, sa: 87, sd: 92, sp: 90},\n  //   weightkg: 19.9,\n  //   abilities: {0: 'Run Away'},\n  // },\n  Thwackey: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 85, df: 70, sa: 55, sd: 60, sp: 80},\n    weightkg: 14,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Toxel: {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 40, at: 38, df: 35, sa: 54, sd: 35, sp: 40},\n    weightkg: 11,\n    abilities: {0: 'Rattled'},\n    nfe: true,\n  },\n  'Toxtricity-Amped': {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n    weightkg: 40,\n    abilities: {0: 'Punk Rock'},\n    otherFormes: ['Toxtricity-Gmax', 'Toxtricity-Low-Key'],\n  },\n  // 'Toxtricity-Gmax': {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Punk Rock'},\n  //   baseSpecies: 'Toxtricity-Amped',\n  // },\n  'Toxtricity-Low-Key': {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n    weightkg: 40,\n    abilities: {0: 'Punk Rock'},\n    baseSpecies: 'Toxtricity-Amped',\n  },\n  'Urshifu-Single-Strike': {\n    types: ['Fighting', 'Dark'],\n    bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n    weightkg: 105,\n    abilities: {0: 'Unseen Fist'},\n    otherFormes: ['Urshifu-Gmax', 'Urshifu-Rapid-Strike', 'Urshifu-Rapid-Strike-Gmax'],\n  },\n  'Urshifu-Rapid-Strike': {\n    types: ['Fighting', 'Water'],\n    bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n    weightkg: 105,\n    abilities: {0: 'Unseen Fist'},\n    baseSpecies: 'Urshifu-Single-Strike',\n  },\n  // 'Urshifu-Rapid-Strike-Gmax': {\n  //   types: ['Fighting', 'Water'],\n  //   bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n  //   weightkg: 105,\n  //   abilities: {0: 'Unseen Fist'},\n  //   baseSpecies: 'Urshifu-Single-Strike',\n  // },\n  // 'Urshifu-Single-Strike-Gmax': {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n  //   weightkg: 0,\n  //   abilities: {0: 'Unseen Fist'},\n  //   baseSpecies: 'Urshifu-Single-Strike',\n  // },\n  // Venomicon: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 50, df: 113, sa: 118, sd: 90, sp: 64},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Stamina'},\n  //   otherFormes: ['Venomicon-Epilogue'],\n  //   gender: 'N',\n  // },\n  // 'Venomicon-Epilogue': {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 102, df: 85, sa: 62, sd: 85, sp: 101},\n  //   weightkg: 12.4,\n  //   abilities: {0: 'Tinted Lens'},\n  //   baseSpecies: 'Venomicon',\n  //   gender: 'N',\n  // },\n  // 'Venusaur-Gmax': {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 82, df: 83, sa: 100, sd: 100, sp: 80},\n  //   weightkg: 0,\n  //   abilities: {0: 'Overgrow'},\n  //   baseSpecies: 'Venusaur',\n  // },\n  // 'Weezing-Galar': {\n  //   types: ['Poison', 'Fairy'],\n  //   bs: {hp: 65, at: 90, df: 120, sa: 85, sd: 70, sp: 60},\n  //   weightkg: 16,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Weezing',\n  // },\n  // Wooloo: {\n  //   types: ['Normal'],\n  //   bs: {hp: 42, at: 40, df: 55, sa: 40, sd: 45, sp: 48},\n  //   weightkg: 6,\n  //   abilities: {0: 'Fluffy'},\n  //   nfe: true,\n  // },\n  // 'Yamask-Galar': {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 38, at: 55, df: 85, sa: 30, sd: 65, sp: 30},\n  //   weightkg: 1.5,\n  //   abilities: {0: 'Wandering Spirit'},\n  //   nfe: true,\n  //   baseSpecies: 'Yamask',\n  // },\n  // Yamper: {\n  //   types: ['Electric'],\n  //   bs: {hp: 59, at: 45, df: 50, sa: 40, sd: 50, sp: 26},\n  //   weightkg: 13.5,\n  //   abilities: {0: 'Ball Fetch'},\n  //   nfe: true,\n  // },\n  Zacian: {\n    types: ['Fairy'],\n    bs: {hp: 92, at: 130, df: 115, sa: 80, sd: 115, sp: 138},\n    weightkg: 110,\n    abilities: {0: 'Intrepid Sword'},\n    gender: 'N',\n    otherFormes: ['Zacian-Crowned'],\n  },\n  'Zacian-Crowned': {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 92, at: 170, df: 115, sa: 80, sd: 115, sp: 148},\n    weightkg: 355,\n    abilities: {0: 'Intrepid Sword'},\n    baseSpecies: 'Zacian',\n    gender: 'N',\n  },\n  Zamazenta: {\n    types: ['Fighting'],\n    bs: {hp: 92, at: 130, df: 115, sa: 80, sd: 115, sp: 138},\n    weightkg: 210,\n    abilities: {0: 'Dauntless Shield'},\n    gender: 'N',\n    otherFormes: ['Zamazenta-Crowned'],\n  },\n  'Zamazenta-Crowned': {\n    types: ['Fighting', 'Steel'],\n    bs: {hp: 92, at: 130, df: 145, sa: 80, sd: 145, sp: 128},\n    weightkg: 785,\n    abilities: {0: 'Dauntless Shield'},\n    baseSpecies: 'Zamazenta',\n    gender: 'N',\n  },\n  'Zapdos-Galar': {\n    types: ['Fighting', 'Flying'],\n    bs: {hp: 90, at: 125, df: 90, sa: 85, sd: 90, sp: 100},\n    weightkg: 58.2,\n    abilities: {0: 'Defiant'},\n    gender: 'N',\n    baseSpecies: 'Zapdos',\n  },\n  Zarude: {\n    types: ['Dark', 'Grass'],\n    bs: {hp: 105, at: 120, df: 105, sa: 70, sd: 95, sp: 105},\n    weightkg: 70,\n    abilities: {0: 'Leaf Guard'},\n    gender: 'N',\n    otherFormes: ['Zarude-Dada'],\n  },\n  'Zarude-Dada': {\n    types: ['Dark', 'Grass'],\n    bs: {hp: 105, at: 120, df: 105, sa: 70, sd: 95, sp: 105},\n    weightkg: 70,\n    abilities: {0: 'Leaf Guard'},\n    baseSpecies: 'Zarude',\n    gender: 'N',\n  },\n  // 'Zigzagoon-Galar': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 38, at: 30, df: 41, sa: 30, sd: 41, sp: 60},\n  //   weightkg: 17.5,\n  //   abilities: {0: 'Pickup'},\n  //   nfe: true,\n  //   baseSpecies: 'Zigzagoon',\n  // },\n};\n\nconst SS: {[name: string]: SpeciesData} = extend(true, {}, SM, SS_PATCH);\n\n// delete SS['Pikachu-Starter'];\n// delete SS['Eevee-Starter'];\n\nconst PLA_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Arcanine: {otherFormes: ['Arcanine-Hisui']},\n  Avalugg: {otherFormes: ['Avalugg-Hisui']},\n  'Basculin': {otherFormes: ['Basculin-Blue-Striped', 'Basculin-White-Striped']},\n  Braviary: {otherFormes: ['Braviary-Hisui']},\n  Decidueye: {otherFormes: ['Decidueye-Hisui']},\n  Dialga: {otherFormes: ['Dialga-Origin']},\n  Electrode: {otherFormes: ['Electrode-Hisui']},\n  Goodra: {otherFormes: ['Goodra-Hisui']},\n  Growlithe: {otherFormes: ['Growlithe-Hisui']},\n  Lilligant: {otherFormes: ['Lilligant-Hisui']},\n  Palkia: {otherFormes: ['Palkia-Origin']},\n  Qwilfish: {otherFormes: ['Qwilfish-Hisui']},\n  Samurott: {otherFormes: ['Samurott-Hisui']},\n  Sliggoo: {otherFormes: ['Sliggoo-Hisui']},\n  Sneasel: {otherFormes: ['Sneasel-Hisui']},\n  Stantler: {nfe: true},\n  Typhlosion: {otherFormes: ['Typhlosion-Hisui']},\n  Ursaring: {nfe: true},\n  Voltorb: {otherFormes: ['Voltorb-Hisui']},\n  Zoroark: {otherFormes: ['Zoroark-Hisui']},\n  Zorua: {otherFormes: ['Zorua-Hisui']},\n  'Arcanine-Hisui': {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 95, at: 115, df: 80, sa: 95, sd: 80, sp: 90},\n    weightkg: 168,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Arcanine',\n  },\n  'Avalugg-Hisui': {\n    types: ['Ice', 'Rock'],\n    bs: {hp: 95, at: 127, df: 184, sa: 34, sd: 36, sp: 38},\n    weightkg: 262.4,\n    abilities: {0: 'Strong Jaw'},\n    baseSpecies: 'Avalugg',\n  },\n  'Basculegion-M': {\n    types: ['Water', 'Ghost'],\n    bs: {hp: 120, at: 112, df: 65, sa: 80, sd: 75, sp: 78},\n    weightkg: 110,\n    abilities: {0: 'Swift Swim'},\n    otherFormes: ['Basculegion-F'],\n  },\n  'Basculegion-F': {\n    types: ['Water', 'Ghost'],\n    bs: {hp: 120, at: 92, df: 65, sa: 100, sd: 75, sp: 78},\n    weightkg: 110,\n    abilities: {0: 'Swift Swim'},\n    baseSpecies: 'Basculegion-M',\n  },\n  'Basculin-White-Striped': {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Rattled'},\n    baseSpecies: 'Basculin',\n    nfe: true,\n  },\n  'Braviary-Hisui': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 110, at: 83, df: 70, sa: 112, sd: 70, sp: 65},\n    weightkg: 43.4,\n    abilities: {0: 'Keen Eye'},\n    baseSpecies: 'Braviary',\n  },\n  'Decidueye-Hisui': {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 88, at: 112, df: 80, sa: 95, sd: 95, sp: 60},\n    weightkg: 37,\n    abilities: {0: 'Overgrow'},\n    baseSpecies: 'Decidueye',\n  },\n  'Dialga-Origin': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 100, at: 100, df: 120, sa: 150, sd: 120, sp: 90},\n    weightkg: 850,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n    baseSpecies: 'Dialga',\n  },\n  'Electrode-Hisui': {\n    types: ['Electric', 'Grass'],\n    bs: {hp: 60, at: 50, df: 70, sa: 80, sd: 80, sp: 150},\n    weightkg: 71,\n    gender: 'N',\n    abilities: {0: 'Soundproof'},\n    baseSpecies: 'Electrode',\n  },\n  Enamorus: {\n    types: ['Fairy', 'Flying'],\n    bs: {hp: 74, at: 115, df: 70, sa: 135, sd: 80, sp: 106},\n    weightkg: 48,\n    abilities: {0: 'Cute Charm'},\n    otherFormes: ['Enamorus-Therian'],\n  },\n  'Enamorus-Therian': {\n    types: ['Fairy', 'Flying'],\n    bs: {hp: 74, at: 115, df: 110, sa: 135, sd: 100, sp: 46},\n    weightkg: 48,\n    abilities: {0: 'Overcoat'},\n    baseSpecies: 'Enamorus',\n  },\n  'Goodra-Hisui': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 80, at: 100, df: 100, sa: 110, sd: 150, sp: 60},\n    weightkg: 334.1,\n    abilities: {0: 'Sap Sipper'},\n    baseSpecies: 'Goodra',\n  },\n  'Growlithe-Hisui': {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 60, at: 75, df: 45, sa: 65, sd: 50, sp: 55},\n    weightkg: 22.7,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Growlithe',\n    nfe: true,\n  },\n  Kleavor: {\n    types: ['Bug', 'Rock'],\n    bs: {hp: 70, at: 130, df: 95, sa: 45, sd: 75, sp: 85},\n    weightkg: 89,\n    abilities: {0: 'Swarm'},\n  },\n  'Lilligant-Hisui': {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 70, at: 105, df: 75, sa: 50, sd: 75, sp: 105},\n    weightkg: 19.2,\n    abilities: {0: 'Chlorophyll'},\n    baseSpecies: 'Lilligant',\n  },\n  Overqwil: {\n    types: ['Dark', 'Poison'],\n    bs: {hp: 85, at: 115, df: 95, sa: 65, sd: 65, sp: 85},\n    weightkg: 3.9,\n    abilities: {0: 'Poison Point'},\n  },\n  'Palkia-Origin': {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 90, at: 100, df: 100, sa: 150, sd: 120, sp: 120},\n    weightkg: 660,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n    baseSpecies: 'Palkia',\n  },\n  'Qwilfish-Hisui': {\n    types: ['Dark', 'Poison'],\n    bs: {hp: 65, at: 95, df: 85, sa: 55, sd: 55, sp: 85},\n    weightkg: 3.9,\n    abilities: {0: 'Poison Point'},\n    baseSpecies: 'Qwilfish',\n    nfe: true,\n  },\n  'Samurott-Hisui': {\n    types: ['Water', 'Dark'],\n    bs: {hp: 90, at: 108, df: 80, sa: 100, sd: 65, sp: 85},\n    weightkg: 58.2,\n    abilities: {0: 'Torrent'},\n    baseSpecies: 'Samurott',\n  },\n  'Sliggoo-Hisui': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 58, at: 75, df: 83, sa: 83, sd: 113, sp: 40},\n    weightkg: 68.5,\n    abilities: {0: 'Sap Sipper'},\n    baseSpecies: 'Sliggoo',\n    nfe: true,\n  },\n  'Sneasel-Hisui': {\n    types: ['Fighting', 'Poison'],\n    bs: {hp: 55, at: 95, df: 55, sa: 35, sd: 75, sp: 115},\n    weightkg: 27,\n    abilities: {0: 'Inner Focus'},\n    baseSpecies: 'Sneasel',\n    nfe: true,\n  },\n  Sneasler: {\n    types: ['Fighting', 'Poison'],\n    bs: {hp: 80, at: 130, df: 60, sa: 40, sd: 80, sp: 120},\n    weightkg: 43,\n    abilities: {0: 'Pressure'},\n  },\n  'Typhlosion-Hisui': {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 73, at: 84, df: 78, sa: 119, sd: 85, sp: 95},\n    weightkg: 69.8,\n    abilities: {0: 'Blaze'},\n    baseSpecies: 'Typhlosion',\n  },\n  Ursaluna: {\n    types: ['Ground', 'Normal'],\n    bs: {hp: 130, at: 140, df: 105, sa: 45, sd: 80, sp: 50},\n    weightkg: 290,\n    abilities: {0: 'Guts'},\n  },\n  'Voltorb-Hisui': {\n    types: ['Electric', 'Grass'],\n    bs: {hp: 40, at: 30, df: 50, sa: 55, sd: 55, sp: 100},\n    weightkg: 13,\n    gender: 'N',\n    abilities: {0: 'Soundproof'},\n    baseSpecies: 'Voltorb',\n    nfe: true,\n  },\n  Wyrdeer: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 103, at: 105, df: 72, sa: 105, sd: 75, sp: 65},\n    weightkg: 95.1,\n    abilities: {0: 'Intimidate'},\n  },\n  'Zoroark-Hisui': {\n    types: ['Normal', 'Ghost'],\n    bs: {hp: 55, at: 100, df: 60, sa: 125, sd: 60, sp: 110},\n    weightkg: 73,\n    abilities: {0: 'Illusion'},\n    baseSpecies: 'Zoroark',\n  },\n  'Zorua-Hisui': {\n    types: ['Normal', 'Ghost'],\n    bs: {hp: 35, at: 60, df: 40, sa: 85, sd: 40, sp: 70},\n    weightkg: 12.5,\n    abilities: {0: 'Illusion'},\n    baseSpecies: 'Zorua',\n    nfe: true,\n  },\n};\n\nconst SV_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Bisharp: {nfe: true},\n  Cresselia: {bs: {df: 110, sd: 120}},\n  Dunsparce: {nfe: true},\n  Girafarig: {nfe: true},\n  Primeape: {nfe: true},\n  Tauros: {otherFormes: ['Tauros-Paldea-Aqua-Breed', 'Tauros-Paldea-Blaze-Breed', 'Tauros-Paldea-Combat-Breed']},\n  Wooper: {otherFormes: ['Wooper-Paldea']},\n  Zacian: {bs: {at: 120}},\n  'Zacian-Crowned': {bs: {at: 150}},\n  Zamazenta: {bs: {at: 120}},\n  'Zamazenta-Crowned': {bs: {at: 120, df: 140, sd: 140}},\n  Annihilape: {\n    types: ['Fighting', 'Ghost'],\n    bs: {hp: 110, at: 115, df: 80, sa: 50, sd: 90, sp: 90},\n    weightkg: 56,\n    abilities: {0: 'Vital Spirit'},\n  },\n  Arboliva: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 78, at: 69, df: 90, sa: 125, sd: 109, sp: 39},\n    weightkg: 48.2,\n    abilities: {0: 'Seed Sower'},\n  },\n  Arctibax: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 90, at: 95, df: 66, sa: 45, sd: 65, sp: 62},\n    weightkg: 30,\n    abilities: {0: 'Thermal Exchange'},\n    nfe: true,\n  },\n  Armarouge: {\n    types: ['Fire', 'Psychic'],\n    bs: {hp: 85, at: 60, df: 100, sa: 125, sd: 80, sp: 75},\n    weightkg: 85,\n    abilities: {0: 'Flash Fire'},\n  },\n  Baxcalibur: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 115, at: 145, df: 92, sa: 75, sd: 86, sp: 87},\n    weightkg: 210,\n    abilities: {0: 'Thermal Exchange'},\n  },\n  Bellibolt: {\n    types: ['Electric'],\n    bs: {hp: 109, at: 64, df: 91, sa: 103, sd: 83, sp: 45},\n    weightkg: 113,\n    abilities: {0: 'Electromorphosis'},\n  },\n  Bombirdier: {\n    types: ['Flying', 'Dark'],\n    bs: {hp: 70, at: 103, df: 85, sa: 60, sd: 85, sp: 82},\n    weightkg: 42.9,\n    abilities: {0: 'Big Pecks'},\n  },\n  Brambleghast: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 55, at: 115, df: 70, sa: 80, sd: 70, sp: 90},\n    weightkg: 6,\n    abilities: {0: 'Wind Rider'},\n  },\n  Bramblin: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 40, at: 65, df: 30, sa: 45, sd: 35, sp: 60},\n    weightkg: 0.6,\n    abilities: {0: 'Wind Rider'},\n    nfe: true,\n  },\n  'Brute Bonnet': {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 111, at: 127, df: 99, sa: 79, sd: 99, sp: 55},\n    weightkg: 21,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Capsakid: {\n    types: ['Grass'],\n    bs: {hp: 52, at: 62, df: 40, sa: 62, sd: 40, sp: 50},\n    weightkg: 3,\n    abilities: {0: 'Chlorophyll'},\n    nfe: true,\n  },\n  Ceruledge: {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 75, at: 125, df: 80, sa: 60, sd: 100, sp: 85},\n    weightkg: 62,\n    abilities: {0: 'Flash Fire'},\n  },\n  Cetitan: {\n    types: ['Ice'],\n    bs: {hp: 170, at: 113, df: 65, sa: 45, sd: 55, sp: 73},\n    weightkg: 700,\n    abilities: {0: 'Thick Fat'},\n  },\n  Cetoddle: {\n    types: ['Ice'],\n    bs: {hp: 108, at: 68, df: 45, sa: 30, sd: 40, sp: 43},\n    weightkg: 45,\n    abilities: {0: 'Thick Fat'},\n    nfe: true,\n  },\n  Charcadet: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 50, df: 40, sa: 50, sd: 40, sp: 35},\n    weightkg: 10.5,\n    abilities: {0: 'Flash Fire'},\n    nfe: true,\n  },\n  'Chi-Yu': {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 55, at: 80, df: 80, sa: 135, sd: 120, sp: 100},\n    weightkg: 4.9,\n    gender: 'N',\n    abilities: {0: 'Beads of Ruin'},\n  },\n  'Chien-Pao': {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 80, at: 120, df: 80, sa: 90, sd: 65, sp: 135},\n    weightkg: 152.2,\n    gender: 'N',\n    abilities: {0: 'Sword of Ruin'},\n  },\n  Clodsire: {\n    types: ['Poison', 'Ground'],\n    bs: {hp: 130, at: 75, df: 60, sa: 45, sd: 100, sp: 20},\n    weightkg: 223,\n    abilities: {0: 'Poison Point'},\n  },\n  Crocalor: {\n    types: ['Fire'],\n    bs: {hp: 81, at: 55, df: 78, sa: 90, sd: 58, sp: 49},\n    weightkg: 30.7,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Cyclizar: {\n    types: ['Dragon', 'Normal'],\n    bs: {hp: 70, at: 95, df: 65, sa: 85, sd: 65, sp: 121},\n    weightkg: 63,\n    abilities: {0: 'Shed Skin'},\n  },\n  Dachsbun: {\n    types: ['Fairy'],\n    bs: {hp: 57, at: 80, df: 115, sa: 50, sd: 80, sp: 95},\n    weightkg: 14.9,\n    abilities: {0: 'Well-Baked Body'},\n  },\n  Dolliv: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 52, at: 53, df: 60, sa: 78, sd: 78, sp: 33},\n    weightkg: 11.9,\n    abilities: {0: 'Early Bird'},\n    nfe: true,\n  },\n  Dondozo: {\n    types: ['Water'],\n    bs: {hp: 150, at: 100, df: 115, sa: 65, sd: 65, sp: 35},\n    weightkg: 220,\n    abilities: {0: 'Unaware'},\n  },\n  Dudunsparce: {\n    types: ['Normal'],\n    bs: {hp: 125, at: 100, df: 80, sa: 85, sd: 75, sp: 55},\n    weightkg: 39.2,\n    abilities: {0: 'Serene Grace'},\n    otherFormes: ['Dudunsparce-Three-Segment'],\n  },\n  'Dudunsparce-Three-Segment': {\n    types: ['Normal'],\n    bs: {hp: 125, at: 100, df: 80, sa: 85, sd: 75, sp: 55},\n    weightkg: 47.4,\n    abilities: {0: 'Serene Grace'},\n    baseSpecies: 'Dudunsparce',\n  },\n  Espathra: {\n    types: ['Psychic'],\n    bs: {hp: 95, at: 60, df: 60, sa: 101, sd: 60, sp: 105},\n    weightkg: 90,\n    abilities: {0: 'Opportunist'},\n  },\n  Farigiraf: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 120, at: 90, df: 70, sa: 110, sd: 70, sp: 60},\n    weightkg: 160,\n    abilities: {0: 'Cud Chew'},\n  },\n  Fidough: {\n    types: ['Fairy'],\n    bs: {hp: 37, at: 55, df: 70, sa: 30, sd: 55, sp: 65},\n    weightkg: 10.9,\n    abilities: {0: 'Own Tempo'},\n    nfe: true,\n  },\n  Finizen: {\n    types: ['Water'],\n    bs: {hp: 70, at: 45, df: 40, sa: 45, sd: 40, sp: 75},\n    weightkg: 60.2,\n    abilities: {0: 'Water Veil'},\n    nfe: true,\n  },\n  Flamigo: {\n    types: ['Flying', 'Fighting'],\n    bs: {hp: 82, at: 115, df: 74, sa: 75, sd: 64, sp: 90},\n    weightkg: 37,\n    abilities: {0: 'Scrappy'},\n  },\n  Flittle: {\n    types: ['Psychic'],\n    bs: {hp: 30, at: 35, df: 30, sa: 55, sd: 30, sp: 75},\n    weightkg: 1.5,\n    abilities: {0: 'Anticipation'},\n    nfe: true,\n  },\n  Floragato: {\n    types: ['Grass'],\n    bs: {hp: 61, at: 80, df: 63, sa: 60, sd: 63, sp: 83},\n    weightkg: 12.2,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  'Flutter Mane': {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 55, df: 55, sa: 135, sd: 135, sp: 135},\n    weightkg: 4,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Frigibax: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 65, at: 75, df: 45, sa: 35, sd: 45, sp: 55},\n    weightkg: 17,\n    abilities: {0: 'Thermal Exchange'},\n    nfe: true,\n  },\n  Fuecoco: {\n    types: ['Fire'],\n    bs: {hp: 67, at: 45, df: 59, sa: 63, sd: 40, sp: 36},\n    weightkg: 9.8,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Garganacl: {\n    types: ['Rock'],\n    bs: {hp: 100, at: 100, df: 130, sa: 45, sd: 90, sp: 35},\n    weightkg: 240,\n    abilities: {0: 'Purifying Salt'},\n  },\n  Gholdengo: {\n    types: ['Steel', 'Ghost'],\n    bs: {hp: 87, at: 60, df: 95, sa: 133, sd: 91, sp: 84},\n    weightkg: 30,\n    gender: 'N',\n    abilities: {0: 'Good as Gold'},\n  },\n  Gimmighoul: {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 30, df: 70, sa: 75, sd: 70, sp: 10},\n    weightkg: 5,\n    gender: 'N',\n    abilities: {0: 'Rattled'},\n    nfe: true,\n    otherFormes: ['Gimmighoul-Roaming'],\n  },\n  'Gimmighoul-Roaming': {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 30, df: 25, sa: 75, sd: 45, sp: 80},\n    weightkg: 0.1,\n    gender: 'N',\n    abilities: {0: 'Run Away'},\n    nfe: true,\n    baseSpecies: 'Gimmighoul',\n  },\n  Glimmet: {\n    types: ['Rock', 'Poison'],\n    bs: {hp: 48, at: 35, df: 42, sa: 105, sd: 60, sp: 60},\n    weightkg: 8,\n    abilities: {0: 'Toxic Debris'},\n    nfe: true,\n  },\n  Glimmora: {\n    types: ['Rock', 'Poison'],\n    bs: {hp: 83, at: 55, df: 90, sa: 130, sd: 81, sp: 86},\n    weightkg: 45,\n    abilities: {0: 'Toxic Debris'},\n  },\n  Grafaiai: {\n    types: ['Poison', 'Normal'],\n    bs: {hp: 63, at: 95, df: 65, sa: 80, sd: 72, sp: 110},\n    weightkg: 27.2,\n    abilities: {0: 'Unburden'},\n  },\n  'Great Tusk': {\n    types: ['Ground', 'Fighting'],\n    bs: {hp: 115, at: 131, df: 131, sa: 53, sd: 53, sp: 87},\n    weightkg: 320,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Greavard: {\n    types: ['Ghost'],\n    bs: {hp: 50, at: 61, df: 60, sa: 30, sd: 55, sp: 34},\n    weightkg: 35,\n    abilities: {0: 'Pickup'},\n    nfe: true,\n  },\n  Houndstone: {\n    types: ['Ghost'],\n    bs: {hp: 72, at: 101, df: 100, sa: 50, sd: 97, sp: 68},\n    weightkg: 15,\n    abilities: {0: 'Sand Rush'},\n  },\n  'Iron Bundle': {\n    types: ['Ice', 'Water'],\n    bs: {hp: 56, at: 80, df: 114, sa: 124, sd: 60, sp: 136},\n    weightkg: 11,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Hands': {\n    types: ['Fighting', 'Electric'],\n    bs: {hp: 154, at: 140, df: 108, sa: 50, sd: 68, sp: 50},\n    weightkg: 380.7,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Jugulis': {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 94, at: 80, df: 86, sa: 122, sd: 80, sp: 108},\n    weightkg: 111,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Leaves': {\n    types: ['Grass', 'Psychic'],\n    bs: {hp: 90, at: 130, df: 88, sa: 70, sd: 108, sp: 104},\n    weightkg: 125,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Moth': {\n    types: ['Fire', 'Poison'],\n    bs: {hp: 80, at: 70, df: 60, sa: 140, sd: 110, sp: 110},\n    weightkg: 36,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Thorns': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 100, at: 134, df: 110, sa: 70, sd: 84, sp: 72},\n    weightkg: 303,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Treads': {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 90, at: 112, df: 120, sa: 72, sd: 70, sp: 106},\n    weightkg: 240,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Valiant': {\n    types: ['Fairy', 'Fighting'],\n    bs: {hp: 74, at: 130, df: 90, sa: 120, sd: 60, sp: 116},\n    weightkg: 35,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  Kilowattrel: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 70, at: 70, df: 60, sa: 105, sd: 60, sp: 125},\n    weightkg: 38.6,\n    abilities: {0: 'Wind Power'},\n  },\n  Kingambit: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 100, at: 135, df: 120, sa: 60, sd: 85, sp: 50},\n    weightkg: 120,\n    abilities: {0: 'Defiant'},\n  },\n  Klawf: {\n    types: ['Rock'],\n    bs: {hp: 70, at: 100, df: 115, sa: 35, sd: 55, sp: 75},\n    weightkg: 79,\n    abilities: {0: 'Anger Shell'},\n  },\n  Koraidon: {\n    types: ['Fighting', 'Dragon'],\n    bs: {hp: 100, at: 135, df: 115, sa: 85, sd: 100, sp: 135},\n    weightkg: 303,\n    gender: 'N',\n    abilities: {0: 'Orichalcum Pulse'},\n  },\n  Lechonk: {\n    types: ['Normal'],\n    bs: {hp: 54, at: 45, df: 40, sa: 35, sd: 45, sp: 35},\n    weightkg: 10.2,\n    abilities: {0: 'Aroma Veil'},\n    nfe: true,\n  },\n  Lokix: {\n    types: ['Bug', 'Dark'],\n    bs: {hp: 71, at: 102, df: 78, sa: 52, sd: 55, sp: 92},\n    weightkg: 17.5,\n    abilities: {0: 'Swarm'},\n  },\n  Mabosstiff: {\n    types: ['Dark'],\n    bs: {hp: 80, at: 120, df: 90, sa: 60, sd: 70, sp: 85},\n    weightkg: 61,\n    abilities: {0: 'Intimidate'},\n  },\n  Maschiff: {\n    types: ['Dark'],\n    bs: {hp: 60, at: 78, df: 60, sa: 40, sd: 51, sp: 51},\n    weightkg: 16,\n    abilities: {0: 'Intimidate'},\n    nfe: true,\n  },\n  Maushold: {\n    types: ['Normal'],\n    bs: {hp: 74, at: 75, df: 70, sa: 65, sd: 75, sp: 111},\n    weightkg: 2.3,\n    gender: 'N',\n    abilities: {0: 'Friend Guard'},\n    otherFormes: ['Maushold-Four'],\n  },\n  Meowscarada: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 76, at: 110, df: 70, sa: 81, sd: 70, sp: 123},\n    weightkg: 31.2,\n    abilities: {0: 'Overgrow'},\n  },\n  Miraidon: {\n    types: ['Electric', 'Dragon'],\n    bs: {hp: 100, at: 85, df: 100, sa: 135, sd: 115, sp: 135},\n    weightkg: 240,\n    gender: 'N',\n    abilities: {0: 'Hadron Engine'},\n  },\n  Nacli: {\n    types: ['Rock'],\n    bs: {hp: 55, at: 55, df: 75, sa: 35, sd: 35, sp: 25},\n    weightkg: 16,\n    abilities: {0: 'Purifying Salt'},\n    nfe: true,\n  },\n  Naclstack: {\n    types: ['Rock'],\n    bs: {hp: 60, at: 60, df: 100, sa: 35, sd: 65, sp: 35},\n    weightkg: 105,\n    abilities: {0: 'Purifying Salt'},\n    nfe: true,\n  },\n  Nymble: {\n    types: ['Bug'],\n    bs: {hp: 33, at: 46, df: 40, sa: 21, sd: 25, sp: 45},\n    weightkg: 1,\n    abilities: {0: 'Swarm'},\n    nfe: true,\n  },\n  Oinkologne: {\n    types: ['Normal'],\n    bs: {hp: 110, at: 100, df: 75, sa: 59, sd: 80, sp: 65},\n    weightkg: 120,\n    abilities: {0: 'Lingering Aroma'},\n    otherFormes: ['Oinkologne-F'],\n  },\n  'Oinkologne-F': {\n    types: ['Normal'],\n    bs: {hp: 115, at: 90, df: 70, sa: 59, sd: 90, sp: 65},\n    weightkg: 120,\n    abilities: {0: 'Aroma Veil'},\n    baseSpecies: 'Oinkologne',\n  },\n  Orthworm: {\n    types: ['Steel'],\n    bs: {hp: 70, at: 85, df: 145, sa: 60, sd: 55, sp: 65},\n    weightkg: 310,\n    abilities: {0: 'Earth Eater'},\n  },\n  Palafin: {\n    types: ['Water'],\n    bs: {hp: 100, at: 70, df: 72, sa: 53, sd: 62, sp: 100},\n    weightkg: 60.2,\n    abilities: {0: 'Zero to Hero'},\n    otherFormes: ['Palafin-Hero'],\n  },\n  'Palafin-Hero': {\n    types: ['Water'],\n    bs: {hp: 100, at: 160, df: 97, sa: 106, sd: 87, sp: 100},\n    weightkg: 97.4,\n    abilities: {0: 'Zero to Hero'},\n    baseSpecies: 'Palafin',\n  },\n  Pawmi: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 50, df: 20, sa: 40, sd: 25, sp: 60},\n    weightkg: 2.5,\n    abilities: {0: 'Static'},\n    nfe: true,\n  },\n  Pawmo: {\n    types: ['Electric', 'Fighting'],\n    bs: {hp: 60, at: 75, df: 40, sa: 50, sd: 40, sp: 85},\n    weightkg: 6.5,\n    abilities: {0: 'Volt Absorb'},\n    nfe: true,\n  },\n  Pawmot: {\n    types: ['Electric', 'Fighting'],\n    bs: {hp: 70, at: 115, df: 70, sa: 70, sd: 60, sp: 105},\n    weightkg: 41,\n    abilities: {0: 'Volt Absorb'},\n  },\n  Quaquaval: {\n    types: ['Water', 'Fighting'],\n    bs: {hp: 85, at: 120, df: 80, sa: 85, sd: 75, sp: 85},\n    weightkg: 61.9,\n    abilities: {0: 'Torrent'},\n  },\n  Quaxly: {\n    types: ['Water'],\n    bs: {hp: 55, at: 65, df: 45, sa: 50, sd: 45, sp: 50},\n    weightkg: 6.1,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Quaxwell: {\n    types: ['Water'],\n    bs: {hp: 70, at: 85, df: 65, sa: 65, sd: 60, sp: 65},\n    weightkg: 21.5,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Rabsca: {\n    types: ['Bug', 'Psychic'],\n    bs: {hp: 75, at: 50, df: 85, sa: 115, sd: 100, sp: 45},\n    weightkg: 3.5,\n    abilities: {0: 'Synchronize'},\n  },\n  Rellor: {\n    types: ['Bug'],\n    bs: {hp: 41, at: 50, df: 60, sa: 31, sd: 58, sp: 30},\n    weightkg: 1,\n    abilities: {0: 'Compound Eyes'},\n    nfe: true,\n  },\n  Revavroom: {\n    types: ['Steel', 'Poison'],\n    bs: {hp: 80, at: 119, df: 90, sa: 54, sd: 67, sp: 90},\n    weightkg: 120,\n    abilities: {0: 'Overcoat'},\n  },\n  'Roaring Moon': {\n    types: ['Dragon', 'Dark'],\n    bs: {hp: 105, at: 139, df: 71, sa: 55, sd: 101, sp: 119},\n    weightkg: 380,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  'Sandy Shocks': {\n    types: ['Electric', 'Ground'],\n    bs: {hp: 85, at: 81, df: 97, sa: 121, sd: 85, sp: 101},\n    weightkg: 60,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Scovillain: {\n    types: ['Grass', 'Fire'],\n    bs: {hp: 65, at: 108, df: 65, sa: 108, sd: 65, sp: 75},\n    weightkg: 15,\n    abilities: {0: 'Chlorophyll'},\n  },\n  'Scream Tail': {\n    types: ['Fairy', 'Psychic'],\n    bs: {hp: 115, at: 65, df: 99, sa: 65, sd: 115, sp: 111},\n    weightkg: 8,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Shroodle: {\n    types: ['Poison', 'Normal'],\n    bs: {hp: 40, at: 65, df: 35, sa: 40, sd: 35, sp: 75},\n    weightkg: 0.7,\n    abilities: {0: 'Unburden'},\n    nfe: true,\n  },\n  Skeledirge: {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 104, at: 75, df: 100, sa: 110, sd: 75, sp: 66},\n    weightkg: 326.5,\n    abilities: {0: 'Blaze'},\n  },\n  'Slither Wing': {\n    types: ['Bug', 'Fighting'],\n    bs: {hp: 85, at: 135, df: 79, sa: 85, sd: 105, sp: 81},\n    weightkg: 92,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Smoliv: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 41, at: 35, df: 45, sa: 58, sd: 51, sp: 30},\n    weightkg: 6.5,\n    abilities: {0: 'Early Bird'},\n    nfe: true,\n  },\n  Spidops: {\n    types: ['Bug'],\n    bs: {hp: 60, at: 79, df: 92, sa: 52, sd: 86, sp: 35},\n    weightkg: 16.5,\n    abilities: {0: 'Insomnia'},\n  },\n  Sprigatito: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 61, df: 54, sa: 45, sd: 45, sp: 65},\n    weightkg: 4.1,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Squawkabilly: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n    weightkg: 2.4,\n    abilities: {0: 'Intimidate'},\n    otherFormes: ['Squawkabilly-Blue', 'Squawkabilly-White', 'Squawkabilly-Yellow'],\n  },\n  'Squawkabilly-Blue': {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n    weightkg: 2.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Squawkabilly',\n  },\n  'Squawkabilly-White': {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n    weightkg: 2.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Squawkabilly',\n  },\n  'Squawkabilly-Yellow': {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n    weightkg: 2.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Squawkabilly',\n  },\n  Tadbulb: {\n    types: ['Electric'],\n    bs: {hp: 61, at: 31, df: 41, sa: 59, sd: 35, sp: 45},\n    weightkg: 0.4,\n    abilities: {0: 'Own Tempo'},\n    nfe: true,\n  },\n  Tandemaus: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 50, df: 45, sa: 40, sd: 45, sp: 75},\n    weightkg: 1.8,\n    gender: 'N',\n    abilities: {0: 'Run Away'},\n    nfe: true,\n  },\n  Tarountula: {\n    types: ['Bug'],\n    bs: {hp: 35, at: 41, df: 45, sa: 29, sd: 40, sp: 20},\n    weightkg: 4,\n    abilities: {0: 'Insomnia'},\n    nfe: true,\n  },\n  Tatsugiri: {\n    types: ['Dragon', 'Water'],\n    bs: {hp: 68, at: 50, df: 60, sa: 120, sd: 95, sp: 82},\n    weightkg: 8,\n    abilities: {0: 'Commander'},\n  },\n  'Tauros-Paldea-Aqua-Breed': {\n    types: ['Fighting', 'Water'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 88.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n  },\n  'Tauros-Paldea-Blaze-Breed': {\n    types: ['Fighting', 'Fire'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 88.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n  },\n  'Tauros-Paldea-Combat-Breed': {\n    types: ['Fighting'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 88.4,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n  },\n  'Ting-Lu': {\n    types: ['Dark', 'Ground'],\n    bs: {hp: 155, at: 110, df: 125, sa: 55, sd: 80, sp: 45},\n    weightkg: 699.7,\n    gender: 'N',\n    abilities: {0: 'Vessel of Ruin'},\n  },\n  Tinkatink: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 50, at: 45, df: 45, sa: 35, sd: 64, sp: 58},\n    weightkg: 8.9,\n    abilities: {0: 'Mold Breaker'},\n    nfe: true,\n  },\n  Tinkaton: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 85, at: 75, df: 77, sa: 70, sd: 105, sp: 94},\n    weightkg: 112.8,\n    abilities: {0: 'Mold Breaker'},\n  },\n  Tinkatuff: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 65, at: 55, df: 55, sa: 45, sd: 82, sp: 78},\n    weightkg: 59.1,\n    abilities: {0: 'Mold Breaker'},\n    nfe: true,\n  },\n  Toedscool: {\n    types: ['Ground', 'Grass'],\n    bs: {hp: 40, at: 40, df: 35, sa: 50, sd: 100, sp: 70},\n    weightkg: 33,\n    abilities: {0: 'Mycelium Might'},\n    nfe: true,\n  },\n  Toedscruel: {\n    types: ['Ground', 'Grass'],\n    bs: {hp: 80, at: 70, df: 65, sa: 80, sd: 120, sp: 100},\n    weightkg: 58,\n    abilities: {0: 'Mycelium Might'},\n  },\n  Varoom: {\n    types: ['Steel', 'Poison'],\n    bs: {hp: 45, at: 70, df: 63, sa: 30, sd: 45, sp: 47},\n    weightkg: 35,\n    abilities: {0: 'Overcoat'},\n    nfe: true,\n  },\n  Veluza: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 90, at: 102, df: 73, sa: 78, sd: 65, sp: 70},\n    weightkg: 90,\n    abilities: {0: 'Mold Breaker'},\n  },\n  'Walking Wake': {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 99, at: 83, df: 91, sa: 125, sd: 83, sp: 109},\n    weightkg: 280,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Wattrel: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 40, at: 40, df: 35, sa: 55, sd: 40, sp: 70},\n    weightkg: 3.6,\n    abilities: {0: 'Wind Power'},\n    nfe: true,\n  },\n  Wiglett: {\n    types: ['Water'],\n    bs: {hp: 10, at: 55, df: 25, sa: 35, sd: 25, sp: 95},\n    weightkg: 1.8,\n    abilities: {0: 'Gooey'},\n    nfe: true,\n  },\n  'Wo-Chien': {\n    types: ['Dark', 'Grass'],\n    bs: {hp: 85, at: 85, df: 100, sa: 95, sd: 135, sp: 70},\n    weightkg: 74.2,\n    gender: 'N',\n    abilities: {0: 'Tablets of Ruin'},\n  },\n  'Wooper-Paldea': {\n    types: ['Poison', 'Ground'],\n    bs: {hp: 55, at: 45, df: 45, sa: 25, sd: 25, sp: 15},\n    weightkg: 8.5,\n    abilities: {0: 'Poison Point'},\n    baseSpecies: 'Wooper',\n    nfe: true,\n  },\n  Wugtrio: {\n    types: ['Water'],\n    bs: {hp: 35, at: 100, df: 50, sa: 50, sd: 70, sp: 120},\n    weightkg: 5.4,\n    abilities: {0: 'Gooey'},\n  },\n};\n\nconst SV: {[name: string]: SpeciesData} = extend(true, {}, SS, SV_PATCH, PLA_PATCH);\n\nexport const SPECIES = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Species implements I.Species {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return SPECIES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in SPECIES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Specie implements I.Specie {\n  readonly kind: 'Species';\n  readonly id: I.ID;\n  readonly name: I.SpeciesName;\n  readonly types!: [I.TypeName] | [I.TypeName, I.TypeName];\n  readonly baseStats: Readonly<I.StatsTable>;\n  readonly weightkg!: number; // weight\n  readonly nfe?: boolean;\n  readonly gender?: I.GenderName;\n  readonly otherFormes?: I.SpeciesName[];\n  readonly baseSpecies?: I.SpeciesName;\n  readonly abilities?: {0: I.AbilityName}; // ability\n\n  private static readonly EXCLUDE = new Set(['bs', 'otherFormes']);\n\n  constructor(name: string, data: SpeciesData) {\n    this.kind = 'Species';\n    this.id = toID(name);\n    this.name = name as I.SpeciesName;\n\n    const baseStats: Partial<I.StatsTable> = {};\n    baseStats.hp = data.bs.hp;\n    baseStats.atk = data.bs.at;\n    baseStats.def = data.bs.df;\n    baseStats.spa = gen >= 2 ? data.bs.sa : data.bs.sl;\n    baseStats.spd = gen >= 2 ? data.bs.sd : data.bs.sl;\n    baseStats.spe = data.bs.sp;\n    this.baseStats = baseStats as I.StatsTable;\n    // Hack for getting Gmax pokemon out of existence in Gen 9+\n    if (data.otherFormes) {\n      this.otherFormes = data.otherFormes as I.SpeciesName[];\n      if (gen >= 9 && !['toxtricity', 'urshifu'].includes(this.id)) {\n        this.otherFormes = this.otherFormes.filter(f => !f.endsWith('-Gmax'));\n        if (!this.otherFormes.length) this.otherFormes = undefined;\n        if (this.otherFormes) this.otherFormes = [...new Set(this.otherFormes)];\n      }\n    }\n\n    assignWithout(this, data, Specie.EXCLUDE);\n  }\n}\nconst SPECIES_BY_ID: Array<{[id: string]: Specie}> = [];\n\nlet gen = 0;\nfor (const species of SPECIES) {\n  const map: {[id: string]: Specie} = {};\n  for (const specie in species) {\n    if (gen >= 2 && species[specie].bs.sl) delete species[specie].bs.sl;\n    const m = new Specie(specie, species[specie]);\n    map[m.id] = m;\n  }\n  SPECIES_BY_ID.push(map);\n  gen++;\n}\n","import * as I from './interface';\nimport {toID, extend} from '../util';\n\nexport type TypeChart = {\n  [type in I.TypeName]?: {[type in I.TypeName]?: number};\n};\n\nconst RBY: TypeChart = {\n  '???': {\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Normal: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 0,\n    Dragon: 1,\n  },\n  Grass: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 0.5,\n    Water: 2,\n    Electric: 1,\n    Ice: 1,\n    Flying: 0.5,\n    Bug: 0.5,\n    Poison: 0.5,\n    Ground: 2,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Fire: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 0.5,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 2,\n    Flying: 1,\n    Bug: 2,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Water: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 2,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 2,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Electric: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 1,\n    Water: 2,\n    Electric: 0.5,\n    Ice: 1,\n    Flying: 2,\n    Bug: 1,\n    Poison: 1,\n    Ground: 0,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Ice: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 0.5,\n    Flying: 2,\n    Bug: 1,\n    Poison: 1,\n    Ground: 2,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n  },\n  Flying: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 1,\n    Electric: 0.5,\n    Ice: 1,\n    Flying: 1,\n    Bug: 2,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 2,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Bug: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 0.5,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 0.5,\n    Bug: 1,\n    Poison: 2,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 2,\n    Ghost: 0.5,\n    Dragon: 1,\n  },\n  Poison: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 2,\n    Poison: 0.5,\n    Ground: 0.5,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 0.5,\n    Dragon: 1,\n  },\n  Ground: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 2,\n    Water: 1,\n    Electric: 2,\n    Ice: 1,\n    Flying: 0,\n    Bug: 0.5,\n    Poison: 2,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Rock: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 2,\n    Water: 1,\n    Electric: 1,\n    Ice: 2,\n    Flying: 2,\n    Bug: 2,\n    Poison: 1,\n    Ground: 0.5,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Fighting: {\n    '???': 1,\n    Normal: 2,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 2,\n    Flying: 0.5,\n    Bug: 0.5,\n    Poison: 0.5,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 0.5,\n    Ghost: 0,\n    Dragon: 1,\n  },\n  Psychic: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 2,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 2,\n    Psychic: 0.5,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Ghost: {\n    '???': 1,\n    Normal: 0,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 0,\n    Ghost: 2,\n    Dragon: 1,\n  },\n  Dragon: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n  },\n};\n\nconst GSC: TypeChart = extend(true, {}, RBY, {\n  '???': {Dark: 1, Steel: 1},\n  Normal: {Dark: 1, Steel: 0.5},\n  Grass: {Dark: 1, Steel: 0.5},\n  Fire: {Dark: 1, Steel: 2},\n  Water: {Dark: 1, Steel: 1},\n  Electric: {Dark: 1, Steel: 1},\n  Ice: {Fire: 0.5, Dark: 1, Steel: 0.5},\n  Flying: {Dark: 1, Steel: 0.5},\n  Bug: {Poison: 0.5, Dark: 2, Steel: 0.5},\n  Poison: {Bug: 1, Dark: 1, Steel: 0},\n  Ground: {Dark: 1, Steel: 2},\n  Rock: {Dark: 1, Steel: 0.5},\n  Fighting: {Dark: 2, Steel: 2},\n  Psychic: {Dark: 0, Steel: 0.5},\n  Ghost: {Psychic: 2, Dark: 0.5, Steel: 0.5},\n  Dragon: {Dark: 1, Steel: 0.5},\n  Dark: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 2,\n    Ghost: 2,\n    Dragon: 1,\n    Dark: 0.5,\n    Steel: 0.5,\n  },\n  Steel: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 0.5,\n    Water: 0.5,\n    Electric: 0.5,\n    Ice: 2,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n    Dark: 1,\n    Steel: 0.5,\n  },\n});\n\nconst ADV = GSC;\n\nconst DPP = GSC;\n\nconst BW = GSC;\n\nconst XY: TypeChart = extend(true, {}, GSC, {\n  '???': {Fairy: 1},\n  Normal: {Fairy: 1},\n  Grass: {Fairy: 1},\n  Fire: {Fairy: 1},\n  Water: {Fairy: 1},\n  Electric: {Fairy: 1},\n  Ice: {Fairy: 1},\n  Flying: {Fairy: 1},\n  Bug: {Fairy: 0.5},\n  Poison: {Fairy: 2},\n  Ground: {Fairy: 1},\n  Rock: {Fairy: 1},\n  Fighting: {Fairy: 0.5},\n  Psychic: {Fairy: 1},\n  Ghost: {Steel: 1, Fairy: 1},\n  Dragon: {Fairy: 0},\n  Dark: {Steel: 1, Fairy: 0.5},\n  Steel: {Fairy: 2},\n  Fairy: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 0.5,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 0.5,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 2,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n    Dark: 2,\n    Steel: 0.5,\n    Fairy: 1,\n  },\n});\n\nconst SM = XY;\n\nconst SS = SM;\n\nconst SV = SS;\n\nexport const TYPE_CHART = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Types implements I.Types {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    // toID('???') => '', as do many other things, but returning the '???' type seems appropriate :)\n    return TYPES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in TYPES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Type implements I.Type {\n  readonly kind: 'Type';\n  readonly id: I.ID;\n  readonly name: I.TypeName;\n  readonly effectiveness: Readonly<{[type in I.TypeName]?: I.TypeEffectiveness}>;\n\n  constructor(name: string, effectiveness: TypeChart[I.TypeName]) {\n    this.kind = 'Type';\n    this.id = toID(name);\n    this.name = name as I.TypeName;\n    this.effectiveness = effectiveness! as {[type in I.TypeName]?: I.TypeEffectiveness};\n  }\n}\n\nconst TYPES_BY_ID: Array<{[id: string]: Type}> = [];\n\nfor (const typeChart of TYPE_CHART) {\n  const map: {[id: string]: Type} = {};\n  for (const type in typeChart) {\n    const t = new Type(type, {...typeChart[type as I.TypeName]!});\n    map[t.id] = t;\n  }\n  TYPES_BY_ID.push(map);\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nexport const NATURES: {[name: string]: [I.StatID, I.StatID]} = {\n  Adamant: ['atk', 'spa'],\n  Bashful: ['spa', 'spa'],\n  Bold: ['def', 'atk'],\n  Brave: ['atk', 'spe'],\n  Calm: ['spd', 'atk'],\n  Careful: ['spd', 'spa'],\n  Docile: ['def', 'def'],\n  Gentle: ['spd', 'def'],\n  Hardy: ['atk', 'atk'],\n  Hasty: ['spe', 'def'],\n  Impish: ['def', 'spa'],\n  Jolly: ['spe', 'spa'],\n  Lax: ['def', 'spd'],\n  Lonely: ['atk', 'def'],\n  Mild: ['spa', 'def'],\n  Modest: ['spa', 'atk'],\n  Naive: ['spe', 'spd'],\n  Naughty: ['atk', 'spd'],\n  Quiet: ['spa', 'spe'],\n  Quirky: ['spd', 'spd'],\n  Rash: ['spa', 'spd'],\n  Relaxed: ['def', 'spe'],\n  Sassy: ['spd', 'spe'],\n  Serious: ['spe', 'spe'],\n  Timid: ['spe', 'atk'],\n};\n\nexport class Natures implements I.Natures {\n  get(id: I.ID) {\n    return NATURES_BY_ID[id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in NATURES_BY_ID) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Nature implements I.Nature {\n  readonly kind: 'Nature';\n  readonly id: I.ID;\n  readonly name: I.NatureName;\n  readonly plus?: I.StatID;\n  readonly minus?: I.StatID;\n\n  constructor(name: string, [plus, minus]: [I.StatID, I.StatID]) {\n    this.kind = 'Nature';\n    this.id = toID(name);\n    this.name = name as I.NatureName;\n    this.plus = plus;\n    this.minus = minus;\n  }\n}\n\nconst NATURES_BY_ID: {[id: string]: Nature} = {};\n\nfor (const nature in NATURES) {\n  const n = new Nature(nature, NATURES[nature] as [I.StatID, I.StatID]);\n  NATURES_BY_ID[n.id] = n;\n}\n","import * as I from './interface';\n\nimport {Abilities} from './abilities';\nimport {Items} from './items';\nimport {Moves} from './moves';\nimport {Species} from './species';\nimport {Types} from './types';\nimport {Natures} from './natures';\n\nexport const Generations: I.Generations = new (class {\n  get(gen: I.GenerationNum) {\n    return new Generation(gen);\n  }\n})();\n\nclass Generation implements I.Generation {\n  num: I.GenerationNum;\n\n  abilities: Abilities;\n  items: Items;\n  moves: Moves;\n  species: Species;\n  types: Types;\n  natures: Natures;\n\n  constructor(num: I.GenerationNum) {\n    this.num = num;\n\n    this.abilities = new Abilities(num);\n    this.items = new Items(num);\n    this.moves = new Moves(num);\n    this.species = new Species(num);\n    this.types = new Types(num);\n    this.natures = new Natures();\n  }\n}\n","import {State} from './state';\nimport {GameType, Weather, Terrain} from './data/interface';\n\nexport class Field implements State.Field {\n  gameType: GameType;\n  weather?: Weather;\n  terrain?: Terrain;\n  isMagicRoom: boolean;\n  isWonderRoom: boolean;\n  isGravity: boolean;\n  isAuraBreak?: boolean;\n  isFairyAura?: boolean;\n  isDarkAura?: boolean;\n  isBeadsOfRuin?: boolean;\n  isSwordOfRuin?: boolean;\n  isTabletsOfRuin?: boolean;\n  isVesselOfRuin?: boolean;\n  isTrickRoom?: boolean;\n  isCloudNine?: boolean;\n  attackerSide: Side;\n  defenderSide: Side;\n\n  constructor(field: Partial<State.Field> = {}) {\n    this.gameType = field.gameType || 'Singles';\n    this.terrain = field.terrain;\n    this.weather = field.weather;\n    this.isMagicRoom = !!field.isMagicRoom;\n    this.isWonderRoom = !!field.isWonderRoom;\n    this.isGravity = !!field.isGravity;\n    this.isAuraBreak = field.isAuraBreak || false;\n    this.isFairyAura = field.isFairyAura || false;\n    this.isDarkAura = field.isDarkAura || false;\n    this.isBeadsOfRuin = field.isBeadsOfRuin || false;\n    this.isSwordOfRuin = field.isSwordOfRuin || false;\n    this.isTabletsOfRuin = field.isTabletsOfRuin || false;\n    this.isVesselOfRuin = field.isVesselOfRuin || false;\n    this.isTrickRoom = field.isTrickRoom || false;\n    this.isCloudNine = field.isCloudNine || false;\n\n    this.attackerSide = new Side(field.attackerSide || {});\n    this.defenderSide = new Side(field.defenderSide || {});\n  }\n\n  hasWeather(...weathers: Weather[]) {\n    if (this.isCloudNine) { return false }; \n    return !!(this.weather && weathers.includes(this.weather));\n  }\n\n  hasTerrain(...terrains: Terrain[]) {\n    return !!(this.terrain && terrains.includes(this.terrain));\n  }\n\n  swap() {\n    [this.attackerSide, this.defenderSide] = [this.defenderSide, this.attackerSide];\n    return this;\n  }\n\n  clone() {\n    return new Field({\n      gameType: this.gameType,\n      weather: this.weather,\n      terrain: this.terrain,\n      isMagicRoom: this.isMagicRoom,\n      isWonderRoom: this.isWonderRoom,\n      isGravity: this.isGravity,\n      attackerSide: this.attackerSide,\n      defenderSide: this.defenderSide,\n      isAuraBreak: this.isAuraBreak,\n      isDarkAura: this.isDarkAura,\n      isFairyAura: this.isFairyAura,\n      isBeadsOfRuin: this.isBeadsOfRuin,\n      isSwordOfRuin: this.isSwordOfRuin,\n      isTabletsOfRuin: this.isTabletsOfRuin,\n      isVesselOfRuin: this.isVesselOfRuin,\n      isCloudNine: this.isCloudNine,\n    });\n  }\n}\n\nexport class Side implements State.Side {\n  spikes: number;\n  steelsurge: boolean;\n  vinelash: boolean;\n  wildfire: boolean;\n  cannonade: boolean;\n  volcalith: boolean;\n  isSR: boolean;\n  isReflect: boolean;\n  isLightScreen: boolean;\n  isDefCheered: boolean\n  isProtected: boolean;\n  isSeeded: boolean;\n  isForesight: boolean;\n  isTailwind: boolean;\n  isHelpingHand: boolean;\n  isAtkCheered: boolean;\n  isFlowerGift: boolean;\n  isFriendGuard: boolean;\n  friendGuards: number;\n  isAuroraVeil: boolean;\n  isBattery: boolean;\n  isPowerSpot: boolean;\n  powerSpots: number;\n  steelySpirits: number;\n  isSwitching?: 'out' | 'in';\n  isCharged: boolean;\n  isMist: boolean;\n  isSafeguard: boolean;\n  isAromaVeil: boolean;\n\n  constructor(side: State.Side = {}) {\n    this.spikes = side.spikes || 0;\n    this.steelsurge = !!side.steelsurge;\n    this.vinelash = !!side.vinelash;\n    this.wildfire = !!side.wildfire;\n    this.cannonade = !!side.cannonade;\n    this.volcalith = !!side.volcalith;\n    this.isSR = !!side.isSR;\n    this.isReflect = !!side.isReflect;\n    this.isLightScreen = !!side.isLightScreen;\n    this.isDefCheered = !!side.isDefCheered;\n    this.isProtected = !!side.isProtected;\n    this.isSeeded = !!side.isSeeded;\n    this.isForesight = !!side.isForesight;\n    this.isTailwind = !!side.isTailwind;\n    this.isHelpingHand = !!side.isHelpingHand;\n    this.isAtkCheered = !!side.isAtkCheered;\n    this.isFlowerGift = !!side.isFlowerGift;\n    this.isFriendGuard = !!side.isFriendGuard;\n    this.friendGuards = side.friendGuards || 0;\n    this.isAuroraVeil = !!side.isAuroraVeil;\n    this.isBattery = !!side.isBattery;\n    this.isPowerSpot = !!side.isPowerSpot;\n    this.powerSpots = side.powerSpots || 0;\n    this.steelySpirits = side.steelySpirits || 0;\n    this.isSwitching = side.isSwitching;\n    this.isCharged = !!side.isCharged;\n    this.isMist = !!side.isMist;\n    this.isSafeguard = !!side.isSafeguard;\n    this.isAromaVeil = !!side.isAromaVeil;\n  }\n\n  clone() {\n    return new Side(this);\n  }\n}\n","import {Generation, TypeName, StatID} from './data/interface';\nimport {toID} from './util';\n\nexport const SEED_BOOSTED_STAT: {[item: string]: StatID} = {\n  'Electric Seed': 'def',\n  'Grassy Seed': 'def',\n  'Misty Seed': 'spd',\n  'Psychic Seed': 'spd',\n};\n\nexport function getItemBoostType(item: string | undefined) {\n  switch (item) {\n  case 'Draco Plate':\n  case 'Dragon Fang':\n    return 'Dragon';\n  case 'Dread Plate':\n  case 'Black Glasses':\n    return 'Dark';\n  case 'Earth Plate':\n  case 'Soft Sand':\n    return 'Ground';\n  case 'Fist Plate':\n  case 'Black Belt':\n    return 'Fighting';\n  case 'Flame Plate':\n  case 'Charcoal':\n    return 'Fire';\n  case 'Icicle Plate':\n  case 'Never-Melt Ice':\n    return 'Ice';\n  case 'Insect Plate':\n  case 'Silver Powder':\n    return 'Bug';\n  case 'Iron Plate':\n  case 'Metal Coat':\n    return 'Steel';\n  case 'Meadow Plate':\n  case 'Rose Incense':\n  case 'Miracle Seed':\n    return 'Grass';\n  case 'Mind Plate':\n  case 'Odd Incense':\n  case 'Twisted Spoon':\n    return 'Psychic';\n  case 'Pixie Plate':\n    return 'Fairy';\n  case 'Sky Plate':\n  case 'Sharp Beak':\n    return 'Flying';\n  case 'Splash Plate':\n  case 'Sea Incense':\n  case 'Wave Incense':\n  case 'Mystic Water':\n    return 'Water';\n  case 'Spooky Plate':\n  case 'Spell Tag':\n    return 'Ghost';\n  case 'Stone Plate':\n  case 'Rock Incense':\n  case 'Hard Stone':\n    return 'Rock';\n  case 'Toxic Plate':\n  case 'Poison Barb':\n    return 'Poison';\n  case 'Zap Plate':\n  case 'Magnet':\n    return 'Electric';\n  case 'Silk Scarf':\n  case 'Pink Bow':\n  case 'Polkadot Bow':\n    return 'Normal';\n  default:\n    return undefined;\n  }\n}\n\nexport function getBerryResistType(berry: string | undefined) {\n  switch (berry) {\n  case 'Chilan Berry':\n    return 'Normal';\n  case 'Occa Berry':\n    return 'Fire';\n  case 'Passho Berry':\n    return 'Water';\n  case 'Wacan Berry':\n    return 'Electric';\n  case 'Rindo Berry':\n    return 'Grass';\n  case 'Yache Berry':\n    return 'Ice';\n  case 'Chople Berry':\n    return 'Fighting';\n  case 'Kebia Berry':\n    return 'Poison';\n  case 'Shuca Berry':\n    return 'Ground';\n  case 'Coba Berry':\n    return 'Flying';\n  case 'Payapa Berry':\n    return 'Psychic';\n  case 'Tanga Berry':\n    return 'Bug';\n  case 'Charti Berry':\n    return 'Rock';\n  case 'Kasib Berry':\n    return 'Ghost';\n  case 'Haban Berry':\n    return 'Dragon';\n  case 'Colbur Berry':\n    return 'Dark';\n  case 'Babiri Berry':\n    return 'Steel';\n  case 'Roseli Berry':\n    return 'Fairy';\n  default:\n    return undefined;\n  }\n}\n\nconst FLING_120 = new Set([\n  'TR24',\n  'TR28',\n  'TR34',\n  'TR39',\n  'TR53',\n  'TR55',\n  'TR64',\n  'TR66',\n  'TR72',\n  'TR73',\n]);\n\nconst FLING_100 = new Set([\n  'Hard Stone',\n  'Room Service',\n  'Claw Fossil',\n  'Dome Fossil',\n  'Helix Fossil',\n  'Old Amber',\n  'Root Fossil',\n  'Armor Fossil',\n  'Old Amber',\n  'Fossilized Bird',\n  'Fossilized Dino',\n  'Fossilized Drake',\n  'Fossilized Fish',\n  'Plume Fossil',\n  'Jaw Fossil',\n  'Cover Fossil',\n  'Sail Fossil',\n  'Rare Bone',\n  'Skull Fossil',\n  'TR10',\n  'TR31',\n  'TR75',\n]);\n\nconst FLING_90 = new Set([\n  'Deep Sea Tooth',\n  'Thick Club',\n  'TR02',\n  'TR04',\n  'TR05',\n  'TR08',\n  'TR11',\n  'TR22',\n  'TR35',\n  'TR42',\n  'TR45',\n  'TR50',\n  'TR61',\n  'TR65',\n  'TR67',\n  'TR86',\n  'TR90',\n  'TR96',\n]);\n\nconst FLING_85 = new Set(['TR01', 'TR41', 'TR62', 'TR93', 'TR97', 'TR98']);\n\nconst FLING_80 = new Set([\n  'Assault Vest',\n  'Blunder Policy',\n  'Chipped Pot',\n  'Cracked Pot',\n  'Heavy-Duty Boots',\n  'Weakness Policy',\n  'Quick Claw',\n  'Dawn Stone',\n  'Dusk Stone',\n  'Electirizer',\n  'Magmarizer',\n  'Oval Stone',\n  'Protector',\n  'Sachet',\n  'Whipped Dream',\n  'Razor Claw',\n  'Shiny Stone',\n  'TR16',\n  'TR18',\n  'TR19',\n  'TR25',\n  'TR32',\n  'TR33',\n  'TR47',\n  'TR56',\n  'TR57',\n  'TR58',\n  'TR59',\n  'TR60',\n  'TR63',\n  'TR69',\n  'TR70',\n  'TR74',\n  'TR84',\n  'TR87',\n  'TR92',\n  'TR95',\n  'TR99',\n]);\n\nconst FLING_70 = new Set([\n  'Poison Barb',\n  'Dragon Fang',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Lens',\n  'Power Weight',\n]);\n\nconst FLING_60 = new Set([\n  'Adamant Orb',\n  'Damp Rock',\n  'Heat Rock',\n  'Leek',\n  'Lustrous Orb',\n  'Macho Brace',\n  'Rocky Helmet',\n  'Stick',\n  'Utility Umbrella',\n  'Terrain Extender',\n]);\nconst FLING_30 = new Set([\n  'Absorb Bulb',\n  'Black Belt',\n  'Black Sludge',\n  'Black Glasses',\n  'Cell Battery',\n  'Charcoal',\n  'Deep Sea Scale',\n  'Flame Orb',\n  'King\\'s Rock',\n  'Life Orb',\n  'Light Ball',\n  'Light Clay',\n  'Magnet',\n  'Metal Coat',\n  'Miracle Seed',\n  'Mystic Water',\n  'Never-Melt Ice',\n  'Razor Fang',\n  'Scope Lens',\n  'Soul Dew',\n  'Spell Tag',\n  'Sweet Apple',\n  'Tart Apple',\n  'Throat Spray',\n  'Toxic Orb',\n  'Twisted Spoon',\n  'Dragon Scale',\n  'Energy Powder',\n  'Fire Stone',\n  'Leaf Stone',\n  'Moon Stone',\n  'Sun Stone',\n  'Thunder Stone',\n  'Up-Grade',\n  'Water Stone',\n  'Berry Juice',\n  'Black Sludge',\n  'Prism Scale',\n  'Ice Stone',\n  'Gold Bottle Cap',\n  'Luminous Moss',\n  'Eject Button',\n  'Snowball',\n  'Bottle Cap',\n]);\nconst FLING_10 = new Set([\n  'Air Balloon',\n  'Berry Sweet',\n  'Choice Band',\n  'Choice Scarf',\n  'Choice Specs',\n  'Clover Sweet',\n  'Destiny Knot',\n  'Electric Seed',\n  'Expert Belt',\n  'Flower Sweet',\n  'Focus Band',\n  'Focus Sash',\n  'Full Incense',\n  'Grassy Seed',\n  'Lagging Tail',\n  'Lax Incense',\n  'Leftovers',\n  'Love Sweet',\n  'Mental Herb',\n  'Metal Powder',\n  'Mint Berry',\n  'Miracle Berry',\n  'Misty Seed',\n  'Muscle Band',\n  'Power Herb',\n  'Psychic Seed',\n  'Odd Incense',\n  'Quick Powder',\n  'Reaper Cloth',\n  'Red Card',\n  'Ribbon Sweet',\n  'Ring Target',\n  'Rock Incense',\n  'Rose Incense',\n  'Sea Incense',\n  'Shed Shell',\n  'Silk Scarf',\n  'Silver Powder',\n  'Smooth Rock',\n  'Soft Sand',\n  'Soothe Bell',\n  'Star Sweet',\n  'Strawberry Sweet',\n  'Wave Incense',\n  'White Herb',\n  'Wide Lens',\n  'Wise Glasses',\n  'Zoom Lens',\n  'Silver Powder',\n  'Power Herb',\n  'TR00',\n  'TR07',\n  'TR12',\n  'TR13',\n  'TR14',\n  'TR17',\n  'TR20',\n  'TR21',\n  'TR23',\n  'TR26',\n  'TR27',\n  'TR29',\n  'TR30',\n  'TR37',\n  'TR38',\n  'TR40',\n  'TR44',\n  'TR46',\n  'TR48',\n  'TR49',\n  'TR51',\n  'TR52',\n  'TR54',\n  'TR68',\n  'TR76',\n  'TR77',\n  'TR79',\n  'TR80',\n  'TR83',\n  'TR85',\n  'TR88',\n  'TR91',\n]);\n\n// TODO: move this data to the data files instead.\nexport function getFlingPower(item?: string) {\n  if (!item) return 0;\n  if (['Iron Ball', 'TR43', 'TR71'].includes(item)) return 130;\n  if (FLING_120.has(item)) return 85;\n  if (['TR03', 'TR06', 'TR09', 'TR15', 'TR89'].includes(item)) return 110;\n  if (FLING_100.has(item)) return 100;\n  if (['TR36', 'TR78', 'TR81', 'TR94'].includes(item)) return 95;\n  if (item.includes('Plate') || FLING_90.has(item)) return 90;\n  if (FLING_85.has(item)) return 85;\n  if (FLING_80.has(item)) return 80;\n  if (FLING_70.has(item)) return 70;\n  if (FLING_60.has(item)) return 60;\n  if (['Eject Pack', 'Sharp Beak', 'Dubious Disc'].includes(item)) return 50;\n  if (['Icy Rock', 'Eviolite', 'Lucky Punch'].includes(item)) return 40;\n  if (FLING_30.has(item)) return 30;\n  if (item === 'TR82') return 20;\n  if (item.includes('Berry') || FLING_10.has(item)) return 10;\n  return 0;\n}\n\nexport function getNaturalGift(gen: Generation, item: string) {\n  const gift = gen.items.get(toID(item))?.naturalGift;\n  return gift ? {t: gift.type, p: gift.basePower} : {t: 'Normal' as TypeName, p: 1};\n}\n\nexport function getTechnoBlast(item: string) {\n  switch (item) {\n  case 'Burn Drive':\n    return 'Fire';\n  case 'Chill Drive':\n    return 'Ice';\n  case 'Douse Drive':\n    return 'Water';\n  case 'Shock Drive':\n    return 'Electric';\n  default:\n    return undefined;\n  }\n}\n\nexport function getMultiAttack(item: string) {\n  if (item.includes('Memory')) {\n    return item.substring(0, item.indexOf(' ')) as TypeName;\n  }\n  return undefined;\n}\n","import {Generation, Weather, Terrain, TypeName, ID} from './data/interface';\nimport {Field, Side} from './field';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\nimport {Damage, damageRange} from './result';\nimport {error} from './util';\n// NOTE: This needs to come last to simplify bundling\nimport {isGrounded} from './mechanics/util';\n\nexport interface RawDesc {\n  HPEVs?: string;\n  attackBoost?: number;\n  attackEVs?: string;\n  attackerAbility?: string;\n  attackerItem?: string;\n  attackerName: string;\n  attackerTera?: string;\n  defenderAbility?: string;\n  defenderItem?: string;\n  defenderName: string;\n  defenderTera?: string;\n  defenseBoost?: number;\n  defenseEVs?: string;\n  hits?: number;\n  alliesFainted?: number;\n  isBeadsOfRuin?: boolean;\n  isSwordOfRuin?: boolean;\n  isTabletsOfRuin?: boolean;\n  isVesselOfRuin?: boolean;\n  isAuroraVeil?: boolean;\n  isFlowerGiftAttacker?: boolean;\n  isFlowerGiftDefender?: boolean;\n  isFriendGuard?: boolean;\n  friendGuards?: number;\n  isHelpingHand?: boolean;\n  isAtkCheered?: boolean;\n  isCritical?: boolean;\n  isLightScreen?: boolean;\n  isDefCheered?: boolean;\n  isDefCheeredBodyPress?: boolean;\n  isBurned?: boolean;\n  isProtected?: boolean;\n  isReflect?: boolean;\n  isBattery?: boolean;\n  isPowerSpot?: boolean;\n  isWonderRoom?: boolean;\n  isSwitching?: 'out' | 'in';\n  moveBP?: number;\n  moveName: string;\n  moveTurns?: string;\n  moveType?: TypeName;\n  powerSpots?: number;\n  rivalry?: 'buffed' | 'nerfed';\n  steelySpirits?: number;\n  terrain?: Terrain;\n  weather?: Weather;\n  isDefenderDynamaxed?: boolean;\n  isCharged?: boolean;\n}\n\nexport function display(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  damage: Damage,\n  rawDesc: RawDesc,\n  notation = '%',\n  err = true\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  const minDisplay = toDisplay(notation, min, defender.maxHP());\n  const maxDisplay = toDisplay(notation, max, defender.maxHP());\n\n  const desc = buildDescription(rawDesc, attacker, defender);\n  const damageText = `${min}-${max} (${minDisplay} - ${maxDisplay}${notation}${getBossMultiplierDesc(defender)})`;\n\n  if (move.category === 'Status' && !move.named('Nature Power')) return `${desc}: ${damageText}`;\n  const koChanceText = getKOChance(gen, attacker, defender, move, field, damage, err).text;\n  return koChanceText ? `${desc}: ${damageText} -- ${koChanceText}` : `${desc}: ${damageText}`;\n}\n\nexport function displayMove(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  const minDisplay = toDisplay(notation, min, defender.maxHP());\n  const maxDisplay = toDisplay(notation, max, defender.maxHP());\n\n  const recoveryText = getRecovery(gen, attacker, defender, move, damage, notation).text;\n  const recoilText = getRecoil(gen, attacker, defender, move, damage, notation).text;\n\n  return `${minDisplay} - ${maxDisplay}${notation}${recoveryText &&\n    ` (${recoveryText})`}${recoilText && ` (${recoilText})`}`;\n}\n\nexport function getRecovery(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const minD = typeof minDamage === 'number' ? [minDamage] : minDamage;\n  const maxD = typeof maxDamage === 'number' ? [maxDamage] : maxDamage;\n\n  const recovery = [0, 0] as [number, number];\n  let text = '';\n\n  const ignoresShellBell =\n    gen.num === 3 && move.named('Doom Desire', 'Future Sight');\n  if (attacker.hasItem('Shell Bell') && !ignoresShellBell) {\n    const max = Math.round(defender.maxHP() / 8);\n    for (let i = 0; i < minD.length; i++) {\n      recovery[0] += Math.min(Math.round(minD[i] * move.hits / 8), max);\n      recovery[1] += Math.min(Math.round(maxD[i] * move.hits / 8), max);\n    }\n  }\n\n  if (move.named('G-Max Finale')) {\n    recovery[0] = recovery[1] = Math.round(attacker.maxHP() / 6);\n  }\n\n  if (move.drain) {\n    const percentHealed = move.drain[0] / move.drain[1];\n    const max = Math.round(defender.maxHP() * percentHealed);\n    for (let i = 0; i < minD.length; i++) {\n      const range = [minD[i], maxD[i]];\n      for (const j in recovery) {\n        let drained = Math.round(range[j] * percentHealed);\n        if (attacker.hasItem('Big Root')) drained = Math.trunc(drained * 5324 / 4096);\n        recovery[j] += Math.min(drained * move.hits, max);\n      }\n    }\n  }\n\n  if (recovery[1] === 0) return {recovery, text};\n\n  const minHealthRecovered = toDisplay(notation, recovery[0], attacker.maxHP());\n  const maxHealthRecovered = toDisplay(notation, recovery[1], attacker.maxHP());\n\n  text = `${minHealthRecovered} - ${maxHealthRecovered}${notation} recovered`;\n  return {recovery, text};\n}\n\n// TODO: return recoil damage as exact HP\nexport function getRecoil(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  let recoil: [number, number] | number = [0, 0];\n  let text = '';\n\n  const damageOverflow = minDamage > defender.curHP() || maxDamage > defender.curHP();\n  if (move.recoil) {\n    const mod = (move.recoil[0] / move.recoil[1]) * 100;\n    let minRecoilDamage, maxRecoilDamage;\n    if (damageOverflow) {\n      minRecoilDamage =\n        toDisplay(notation, defender.curHP() * mod, attacker.maxHP(), 100);\n      maxRecoilDamage =\n        toDisplay(notation, defender.curHP() * mod, attacker.maxHP(), 100);\n    } else {\n      minRecoilDamage = toDisplay(\n        notation, Math.min(min, defender.curHP()) * mod, attacker.maxHP(), 100\n      );\n      maxRecoilDamage = toDisplay(\n        notation, Math.min(max, defender.curHP()) * mod, attacker.maxHP(), 100\n      );\n    }\n    if (!attacker.hasAbility('Rock Head')) {\n      recoil = [minRecoilDamage, maxRecoilDamage];\n      text = `${minRecoilDamage} - ${maxRecoilDamage}${notation} recoil damage`;\n    }\n  } else if (move.hasCrashDamage) {\n    const genMultiplier = gen.num === 2 ? 12.5 : gen.num >= 3 ? 50 : 1;\n\n    let minRecoilDamage, maxRecoilDamage;\n    if (damageOverflow && gen.num !== 2) {\n      minRecoilDamage =\n        toDisplay(notation, defender.curHP() * genMultiplier, attacker.maxHP(), 100);\n      maxRecoilDamage =\n        toDisplay(notation, defender.curHP() * genMultiplier, attacker.maxHP(), 100);\n    } else {\n      minRecoilDamage = toDisplay(\n        notation, Math.min(min, defender.maxHP()) * genMultiplier, attacker.maxHP(), 100\n      );\n      maxRecoilDamage = toDisplay(\n        notation, Math.min(max, defender.maxHP()) * genMultiplier, attacker.maxHP(), 100\n      );\n    }\n\n    recoil = [minRecoilDamage, maxRecoilDamage];\n    switch (gen.num) {\n    case 1:\n      recoil = toDisplay(notation, 1, attacker.maxHP());\n      text = '1hp damage on miss';\n      break;\n    case 2: case 3: case 4:\n      if (defender.hasType('Ghost')) {\n        if (gen.num === 4) {\n          const gen4CrashDamage = Math.floor(((defender.maxHP() * 0.5) / attacker.maxHP()) * 100);\n          recoil = notation === '%' ? gen4CrashDamage : Math.floor((gen4CrashDamage / 100) * 48);\n          text = `${gen4CrashDamage}% crash damage`;\n        } else {\n          recoil = 0;\n          text = 'no crash damage on Ghost types';\n        }\n      } else {\n        text = `${minRecoilDamage} - ${maxRecoilDamage}${notation} crash damage on miss`;\n      }\n      break;\n    default:\n      recoil = notation === '%' ? 24 : 50;\n      text = '50% crash damage';\n    }\n  } else if (move.struggleRecoil) {\n    recoil = notation === '%' ? 12 : 25;\n    text = '25% struggle damage';\n    // Struggle recoil is actually rounded down in Gen 4 per DaWoblefet's research, but until we\n    // return recoil damage as exact HP the best we can do is add some more text to this effect\n    if (gen.num === 4) text += ' (rounded down)';\n  } else if (move.mindBlownRecoil) {\n    recoil = notation === '%' ? 24 : 50;\n    text = '50% recoil damage';\n  }\n\n  return {recoil, text};\n}\n\nexport function getKOChance(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  damage: Damage,\n  err = true\n) {\n  damage = combine(damage);\n  if (isNaN(damage[0])) {\n    error(err, 'damage[0] must be a number.');\n    return {chance: 0, n: 0, text: ''};\n  }\n  if (damage[damage.length - 1] === 0) {\n    error(err, 'damage[damage.length - 1] === 0.');\n    return {chance: 0, n: 0, text: ''};\n  }\n\n  // Code doesn't really work if these aren't set.\n  if (move.timesUsed === undefined) move.timesUsed = 1;\n  if (move.timesUsedWithMetronome === undefined) move.timesUsedWithMetronome = 1;\n\n  if (damage[0] >= defender.maxHP() && move.timesUsed === 1 && move.timesUsedWithMetronome === 1) {\n    return {chance: 1, n: 1, text: 'guaranteed OHKO'};\n  }\n\n  const hazards = getHazards(gen, defender, field.defenderSide);\n  const eot = getEndOfTurn(gen, attacker, defender, move, field);\n  const toxicCounter =\n     defender.hasStatus('tox') && !defender.hasAbility('Magic Guard') ? defender.toxicCounter : 0;\n\n  // multi-hit moves have too many possibilities for brute-forcing to work, so reduce it\n  // to an approximate distribution\n  let qualifier = '';\n  if (move.hits > 1) {\n    qualifier = 'approx. ';\n    damage = squashMultihit(gen, damage, move.hits, err);\n  }\n\n  const hazardsText = hazards.texts.length > 0\n    ? ' after ' + serializeText(hazards.texts)\n    : '';\n  const afterText =\n    hazards.texts.length > 0 || eot.texts.length > 0\n      ? ' after ' + serializeText(hazards.texts.concat(eot.texts))\n      : '';\n\n  if ((move.timesUsed === 1 && move.timesUsedWithMetronome === 1) || move.isZ) {\n    const chance = computeKOChance(\n      damage, defender.curHP() - hazards.damage, 0, 1, 1, defender.maxHP(), toxicCounter\n    );\n    if (chance === 1) {\n      return {chance, n: 1, text: `guaranteed OHKO${hazardsText}`}; // eot wasn't considered\n    } else if (chance > 0) {\n      // note: still not accounting for EOT due to poor eot damage handling\n      return {\n        chance,\n        n: 1,\n        text: qualifier + Math.round(chance * 1000) / 10 + `% chance to OHKO${hazardsText}`,\n      };\n    }\n\n    // Parental Bond's combined first + second hit only is accurate for chance to OHKO, for\n    // multihit KOs its only approximated. We should be doing squashMultihit here instead of\n    // pretending we ar emore accurate than we are, but just throwing on an qualifer should be\n    // sufficient.\n    if (damage.length === 256) {\n      qualifier = 'approx. ';\n      // damage = squashMultihit(gen, damage, move.hits, err);\n    }\n\n    for (let i = 2; i <= 4; i++) {\n      const chance = computeKOChance(\n        damage, defender.curHP() - hazards.damage, eot.damage, i, 1, defender.maxHP(), toxicCounter\n      );\n      if (chance === 1) {\n        return {chance, n: i, text: `${qualifier || 'guaranteed '}${i}HKO${afterText}`};\n      } else if (chance > 0) {\n        return {\n          chance,\n          n: i,\n          text: qualifier + Math.round(chance * 1000) / 10 + `% chance to ${i}HKO${afterText}`,\n        };\n      }\n    }\n\n    for (let i = 5; i <= 9; i++) {\n      if (\n        predictTotal(damage[0], eot.damage, i, 1, toxicCounter, defender.maxHP()) >=\n        defender.curHP() - hazards.damage\n      ) {\n        return {chance: 1, n: i, text: `${qualifier || 'guaranteed '}${i}HKO${afterText}`};\n      } else if (\n        predictTotal(damage[damage.length - 1], eot.damage, i, 1, toxicCounter, defender.maxHP()) >=\n        defender.curHP() - hazards.damage\n      ) {\n        return {n: i, text: qualifier + `possible ${i}HKO${afterText}`};\n      }\n    }\n  } else {\n    const chance = computeKOChance(\n      damage, defender.maxHP() - hazards.damage,\n      eot.damage,\n      move.hits || 1,\n      move.timesUsed || 1,\n      defender.maxHP(),\n      toxicCounter\n    );\n    if (chance === 1) {\n      return {\n        chance,\n        n: move.timesUsed,\n        text: `${qualifier || 'guaranteed '}KO in ${move.timesUsed} turns${afterText}`,\n      };\n    } else if (chance > 0) {\n      return {\n        chance,\n        n: move.timesUsed,\n        text:\n          qualifier +\n          Math.round(chance * 1000) / 10 +\n          `% chance to ${move.timesUsed}HKO${afterText}`,\n      };\n    }\n\n    if (predictTotal(\n      damage[0],\n      eot.damage,\n      move.hits,\n      move.timesUsed,\n      toxicCounter,\n      defender.maxHP()\n    ) >=\n      defender.curHP() - hazards.damage\n    ) {\n      return {\n        chance: 1,\n        n: move.timesUsed,\n        text: `${qualifier || 'guaranteed '}KO in ${move.timesUsed} turns${afterText}`,\n      };\n    } else if (\n      predictTotal(\n        damage[damage.length - 1],\n        eot.damage,\n        move.hits,\n        move.timesUsed,\n        toxicCounter,\n        defender.maxHP()\n      ) >=\n      defender.curHP() - hazards.damage\n    ) {\n      return {\n        n: move.timesUsed,\n        text: qualifier + `possible KO in ${move.timesUsed} turns${afterText}`,\n      };\n    }\n    return {n: move.timesUsed, text: qualifier + 'not a KO'};\n  }\n\n  return {chance: 0, n: 0, text: ''};\n}\n\nfunction combine(damage: Damage) {\n  // Fixed Damage\n  if (typeof damage === 'number') return [damage];\n  // Standard Damage\n  if (damage.length > 2) {\n    if (damage[0] > damage[damage.length - 1]) damage = damage.slice().sort() as number[];\n    return damage as number[];\n  }\n  // Fixed Parental Bond Damage\n  if (typeof damage[0] === 'number' && typeof damage[1] === 'number') {\n    return [damage[0] + damage[1]];\n  }\n  // Parental Bond Damage\n  const d = damage as [number[], number[]];\n  const combined = [];\n  for (let i = 0; i < d[0].length; i++) { // eslint-disable-line\n    for (let j = 0; j < d[1].length; j++) { // eslint-disable-line\n      combined.push(d[0][i] + d[1][j]);\n    }\n  }\n  return combined.sort();\n}\n\nconst TRAPPING = [\n  'Bind', 'Clamp', 'Fire Spin', 'Infestation', 'Magma Storm', 'Sand Tomb',\n  'Thunder Cage', 'Whirlpool', 'Wrap', 'G-Max Sandblast', 'G-Max Centiferno',\n];\n\nfunction getBossMultiplierDesc(defender: Pokemon){\n    if(defender.bossMultiplier > 100){\n        return ` of ${toFixedIfNecessary(defender.bossMultiplier/100, 1)}x hp boss`\n    }\n    return ''\n}\n\nfunction toFixedIfNecessary( value : any, dp : number ){\n    return +parseFloat(value).toFixed( dp );\n  }\n\nfunction getHazards(gen: Generation, defender: Pokemon, defenderSide: Side) {\n  let damage = 0;\n  const texts: string[] = [];\n\n  if (defender.hasItem('Heavy-Duty Boots')) {\n    return {damage, texts};\n  }\n  if (defenderSide.isSR && !defender.hasAbility('Magic Guard', 'Mountaineer')) {\n    const rockType = gen.types.get('rock' as ID)!;\n    const effectiveness =\n      rockType.effectiveness[defender.types[0]]! *\n      (defender.types[1] ? rockType.effectiveness[defender.types[1]]! : 1);\n    damage += Math.floor((effectiveness * defender.maxHP()) / 8);\n    texts.push('Stealth Rock');\n  }\n  if (defenderSide.steelsurge && !defender.hasAbility('Magic Guard', 'Mountaineer')) {\n    const steelType = gen.types.get('steel' as ID)!;\n    const effectiveness =\n      steelType.effectiveness[defender.types[0]]! *\n      (defender.types[1] ? steelType.effectiveness[defender.types[1]]! : 1);\n    damage += Math.floor((effectiveness * defender.maxHP()) / 8);\n    texts.push('Steelsurge');\n  }\n\n  if (!defender.hasType('Flying') &&\n      !defender.hasAbility('Magic Guard', 'Levitate') &&\n      !defender.hasItem('Air Balloon')\n  ) {\n    if (defenderSide.spikes === 1) {\n      damage += Math.floor(defender.maxHP() / 8);\n      if (gen.num === 2) {\n        texts.push('Spikes');\n      } else {\n        texts.push('1 layer of Spikes');\n      }\n    } else if (defenderSide.spikes === 2) {\n      damage += Math.floor(defender.maxHP() / 6);\n      texts.push('2 layers of Spikes');\n    } else if (defenderSide.spikes === 3) {\n      damage += Math.floor(defender.maxHP() / 4);\n      texts.push('3 layers of Spikes');\n    }\n  }\n\n  if (isNaN(damage)) {\n    damage = 0;\n  }\n\n  return {damage, texts};\n}\n\nexport function getEndOfTurn(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  let damage = 0;\n  const texts = [];\n\n  if (field.hasWeather('Sun', 'Harsh Sunshine')) {\n    if (defender.hasAbility('Dry Skin', 'Solar Power')) {\n      damage -= Math.floor(defender.maxHP() / 8);\n      texts.push(defender.ability + ' damage');\n    }\n  } else if (field.hasWeather('Rain', 'Heavy Rain')) {\n    if (defender.hasAbility('Dry Skin')) {\n      damage += Math.floor(defender.maxHP() / 8);\n      texts.push('Dry Skin recovery');\n    } else if (defender.hasAbility('Rain Dish')) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Rain Dish recovery');\n    }\n  } else if (field.hasWeather('Sand')) {\n    if (\n      !defender.hasType('Rock', 'Ground', 'Steel') &&\n      !defender.hasAbility('Magic Guard', 'Overcoat', 'Sand Force', 'Sand Rush', 'Sand Veil') &&\n      !defender.hasItem('Safety Goggles')\n    ) {\n      damage -= Math.floor(defender.maxHP() / (gen.num === 2 ? 8 : 16));\n      texts.push('sandstorm damage');\n    }\n  } else if (field.hasWeather('Hail', 'Snow')) {\n    if (defender.hasAbility('Ice Body')) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Ice Body recovery');\n    } else if (\n      !defender.hasType('Ice') &&\n      !defender.hasAbility('Magic Guard', 'Overcoat', 'Snow Cloak') &&\n      !defender.hasItem('Safety Goggles') &&\n      field.hasWeather('Hail')\n    ) {\n      damage -= Math.floor(defender.maxHP() / 16);\n      texts.push('hail damage');\n    }\n  }\n\n  const loseItem = move.named('Knock Off') && !defender.hasAbility('Sticky Hold');\n  if (defender.hasItem('Leftovers') && !loseItem) {\n    damage += Math.floor(defender.maxHP() / 16);\n    texts.push('Leftovers recovery');\n  } else if (defender.hasItem('Black Sludge') && !loseItem) {\n    if (defender.hasType('Poison')) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Black Sludge recovery');\n    } else if (!defender.hasAbility('Magic Guard', 'Klutz')) {\n      damage -= Math.floor(defender.maxHP() / 8);\n      texts.push('Black Sludge damage');\n    }\n  } else if (defender.hasItem('Sticky Barb')) {\n    damage -= Math.floor(defender.maxHP() / 8);\n    texts.push('Sticky Barb damage');\n  }\n\n  if (field.defenderSide.isSeeded) {\n    if (!defender.hasAbility('Magic Guard')) {\n      // 1/16 in gen 1, 1/8 in gen 2 onwards\n      damage -= Math.floor(defender.maxHP() / (gen.num >= 2 ? 8 : 16));\n      texts.push('Leech Seed damage');\n    }\n  }\n\n  if (field.attackerSide.isSeeded && !attacker.hasAbility('Magic Guard')) {\n    let recovery = Math.floor(attacker.maxHP() / (gen.num >= 2 ? 8 : 16));\n    if (defender.hasItem('Big Root')) recovery = Math.trunc(recovery * 5324 / 4096);\n    if (attacker.hasAbility('Liquid Ooze')) {\n      damage -= recovery;\n      texts.push('Liquid Ooze damage');\n    } else {\n      damage += recovery;\n      texts.push('Leech Seed recovery');\n    }\n  }\n\n  if (field.hasTerrain('Grassy')) {\n    if (isGrounded(defender, field)) {\n      damage += Math.floor(defender.maxHP() / 16);\n      texts.push('Grassy Terrain recovery');\n    }\n  }\n\n  if (defender.hasStatus('psn')) {\n    if (defender.hasAbility('Poison Heal')) {\n      damage += Math.floor(defender.maxHP() / 8);\n      texts.push('Poison Heal');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      damage -= Math.floor(defender.maxHP() / (gen.num === 1 ? 16 : 8));\n      texts.push('poison damage');\n    }\n  } else if (defender.hasStatus('tox')) {\n    if (defender.hasAbility('Poison Heal')) {\n      damage += Math.floor(defender.maxHP() / 8);\n      texts.push('Poison Heal');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      texts.push('toxic damage');\n    }\n  } else if (defender.hasStatus('brn')) {\n    if (defender.hasAbility('Heatproof')) {\n      damage -= Math.floor(defender.maxHP() / (gen.num > 6 ? 32 : 16));\n      texts.push('reduced burn damage');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      damage -= Math.floor(defender.maxHP() / (gen.num === 1 || gen.num > 6 ? 16 : 8));\n      texts.push('burn damage');\n    }\n  } else if (\n    (defender.hasStatus('slp') || defender.hasAbility('Comatose')) &&\n    attacker.hasAbility('isBadDreams') &&\n    !defender.hasAbility('Magic Guard')\n  ) {\n    damage -= Math.floor(defender.maxHP() / 8);\n    texts.push('Bad Dreams');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && TRAPPING.includes(move.name)) {\n    if (attacker.hasItem('Binding Band')) {\n      damage -= gen.num > 5 ? Math.floor(defender.maxHP() / 6) : Math.floor(defender.maxHP() / 8);\n      texts.push('trapping damage');\n    } else {\n      damage -= gen.num > 5 ? Math.floor(defender.maxHP() / 8) : Math.floor(defender.maxHP() / 16);\n      texts.push('trapping damage');\n    }\n  }\n  if (defender.isSaltCure && !defender.hasAbility('Magic Guard')) {\n    const isWaterOrSteel = defender.hasType('Water', 'Steel') ||\n      (defender.teraType && ['Water', 'Steel'].includes(defender.teraType));\n    damage -= Math.floor(defender.maxHP() / (isWaterOrSteel ? 4 : 8));\n    texts.push('Salt Cure');\n  }\n  if (!defender.hasType('Fire') && !defender.hasAbility('Magic Guard') &&\n      (move.named('Fire Pledge (Grass Pledge Boosted)', 'Grass Pledge (Fire Pledge Boosted)'))) {\n    damage -= Math.floor(defender.maxHP() / 8);\n    texts.push('Sea of Fire damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Grass') &&\n      (field.defenderSide.vinelash || move.named('G-Max Vine Lash'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Vine Lash damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Fire') &&\n      (field.defenderSide.wildfire || move.named('G-Max Wildfire'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Wildfire damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Water') &&\n      (field.defenderSide.cannonade || move.named('G-Max Cannonade'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Cannonade damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Rock') &&\n      (field.defenderSide.volcalith || move.named('G-Max Volcalith'))) {\n    damage -= Math.floor(defender.maxHP() / 6);\n    texts.push('Volcalith damage');\n  }\n\n  return {damage, texts};\n}\n\nfunction computeKOChance(\n  damage: number[],\n  hp: number,\n  eot: number,\n  hits: number,\n  timesUsed: number,\n  maxHP: number,\n  toxicCounter: number\n) {\n  const n = damage.length;\n  if (hits === 1) {\n    for (let i = 0; i < n; i++) {\n      if (damage[n - 1] < hp) return 0;\n      if (damage[i] >= hp) {\n        return (n - i) / n;\n      }\n    }\n  }\n  let toxicDamage = 0;\n  if (toxicCounter > 0) {\n    toxicDamage = Math.floor((toxicCounter * maxHP) / 16);\n    toxicCounter++;\n  }\n  let sum = 0;\n  let lastc = 0;\n  for (let i = 0; i < n; i++) {\n    let c;\n    if (i === 0 || damage[i] !== damage[i - 1]) {\n      c = computeKOChance(\n        damage,\n        hp - damage[i] + eot - toxicDamage,\n        eot,\n        hits - 1,\n        timesUsed,\n        maxHP,\n        toxicCounter\n      );\n    } else {\n      c = lastc;\n    }\n    if (c === 1) {\n      sum += n - i;\n      break;\n    } else {\n      sum += c;\n    }\n    lastc = c;\n  }\n  return sum / n;\n}\n\nfunction predictTotal(\n  damage: number,\n  eot: number,\n  hits: number,\n  timesUsed: number,\n  toxicCounter: number,\n  maxHP: number\n) {\n  let toxicDamage = 0;\n  if (toxicCounter > 0) {\n    for (let i = 0; i < hits - 1; i++) {\n      toxicDamage += Math.floor(((toxicCounter + i) * maxHP) / 16);\n    }\n  }\n  let total = 0;\n  if (hits > 1 && timesUsed === 1) {\n    total = damage * hits - eot * (hits - 1) + toxicDamage;\n  } else {\n    total = damage - eot * (hits - 1) + toxicDamage;\n  }\n  return total;\n}\n\nfunction squashMultihit(gen: Generation, d: number[], hits: number, err = true) {\n  if (d.length === 1) {\n    return [d[0] * hits];\n  } else if (gen.num === 1) {\n    const r = [];\n    for (let i = 0; i < d.length; i++) {\n      r[i] = d[i] * hits;\n    }\n    return r;\n  } else if (d.length === 16) {\n    switch (hits) {\n    case 2:\n      return [\n        2 * d[0], d[2] + d[3], d[4] + d[4], d[4] + d[5], d[5] + d[6], d[6] + d[6],\n        d[6] + d[7], d[7] + d[7], d[8] + d[8], d[8] + d[9], d[9] + d[9], d[9] + d[10],\n        d[10] + d[11], d[11] + d[11], d[12] + d[13], 2 * d[15],\n      ];\n    case 3:\n      return [\n        3 * d[0], d[3] + d[3] + d[4], d[4] + d[4] + d[5], d[5] + d[5] + d[6],\n        d[5] + d[6] + d[6], d[6] + d[6] + d[7], d[6] + d[7] + d[7], d[7] + d[7] + d[8],\n        d[7] + d[8] + d[8], d[8] + d[8] + d[9], d[8] + d[9] + d[9], d[9] + d[9] + d[10],\n        d[9] + d[10] + d[10], d[10] + d[11] + d[11], d[11] + d[12] + d[12], 3 * d[15],\n      ];\n    case 4:\n      return [\n        4 * d[0], 4 * d[4], d[4] + d[5] + d[5] + d[5], d[5] + d[5] + d[6] + d[6],\n        4 * d[6], d[6] + d[6] + d[7] + d[7], 4 * d[7], d[7] + d[7] + d[7] + d[8],\n        d[7] + d[8] + d[8] + d[8], 4 * d[8], d[8] + d[8] + d[9] + d[9], 4 * d[9],\n        d[9] + d[9] + d[10] + d[10], d[10] + d[10] + d[10] + d[11], 4 * d[11], 4 * d[15],\n      ];\n    case 5:\n      return [\n        5 * d[0], d[4] + d[4] + d[4] + d[5] + d[5], d[5] + d[5] + d[5] + d[5] + d[6],\n        d[5] + d[6] + d[6] + d[6] + d[6], d[6] + d[6] + d[6] + d[6] + d[7],\n        d[6] + d[6] + d[7] + d[7] + d[7], 5 * d[7], d[7] + d[7] + d[7] + d[8] + d[8],\n        d[7] + d[7] + d[8] + d[8] + d[8], 5 * d[8], d[8] + d[8] + d[8] + d[9] + d[9],\n        d[8] + d[9] + d[9] + d[9] + d[9], d[9] + d[9] + d[9] + d[9] + d[10],\n        d[9] + d[10] + d[10] + d[10] + d[10], d[10] + d[10] + d[11] + d[11] + d[11], 5 * d[15],\n      ];\n    case 10:\n      return [\n        10 * d[0], 10 * d[4], 3 * d[4] + 7 * d[5], 5 * d[5] + 5 * d[6], 10 * d[6],\n        5 * d[6] + 5 * d[7], 10 * d[7], 7 * d[7] + 3 * d[8], 3 * d[7] + 7 * d[8], 10 * d[8],\n        5 * d[8] + 5 * d[9], 4 * d[9], 5 * d[9] + 5 * d[10], 7 * d[10] + 3 * d[11], 10 * d[11],\n        10 * d[15],\n      ];\n    default:\n      error(err, `Unexpected # of hits: ${hits}`);\n      return d;\n    }\n  } else if (d.length === 39) {\n    switch (hits) {\n    case 2:\n      return [\n        2 * d[0], 2 * d[7], 2 * d[10], 2 * d[12], 2 * d[14], d[15] + d[16],\n        2 * d[17], d[18] + d[19], d[19] + d[20], 2 * d[21], d[22] + d[23],\n        2 * d[24], 2 * d[26], 2 * d[28], 2 * d[31], 2 * d[38],\n      ];\n    case 3:\n      return [\n        3 * d[0], 3 * d[9], 3 * d[12], 3 * d[13], 3 * d[15], 3 * d[16],\n        3 * d[17], 3 * d[18], 3 * d[20], 3 * d[21], 3 * d[22], 3 * d[23],\n        3 * d[25], 3 * d[26], 3 * d[29], 3 * d[38],\n      ];\n    case 4:\n      return [\n        4 * d[0], 2 * d[10] + 2 * d[11], 4 * d[13], 4 * d[14], 2 * d[15] + 2 * d[16],\n        2 * d[16] + 2 * d[17], 2 * d[17] + 2 * d[18], 2 * d[18] + 2 * d[19],\n        2 * d[19] + 2 * d[20], 2 * d[20] + 2 * d[21], 2 * d[21] + 2 * d[22],\n        2 * d[22] + 2 * d[23], 4 * d[24], 4 * d[25], 2 * d[27] + 2 * d[28], 4 * d[38],\n      ];\n    case 5:\n      return [\n        5 * d[0], 5 * d[11], 5 * d[13], 5 * d[15], 5 * d[16], 5 * d[17],\n        5 * d[18], 5 * d[19], 5 * d[19], 5 * d[20], 5 * d[21], 5 * d[22],\n        5 * d[23], 5 * d[25], 5 * d[27], 5 * d[38],\n      ];\n    case 10:\n      return [\n        10 * d[0], 10 * d[11], 10 * d[13], 10 * d[15], 10 * d[16], 10 * d[17],\n        10 * d[18], 10 * d[19], 10 * d[19], 10 * d[20], 10 * d[21], 10 * d[22],\n        10 * d[23], 10 * d[25], 10 * d[27], 10 * d[38],\n      ];\n    default:\n      error(err, `Unexpected # of hits: ${hits}`);\n      return d;\n    }\n  } else if (d.length === 256) {\n    if (hits > 1) {\n      error(err, `Unexpected # of hits for Parental Bond: ${hits}`);\n    }\n    // FIXME: Come up with a better Parental Bond approximation\n    const r: number[] = [];\n    for (let i = 0; i < 16; i++) {\n      let val = 0;\n      for (let j = 0; j < 16; j++) {\n        val += d[i + j];\n      }\n      r[i] = Math.round(val / 16);\n    }\n    return r;\n  } else {\n    error(err, `Unexpected # of possible damage values: ${d.length}`);\n    return d;\n  }\n}\n\nfunction buildDescription(description: RawDesc, attacker: Pokemon, defender: Pokemon) {\n  const [attackerLevel, defenderLevel] = getDescriptionLevels(attacker, defender);\n  let output = '';\n  if (description.attackBoost) {\n    if (description.attackBoost > 0) {\n      output += '+';\n    }\n    output += description.attackBoost + ' ';\n  }\n  output = appendIfSet(output, attackerLevel);\n  output = appendIfSet(output, description.attackEVs);\n  output = appendIfSet(output, description.attackerItem);\n  output = appendIfSet(output, description.attackerAbility);\n  output = appendIfSet(output, description.rivalry);\n  if (description.isBurned) {\n    output += 'burned ';\n  }\n  if (description.alliesFainted) {\n    output += Math.min(5, description.alliesFainted) +\n      ` ${description.alliesFainted === 1 ? 'ally' : 'allies'} fainted `;\n  }\n  if (description.attackerTera) {\n    output += `Tera ${description.attackerTera} `;\n  }\n  if (description.isBeadsOfRuin) {\n    output += 'Beads of Ruin ';\n  }\n  if (description.isSwordOfRuin) {\n    output += 'Sword of Ruin ';\n  }\n  output += description.attackerName + ' ';\n  if (description.isHelpingHand) {\n    output += 'Helping Hand ';\n  }\n  if (description.isAtkCheered) {\n    output += 'Atk Cheer ';\n  }\n  if (description.isDefCheeredBodyPress) {\n    output += 'Def Cheer ';\n  }\n  if (description.isFlowerGiftAttacker) {\n    output += ' with an ally\\'s Flower Gift ';\n  }\n  if (description.isBattery) {\n    output += ' Battery boosted ';\n  }\n  if (description.isPowerSpot) {\n    output += ' Power Spot boosted ';\n  }\n  if(description.powerSpots){\n    output += `with ${description.powerSpots} Power Spot ${description.powerSpots === 1 ? 'boost' : 'boosts'} `;\n  }\n  if(description.steelySpirits){\n    output += `with ${description.steelySpirits}${attacker.hasAbility('Steely Spirit') ? ' extra' : ''} Steely Spirit${description.steelySpirits === 1 ? ' ' : 's '}`;\n  }\n  if (description.isSwitching) {\n    output += ' switching boosted ';\n  }\n  if (description.isCharged) {\n    output += ' charged ';\n  }\n  output += description.moveName + ' ';\n  if (description.moveBP && description.moveType) {\n    output += '(' + description.moveBP + ' BP ' + description.moveType + ') ';\n  } else if (description.moveBP) {\n    output += '(' + description.moveBP + ' BP) ';\n  } else if (description.moveType) {\n    output += '(' + description.moveType + ') ';\n  }\n  if (description.hits) {\n    output += '(' + description.hits + ' hits) ';\n  }\n  output = appendIfSet(output, description.moveTurns);\n  output += 'vs. ';\n  if (description.defenseBoost) {\n    if (description.defenseBoost > 0) {\n      output += '+';\n    }\n    output += description.defenseBoost + ' ';\n  }\n  output = appendIfSet(output, defenderLevel);\n  output = appendIfSet(output, description.HPEVs);\n  if (description.defenseEVs) {\n    output += '/ ' + description.defenseEVs + ' ';\n  }\n  output = appendIfSet(output, description.defenderItem);\n  output = appendIfSet(output, description.defenderAbility);\n  if (description.isTabletsOfRuin) {\n    output += 'Tablets of Ruin ';\n  }\n  if (description.isVesselOfRuin) {\n    output += 'Vessel of Ruin ';\n  }\n  if (description.isProtected) {\n    output += 'protected ';\n  }\n  if (description.isDefenderDynamaxed) {\n    output += 'Dynamax ';\n  }\n  if (description.defenderTera) {\n    output += `Tera ${description.defenderTera} `;\n  }\n  output += description.defenderName;\n  if (description.weather && description.terrain) {\n    // do nothing\n  } else if (description.weather) {\n    output += ' in ' + description.weather;\n  } else if (description.terrain) {\n    output += ' in ' + description.terrain + ' Terrain';\n  }\n  if (description.isReflect) {\n    output += ' through Reflect';\n  } else if (description.isLightScreen) {\n    output += ' through Light Screen';\n  }\n  if (description.isDefCheered) {\n    if(description.isReflect || description.isLightScreen){\n        output += ' and Def Cheer';\n    } else {\n        output += ' through Def Cheer';\n    }\n  }\n  if (description.isFlowerGiftDefender) {\n    output += ' with an ally\\'s Flower Gift';\n  }\n  if (description.isFriendGuard) {\n    output += ' with an ally\\'s Friend Guard';\n  }\n  if (description.friendGuards) {\n    output += ` with ${description.friendGuards} ${description.friendGuards > 1 ? \"allies'\" : \"ally's\"} Friend Guard${description.steelySpirits === 1 ? '' : 's'}`;\n  }\n  if (description.isAuroraVeil) {\n    output += ' with an ally\\'s Aurora Veil';\n  }\n  if (description.isCritical) {\n    output += ' on a critical hit';\n  }\n  if (description.isWonderRoom) {\n    output += ' in Wonder Room';\n  }\n  return output;\n}\n\nfunction getDescriptionLevels(attacker: Pokemon, defender: Pokemon) {\n  if (attacker.level !== defender.level) {\n    return [\n      attacker.level === 100 ? '' : `Lvl ${attacker.level}`,\n      defender.level === 100 ? '' : `Lvl ${defender.level}`,\n    ];\n  }\n  // There's an argument for showing any level thats not 100, but VGC and LC players\n  // probably would rather not see level cruft in their calcs\n  const elide = [100, 50, 5].includes(attacker.level);\n  const level = elide ? '' : `Lvl ${attacker.level}`;\n  return [level, level];\n}\n\nfunction serializeText(arr: string[]) {\n  if (arr.length === 0) {\n    return '';\n  } else if (arr.length === 1) {\n    return arr[0];\n  } else if (arr.length === 2) {\n    return arr[0] + ' and ' + arr[1];\n  } else {\n    let text = '';\n    for (let i = 0; i < arr.length - 1; i++) {\n      text += arr[i] + ', ';\n    }\n    return text + 'and ' + arr[arr.length - 1];\n  }\n}\n\nfunction appendIfSet(str: string, toAppend?: string) {\n  return toAppend ? `${str}${toAppend} ` : str;\n}\n\nfunction toDisplay(notation: string, a: number, b: number, f = 1) {\n  return notation === '%' ? Math.floor((a * (1000 / f)) / b) / 10 : Math.floor((a * (48 / f)) / b);\n}\n","import {RawDesc, display, displayMove, getRecovery, getRecoil, getKOChance} from './desc';\nimport {Generation} from './data/interface';\nimport {Field} from './field';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\n\nexport type Damage = number | number[] | [number, number] | [number[], number[]];\n\nexport class Result {\n  gen: Generation;\n  attacker: Pokemon;\n  defender: Pokemon;\n  move: Move;\n  field: Field;\n  damage: number | number[] | [number[], number[]];\n  rawDesc: RawDesc;\n\n  constructor(\n    gen: Generation,\n    attacker: Pokemon,\n    defender: Pokemon,\n    move: Move,\n    field: Field,\n    damage: Damage,\n    rawDesc: RawDesc,\n  ) {\n    this.gen = gen;\n    this.attacker = attacker;\n    this.defender = defender;\n    this.move = move;\n    this.field = field;\n    this.damage = damage;\n    this.rawDesc = rawDesc;\n  }\n\n  /* get */ desc() {\n    return this.fullDesc();\n  }\n\n  range(): [number, number] {\n    const range = damageRange(this.damage);\n    if (typeof range[0] === 'number') return range as [number, number];\n    const d = range as [number[], number[]];\n    return [d[0][0] + d[0][1], d[1][0] + d[1][1]];\n  }\n\n  fullDesc(notation = '%', err = true) {\n    return display(\n      this.gen,\n      this.attacker,\n      this.defender,\n      this.move,\n      this.field,\n      this.damage,\n      this.rawDesc,\n      notation,\n      err\n    );\n  }\n\n  moveDesc(notation = '%') {\n    return displayMove(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  recovery(notation = '%') {\n    return getRecovery(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  recoil(notation = '%') {\n    return getRecoil(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  kochance(err = true) {\n    return getKOChance(\n      this.gen,\n      this.attacker,\n      this.defender,\n      this.move,\n      this.field,\n      this.damage,\n      err\n    );\n  }\n}\n\nexport function damageRange(\n  damage: Damage\n): [number, number] | [[number, number], [number, number]] {\n  // Fixed Damage\n  if (typeof damage === 'number') return [damage, damage];\n  // Standard Damage\n  if (damage.length > 2) {\n    const d = damage as number[];\n    if (d[0] > d[d.length - 1]) return [Math.min(...d), Math.max(...d)];\n    return [d[0], d[d.length - 1]];\n  }\n  // Fixed Parental Bond Damage\n  if (typeof damage[0] === 'number' && typeof damage[1] === 'number') {\n    return [[damage[0], damage[1]], [damage[0], damage[1]]];\n  }\n  // Parental Bond Damage\n  const d = damage as [number[], number[]];\n  if (d[0][0] > d[0][d[0].length - 1]) d[0] = d[0].slice().sort();\n  if (d[1][0] > d[1][d[1].length - 1]) d[1] = d[1].slice().sort();\n  return [[d[0][0], d[1][0]], [d[0][d[0].length - 1], d[1][d[1].length - 1]]];\n}\n","import {Generation} from '../data/interface';\nimport {getItemBoostType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {computeFinalStats, getMoveEffectiveness, handleFixedDamageMoves} from './util';\n\nexport function calculateRBYGSC(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'def', 'spa', 'spd', 'spe');\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status') {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  // Fixed damage moves (eg. Night Shade) ignore type effectiveness in Gen 1\n  if (gen.num === 1) {\n    const fixedDamage = handleFixedDamageMoves(attacker, move);\n    if (fixedDamage) {\n      result.damage = fixedDamage;\n      return result;\n    }\n  }\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType && gen.num === 2) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n\n  const type1Effectiveness =\n    getMoveEffectiveness(gen, move, firstDefenderType, field.defenderSide.isForesight);\n  const type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, field.defenderSide.isForesight)\n    : 1;\n  const typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if (gen.num === 2) {\n    const fixedDamage = handleFixedDamageMoves(attacker, move);\n    if (fixedDamage) {\n      result.damage = fixedDamage;\n      return result;\n    }\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  // Flail and Reversal are variable BP and never crit\n  if (move.named('Flail', 'Reversal')) {\n    move.isCrit = false;\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    move.bp = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = move.bp;\n  } else if (move.named('Present') && !move.bp) {\n    // Present is technically 0 BP so we default to 40 in that case, but the UI may override the\n    // base power in order to simulate the scenarios where it is 80 or 120 BP.\n    move.bp = 40;\n  }\n\n  if (move.bp === 0) {\n    return result;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  let at = attacker.stats[attackStat]!;\n  let df = defender.stats[defenseStat]!;\n\n  // Whether we ignore Reflect, Light Screen, stat stages, and burns if attack is a crit differs\n  // by gen - in gen 2 we also need to check that the attacker does not have stat stage advantage\n  const ignoreMods = move.isCrit &&\n    (gen.num === 1 ||\n    (gen.num === 2 && attacker.boosts[attackStat]! <= defender.boosts[defenseStat]!));\n\n  let lv = attacker.level;\n  if (ignoreMods) {\n    at = attacker.rawStats[attackStat]!;\n    df = defender.rawStats[defenseStat]!;\n    if (gen.num === 1) {\n      lv *= 2;\n      desc.isCritical = true;\n    }\n  } else {\n    if (attacker.boosts[attackStat] !== 0) desc.attackBoost = attacker.boosts[attackStat];\n    if (defender.boosts[defenseStat] !== 0) desc.defenseBoost = defender.boosts[defenseStat];\n    if (isPhysical && attacker.hasStatus('brn')) {\n      at = Math.floor(at / 2);\n      desc.isBurned = true;\n    }\n  }\n\n  if (move.named('Explosion', 'Self-Destruct')) {\n    df = Math.floor(df / 2);\n  }\n\n  if (!ignoreMods) {\n    if (isPhysical && field.defenderSide.isReflect) {\n      df *= 2;\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      df *= 2;\n      desc.isLightScreen = true;\n    }\n  }\n\n  if ((attacker.named('Pikachu') && attacker.hasItem('Light Ball') && !isPhysical) ||\n      (attacker.named('Cubone', 'Marowak') && attacker.hasItem('Thick Club') && isPhysical)) {\n    at *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  if (at > 255 || df > 255) {\n    at = Math.floor(at / 4) % 256;\n    df = Math.floor(df / 4) % 256;\n  }\n\n  // Gen 2 Present has a glitched damage calculation using the secondary types of the Pokemon\n  // for the Attacker's Level and Defender's Defense.\n  if (move.named('Present')) {\n    const lookup: {[id: string]: number} = {\n      Normal: 0, Fighting: 1, Flying: 2, Poison: 3, Ground: 4, Rock: 5, Bug: 7,\n      Ghost: 8, Steel: 9, '???': 19, Fire: 20, Water: 21, Grass: 22, Electric: 23,\n      Psychic: 24, Ice: 25, Dragon: 26, Dark: 27,\n    };\n\n    at = 10;\n    df = Math.max(lookup[attacker.types[1] ? attacker.types[1] : attacker.types[0]], 1);\n    lv = Math.max(lookup[defender.types[1] ? defender.types[1] : defender.types[0]], 1);\n  }\n\n  if (defender.named('Ditto') && defender.hasItem('Metal Powder')) {\n    df = Math.floor(df * 1.5);\n    desc.defenderItem = defender.item;\n  }\n\n  let baseDamage = Math.floor(\n    Math.floor((Math.floor((2 * lv) / 5 + 2) * Math.max(1, at) * move.bp) / Math.max(1, df)) / 50\n  );\n\n  // Gen 1 handles move.isCrit above by doubling level\n  if (gen.num === 2 && move.isCrit) {\n    baseDamage *= 2;\n    desc.isCritical = true;\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    baseDamage = Math.floor(baseDamage * 2);\n    desc.isSwitching = 'out';\n  }\n\n  // In Gen 2 and no other gens, Dragon Fang in a no-op and Dragon Scale erroneously has its effect\n  const itemBoostType =\n    attacker.hasItem('Dragon Fang')\n      ? undefined\n      : getItemBoostType(attacker.hasItem('Dragon Scale') ? 'Dragon Fang' : attacker.item);\n\n  if (move.hasType(itemBoostType)) {\n    baseDamage = Math.floor(baseDamage * 1.1);\n    desc.attackerItem = attacker.item;\n  }\n\n  baseDamage = Math.min(997, baseDamage) + 2;\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && (move.hasType('Fire') || move.named('Solar Beam')))\n  ) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.weather = field.weather;\n  }\n\n  if (move.hasType(...attacker.types)) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n  }\n\n  if (gen.num === 1) {\n    baseDamage = Math.floor(baseDamage * type1Effectiveness);\n    baseDamage = Math.floor(baseDamage * type2Effectiveness);\n  } else {\n    baseDamage = Math.floor(baseDamage * typeEffectiveness);\n  }\n\n  // Flail and Reversal don't use random factor\n  if (move.named('Flail', 'Reversal')) {\n    result.damage = baseDamage;\n    return result;\n  }\n\n  result.damage = [];\n  for (let i = 217; i <= 255; i++) {\n    if (gen.num === 2) { // in gen 2 damage is always rounded up to 1. TODO ADD TESTS\n      result.damage[i - 217] = Math.max(1, Math.floor((baseDamage * i) / 255));\n    } else {\n      if (baseDamage === 1) { // in gen 1 the random factor multiplication is skipped if damage = 1\n        result.damage[i - 217] = 1;\n      } else {\n        result.damage[i - 217] = Math.floor((baseDamage * i) / 255);\n      }\n    }\n  }\n\n  return result;\n}\n","import {Generation, AbilityName} from '../data/interface';\nimport {getItemBoostType, getNaturalGift, getFlingPower, getBerryResistType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  getModifiedStat,\n  getEVDescriptionText,\n  getFinalSpeed,\n  getMoveEffectiveness,\n  checkAirLock,\n  checkForecast,\n  checkItem,\n  checkIntimidate,\n  checkDownload,\n  countBoosts,\n  handleFixedDamageMoves,\n} from './util';\n\nexport function calculateDPP(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker);\n  checkItem(defender);\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender);\n  checkDownload(defender, attacker);\n  attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n  defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected && !move.breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (attacker.hasAbility('Mold Breaker')) {\n    defender.ability = '' as AbilityName;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isCritical = move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor');\n\n  let basePower = move.bp;\n  if (move.named('Weather Ball')) {\n    if (field.hasWeather('Sun')) {\n      move.type = 'Fire';\n      basePower *= 2;\n    } else if (field.hasWeather('Rain')) {\n      move.type = 'Water';\n      basePower *= 2;\n    } else if (field.hasWeather('Sand')) {\n      move.type = 'Rock';\n      basePower *= 2;\n    } else if (field.hasWeather('Hail')) {\n      move.type = 'Ice';\n      basePower *= 2;\n    } else {\n      move.type = 'Normal';\n    }\n\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n    desc.moveBP = basePower;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    move.type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    move.type = gift.t;\n    move.bp = gift.p;\n    desc.attackerItem = attacker.item;\n    desc.moveBP = move.bp;\n    desc.moveType = move.type;\n  }\n\n  if (attacker.hasAbility('Normalize')) {\n    move.type = 'Normal';\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed = attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n  let type1Effectiveness =\n    getMoveEffectiveness(gen, move, firstDefenderType, isGhostRevealed, field.isGravity);\n  let type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, isGhostRevealed, field.isGravity)\n    : 1;\n\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  // Iron Ball ignores Klutz in generation 4\n  if (typeEffectiveness === 0 && move.hasType('Ground') && defender.hasItem('Iron Ball')) {\n    if (type1Effectiveness === 0) {\n      type1Effectiveness = 1;\n    } else if (defender.types[1] && type2Effectiveness === 0) {\n      type2Effectiveness = 1;\n    }\n    typeEffectiveness = type1Effectiveness * type2Effectiveness;\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  const ignoresWonderGuard = move.hasType('???') || move.named('Fire Fang');\n  if ((!ignoresWonderGuard && defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Water Absorb')) ||\n      (move.hasType('Electric') && defender.hasAbility('Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') && !field.isGravity &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.sound && defender.hasAbility('Soundproof'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    result.damage = fixedDamage;\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n  const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  switch (move.name) {\n  case 'Brine':\n    if (defender.curHP() <= defender.maxHP() / 2) {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((basePower * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Facade':\n    if (attacker.hasStatus('par', 'psn', 'tox', 'brn')) {\n      basePower = move.bp * 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((64 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 5 ? 150 : p <= 12 ? 100 : p <= 21 ? 80 : p <= 42 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Grass Knot':\n  case 'Low Kick':\n    const w = defender.weightkg;\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe));\n    desc.moveBP = basePower;\n    break;\n  case 'Payback':\n    if (turnOrder !== 'first') {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Wake-Up Slap':\n    if (defender.hasStatus('slp')) {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Special';\n    move.secondaries = true;\n    basePower = 80;\n    desc.moveName = 'Tri Attack';\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = Math.floor((defender.curHP() * 120) / defender.maxHP()) + 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n\n  if (basePower === 0) {\n    return result;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    basePower = Math.floor(basePower * 1.5);\n    desc.isHelpingHand = true;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  if ((attacker.hasItem('Muscle Band') && isPhysical) ||\n      (attacker.hasItem('Wise Glasses') && !isPhysical)) {\n    basePower = Math.floor(basePower * 1.1);\n    desc.attackerItem = attacker.item;\n  } else if (move.hasType(getItemBoostType(attacker.item)) ||\n    (attacker.hasItem('Adamant Orb') &&\n     attacker.named('Dialga') &&\n     move.hasType('Steel', 'Dragon')) ||\n    (attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia') &&\n     move.hasType('Water', 'Dragon')) ||\n    (attacker.hasItem('Griseous Orb') &&\n     attacker.named('Giratina-Origin') &&\n     move.hasType('Ghost', 'Dragon'))\n  ) {\n    basePower = Math.floor(basePower * 1.2);\n    desc.attackerItem = attacker.item;\n  }\n\n  if ((attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n      (attacker.hasAbility('Iron Fist') && move.flags.punch)) {\n    basePower = Math.floor(basePower * 1.2);\n    desc.attackerAbility = attacker.ability;\n  } else if ((attacker.curHP() <= attacker.maxHP() / 3 &&\n    ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n      (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n      (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n      (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n      (attacker.hasAbility('Technician') && basePower <= 60)\n  ) {\n    basePower = Math.floor(basePower * 1.5);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((defender.hasAbility('Heatproof') && move.hasType('Fire')) ||\n      (defender.hasAbility('Thick Fat') && (move.hasType('Fire', 'Ice')))) {\n    basePower = Math.floor(basePower * 0.5);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    basePower = Math.floor(basePower * 1.25);\n    desc.defenderAbility = defender.ability;\n  }\n\n  // #endregion\n  // #region (Special) Attack\n\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  desc.attackEVs = getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n  let attack: number;\n  const attackBoost = attacker.boosts[attackStat];\n  const rawAttack = attacker.rawStats[attackStat];\n  if (attackBoost === 0 || (isCritical && attackBoost < 0)) {\n    attack = rawAttack;\n  } else if (defender.hasAbility('Unaware')) {\n    attack = rawAttack;\n    desc.defenderAbility = defender.ability;\n  } else if (attacker.hasAbility('Simple')) {\n    attack = getSimpleModifiedStat(rawAttack, attackBoost);\n    desc.attackerAbility = attacker.ability;\n    desc.attackBoost = attackBoost;\n  } else {\n    attack = getModifiedStat(rawAttack, attackBoost);\n    desc.attackBoost = attackBoost;\n  }\n\n  if (isPhysical && attacker.hasAbility('Pure Power', 'Huge Power')) {\n    attack *= 2;\n    desc.attackerAbility = attacker.ability;\n  } else if (field.hasWeather('Sun') &&\n    (attacker.hasAbility(isPhysical ? 'Flower Gift' : 'Solar Power'))\n  ) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (field.attackerSide.isFlowerGift && field.hasWeather('Sun') && isPhysical) {\n    attack = Math.floor(attack * 1.5);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (isPhysical &&\n      (attacker.hasAbility('Hustle') || (attacker.hasAbility('Guts') && attacker.status)) ||\n    (!isPhysical && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus')))\n  ) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerAbility = attacker.ability;\n  } else if (isPhysical && attacker.hasAbility('Slow Start') && attacker.abilityOn) {\n    attack = Math.floor(attack / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((isPhysical ? attacker.hasItem('Choice Band') : attacker.hasItem('Choice Specs')) ||\n      (!isPhysical && attacker.hasItem('Soul Dew') && attacker.named('Latios', 'Latias'))) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Light Ball') && attacker.named('Pikachu')) ||\n    (attacker.hasItem('Thick Club') && attacker.named('Cubone', 'Marowak') && isPhysical) ||\n    (attacker.hasItem('Deep Sea Tooth') && attacker.named('Clamperl') && !isPhysical)\n  ) {\n    attack *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  // #endregion\n  // #region (Special) Defense\n\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  let defense: number;\n  const defenseBoost = defender.boosts[defenseStat];\n  const rawDefense = defender.rawStats[defenseStat];\n  if (defenseBoost === 0 || (isCritical && defenseBoost > 0)) {\n    defense = rawDefense;\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = rawDefense;\n    desc.attackerAbility = attacker.ability;\n  } else if (defender.hasAbility('Simple')) {\n    defense = getSimpleModifiedStat(rawDefense, defenseBoost);\n    desc.defenderAbility = defender.ability;\n    desc.defenseBoost = defenseBoost;\n  } else {\n    defense = getModifiedStat(rawDefense, defenseBoost);\n    desc.defenseBoost = defenseBoost;\n  }\n\n  if (defender.hasAbility('Marvel Scale') && defender.status && isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Flower Gift') && field.hasWeather('Sun') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (field.defenderSide.isFlowerGift && field.hasWeather('Sun') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  }\n\n  if (defender.hasItem('Soul Dew') && defender.named('Latios', 'Latias') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderItem = defender.item;\n  } else if (\n    (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !isPhysical) ||\n    (defender.hasItem('Metal Powder') && defender.named('Ditto') && isPhysical)\n  ) {\n    defense *= 2;\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.weather = field.weather;\n  }\n\n  if (move.named('Explosion') || move.named('Self-Destruct')) {\n    defense = Math.floor(defense * 0.5);\n  }\n\n  if (defense < 1) {\n    defense = 1;\n  }\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = Math.floor(\n    Math.floor((Math.floor((2 * attacker.level) / 5 + 2) * basePower * attack) / 50) / defense\n  );\n\n  if (attacker.hasStatus('brn') && isPhysical && !attacker.hasAbility('Guts')) {\n    baseDamage = Math.floor(baseDamage * 0.5);\n    desc.isBurned = true;\n  }\n\n  if (!isCritical) {\n    const screenMultiplier = field.gameType !== 'Singles' ? 2 / 3 : 1 / 2;\n    if (isPhysical && field.defenderSide.isReflect) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isLightScreen = true;\n    }\n  }\n\n  if (field.gameType !== 'Singles' &&\n      ['allAdjacent', 'allAdjacentFoes'].includes(move.target)) {\n    baseDamage = Math.floor((baseDamage * 3) / 4);\n  }\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire')) ||\n    (move.named('Solar Beam') && field.hasWeather('Rain', 'Sand', 'Hail'))\n  ) {\n    baseDamage = Math.floor(baseDamage * 0.5);\n    desc.weather = field.weather;\n  }\n\n  if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.attackerAbility = 'Flash Fire';\n  }\n\n  baseDamage += 2;\n\n  if (isCritical) {\n    if (attacker.hasAbility('Sniper')) {\n      baseDamage *= 3;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      baseDamage *= 2;\n    }\n    desc.isCritical = isCritical;\n  }\n\n  if (attacker.hasItem('Life Orb')) {\n    baseDamage = Math.floor(baseDamage * 1.3);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    // technician negates switching boost, thanks DaWoblefet\n    if (attacker.hasAbility('Technician')) {\n      baseDamage = Math.floor(baseDamage * 1);\n    } else {\n      baseDamage = Math.floor(baseDamage * 2);\n      desc.isSwitching = 'out';\n    }\n  }\n\n  // the random factor is applied between the LO mod and the STAB mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 1;\n  if (move.hasType(...attacker.types)) {\n    if (attacker.hasAbility('Adaptability')) {\n      stabMod = 2;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      stabMod = 1.5;\n    }\n  }\n\n  let filterMod = 1;\n  if (defender.hasAbility('Filter', 'Solid Rock') && typeEffectiveness > 1) {\n    filterMod = 0.75;\n    desc.defenderAbility = defender.ability;\n  }\n  let ebeltMod = 1;\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1) {\n    ebeltMod = 1.2;\n    desc.attackerItem = attacker.item;\n  }\n  let tintedMod = 1;\n  if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    tintedMod = 2;\n    desc.attackerAbility = attacker.ability;\n  }\n  let berryMod = 1;\n  if (move.hasType(getBerryResistType(defender.item)) &&\n    (typeEffectiveness > 1 || move.hasType('Normal'))) {\n    berryMod = 0.5;\n    desc.defenderItem = defender.item;\n  }\n\n  const damage: number[] = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] = Math.floor((baseDamage * (85 + i)) / 100);\n    damage[i] = Math.floor(damage[i] * stabMod);\n    damage[i] = Math.floor(damage[i] * type1Effectiveness);\n    damage[i] = Math.floor(damage[i] * type2Effectiveness);\n    damage[i] = Math.floor(damage[i] * filterMod);\n    damage[i] = Math.floor(damage[i] * ebeltMod);\n    damage[i] = Math.floor(damage[i] * tintedMod);\n    damage[i] = Math.floor(damage[i] * berryMod);\n    damage[i] = Math.max(1, damage[i]);\n  }\n  result.damage = damage;\n\n  // #endregion\n\n  return result;\n}\n\nfunction getSimpleModifiedStat(stat: number, mod: number) {\n  const simpleMod = Math.min(6, Math.max(-6, mod * 2));\n  return simpleMod > 0\n    ? Math.floor((stat * (2 + simpleMod)) / 2)\n    : simpleMod < 0 ? Math.floor((stat * 2) / (2 - simpleMod)) : stat;\n}\n","import {Generation, AbilityName} from '../data/interface';\nimport {toID} from '../util';\nimport {\n  getItemBoostType,\n  getNaturalGift,\n  getFlingPower,\n  getBerryResistType,\n  getTechnoBlast,\n} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  chainMods,\n  checkAirLock,\n  checkDownload,\n  checkForecast,\n  checkInfiltrator,\n  checkIntimidate,\n  checkItem,\n  checkMultihitBoost,\n  checkSeedBoost,\n  checkWonderRoom,\n  computeFinalStats,\n  countBoosts,\n  getBaseDamage,\n  getEVDescriptionText,\n  getFinalDamage,\n  getModifiedStat,\n  getMoveEffectiveness,\n  getWeightFactor,\n  handleFixedDamageMoves,\n  isGrounded,\n  OF16, OF32,\n  pokeRound,\n} from './util';\n\nexport function calculateBWXY(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker, field.isMagicRoom);\n  checkItem(defender, field.isMagicRoom);\n  checkWonderRoom(attacker, field.isWonderRoom);\n  checkWonderRoom(defender, field.isWonderRoom);\n  checkSeedBoost(attacker, field);\n  checkSeedBoost(defender, field);\n\n  computeFinalStats(gen, attacker, defender, field, 'def', 'spd', 'spe');\n\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender, field.isWonderRoom);\n  checkDownload(defender, attacker, field.isWonderRoom);\n\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'spa');\n\n  checkInfiltrator(attacker, field.defenderSide);\n  checkInfiltrator(defender, field.attackerSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n    isWonderRoom: field.isWonderRoom,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected && !move.breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (attacker.hasAbility('Mold Breaker', 'Teravolt', 'Turboblaze')) {\n    defender.ability = '' as AbilityName;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isCritical =\n    move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor') && move.timesUsed === 1;\n\n  if (move.named('Weather Ball')) {\n    move.type =\n      field.hasWeather('Sun', 'Harsh Sunshine') ? 'Fire'\n      : field.hasWeather('Rain', 'Heavy Rain') ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail') ? 'Ice'\n      : 'Normal';\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    move.type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Techno Blast') && attacker.item && attacker.item.includes('Drive')) {\n    move.type = getTechnoBlast(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    move.type = gift.t;\n    move.bp = gift.p;\n    desc.attackerItem = attacker.item;\n    desc.moveBP = move.bp;\n    desc.moveType = move.type;\n  } else if (move.named('Nature Power')) {\n    if (gen.num === 5) {\n      move.type = 'Ground';\n    } else {\n      move.type =\n        field.hasTerrain('Electric') ? 'Electric'\n        : field.hasTerrain('Grassy') ? 'Grass'\n        : field.hasTerrain('Misty') ? 'Fairy'\n        : 'Normal';\n    }\n  }\n\n  let isAerilate = false;\n  let isPixilate = false;\n  let isRefrigerate = false;\n  let isNormalize = false;\n  const noTypeChange =\n    move.named('Judgment', 'Nature Power', 'Techo Blast', 'Natural Gift', 'Weather Ball');\n\n  if (!move.isZ && !noTypeChange) {\n    const normal = move.hasType('Normal');\n    if ((isAerilate = attacker.hasAbility('Aerilate') && normal)) {\n      move.type = 'Flying';\n    } else if ((isPixilate = attacker.hasAbility('Pixilate') && normal)) {\n      move.type = 'Fairy';\n    } else if ((isRefrigerate = attacker.hasAbility('Refrigerate') && normal)) {\n      move.type = 'Ice';\n    } else if ((isNormalize = attacker.hasAbility('Normalize'))) {\n      move.type = 'Normal';\n    }\n    if (isPixilate || isRefrigerate || isAerilate || isNormalize) {\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (attacker.hasAbility('Gale Wings') && move.hasType('Flying')) {\n    move.priority = 1;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed = attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n  const type1Effectiveness =\n    getMoveEffectiveness(gen, move, defender.types[0], isGhostRevealed, field.isGravity);\n  const type2Effectiveness = defender.types[1]\n    ? getMoveEffectiveness(gen, move, defender.types[1], isGhostRevealed, field.isGravity)\n    : 1;\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  let resistedKnockOffDamage =\n    !defender.item ||\n    (defender.named('Giratina-Origin') && defender.hasItem('Griseous Orb')) ||\n    (defender.name.includes('Arceus') && defender.item.includes('Plate')) ||\n    (defender.name.includes('Genesect') && defender.item.includes('Drive')) ||\n    (defender.named('Groudon', 'Groudon-Primal') && defender.hasItem('Red Orb')) ||\n    (defender.named('Kyogre', 'Kyogre-Primal') && defender.hasItem('Blue Orb'));\n\n  // The last case only applies when the Pokemon is holding the Mega Stone that matches its species\n  // (or when it's already a Mega-Evolution)\n  if (!resistedKnockOffDamage && defender.item) {\n    const item = gen.items.get(toID(defender.item))!;\n    resistedKnockOffDamage = !!(item.megaEvolves && defender.name.includes(item.megaEvolves));\n  }\n\n  if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n    typeEffectiveness = 1;\n  } else if (typeEffectiveness === 0 && move.hasType('Ground') &&\n    defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n    typeEffectiveness = 1;\n  } else if (typeEffectiveness === 0 && defender.hasItem('Ring Target')) {\n    const effectiveness = gen.types.get(toID(move.type))!.effectiveness;\n    if (effectiveness[defender.types[0]]! === 0) {\n      typeEffectiveness = type2Effectiveness;\n    } else if (defender.types[1] && effectiveness[defender.types[1]]! === 0) {\n      typeEffectiveness = type1Effectiveness;\n    }\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((move.named('Sky Drop') &&\n        (defender.hasType('Flying') || defender.weightkg >= 200 || field.isGravity)) ||\n      (move.named('Synchronoise') && !defender.hasType(attacker.types[0]) &&\n        (!attacker.types[1] || !defender.hasType(attacker.types[1]))) ||\n      (move.named('Dream Eater') && !defender.hasStatus('slp'))\n  ) {\n    return result;\n  }\n\n  if (\n    (field.hasWeather('Harsh Sunshine') && move.hasType('Water')) ||\n    (field.hasWeather('Heavy Rain') && move.hasType('Fire'))\n  ) {\n    desc.weather = field.weather;\n    return result;\n  }\n\n  if (field.hasWeather('Strong Winds') && defender.hasType('Flying') &&\n      gen.types.get(toID(move.type))!.effectiveness['Flying']! > 1) {\n    typeEffectiveness /= 2;\n    desc.weather = field.weather;\n  }\n\n  if ((defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Grass') && defender.hasAbility('Sap Sipper')) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Storm Drain', 'Water Absorb')) ||\n      (move.hasType('Electric') &&\n        defender.hasAbility('Lightning Rod', 'Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') &&\n        !field.isGravity && !move.named('Thousand Arrows') &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.bullet && defender.hasAbility('Bulletproof')) ||\n      (move.flags.sound && defender.hasAbility('Soundproof'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  if (move.hasType('Ground') && !move.named('Thousand Arrows') &&\n      !field.isGravity && defender.hasItem('Air Balloon')) {\n    desc.defenderItem = defender.item;\n    return result;\n  }\n\n  if (move.priority > 0 && field.hasTerrain('Psychic') && isGrounded(defender, field)) {\n    desc.terrain = field.terrain;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    if (attacker.hasAbility('Parental Bond')) {\n      result.damage = [fixedDamage, fixedDamage];\n      desc.attackerAbility = attacker.ability;\n    } else {\n      result.damage = fixedDamage;\n    }\n    return result;\n  }\n\n  if (move.named('Final Gambit')) {\n    result.damage = attacker.curHP();\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  let basePower: number;\n\n  switch (move.name) {\n  case 'Payback':\n    basePower = move.bp * (turnOrder === 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Pursuit':\n    const switching = field.defenderSide.isSwitching === 'out';\n    basePower = move.bp * (switching ? 2 : 1);\n    if (switching) desc.isSwitching = 'out';\n    desc.moveBP = basePower;\n    break;\n  case 'Electro Ball':\n    if (defender.stats.spe === 0) defender.stats.spe = 1;\n    const r = Math.floor(attacker.stats.spe / defender.stats.spe);\n    basePower = r >= 4 ? 150 : r >= 3 ? 120 : r >= 2 ? 80 : r >= 1 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    if (attacker.stats.spe === 0) attacker.stats.spe = 1;\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe) + 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Low Kick':\n  case 'Grass Knot':\n    const w = defender.weightkg * getWeightFactor(defender);\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Hex':\n    basePower = move.bp * (defender.status ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Heavy Slam':\n  case 'Heat Crash':\n    const wr =\n        (attacker.weightkg * getWeightFactor(attacker)) /\n        (defender.weightkg * getWeightFactor(defender));\n    basePower = wr >= 5 ? 120 : wr >= 4 ? 100 : wr >= 3 ? 80 : wr >= 2 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Stored Power':\n  case 'Power Trip':\n    basePower = 20 + 20 * countBoosts(gen, attacker.boosts);\n    desc.moveBP = basePower;\n    break;\n  case 'Acrobatics':\n    basePower = move.bp * (attacker.hasItem('Flying Gem') || !attacker.item ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Assurance':\n    basePower = move.bp * (defender.hasAbility('Parental Bond (Child)') ? 2 : 1);\n    // NOTE: desc.attackerAbility = 'Parental Bond' will already reflect this boost\n    break;\n  case 'Wake-Up Slap':\n    basePower = move.bp * (defender.hasStatus('slp') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Smelling Salts':\n    basePower = move.bp * (defender.hasStatus('par') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Weather Ball':\n    basePower = move.bp * (field.weather && !field.hasWeather('Strong Winds') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Nature Power':\n    if (gen.num === 5) {\n      move.category = 'Physical';\n      move.target = 'allAdjacent';\n      basePower = 100;\n      desc.moveName = 'Earthquake';\n    } else {\n      move.category = 'Special';\n      move.secondaries = true;\n      switch (field.terrain) {\n      case 'Electric':\n        basePower = 90;\n        desc.moveName = 'Thunderbolt';\n        break;\n      case 'Grassy':\n        basePower = 90;\n        desc.moveName = 'Energy Ball';\n        break;\n      case 'Misty':\n        basePower = 95;\n        desc.moveName = 'Moonblast';\n        break;\n      default:\n        basePower = 80;\n        desc.moveName = 'Tri Attack';\n      }\n    }\n    break;\n  // Triple Kick's damage doubles after each consecutive hit (10, 20, 30), this is a hack\n  case 'Triple Kick':\n    basePower = move.hits === 2 ? 15 : move.hits === 3 ? 30 : 10;\n    desc.moveBP = basePower;\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = 100 * Math.floor((defender.curHP() * 4096) / defender.maxHP());\n    basePower = Math.floor(Math.floor((120 * basePower + 2048 - 1) / 4096) / 100) || 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n\n  if (basePower === 0) {\n    return result;\n  }\n\n  const bpMods = [];\n\n  // Use BasePower after moves with custom BP to determine if Technician should boost\n  if ((attacker.hasAbility('Technician') && basePower <= 60) ||\n      (attacker.hasAbility('Flare Boost') &&\n       attacker.hasStatus('brn') && move.category === 'Special') ||\n      (attacker.hasAbility('Toxic Boost') &&\n       attacker.hasStatus('psn', 'tox') && move.category === 'Physical')\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Analytic') && turnOrder !== 'first') {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    attacker.hasAbility('Sand Force') &&\n    field.hasWeather('Sand') &&\n    move.hasType('Rock', 'Ground', 'Steel')\n  ) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    (attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n    (attacker.hasAbility('Iron Fist') && move.flags.punch)\n  ) {\n    bpMods.push(4915);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.hasAbility('Heatproof') && move.hasType('Fire')) {\n    bpMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    bpMods.push(5120);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Sheer Force') && move.secondaries) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.hasAbility('Rivalry') && ![attacker.gender, defender.gender].includes('N')) {\n    if (attacker.gender === defender.gender) {\n      bpMods.push(5120);\n      desc.rivalry = 'buffed';\n    } else {\n      bpMods.push(3072);\n      desc.rivalry = 'nerfed';\n    }\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.item && getItemBoostType(attacker.item) === move.type) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Muscle Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Wise Glasses') && move.category === 'Special')\n  ) {\n    bpMods.push(4505);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Adamant Orb') &&\n     attacker.named('Dialga') &&\n     move.hasType('Steel', 'Dragon')) ||\n    (attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia') &&\n     move.hasType('Water', 'Dragon')) ||\n    (attacker.hasItem('Griseous Orb') &&\n     attacker.named('Giratina-Origin') &&\n     move.hasType('Ghost', 'Dragon'))\n  ) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem(`${move.type} Gem`)) {\n    bpMods.push(gen.num > 5 ? 5325 : 6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  if ((move.named('Facade') && attacker.hasStatus('brn', 'par', 'psn', 'tox')) ||\n      (move.named('Brine') && defender.curHP() <= defender.maxHP() / 2) ||\n      (move.named('Venoshock') && defender.hasStatus('psn', 'tox'))) {\n    bpMods.push(8192);\n    desc.moveBP = basePower * 2;\n  } else if (gen.num > 5 && move.named('Knock Off') && !resistedKnockOffDamage) {\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if (move.named('Solar Beam') && field.hasWeather('Rain', 'Heavy Rain', 'Sand', 'Hail')) {\n    bpMods.push(2048);\n    desc.moveBP = basePower / 2;\n    desc.weather = field.weather;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    bpMods.push(6144);\n    desc.isHelpingHand = true;\n  }\n\n  if (isAerilate || isPixilate || isRefrigerate || isNormalize) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Mega Launcher') && move.flags.pulse) ||\n    (attacker.hasAbility('Strong Jaw') && move.flags.bite)\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Tough Claws') && move.flags.contact) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const aura = `${move.type} Aura`;\n  const isAttackerAura = attacker.hasAbility(aura);\n  const isDefenderAura = defender.hasAbility(aura);\n  const isUserAuraBreak = attacker.hasAbility('Aura Break') || defender.hasAbility('Aura Break');\n  const isFieldAuraBreak = field.isAuraBreak;\n  const isFieldFairyAura = field.isFairyAura && move.type === 'Fairy';\n  const isFieldDarkAura = field.isDarkAura && move.type === 'Dark';\n  const auraActive = isAttackerAura || isDefenderAura || isFieldFairyAura || isFieldDarkAura;\n  const auraBreak = isFieldAuraBreak || isUserAuraBreak;\n  if (auraActive) {\n    if (auraBreak) {\n      bpMods.push(3072);\n      desc.attackerAbility = attacker.ability;\n      desc.defenderAbility = defender.ability;\n    } else {\n      bpMods.push(5448);\n      if (isAttackerAura) desc.attackerAbility = attacker.ability;\n      if (isDefenderAura) desc.defenderAbility = defender.ability;\n    }\n  }\n\n  // It's not actually clear if the terrain modifiers are base damage mods like weather or are\n  // base power mods like in Gen 7+, but the research doesn't exist for this yet so we match PS here\n  if (isGrounded(attacker, field)) {\n    if ((field.hasTerrain('Electric') && move.hasType('Electric')) ||\n        (field.hasTerrain('Grassy') && move.hasType('Grass'))\n    ) {\n      bpMods.push(6144);\n      desc.terrain = field.terrain;\n    }\n  }\n  if (isGrounded(defender, field)) {\n    if ((field.hasTerrain('Misty') && move.hasType('Dragon')) ||\n        (field.hasTerrain('Grassy') && move.named('Bulldoze', 'Earthquake'))\n    ) {\n      bpMods.push(2048);\n      desc.terrain = field.terrain;\n    }\n  }\n\n  basePower = OF16(Math.max(1, pokeRound((basePower * chainMods(bpMods, 41, 2097152)) / 4096)));\n\n  // #endregion\n  // #region (Special) Attack\n\n  let attack: number;\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  const attackStat = move.category === 'Special' ? 'spa' : 'atk';\n  desc.attackEVs =\n    move.named('Foul Play')\n      ? getEVDescriptionText(gen, defender, attackStat, defender.nature)\n      : getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n\n  if (attackSource.boosts[attackStat] === 0 ||\n      (isCritical && attackSource.boosts[attackStat] < 0)) {\n    attack = attackSource.rawStats[attackStat];\n  } else if (defender.hasAbility('Unaware')) {\n    attack = attackSource.rawStats[attackStat];\n    desc.defenderAbility = defender.ability;\n  } else {\n    attack = attackSource.stats[attackStat];\n    desc.attackBoost = attackSource.boosts[attackStat];\n  }\n\n  // unlike all other attack modifiers, Hustle gets applied directly\n  if (attacker.hasAbility('Hustle') && move.category === 'Physical') {\n    attack = pokeRound((attack * 3) / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const atMods = [];\n  if (defender.hasAbility('Thick Fat') && move.hasType('Fire', 'Ice')) {\n    atMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((attacker.hasAbility('Guts') && attacker.status && move.category === 'Physical') ||\n      (attacker.curHP() <= attacker.maxHP() / 3 &&\n        ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n         (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n         (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n         (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n      (move.category === 'Special' && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    atMods.push(6144);\n    desc.attackerAbility = 'Flash Fire';\n  } else if (\n    (attacker.hasAbility('Solar Power') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Special') ||\n    (attacker.named('Cherrim') &&\n     attacker.hasAbility('Flower Gift') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Physical')\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.attackerSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    move.category === 'Physical') {\n    atMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (attacker.hasAbility('Defeatist') && attacker.curHP() <= attacker.maxHP() / 2) ||\n    (attacker.hasAbility('Slow Start') && attacker.abilityOn && move.category === 'Physical')\n  ) {\n    atMods.push(2048);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Huge Power', 'Pure Power') && move.category === 'Physical') {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((attacker.hasItem('Thick Club') &&\n       attacker.named('Cubone', 'Marowak', 'Marowak-Alola') &&\n       move.category === 'Physical') ||\n      (attacker.hasItem('Deep Sea Tooth') &&\n       attacker.named('Clamperl') &&\n       move.category === 'Special') ||\n      (attacker.hasItem('Light Ball') && attacker.name.startsWith('Pikachu') && !move.isZ)\n  ) {\n    atMods.push(8192);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Soul Dew') &&\n      attacker.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega') &&\n      move.category === 'Special') ||\n    (attacker.hasItem('Choice Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Choice Specs') && move.category === 'Special')\n  ) {\n    atMods.push(6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  attack = OF16(Math.max(1, pokeRound((attack * chainMods(atMods, 410, 131072)) / 4096)));\n\n  // #endregion\n  // #region (Special) Defense\n\n  let defense: number;\n  const defenseStat = move.overrideDefensiveStat || move.category === 'Physical' ? 'def' : 'spd';\n  const hitsPhysical = defenseStat === 'def';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  if (defender.boosts[defenseStat] === 0 ||\n    (isCritical && defender.boosts[defenseStat] > 0) ||\n    move.ignoreDefensive) {\n    defense = defender.rawStats[defenseStat];\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = defender.rawStats[defenseStat];\n    desc.attackerAbility = attacker.ability;\n  } else {\n    defense = defender.stats[defenseStat];\n    desc.defenseBoost = defender.boosts[defenseStat];\n  }\n\n  // unlike all other defense modifiers, Sandstorm SpD boost gets applied directly\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n\n  const dfMods = [];\n  if (defender.hasAbility('Marvel Scale') && defender.status && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    defender.named('Cherrim') &&\n    defender.hasAbility('Flower Gift') &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.defenderSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical) {\n    dfMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  }\n\n  if (field.hasTerrain('Grassy') && defender.hasAbility('Grass Pelt') && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((!hitsPhysical && defender.hasItem('Soul Dew') &&\n       defender.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega')) ||\n      (defender.hasItem('Eviolite') && gen.species.get(toID(defender.name))?.nfe) ||\n      (!hitsPhysical && defender.hasItem('Assault Vest'))) {\n    dfMods.push(6144);\n    desc.defenderItem = defender.item;\n  }\n\n  if ((defender.hasItem('Metal Powder') && defender.named('Ditto') && hitsPhysical) ||\n      (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !hitsPhysical)) {\n    dfMods.push(8192);\n    desc.defenderItem = defender.item;\n  }\n\n  if (defender.hasAbility('Fur Coat') && hitsPhysical) {\n    dfMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  defense = OF16(Math.max(1, pokeRound((defense * chainMods(dfMods, 410, 131072)) / 4096)));\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = getBaseDamage(attacker.level, basePower, attack, defense);\n\n  const isSpread = field.gameType !== 'Singles' &&\n    ['allAdjacent', 'allAdjacentFoes'].includes(move.target);\n  if (isSpread) {\n    baseDamage = pokeRound(OF32(baseDamage * 3072) / 4096);\n  }\n\n  if (attacker.hasAbility('Parental Bond (Child)')) {\n    baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n  }\n\n  if ((field.hasWeather('Sun', 'Harsh Sunshine') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain', 'Heavy Rain') && move.hasType('Water'))) {\n    baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire'))\n  ) {\n    baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n    desc.weather = field.weather;\n  }\n\n  if (isCritical) {\n    baseDamage = Math.floor(OF32(baseDamage * (gen.num > 5 ? 1.5 : 2)));\n    desc.isCritical = isCritical;\n  }\n\n  // the random factor is applied between the crit mod and the stab mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 4096;\n  if (attacker.hasType(move.type)) {\n    if (attacker.hasAbility('Adaptability')) {\n      stabMod = 8192;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      stabMod = 6144;\n    }\n  } else if (attacker.hasAbility('Protean')) {\n    stabMod = 6144;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const applyBurn =\n    attacker.hasStatus('brn') &&\n    move.category === 'Physical' &&\n    !attacker.hasAbility('Guts') &&\n    !(move.named('Facade') && gen.num === 6);\n  desc.isBurned = applyBurn;\n\n  const finalMods = [];\n\n  if (field.defenderSide.isReflect && move.category === 'Physical' && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? (gen.num > 5 ? 2732 : 2703) : 2048);\n    desc.isReflect = true;\n  } else if (field.defenderSide.isLightScreen && move.category === 'Special' && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? (gen.num > 5 ? 2732 : 2703) : 2048);\n    desc.isLightScreen = true;\n  }\n\n  if (defender.hasAbility('Multiscale') && defender.curHP() === defender.maxHP() &&\n      !field.defenderSide.isSR && (!field.defenderSide.spikes || defender.hasType('Flying')) &&\n      !attacker.hasAbility('Parental Bond (Child)')) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    finalMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (field.defenderSide.isFriendGuard) {\n    finalMods.push(3072);\n    desc.isFriendGuard = true;\n  }\n\n  if (attacker.hasAbility('Sniper') && isCritical) {\n    finalMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.hasAbility('Solid Rock', 'Filter') && typeEffectiveness > 1) {\n    finalMods.push(3072);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasItem('Metronome') && move.timesUsedWithMetronome! >= 1) {\n    const timesUsedWithMetronome = Math.floor(move.timesUsedWithMetronome!);\n    if (timesUsedWithMetronome <= 4) {\n      finalMods.push(4096 + timesUsedWithMetronome * 819);\n    } else {\n      finalMods.push(8192);\n    }\n    desc.attackerItem = attacker.item;\n  }\n\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1 && !move.isZ) {\n    finalMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Life Orb')) {\n    finalMods.push(5324);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.hasType(getBerryResistType(defender.item)) &&\n      (typeEffectiveness > 1 || move.hasType('Normal')) &&\n      !attacker.hasAbility('Unnerve')) {\n    finalMods.push(2048);\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.defenderSide.isProtected && move.isZ && attacker.item && attacker.item.includes(' Z')) {\n    finalMods.push(1024);\n    desc.isProtected = true;\n  }\n\n  const finalMod = chainMods(finalMods, 41, 131072);\n\n  let childDamage: number[] | undefined;\n  if (attacker.hasAbility('Parental Bond') && move.hits === 1 && !isSpread) {\n    const child = attacker.clone();\n    child.ability = 'Parental Bond (Child)' as AbilityName;\n    checkMultihitBoost(gen, child, defender, move, field, desc);\n    childDamage = calculateBWXY(gen, child, defender, move, field).damage as number[];\n    desc.attackerAbility = attacker.ability;\n  }\n\n  let damage: number[] = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] =\n      getFinalDamage(baseDamage, i, typeEffectiveness, applyBurn, stabMod, finalMod);\n  }\n\n  if (move.dropsStats && (move.timesUsed || 0) > 1) {\n    const simpleMultiplier = attacker.hasAbility('Simple') ? 2 : 1;\n\n    desc.moveTurns = `over ${move.timesUsed} turns`;\n    const hasWhiteHerb = attacker.hasItem('White Herb');\n    let usedWhiteHerb = false;\n    let dropCount = attacker.boosts[attackStat];\n    for (let times = 0; times < move.timesUsed!; times++) {\n      const newAttack = getModifiedStat(attack, dropCount);\n      let damageMultiplier = 0;\n      damage = damage.map(affectedAmount => {\n        if (times) {\n          const newBaseDamage = getBaseDamage(attacker.level, basePower, newAttack, defense);\n          const newFinalDamage = getFinalDamage(\n            newBaseDamage,\n            damageMultiplier,\n            typeEffectiveness,\n            applyBurn,\n            stabMod,\n            finalMod\n          );\n          damageMultiplier++;\n          return affectedAmount + newFinalDamage;\n        }\n        return affectedAmount;\n      });\n\n      if (attacker.hasAbility('Contrary')) {\n        dropCount = Math.min(6, dropCount + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        dropCount = Math.max(-6, dropCount - move.dropsStats * simpleMultiplier);\n        if (attacker.hasAbility('Simple')) {\n          desc.attackerAbility = attacker.ability;\n        }\n      }\n\n      // the Pokémon hits THEN the stat rises / lowers\n      if (hasWhiteHerb && attacker.boosts[attackStat] < 0 && !usedWhiteHerb) {\n        dropCount += move.dropsStats * simpleMultiplier;\n        usedWhiteHerb = true;\n        desc.attackerItem = attacker.item;\n      }\n    }\n  }\n\n  desc.attackBoost =\n    move.named('Foul Play') ? defender.boosts[attackStat] : attacker.boosts[attackStat];\n\n  result.damage = childDamage ? [damage, childDamage] : damage;\n\n  // #endregion\n\n  return result;\n}\n","import {Generation, AbilityName, StatID, Terrain} from '../data/interface';\nimport {toID} from '../util';\nimport {\n  getBerryResistType,\n  getFlingPower,\n  getItemBoostType,\n  getMultiAttack,\n  getNaturalGift,\n  getTechnoBlast,\n  SEED_BOOSTED_STAT,\n} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  chainMods,\n  checkAirLock,\n  checkDauntlessShield,\n  checkDownload,\n  checkForecast,\n  checkInfiltrator,\n  checkIntimidate,\n  checkIntrepidSword,\n  checkItem,\n  checkMultihitBoost,\n  checkSeedBoost,\n  checkWonderRoom,\n  computeFinalStats,\n  countBoosts,\n  getBaseDamage,\n  getEVDescriptionText,\n  getFinalDamage,\n  getModifiedStat,\n  getQPBoostedStat,\n  getMoveEffectiveness,\n  getShellSideArmCategory,\n  getWeightFactor,\n  handleFixedDamageMoves,\n  isGrounded,\n  OF16, OF32,\n  pokeRound,\n  isQPActive,\n} from './util';\n\nexport function calculateSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker, field.isMagicRoom);\n  checkItem(defender, field.isMagicRoom);\n  checkWonderRoom(attacker, field.isWonderRoom);\n  checkWonderRoom(defender, field.isWonderRoom);\n  checkSeedBoost(attacker, field);\n  checkSeedBoost(defender, field);\n  checkDauntlessShield(attacker, gen);\n  checkDauntlessShield(defender, gen);\n\n  computeFinalStats(gen, attacker, defender, field, 'def', 'spd', 'spe');\n\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender, field.isWonderRoom);\n  checkDownload(defender, attacker, field.isWonderRoom);\n  checkIntrepidSword(attacker, gen);\n  checkIntrepidSword(defender, gen);\n\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'spa');\n\n  checkInfiltrator(attacker, field.defenderSide);\n  checkInfiltrator(defender, field.attackerSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    attackerTera: attacker.teraType,\n    moveName: move.name,\n    defenderName: defender.name,\n    defenderTera: defender.teraType,\n    isDefenderDynamaxed: defender.isDynamaxed,\n    isWonderRoom: field.isWonderRoom,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  const breaksProtect = move.breaksProtect || move.isZ || attacker.isDynamaxed ||\n  (attacker.hasAbility('Unseen Fist') && move.flags.contact);\n\n  if (field.defenderSide.isProtected && !breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  const defenderIgnoresAbility = defender.hasAbility(\n    'Full Metal Body',\n    'Neutralizing Gas',\n    'Prism Armor',\n    'Shadow Shield'\n  );\n\n  const attackerIgnoresAbility = attacker.hasAbility('Mold Breaker', 'Teravolt', 'Turboblaze');\n  const moveIgnoresAbility = move.named(\n    'G-Max Drum Solo',\n    'G-Max Fire Ball',\n    'G-Max Hydrosnipe',\n    'Light That Burns the Sky',\n    'Menacing Moonraze Maelstrom',\n    'Moongeist Beam',\n    'Photon Geyser',\n    'Searing Sunraze Smash',\n    'Sunsteel Strike'\n  );\n  if (!defenderIgnoresAbility && !defender.hasAbility('Poison Heal') &&\n    (attackerIgnoresAbility || moveIgnoresAbility)) {\n    if (attackerIgnoresAbility) desc.attackerAbility = attacker.ability;\n    if (defender.hasItem('Ability Shield')) {\n      desc.defenderItem = defender.item;\n    } else {\n      defender.ability = '' as AbilityName;\n    }\n  }\n\n  // Merciless does not ignore Shell Armor, damage dealt to a poisoned Pokemon with Shell Armor\n  // will not be a critical hit (UltiMario)\n  const isCritical = !defender.hasAbility('Battle Armor', 'Shell Armor') &&\n    (move.isCrit || (attacker.hasAbility('Merciless') && defender.hasStatus('psn', 'tox'))) &&\n    move.timesUsed === 1;\n\n  let type = move.type;\n  if (move.named('Weather Ball')) {\n    const holdingUmbrella = attacker.hasItem('Utility Umbrella');\n    type =\n      field.hasWeather('Sun', 'Harsh Sunshine') && !holdingUmbrella ? 'Fire'\n      : field.hasWeather('Rain', 'Heavy Rain') && !holdingUmbrella ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail', 'Snow') ? 'Ice'\n      : 'Normal';\n    desc.weather = field.weather;\n    desc.moveType = type;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Techno Blast') && attacker.item && attacker.item.includes('Drive')) {\n    type = getTechnoBlast(attacker.item)!;\n  } else if (move.named('Multi-Attack') && attacker.item && attacker.item.includes('Memory')) {\n    type = getMultiAttack(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    type = gift.t;\n    desc.moveType = type;\n    desc.attackerItem = attacker.item;\n  } else if (\n    move.named('Nature Power') ||\n    (move.named('Terrain Pulse') && isGrounded(attacker, field))\n  ) {\n    type =\n      field.hasTerrain('Electric') ? 'Electric'\n      : field.hasTerrain('Grassy') ? 'Grass'\n      : field.hasTerrain('Misty') ? 'Fairy'\n      : field.hasTerrain('Psychic') ? 'Psychic'\n      : 'Normal';\n    desc.terrain = field.terrain;\n    desc.moveType = type;\n  } else if (move.named('Revelation Dance')) {\n    type = attacker.types[0];\n  } else if (move.named('Aura Wheel')) {\n    if (attacker.named('Morpeko')) {\n      type = 'Electric';\n    } else if (attacker.named('Morpeko-Hangry')) {\n      type = 'Dark';\n    }\n  } else if (move.named('Raging Bull')) {\n    if (attacker.named('Tauros-Paldea-Combat')) {\n      type = 'Fighting';\n    } else if (attacker.named('Tauros-Paldea-Blaze')) {\n      type = 'Fire';\n    } else if (attacker.named('Tauros-Paldea-Aqua')) {\n      type = 'Water';\n    }\n  }\n\n  let hasAteAbilityTypeChange = false;\n  let isAerilate = false;\n  let isPixilate = false;\n  let isRefrigerate = false;\n  let isGalvanize = false;\n  let isLiquidVoice = false;\n  let isNormalize = false;\n  const noTypeChange = move.named(\n    'Revelation Dance',\n    'Judgment',\n    'Nature Power',\n    'Techno Blast',\n    'Multi Attack',\n    'Natural Gift',\n    'Weather Ball',\n    'Terrain Pulse',\n  ) || (move.named('Tera Blast') && attacker.teraType);\n\n  if (!move.isZ && !noTypeChange) {\n    const normal = move.hasType('Normal');\n    if ((isAerilate = attacker.hasAbility('Aerilate') && normal)) {\n      type = 'Flying';\n    } else if ((isGalvanize = attacker.hasAbility('Galvanize') && normal)) {\n      type = 'Electric';\n    } else if ((isLiquidVoice = attacker.hasAbility('Liquid Voice') && !!move.flags.sound)) {\n      type = 'Water';\n    } else if ((isPixilate = attacker.hasAbility('Pixilate') && normal)) {\n      type = 'Fairy';\n    } else if ((isRefrigerate = attacker.hasAbility('Refrigerate') && normal)) {\n      type = 'Ice';\n    } else if ((isNormalize = attacker.hasAbility('Normalize'))) { // Boosts any type\n      type = 'Normal';\n    }\n    if (isGalvanize || isPixilate || isRefrigerate || isAerilate || isNormalize) {\n      desc.attackerAbility = attacker.ability;\n      hasAteAbilityTypeChange = true;\n    } else if (isLiquidVoice) {\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (move.named('Tera Blast') && attacker.teraType) {\n    type = attacker.teraType;\n  }\n\n  move.type = type;\n\n  // FIXME: this is incorrect, should be move.flags.heal, not move.drain\n  if ((attacker.hasAbility('Triage') && move.drain) ||\n      (attacker.hasAbility('Gale Wings') &&\n       move.hasType('Flying') &&\n       attacker.curHP() === attacker.maxHP())) {\n    move.priority = 1;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed =\n    attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n  const isRingTarget =\n    defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n  const type1Effectiveness = getMoveEffectiveness(\n    gen,\n    move,\n    defender.types[0],\n    isGhostRevealed,\n    field.isGravity,\n    isRingTarget\n  );\n  const type2Effectiveness = defender.types[1]\n    ? getMoveEffectiveness(\n      gen,\n      move,\n      defender.types[1],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    )\n    : 1;\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  if (defender.teraType) {\n    typeEffectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      defender.teraType,\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n  }\n\n  if (typeEffectiveness === 0 && move.hasType('Ground') &&\n    defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n    typeEffectiveness = 1;\n  }\n\n  if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n    typeEffectiveness = 1;\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((move.named('Sky Drop') &&\n        (defender.hasType('Flying') || defender.weightkg >= 200 || field.isGravity)) ||\n      (move.named('Synchronoise') && !defender.hasType(attacker.types[0]) &&\n        (!attacker.types[1] || !defender.hasType(attacker.types[1]))) ||\n      (move.named('Dream Eater') &&\n        (!(defender.hasStatus('slp') || defender.hasAbility('Comatose')))) ||\n      (move.named('Steel Roller') && !field.terrain) ||\n      (move.named('Poltergeist') && !defender.item)\n  ) {\n    return result;\n  }\n\n  if (\n    (field.hasWeather('Harsh Sunshine') && move.hasType('Water')) ||\n    (field.hasWeather('Heavy Rain') && move.hasType('Fire'))\n  ) {\n    desc.weather = field.weather;\n    return result;\n  }\n\n  if (field.hasWeather('Strong Winds') && defender.hasType('Flying') &&\n      gen.types.get(toID(move.type))!.effectiveness['Flying']! > 1) {\n    typeEffectiveness /= 2;\n    desc.weather = field.weather;\n  }\n\n  if ((defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Grass') && defender.hasAbility('Sap Sipper')) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire', 'Well-Baked Body')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Storm Drain', 'Water Absorb')) ||\n      (move.hasType('Electric') &&\n        defender.hasAbility('Lightning Rod', 'Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') &&\n        !field.isGravity && !move.named('Thousand Arrows') &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.bullet && defender.hasAbility('Bulletproof')) ||\n      (move.flags.sound && !move.named('Clangorous Soul') && defender.hasAbility('Soundproof')) ||\n      (move.priority > 0 && defender.hasAbility('Queenly Majesty', 'Dazzling', 'Armor Tail')) ||\n      (move.hasType('Ground') && defender.hasAbility('Earth Eater')) ||\n      (move.flags.wind && defender.hasAbility('Wind Rider'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  if (move.hasType('Ground') && !move.named('Thousand Arrows') &&\n      !field.isGravity && defender.hasItem('Air Balloon')) {\n    desc.defenderItem = defender.item;\n    return result;\n  }\n\n  if (move.priority > 0 && field.hasTerrain('Psychic') && isGrounded(defender, field)) {\n    desc.terrain = field.terrain;\n    return result;\n  }\n\n  const weightBasedMove = move.named('Heat Crash', 'Heavy Slam', 'Low Kick', 'Grass Knot');\n  if (defender.isDynamaxed && weightBasedMove) {\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    if (attacker.hasAbility('Parental Bond')) {\n      result.damage = [fixedDamage, fixedDamage];\n      desc.attackerAbility = attacker.ability;\n    } else {\n      result.damage = fixedDamage;\n    }\n    return result;\n  }\n\n  if (move.named('Final Gambit')) {\n    result.damage = attacker.curHP();\n    return result;\n  }\n\n  if (move.named('Guardian of Alola')) {\n    let zLostHP = Math.floor((defender.curHP() * 3) / 4);\n    if (field.defenderSide.isProtected && attacker.item && attacker.item.includes(' Z')) {\n      zLostHP = Math.ceil(zLostHP / 4 - 0.5);\n    }\n    result.damage = zLostHP;\n    return result;\n  }\n\n  if (move.named('Nature\\'s Madness')) {\n    const lostHP = field.defenderSide.isProtected ? 0 : Math.floor(defender.curHP() / 2);\n    result.damage = lostHP;\n    return result;\n  }\n\n  if (move.named('Spectral Thief')) {\n    let stat: StatID;\n    for (stat in defender.boosts) {\n      if (defender.boosts[stat]) {\n        attacker.boosts[stat] +=\n          attacker.hasAbility('Contrary') ? -defender.boosts[stat]! : defender.boosts[stat]!;\n        if (attacker.boosts[stat] > 6) attacker.boosts[stat] = 6;\n        if (attacker.boosts[stat] < -6) attacker.boosts[stat] = -6;\n        attacker.stats[stat] = getModifiedStat(attacker.rawStats[stat]!, attacker.boosts[stat]!);\n      }\n    }\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  const basePower = calculateBasePowerSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    hasAteAbilityTypeChange,\n    desc\n  );\n  if (basePower === 0) {\n    return result;\n  }\n\n  // #endregion\n  // #region (Special) Attack\n  const attack = calculateAttackSMSSSV(gen, attacker, defender, move, field, desc, isCritical);\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  if (move.named('Photon Geyser', 'Light That Burns The Sky') ||\n      (move.named('Tera Blast') && attackSource.teraType)) {\n    move.category = attackSource.stats.atk > attackSource.stats.spa ? 'Physical' : 'Special';\n  }\n  const attackStat =\n    move.named('Shell Side Arm') &&\n    getShellSideArmCategory(attacker, defender) === 'Physical'\n      ? 'atk'\n      : move.named('Body Press')\n        ? 'def'\n        : move.category === 'Special'\n          ? 'spa'\n          : 'atk';\n  // #endregion\n  // #region (Special) Defense\n\n  const defense = calculateDefenseSMSSSV(gen, attacker, defender, move, field, desc, isCritical);\n  const hitsPhysical = move.overrideDefensiveStat === 'def' || move.category === 'Physical' ||\n    (move.named('Shell Side Arm') && getShellSideArmCategory(attacker, defender) === 'Physical');\n  const defenseStat = hitsPhysical ? 'def' : 'spd';\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = getBaseDamage(attacker.level, basePower, attack, defense);\n\n  const isSpread = field.gameType === 'Doubles' &&\n     ['allAdjacent', 'allAdjacentFoes'].includes(move.target);\n  if (isSpread) {\n    baseDamage = pokeRound(OF32(baseDamage * 3072) / 4096);\n  }\n\n  if (attacker.hasAbility('Parental Bond (Child)')) {\n    baseDamage = pokeRound(OF32(baseDamage * 1024) / 4096);\n  }\n\n  if (\n    field.hasWeather('Sun') && move.named('Hydro Steam') && !attacker.hasItem('Utility Umbrella')\n  ) {\n    baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n    desc.weather = field.weather;\n  } else if (!defender.hasItem('Utility Umbrella')) {\n    if (\n      (field.hasWeather('Sun', 'Harsh Sunshine') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain', 'Heavy Rain') && move.hasType('Water'))\n    ) {\n      baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n      desc.weather = field.weather;\n    } else if (\n      (field.hasWeather('Sun') && move.hasType('Water')) ||\n      (field.hasWeather('Rain') && move.hasType('Fire'))\n    ) {\n      baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n      desc.weather = field.weather;\n    }\n  }\n\n  if (hasTerrainSeed(defender) &&\n    field.hasTerrain(defender.item!.substring(0, defender.item!.indexOf(' ')) as Terrain) &&\n    SEED_BOOSTED_STAT[defender.item!] === defenseStat) {\n    // Last condition applies so the calc doesn't show a seed where it wouldn't affect the outcome\n    // (like Grassy Seed when being hit by a special move)\n    desc.defenderItem = defender.item;\n  }\n\n  if (isCritical) {\n    baseDamage = Math.floor(OF32(baseDamage * 1.5));\n    desc.isCritical = isCritical;\n  }\n\n  // the random factor is applied between the crit mod and the stab mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 4096;\n  if (attacker.hasOriginalType(move.type)) {\n    stabMod += 2048;\n  } else if (attacker.hasAbility('Protean', 'Libero') && !attacker.teraType) {\n    stabMod += 2048;\n    desc.attackerAbility = attacker.ability;\n  }\n  const teraType = attacker.teraType;\n  if (teraType === move.type) {\n    stabMod += 2048;\n    desc.attackerTera = teraType;\n  }\n  if (attacker.hasAbility('Adaptability') && attacker.hasType(move.type)) {\n    stabMod += teraType && attacker.hasOriginalType(teraType) ? 1024 : 2048;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const applyBurn =\n    attacker.hasStatus('brn') &&\n    move.category === 'Physical' &&\n    !attacker.hasAbility('Guts') &&\n    !move.named('Facade');\n  desc.isBurned = applyBurn;\n  const finalMods = calculateFinalModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    isCritical,\n    typeEffectiveness\n  );\n\n  let protect = false;\n  if (field.defenderSide.isProtected &&\n    (attacker.isDynamaxed || (move.isZ && attacker.item && attacker.item.includes(' Z')))) {\n    protect = true;\n    desc.isProtected = true;\n  }\n\n  const finalMod = chainMods(finalMods, 41, 131072);\n\n  let childDamage: number[] | undefined;\n  if (attacker.hasAbility('Parental Bond') && move.hits === 1 && !isSpread) {\n    const child = attacker.clone();\n    child.ability = 'Parental Bond (Child)' as AbilityName;\n    checkMultihitBoost(gen, child, defender, move, field, desc);\n    childDamage = calculateSMSSSV(gen, child, defender, move, field).damage as number[];\n    desc.attackerAbility = attacker.ability;\n  }\n\n  let damage = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] =\n      getFinalDamage(baseDamage, i, typeEffectiveness, applyBurn, stabMod, finalMod, protect);\n  }\n\n  if (move.dropsStats && move.timesUsed! > 1) {\n    const simpleMultiplier = attacker.hasAbility('Simple') ? 2 : 1;\n\n    desc.moveTurns = `over ${move.timesUsed} turns`;\n    const hasWhiteHerb = attacker.hasItem('White Herb');\n    let usedWhiteHerb = false;\n    let dropCount = attacker.boosts[attackStat];\n    for (let times = 0; times < move.timesUsed!; times++) {\n      const newAttack = getModifiedStat(attack, dropCount);\n      let damageMultiplier = 0;\n      damage = damage.map(affectedAmount => {\n        if (times) {\n          const newBaseDamage = getBaseDamage(attacker.level, basePower, newAttack, defense);\n          const newFinalDamage = getFinalDamage(\n            newBaseDamage,\n            damageMultiplier,\n            typeEffectiveness,\n            applyBurn,\n            stabMod,\n            finalMod,\n            protect\n          );\n          damageMultiplier++;\n          return affectedAmount + newFinalDamage;\n        }\n        return affectedAmount;\n      });\n\n      if (attacker.hasAbility('Contrary')) {\n        dropCount = Math.min(6, dropCount + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        dropCount = Math.max(-6, dropCount - move.dropsStats * simpleMultiplier);\n        if (attacker.hasAbility('Simple')) {\n          desc.attackerAbility = attacker.ability;\n        }\n      }\n\n      // the Pokémon hits THEN the stat rises / lowers\n      if (hasWhiteHerb && attacker.boosts[attackStat] < 0 && !usedWhiteHerb) {\n        dropCount += move.dropsStats * simpleMultiplier;\n        usedWhiteHerb = true;\n        desc.attackerItem = attacker.item;\n      }\n    }\n  }\n\n  desc.attackBoost =\n    move.named('Foul Play') ? defender.boosts[attackStat] : attacker.boosts[attackStat];\n\n  result.damage = childDamage ? [damage, childDamage] : damage;\n\n  // #endregion\n\n  return result;\n}\n\nexport function calculateBasePowerSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  hasAteAbilityTypeChange: boolean,\n  desc: RawDesc\n) {\n  let turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n  turnOrder = field.isTrickRoom ? (turnOrder === 'first' ? 'last' : 'first') : turnOrder;\n\n  let basePower: number;\n\n  switch (move.name) {\n  case 'Payback':\n    basePower = move.bp * (turnOrder === 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Bolt Beak':\n  case 'Fishious Rend':\n    basePower = move.bp * (turnOrder !== 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Pursuit':\n    const switching = field.defenderSide.isSwitching === 'out';\n    basePower = move.bp * (switching ? 2 : 1);\n    if (switching) desc.isSwitching = 'out';\n    desc.moveBP = basePower;\n    break;\n  case 'Electro Ball':\n    const r = Math.floor(attacker.stats.spe / defender.stats.spe);\n    basePower = r >= 4 ? 150 : r >= 3 ? 120 : r >= 2 ? 80 : r >= 1 ? 60 : 40;\n    if (defender.stats.spe === 0) basePower = 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe) + 1);\n    if (attacker.stats.spe === 0) basePower = 1;\n    desc.moveBP = basePower;\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Low Kick':\n  case 'Grass Knot':\n    const w = defender.weightkg * getWeightFactor(defender);\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Hex':\n  case 'Infernal Parade':\n    // Hex deals double damage to Pokemon with Comatose (ih8ih8sn0w)\n    basePower = move.bp * (defender.status || defender.hasAbility('Comatose') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Barb Barrage':\n    basePower = move.bp * (defender.hasStatus('psn', 'tox') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Heavy Slam':\n  case 'Heat Crash':\n    const wr =\n        (attacker.weightkg * getWeightFactor(attacker)) /\n        (defender.weightkg * getWeightFactor(defender));\n    basePower = wr >= 5 ? 120 : wr >= 4 ? 100 : wr >= 3 ? 80 : wr >= 2 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Stored Power':\n  case 'Power Trip':\n    basePower = 20 + 20 * countBoosts(gen, attacker.boosts);\n    desc.moveBP = basePower;\n    break;\n  case 'Acrobatics':\n    basePower = move.bp * (attacker.hasItem('Flying Gem') || !attacker.item ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Assurance':\n    basePower = move.bp * (defender.hasAbility('Parental Bond (Child)') ? 2 : 1);\n    // NOTE: desc.attackerAbility = 'Parental Bond' will already reflect this boost\n    break;\n  case 'Wake-Up Slap':\n    // Wake-Up Slap deals double damage to Pokemon with Comatose (ih8ih8sn0w)\n    basePower = move.bp * (defender.hasStatus('slp') || defender.hasAbility('Comatose') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Smelling Salts':\n    basePower = move.bp * (defender.hasStatus('par') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Weather Ball':\n    basePower = move.bp * (field.weather && !field.hasWeather('Strong Winds') ? 2 : 1);\n    if (field.hasWeather('Sun', 'Harsh Sunshine', 'Rain', 'Heavy Rain') &&\n      attacker.hasItem('Utility Umbrella')) basePower = move.bp;\n    desc.moveBP = basePower;\n    break;\n  case 'Terrain Pulse':\n    basePower = move.bp * (isGrounded(attacker, field) && field.terrain ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Rising Voltage':\n    basePower = move.bp * ((isGrounded(defender, field) && field.hasTerrain('Electric')) ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Psyblade':\n    basePower = move.bp * (field.hasTerrain('Electric') ? 1.5 : 1);\n    if (field.hasTerrain('Electric')) {\n      desc.moveBP = basePower;\n      desc.terrain = field.terrain;\n    }\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Dragon Energy':\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Natural Gift':\n    if (attacker.item?.includes('Berry')) {\n      const gift = getNaturalGift(gen, attacker.item)!;\n      basePower = gift.p;\n      desc.attackerItem = attacker.item;\n      desc.moveBP = move.bp;\n    } else {\n      basePower = move.bp;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Special';\n    move.secondaries = true;\n    switch (field.terrain) {\n    case 'Electric':\n      basePower = 90;\n      desc.moveName = 'Thunderbolt';\n      break;\n    case 'Grassy':\n      basePower = 90;\n      desc.moveName = 'Energy Ball';\n      break;\n    case 'Misty':\n      basePower = 95;\n      desc.moveName = 'Moonblast';\n      break;\n    case 'Psychic':\n      basePower = 90;\n      desc.moveName = 'Psychic';\n      break;\n    default:\n      basePower = 80;\n      desc.moveName = 'Tri Attack';\n    }\n    break;\n  case 'Water Shuriken':\n    basePower = attacker.named('Greninja-Ash') && attacker.hasAbility('Battle Bond') ? 20 : 15;\n    desc.moveBP = basePower;\n    break;\n  // Triple Axel's damage doubles after each consecutive hit (20, 40, 60), this is a hack\n  case 'Triple Axel':\n    basePower = move.hits === 2 ? 30 : move.hits === 3 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  // Triple Kick's damage doubles after each consecutive hit (10, 20, 30), this is a hack\n  case 'Triple Kick':\n    basePower = move.hits === 2 ? 15 : move.hits === 3 ? 30 : 10;\n    desc.moveBP = basePower;\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = 100 * Math.floor((defender.curHP() * 4096) / defender.maxHP());\n    basePower = Math.floor(Math.floor((120 * basePower + 2048 - 1) / 4096) / 100) || 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n  if (basePower === 0) {\n    return 0;\n  }\n  if (move.named(\n    'Breakneck Blitz', 'Bloom Doom', 'Inferno Overdrive', 'Hydro Vortex', 'Gigavolt Havoc',\n    'Subzero Slammer', 'Supersonic Skystrike', 'Savage Spin-Out', 'Acid Downpour', 'Tectonic Rage',\n    'Continental Crush', 'All-Out Pummeling', 'Shattered Psyche', 'Never-Ending Nightmare',\n    'Devastating Drake', 'Black Hole Eclipse', 'Corkscrew Crash', 'Twinkle Tackle'\n  )) {\n    // show z-move power in description\n    desc.moveBP = move.bp;\n  }\n  const bpMods = calculateBPModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    basePower,\n    hasAteAbilityTypeChange,\n    turnOrder\n  );\n  basePower = OF16(Math.max(1, pokeRound((basePower * chainMods(bpMods, 41, 2097152)) / 4096)));\n  if (\n    attacker.teraType && move.type === attacker.teraType &&\n    attacker.hasType(attacker.teraType) && move.hits === 1 &&\n    move.priority <= 0 && move.bp > 0 && !move.named('Dragon Energy', 'Eruption', 'Water Spout') &&\n    basePower < 60 && gen.num >= 9\n  ) {\n    basePower = 60;\n    desc.moveBP = 60;\n  }\n  return basePower;\n}\n\nexport function calculateBPModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  basePower: number,\n  hasAteAbilityTypeChange: boolean,\n  turnOrder: string\n) {\n  const bpMods = [];\n\n  // Move effects\n\n  let resistedKnockOffDamage =\n    !defender.item ||\n    (defender.named('Dialga-Origin') && defender.hasItem('Adamant Crystal')) ||\n    (defender.named('Palkia-Origin') && defender.hasItem('Lustrous Globe')) ||\n    // Griseous Core for gen 9, Griseous Orb otherwise\n    (defender.name.includes('Giratina-Origin') && defender.item.includes('Griseous')) ||\n    (defender.name.includes('Arceus') && defender.item.includes('Plate')) ||\n    (defender.name.includes('Genesect') && defender.item.includes('Drive')) ||\n    (defender.named('Groudon', 'Groudon-Primal') && defender.hasItem('Red Orb')) ||\n    (defender.named('Kyogre', 'Kyogre-Primal') && defender.hasItem('Blue Orb')) ||\n    (defender.name.includes('Silvally') && defender.item.includes('Memory')) ||\n    defender.item.includes(' Z') ||\n    (defender.named('Zacian') && defender.hasItem('Rusted Sword')) ||\n    (defender.named('Zamazenta') && defender.hasItem('Rusted Shield') ||\n    (defender.named('Venomicon-Epilogue') && defender.hasItem('Vile Vial')));\n\n  // The last case only applies when the Pokemon has the Mega Stone that matches its species\n  // (or when it's already a Mega-Evolution)\n  if (!resistedKnockOffDamage && defender.item) {\n    const item = gen.items.get(toID(defender.item))!;\n    if (item) {\n      resistedKnockOffDamage = !!item.megaEvolves && defender.name.includes(item.megaEvolves);\n    }\n  }\n\n  if ((move.named('Facade') && attacker.hasStatus('brn', 'par', 'psn', 'tox')) ||\n    (move.named('Brine') && defender.curHP() <= defender.maxHP() / 2) ||\n    (move.named('Venoshock') && defender.hasStatus('psn', 'tox')) ||\n    (move.named('Lash Out') && (countBoosts(gen, attacker.boosts) < 0))\n  ) {\n    bpMods.push(8192);\n    desc.moveBP = basePower * 2;\n  } else if (\n    move.named('Expanding Force') && isGrounded(attacker, field) && field.hasTerrain('Psychic')\n  ) {\n    move.target = 'allAdjacentFoes';\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if ((move.named('Knock Off') && !resistedKnockOffDamage) ||\n    (move.named('Misty Explosion') && isGrounded(attacker, field) && field.hasTerrain('Misty')) ||\n    (move.named('Grav Apple') && field.isGravity)\n  ) {\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if (move.named('Solar Beam', 'Solar Blade') &&\n      field.hasWeather('Rain', 'Heavy Rain', 'Sand', 'Hail', 'Snow')) {\n    bpMods.push(2048);\n    desc.moveBP = basePower / 2;\n    desc.weather = field.weather;\n  } else if (move.named('Collision Course', 'Electro Drift')) {\n    const isGhostRevealed =\n      attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n    const isRingTarget =\n      defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n    const types = defender.teraType ? [defender.teraType] : defender.types;\n    const type1Effectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      types[0],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n    const type2Effectiveness = types[1] ? getMoveEffectiveness(\n      gen,\n      move,\n      types[1],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    ) : 1;\n    if (type1Effectiveness * type2Effectiveness >= 2) {\n      bpMods.push(5461);\n      desc.moveBP = basePower * (5461 / 4096);\n    }\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    bpMods.push(6144);\n    desc.isHelpingHand = true;\n  }\n\n  // Field effects\n\n  const terrainMultiplier = gen.num > 7 ? 5325 : 6144;\n  if (isGrounded(attacker, field)) {\n    if ((field.hasTerrain('Electric') && move.hasType('Electric')) ||\n        (field.hasTerrain('Grassy') && move.hasType('Grass')) ||\n        (field.hasTerrain('Psychic') && move.hasType('Psychic'))\n    ) {\n      bpMods.push(terrainMultiplier);\n      desc.terrain = field.terrain;\n    }\n  }\n  if (isGrounded(defender, field)) {\n    if ((field.hasTerrain('Misty') && move.hasType('Dragon')) ||\n        (field.hasTerrain('Grassy') && move.named('Bulldoze', 'Earthquake'))\n    ) {\n      bpMods.push(2048);\n      desc.terrain = field.terrain;\n    }\n  }\n\n  // Abilities\n\n  // Use BasePower after moves with custom BP to determine if Technician should boost\n  if ((attacker.hasAbility('Technician') && basePower <= 60) ||\n    (attacker.hasAbility('Flare Boost') &&\n      attacker.hasStatus('brn') && move.category === 'Special') ||\n    (attacker.hasAbility('Toxic Boost') &&\n      attacker.hasStatus('psn', 'tox') && move.category === 'Physical') ||\n    (attacker.hasAbility('Mega Launcher') && move.flags.pulse) ||\n    (attacker.hasAbility('Strong Jaw') && move.flags.bite) ||\n    (attacker.hasAbility('Steely Spirit') && move.hasType('Steel')) ||\n    (attacker.hasAbility('Sharpness') && move.flags.slicing)\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  }\n\n\n  if (field.attackerSide.steelySpirits > 0 && move.hasType('Steel')){\n    for(var i = 0; i < field.attackerSide.steelySpirits; i++){\n        bpMods.push(6144);\n    }\n    desc.steelySpirits = field.attackerSide.steelySpirits;\n  }\n\n  if (field.attackerSide.isCharged && move.hasType('Electric')){\n    bpMods.push(8196);\n    desc.isCharged = true;\n  }\n\n  const aura = `${move.type} Aura`;\n  const isAttackerAura = attacker.hasAbility(aura);\n  const isDefenderAura = defender.hasAbility(aura);\n  const isUserAuraBreak = attacker.hasAbility('Aura Break') || defender.hasAbility('Aura Break');\n  const isFieldAuraBreak = field.isAuraBreak;\n  const isFieldFairyAura = field.isFairyAura && move.type === 'Fairy';\n  const isFieldDarkAura = field.isDarkAura && move.type === 'Dark';\n  const auraActive = isAttackerAura || isDefenderAura || isFieldFairyAura || isFieldDarkAura;\n  const auraBreak = isFieldAuraBreak || isUserAuraBreak;\n  if (auraActive) {\n    if (auraBreak) {\n      bpMods.push(3072);\n      desc.attackerAbility = attacker.ability;\n      desc.defenderAbility = defender.ability;\n    } else {\n      bpMods.push(5448);\n      if (isAttackerAura) desc.attackerAbility = attacker.ability;\n      if (isDefenderAura) desc.defenderAbility = defender.ability;\n    }\n  }\n\n  // Sheer Force does not power up max moves or remove the effects (SadisticMystic)\n  if (\n    (attacker.hasAbility('Sheer Force') &&\n      (move.secondaries || move.named('Jet Punch', 'Order Up')) && !move.isMax) ||\n    (attacker.hasAbility('Sand Force') &&\n      field.hasWeather('Sand') && move.hasType('Rock', 'Ground', 'Steel')) ||\n    (attacker.hasAbility('Analytic') &&\n      (turnOrder !== 'first' || field.defenderSide.isSwitching === 'out')) ||\n    (attacker.hasAbility('Tough Claws') && move.flags.contact) ||\n    (attacker.hasAbility('Punk Rock') && move.flags.sound)\n  ) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (field.attackerSide.isBattery && move.category === 'Special') {\n    bpMods.push(5325);\n    desc.isBattery = true;\n  }\n\n  if (field.attackerSide.isPowerSpot) {\n    bpMods.push(5325);\n    desc.isPowerSpot = true;\n  }\n\n  if (field.attackerSide.powerSpots > 0){\n    for(var i = 0; i < field.attackerSide.powerSpots; i++){\n        bpMods.push(5325);\n    }\n    desc.powerSpots = field.attackerSide.powerSpots;\n  }\n\n\n  if (attacker.hasAbility('Rivalry') && ![attacker.gender, defender.gender].includes('N')) {\n    if (attacker.gender === defender.gender) {\n      bpMods.push(5120);\n      desc.rivalry = 'buffed';\n    } else {\n      bpMods.push(3072);\n      desc.rivalry = 'nerfed';\n    }\n    desc.attackerAbility = attacker.ability;\n  }\n\n  // The -ate abilities already changed move typing earlier, so most checks are done and desc is set\n  // However, Max Moves also don't boost -ate Abilities\n  if (!move.isMax && hasAteAbilityTypeChange) {\n    bpMods.push(4915);\n  }\n\n  if ((attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n      (attacker.hasAbility('Iron Fist') && move.flags.punch)\n  ) {\n    bpMods.push(4915);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.hasItem('Punching Glove') && move.flags.punch) {\n    bpMods.push(4506);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (defender.hasAbility('Heatproof') && move.hasType('Fire')) {\n    bpMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    bpMods.push(5120);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Supreme Overlord') && attacker.alliesFainted) {\n    const powMod = [4096, 4506, 4915, 5325, 5734, 6144];\n    bpMods.push(powMod[Math.min(5, attacker.alliesFainted)]);\n    desc.attackerAbility = attacker.ability;\n    desc.alliesFainted = attacker.alliesFainted;\n  }\n\n  // Items\n\n  if (attacker.hasItem(`${move.type} Gem`)) {\n    bpMods.push(5325);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (((attacker.hasItem('Adamant Crystal') && attacker.named('Dialga-Origin')) ||\n      (attacker.hasItem('Adamant Orb') && attacker.named('Dialga'))) &&\n     move.hasType('Steel', 'Dragon')) ||\n    (((attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia')) ||\n      (attacker.hasItem('Lustrous Globe') && attacker.named('Palkia-Origin'))) &&\n     move.hasType('Water', 'Dragon')) ||\n    (((attacker.hasItem('Griseous Orb') || attacker.hasItem('Griseous Core')) &&\n     (attacker.named('Giratina-Origin') || attacker.named('Giratina'))) &&\n     move.hasType('Ghost', 'Dragon')) ||\n    (attacker.hasItem('Vile Vial') &&\n     attacker.named('Venomicon-Epilogue') &&\n     move.hasType('Poison', 'Flying')) ||\n    (attacker.hasItem('Soul Dew') &&\n     attacker.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega') &&\n     move.hasType('Psychic', 'Dragon')) ||\n     attacker.item && move.hasType(getItemBoostType(attacker.item))\n  ) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Muscle Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Wise Glasses') && move.category === 'Special')\n  ) {\n    bpMods.push(4505);\n    desc.attackerItem = attacker.item;\n  }\n  return bpMods;\n}\n\nexport function calculateAttackSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false\n) {\n  let attack: number;\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  if (move.named('Photon Geyser', 'Light That Burns The Sky') ||\n      (move.named('Tera Blast') && attackSource.teraType)) {\n    move.category = attackSource.stats.atk > attackSource.stats.spa ? 'Physical' : 'Special';\n  }\n  const attackStat =\n    move.named('Shell Side Arm') &&\n    getShellSideArmCategory(attacker, defender) === 'Physical'\n      ? 'atk'\n      : move.named('Body Press')\n        ? 'def'\n        : move.category === 'Special'\n          ? 'spa'\n          : 'atk';\n  desc.attackEVs =\n    move.named('Foul Play')\n      ? getEVDescriptionText(gen, defender, attackStat, defender.nature)\n      : getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n\n  if (attackSource.boosts[attackStat] === 0 ||\n      (isCritical && attackSource.boosts[attackStat] < 0)) {\n    attack = attackSource.rawStats[attackStat];\n  } else if (defender.hasAbility('Unaware')) {\n    attack = attackSource.rawStats[attackStat];\n    desc.defenderAbility = defender.ability;\n  } else {\n    attack = attackSource.stats[attackStat];\n    desc.attackBoost = attackSource.boosts[attackStat];\n  }\n\n  // unlike all other attack modifiers, Hustle gets applied directly\n  if (attacker.hasAbility('Hustle') && move.category === 'Physical') {\n    attack = pokeRound((attack * 3) / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const atMods = calculateAtModsSMSSSV(gen, attacker, defender, move, field, desc);\n  attack = OF16(Math.max(1, pokeRound((attack * chainMods(atMods, 410, 131072)) / 4096)));\n  return attack;\n}\n\nexport function calculateAtModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc\n) {\n  const atMods = [];\n\n  // Slow Start also halves damage with special Z-moves\n  if ((attacker.hasAbility('Slow Start') && attacker.abilityOn &&\n       (move.category === 'Physical' || (move.category === 'Special' && move.isZ))) ||\n      (attacker.hasAbility('Defeatist') && attacker.curHP() <= attacker.maxHP() / 2)\n  ) {\n    atMods.push(2048);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Solar Power') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Special') ||\n    (attacker.named('Cherrim') &&\n     attacker.hasAbility('Flower Gift') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Physical') ||\n    // Gorilla Tactics has no effect during Dynamax (Anubis)\n    (attacker.hasAbility('Gorilla Tactics') && move.category === 'Physical' &&\n     !attacker.isDynamaxed)) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.attackerSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    move.category === 'Physical') {\n    atMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (attacker.hasAbility('Guts') && attacker.status && move.category === 'Physical') ||\n    (attacker.curHP() <= attacker.maxHP() / 3 &&\n      ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n       (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n       (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n       (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n    (move.category === 'Special' && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    atMods.push(6144);\n    desc.attackerAbility = 'Flash Fire';\n  } else if (\n    (attacker.hasAbility('Steelworker') && move.hasType('Steel')) ||\n    (attacker.hasAbility('Dragon\\'s Maw') && move.hasType('Dragon')) ||\n    (attacker.hasAbility('Transistor') && move.hasType('Electric')) ||\n    (attacker.hasAbility('Rocky Payload') && move.hasType('Rock'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Stakeout') && attacker.abilityOn) {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Water Bubble') && move.hasType('Water')) ||\n    (attacker.hasAbility('Huge Power', 'Pure Power') && move.category === 'Physical')\n  ) {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((defender.hasAbility('Thick Fat') && move.hasType('Fire', 'Ice')) ||\n      (defender.hasAbility('Water Bubble') && move.hasType('Fire')) ||\n     (defender.hasAbility('Purifying Salt') && move.hasType('Ghost'))) {\n    atMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const isTabletsOfRuinActive = defender.hasAbility('Tablets of Ruin') || field.isTabletsOfRuin;\n  const isVesselOfRuinActive = defender.hasAbility('Vessel of Ruin') || field.isVesselOfRuin;\n  if (\n    (isTabletsOfRuinActive && move.category === 'Physical') ||\n    (isVesselOfRuinActive && move.category === 'Special')\n  ) {\n    if (defender.hasAbility('Tablets of Ruin') || defender.hasAbility('Vessel of Ruin')) {\n      desc.defenderAbility = defender.ability;\n    } else {\n      desc[move.category === 'Special' ? 'isVesselOfRuin' : 'isTabletsOfRuin'] = true;\n    }\n    atMods.push(3072);\n  }\n\n  if (\n    (isQPActive(attacker, field))\n  ) {\n    if (\n      (move.category === 'Physical' && getQPBoostedStat(attacker) === 'atk') ||\n      (move.category === 'Special' && getQPBoostedStat(attacker) === 'spa')\n    ) {\n      atMods.push(5325);\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (\n    (attacker.hasAbility('Hadron Engine') && move.category === 'Special' &&\n      field.hasTerrain('Electric') && isGrounded(attacker, field)) ||\n    (attacker.hasAbility('Orichalcum Pulse') && move.category === 'Physical' &&\n      field.hasWeather('Sun', 'Harsh Sunshine') && !attacker.hasItem('Utility Umbrella'))\n  ) {\n    atMods.push(5461);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((attacker.hasItem('Thick Club') &&\n       attacker.named('Cubone', 'Marowak', 'Marowak-Alola', 'Marowak-Alola-Totem') &&\n       move.category === 'Physical') ||\n      (attacker.hasItem('Deep Sea Tooth') &&\n       attacker.named('Clamperl') &&\n       move.category === 'Special') ||\n      (attacker.hasItem('Light Ball') && attacker.name.includes('Pikachu') && !move.isZ)\n  ) {\n    atMods.push(8192);\n    desc.attackerItem = attacker.item;\n    // Choice Band/Scarf/Specs move lock and stat boosts are ignored during Dynamax (Anubis)\n  } else if (!move.isZ && !move.isMax &&\n    ((attacker.hasItem('Choice Band') && move.category === 'Physical') ||\n      (attacker.hasItem('Choice Specs') && move.category === 'Special'))\n  ) {\n    atMods.push(6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (field.attackerSide.isAtkCheered && !move.named('Body Press') && !move.named('Foul Play')) {\n    atMods.push(6144);\n    desc.isAtkCheered = true;\n  }\n\n  if (move.named('Foul Play') && field.defenderSide.isAtkCheered) {\n    atMods.push(6144);\n    desc.isAtkCheered = true;\n  }\n\n  if (move.named('Body Press') && field.attackerSide.isDefCheered) {\n    atMods.push(6144);\n    desc.isDefCheeredBodyPress = true;\n  }\n\n  return atMods;\n}\n\nexport function calculateDefenseSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false\n) {\n  let defense: number;\n  const hitsPhysical = move.overrideDefensiveStat === 'def' || move.category === 'Physical' ||\n    (move.named('Shell Side Arm') && getShellSideArmCategory(attacker, defender) === 'Physical');\n  const defenseStat = hitsPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  if (defender.boosts[defenseStat] === 0 ||\n      (isCritical && defender.boosts[defenseStat] > 0) ||\n      move.ignoreDefensive) {\n    defense = defender.rawStats[defenseStat];\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = defender.rawStats[defenseStat];\n    desc.attackerAbility = attacker.ability;\n  } else {\n    defense = defender.stats[defenseStat];\n    desc.defenseBoost = defender.boosts[defenseStat];\n  }\n\n  // unlike all other defense modifiers, Sandstorm SpD boost gets applied directly\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n  if (field.hasWeather('Snow') && defender.hasType('Ice') && hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n\n  const dfMods = calculateDfModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    isCritical,\n    hitsPhysical\n  );\n\n  return OF16(Math.max(1, pokeRound((defense * chainMods(dfMods, 410, 131072)) / 4096)));\n}\n\nexport function calculateDfModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false,\n  hitsPhysical = false\n) {\n  const dfMods = [];\n  if (defender.hasAbility('Marvel Scale') && defender.status && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    defender.named('Cherrim') &&\n    defender.hasAbility('Flower Gift') &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.defenderSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical) {\n    dfMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  } else if (\n    defender.hasAbility('Grass Pelt') &&\n    field.hasTerrain('Grassy') &&\n    hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Fur Coat') && hitsPhysical) {\n    dfMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const isSwordOfRuinActive = attacker.hasAbility('Sword of Ruin') || field.isSwordOfRuin;\n  const isBeadsOfRuinActive = attacker.hasAbility('Beads of Ruin') || field.isBeadsOfRuin;\n  if (\n    (isSwordOfRuinActive && hitsPhysical) ||\n    (isBeadsOfRuinActive && !hitsPhysical)\n  ) {\n    if (attacker.hasAbility('Sword of Ruin') || attacker.hasAbility('Beads of Ruin')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      desc[hitsPhysical ? 'isSwordOfRuin' : 'isBeadsOfRuin'] = true;\n    }\n    dfMods.push(3072);\n  }\n\n  if (\n    (isQPActive(defender, field))\n  ) {\n    if (\n      (hitsPhysical && getQPBoostedStat(defender) === 'def') ||\n      (!hitsPhysical && getQPBoostedStat(defender) === 'spd')\n    ) {\n      desc.defenderAbility = defender.ability;\n      dfMods.push(5324);\n    }\n  }\n\n  if ((defender.hasItem('Eviolite') && gen.species.get(toID(defender.name))?.nfe) ||\n      (!hitsPhysical && defender.hasItem('Assault Vest'))) {\n    dfMods.push(6144);\n    desc.defenderItem = defender.item;\n  } else if (\n    (defender.hasItem('Metal Powder') && defender.named('Ditto') && hitsPhysical) ||\n    (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !hitsPhysical)\n  ) {\n    dfMods.push(8192);\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.defenderSide.isDefCheered){\n    dfMods.push(6144);\n    desc.isDefCheered = true;\n  }\n\n  return dfMods;\n}\n\nexport function calculateFinalModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false,\n  typeEffectiveness: number\n) {\n  const finalMods = [];\n\n  if (field.defenderSide.isReflect && move.category === 'Physical' &&\n      !isCritical && !field.defenderSide.isAuroraVeil) {\n    // doesn't stack with Aurora Veil\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isReflect = true;\n  } else if (\n    field.defenderSide.isLightScreen && move.category === 'Special' &&\n    !isCritical && !field.defenderSide.isAuroraVeil\n  ) {\n    // doesn't stack with Aurora Veil\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isLightScreen = true;\n  }\n  if (field.defenderSide.isAuroraVeil && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isAuroraVeil = true;\n  }\n\n  if (attacker.hasAbility('Neuroforce') && typeEffectiveness > 1) {\n    finalMods.push(5120);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Sniper') && isCritical) {\n    finalMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    finalMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.isDynamaxed && move.named('Dynamax Cannon', 'Behemoth Blade', 'Behemoth Bash')) {\n    finalMods.push(8192);\n  }\n\n  if (defender.hasAbility('Multiscale', 'Shadow Shield') &&\n      defender.curHP() === defender.maxHP() &&\n      (!field.defenderSide.isSR && (!field.defenderSide.spikes || defender.hasType('Flying')) ||\n      defender.hasItem('Heavy-Duty Boots')) && !attacker.hasAbility('Parental Bond (Child)')\n  ) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (defender.hasAbility('Fluffy') && move.flags.contact && !attacker.hasAbility('Long Reach')) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    (defender.hasAbility('Punk Rock') && move.flags.sound) ||\n    (defender.hasAbility('Ice Scales') && move.category === 'Special')\n  ) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (defender.hasAbility('Solid Rock', 'Filter', 'Prism Armor') && typeEffectiveness > 1) {\n    finalMods.push(3072);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (field.defenderSide.isFriendGuard) {\n    finalMods.push(3072);\n    desc.isFriendGuard = true;\n  }\n\n  if (field.defenderSide.friendGuards > 0) {\n    for(var i = 0; i < field.defenderSide.friendGuards; ++i){\n        finalMods.push(3072);\n    }\n    desc.friendGuards = field.defenderSide.friendGuards;\n  }\n\n  if (defender.hasAbility('Fluffy') && move.hasType('Fire')) {\n    finalMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1 && !move.isZ) {\n    finalMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Life Orb')) {\n    finalMods.push(5324);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Metronome') && move.timesUsedWithMetronome! >= 1) {\n    const timesUsedWithMetronome = Math.floor(move.timesUsedWithMetronome!);\n    if (timesUsedWithMetronome <= 4) {\n      finalMods.push(4096 + timesUsedWithMetronome * 819);\n    } else {\n      finalMods.push(8192);\n    }\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.hasType(getBerryResistType(defender.item)) &&\n      (typeEffectiveness > 1 || move.hasType('Normal')) &&\n      !attacker.hasAbility('Unnerve', 'As One (Glastrier)', 'As One (Spectrier)')) {\n    if (defender.hasAbility('Ripen')) {\n      finalMods.push(1024);\n    } else {\n      finalMods.push(2048);\n    }\n    desc.defenderItem = defender.item;\n  }\n\n  return finalMods;\n}\n\nfunction hasTerrainSeed(pokemon: Pokemon) {\n  return pokemon.hasItem('Electric Seed', 'Misty Seed', 'Grassy Seed', 'Psychic Seed');\n}\n","import {Field} from './field';\nimport {Generation} from './data/interface';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\nimport {Result} from './result';\n\nimport {calculateRBYGSC} from './mechanics/gen12';\nimport {calculateADV} from './mechanics/gen3';\nimport {calculateDPP} from './mechanics/gen4';\nimport {calculateBWXY} from './mechanics/gen56';\nimport {calculateSMSSSV} from './mechanics/gen789';\n\nconst MECHANICS = [\n  () => {},\n  calculateRBYGSC,\n  calculateRBYGSC,\n  calculateADV,\n  calculateDPP,\n  calculateBWXY,\n  calculateBWXY,\n  calculateSMSSSV,\n  calculateSMSSSV,\n  calculateSMSSSV,\n];\n\nexport function calculate(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field?: Field,\n) {\n  return MECHANICS[gen.num](\n    gen,\n    attacker.clone(),\n    defender.clone(),\n    move.clone(),\n    field ? field.clone() : new Field()\n  ) as Result;\n}\n","import {Generation} from '../data/interface';\nimport {getItemBoostType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Pokemon} from '../pokemon';\nimport {Move} from '../move';\nimport {Field} from '../field';\nimport {Result} from '../result';\nimport {\n  getModifiedStat,\n  getEVDescriptionText,\n  getFinalSpeed,\n  getMoveEffectiveness,\n  checkAirLock,\n  checkForecast,\n  checkIntimidate,\n  handleFixedDamageMoves,\n} from './util';\n\nexport function calculateADV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n  defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (move.named('Weather Ball')) {\n    move.type =\n      field.hasWeather('Sun') ? 'Fire'\n      : field.hasWeather('Rain') ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail') ? 'Ice'\n      : 'Normal';\n    move.category = move.type === 'Rock' ? 'Physical' : 'Special';\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n    desc.moveBP = move.bp;\n  }\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n  const type1Effectiveness = getMoveEffectiveness(\n    gen,\n    move,\n    firstDefenderType,\n    field.defenderSide.isForesight\n  );\n  const type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, field.defenderSide.isForesight)\n    : 1;\n  const typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((defender.hasAbility('Flash Fire') && move.hasType('Fire')) ||\n      (defender.hasAbility('Levitate') && move.hasType('Ground')) ||\n      (defender.hasAbility('Volt Absorb') && move.hasType('Electric')) ||\n      (defender.hasAbility('Water Absorb') && move.hasType('Water')) ||\n      (defender.hasAbility('Wonder Guard') && !move.hasType('???') && typeEffectiveness <= 1) ||\n      (defender.hasAbility('Soundproof') && move.flags.sound)\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    result.damage = fixedDamage;\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  let bp = move.bp;\n  switch (move.name) {\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    bp = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = bp;\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    bp = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = bp;\n    break;\n  case 'Low Kick':\n    const w = defender.weightkg;\n    bp = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = bp;\n    break;\n  case 'Facade':\n    if (attacker.hasStatus('par', 'psn', 'tox', 'brn')) {\n      bp = move.bp * 2;\n      desc.moveBP = bp;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Physical';\n    bp = 60;\n    desc.moveName = 'Swift';\n    break;\n  default:\n    bp = move.bp;\n  }\n\n  if (bp === 0) {\n    return result;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  desc.attackEVs = getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n\n  let at = attacker.rawStats[attackStat];\n  let df = defender.rawStats[defenseStat];\n\n  if (isPhysical && attacker.hasAbility('Huge Power', 'Pure Power')) {\n    at *= 2;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (!attacker.hasItem('Sea Incense') && move.hasType(getItemBoostType(attacker.item))) {\n    at = Math.floor(at * 1.1);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Sea Incense') && move.hasType('Water')) {\n    at = Math.floor(at * 1.05);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (isPhysical && attacker.hasItem('Choice Band')) ||\n    (!isPhysical && attacker.hasItem('Soul Dew') && attacker.named('Latios', 'Latias'))\n  ) {\n    at = Math.floor(at * 1.5);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (!isPhysical && attacker.hasItem('Deep Sea Tooth') && attacker.named('Clamperl')) ||\n    (!isPhysical && attacker.hasItem('Light Ball') && attacker.named('Pikachu')) ||\n    (isPhysical && attacker.hasItem('Thick Club') && attacker.named('Cubone', 'Marowak'))\n  ) {\n    at *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  if (!isPhysical && defender.hasItem('Soul Dew') && defender.named('Latios', 'Latias')) {\n    df = Math.floor(df * 1.5);\n    desc.defenderItem = defender.item;\n  } else if (\n    (!isPhysical && defender.hasItem('Deep Sea Scale') && defender.named('Clamperl')) ||\n    (isPhysical && defender.hasItem('Metal Powder') && defender.named('Ditto'))\n  ) {\n    df *= 2;\n    desc.defenderItem = defender.item;\n  }\n\n  if (defender.hasAbility('Thick Fat') && (move.hasType('Fire', 'Ice'))) {\n    at = Math.floor(at / 2);\n    desc.defenderAbility = defender.ability;\n  } else if (isPhysical && defender.hasAbility('Marvel Scale') && defender.status) {\n    df = Math.floor(df * 1.5);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((isPhysical &&\n        (attacker.hasAbility('Hustle') || (attacker.hasAbility('Guts') && attacker.status))) ||\n      (!isPhysical && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    at = Math.floor(at * 1.5);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.curHP() <= attacker.maxHP() / 3 &&\n    ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n     (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n     (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n     (attacker.hasAbility('Swarm') && move.hasType('Bug')))\n  ) {\n    bp = Math.floor(bp * 1.5);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (move.named('Explosion', 'Self-Destruct')) {\n    df = Math.floor(df / 2);\n  }\n\n  const isCritical = move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor');\n\n  const attackBoost = attacker.boosts[attackStat];\n  const defenseBoost = defender.boosts[defenseStat];\n  if (attackBoost > 0 || (!isCritical && attackBoost < 0)) {\n    at = getModifiedStat(at, attackBoost);\n    desc.attackBoost = attackBoost;\n  }\n  if (defenseBoost < 0 || (!isCritical && defenseBoost > 0)) {\n    df = getModifiedStat(df, defenseBoost);\n    desc.defenseBoost = defenseBoost;\n  }\n\n  const lv = attacker.level;\n  let baseDamage = Math.floor(Math.floor((Math.floor((2 * lv) / 5 + 2) * at * bp) / df) / 50);\n\n  if (attacker.hasStatus('brn') && isPhysical && !attacker.hasAbility('Guts')) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.isBurned = true;\n  }\n\n  if (!isCritical) {\n    const screenMultiplier = field.gameType !== 'Singles' ? 2 / 3 : 1 / 2;\n    if (isPhysical && field.defenderSide.isReflect) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isLightScreen = true;\n    }\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    baseDamage = Math.floor(baseDamage * 2);\n    desc.isSwitching = 'out';\n  }\n\n  if (field.gameType !== 'Singles' && move.target === 'allAdjacentFoes') {\n    baseDamage = Math.floor(baseDamage / 2);\n  }\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire')) ||\n    (move.named('Solar Beam') && field.hasWeather('Rain', 'Sand', 'Hail'))\n  ) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.weather = field.weather;\n  }\n\n  if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.attackerAbility = 'Flash Fire';\n  }\n\n  baseDamage = (move.category === 'Physical' ? Math.max(1, baseDamage) : baseDamage) + 2;\n\n  if (isCritical) {\n    baseDamage *= 2;\n    desc.isCritical = true;\n  }\n\n  if (move.named('Weather Ball') && field.weather) {\n    baseDamage *= 2;\n    desc.moveBP = bp * 2;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.isHelpingHand = true;\n  }\n\n  if (move.hasType(...attacker.types)) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n  }\n\n  baseDamage = Math.floor(baseDamage * typeEffectiveness);\n  result.damage = [];\n  for (let i = 85; i <= 100; i++) {\n    result.damage[i - 85] = Math.max(1, Math.floor((baseDamage * i) / 100));\n  }\n\n  return result;\n}\n","import * as I from './data/interface';\nimport {Stats} from './stats';\nimport {toID, extend, assignWithout} from './util';\nimport {State} from './state';\n\nconst STATS = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'] as I.StatID[];\nconst SPC = new Set(['spc']);\n\n\nexport class Pokemon implements State.Pokemon {\n  gen: I.Generation;\n  name: I.SpeciesName;\n  species: I.Specie;\n\n  types: [I.TypeName] | [I.TypeName, I.TypeName];\n  weightkg: number;\n\n  level: number;\n  bossMultiplier: number;\n  gender?: I.GenderName;\n  ability?: I.AbilityName;\n  abilityOn?: boolean;\n  isDynamaxed?: boolean;\n  dynamaxLevel?: number;\n  isSaltCure?: boolean;\n  alliesFainted?: number;\n  boostedStat?: I.StatIDExceptHP | 'auto';\n  item?: I.ItemName;\n  teraType?: I.TypeName;\n  isQP? : boolean;\n\n  nature: I.NatureName;\n  ivs: I.StatsTable;\n  evs: I.StatsTable;\n  boosts: I.StatsTable;\n  rawStats: I.StatsTable;\n  stats: I.StatsTable;\n\n  originalCurHP: number;\n  status: I.StatusName | '';\n  volatileStatus: string[];\n  toxicCounter: number;\n\n  moves: I.MoveName[];\n\n  constructor(\n    gen: I.Generation,\n    name: string,\n    options: Partial<State.Pokemon> & {\n      curHP?: number;\n      ivs?: Partial<I.StatsTable> & {spc?: number};\n      evs?: Partial<I.StatsTable> & {spc?: number};\n      boosts?: Partial<I.StatsTable> & {spc?: number};\n    } = {}\n  ) {\n    this.species = extend(true, {}, gen.species.get(toID(name)), options.overrides);\n\n    this.gen = gen;\n    this.name = options.name || name as I.SpeciesName;\n    this.types = this.species.types;\n    this.weightkg = this.species.weightkg;\n\n    this.level = options.level || 100;\n    this.bossMultiplier = options.bossMultiplier || 100;\n    this.gender = options.gender || this.species.gender || 'M';\n    this.ability = options.ability || this.species.abilities?.[0] || undefined;\n    this.abilityOn = !!options.abilityOn;\n\n    this.isDynamaxed = !!options.isDynamaxed;\n    this.dynamaxLevel = this.isDynamaxed\n      ? (options.dynamaxLevel === undefined ? 10 : options.dynamaxLevel) : undefined;\n    this.isSaltCure = !!options.isSaltCure;\n    this.alliesFainted = options.alliesFainted;\n    this.boostedStat = options.boostedStat;\n    this.teraType = options.teraType;\n    this.item = options.item;\n    this.nature = options.nature || ('Serious' as I.NatureName);\n    this.ivs = Pokemon.withDefault(gen, options.ivs, 31);\n    this.evs = Pokemon.withDefault(gen, options.evs, gen.num >= 3 ? 0 : 252);\n    this.boosts = Pokemon.withDefault(gen, options.boosts, 0, false);\n\n    // Gigantamax 'forms' inherit weight from their base species when not dynamaxed\n    // TODO: clean this up with proper Gigantamax support\n    if (this.weightkg === 0 && !this.isDynamaxed && this.species.baseSpecies) {\n      this.weightkg = gen.species.get(toID(this.species.baseSpecies))!.weightkg;\n    }\n\n    if (gen.num < 3) {\n      this.ivs.hp = Stats.DVToIV(\n        Stats.getHPDV({\n          atk: this.ivs.atk,\n          def: this.ivs.def,\n          spe: this.ivs.spe,\n          spc: this.ivs.spa,\n        })\n      );\n    }\n\n    this.rawStats = {} as I.StatsTable;\n    this.stats = {} as I.StatsTable;\n    for (const stat of STATS) {\n      const val = this.calcStat(gen, stat);\n      this.rawStats[stat] = stat === \"hp\" ? ~~val*this.bossMultiplier/100 : val;\n      this.stats[stat] =  stat === \"hp\" ? ~~val*this.bossMultiplier/100 : val;\n    }\n\n    const curHP = options.curHP || options.originalCurHP;\n    this.originalCurHP = curHP && curHP <= this.rawStats.hp ? curHP : curHP === 0 ? 0 : this.rawStats.hp;\n    this.status = options.status || '';\n    this.volatileStatus = options.volatileStatus || [];\n    this.toxicCounter = options.toxicCounter || 0;\n    this.moves = options.moves || [];\n  }\n\n  maxHP(original = false) {\n    // Shedinja still has 1 max HP during the effect even if its Dynamax Level is maxed (DaWoblefet)\n    if (!original && this.isDynamaxed && this.species.baseStats.hp !== 1) {\n      return Math.floor((this.rawStats.hp * (150 + 5 * this.dynamaxLevel!)) / 100);\n    }\n\n    return this.rawStats.hp;\n  }\n\n  curHP(original = false) {\n    // Shedinja still has 1 max HP during the effect even if its Dynamax Level is maxed (DaWoblefet)\n    if (!original && this.isDynamaxed && this.species.baseStats.hp !== 1) {\n      return Math.ceil((this.originalCurHP * (150 + 5 * this.dynamaxLevel!)) / 100);\n    }\n\n    return this.originalCurHP;\n  }\n\n  hasAbility(...abilities: string[]) {\n    return !!(this.ability && abilities.includes(this.ability));\n  }\n\n  hasItem(...items: string[]) {\n    return !!(this.item && items.includes(this.item));\n  }\n\n  hasStatus(...statuses: I.StatusName[]) {\n    return !!(this.status && statuses.includes(this.status));\n  }\n\n  hasType(...types: I.TypeName[]) {\n    for (const type of types) {\n      if (this.teraType ? this.teraType === type : this.types.includes(type)) return true;\n    }\n    return false;\n  }\n\n  /** Ignores Tera type */\n  hasOriginalType(...types: I.TypeName[]) {\n    for (const type of types) {\n      if (this.types.includes(type)) return true;\n    }\n    return false;\n  }\n\n  named(...names: string[]) {\n    return names.includes(this.name);\n  }\n\n  clone() {\n    return new Pokemon(this.gen, this.name, {\n      level: this.level,\n      bossMultiplier: this.bossMultiplier,\n      ability: this.ability,\n      abilityOn: this.abilityOn,\n      isDynamaxed: this.isDynamaxed,\n      dynamaxLevel: this.dynamaxLevel,\n      isSaltCure: this.isSaltCure,\n      alliesFainted: this.alliesFainted,\n      boostedStat: this.boostedStat,\n      item: this.item,\n      gender: this.gender,\n      nature: this.nature,\n      ivs: extend(true, {}, this.ivs),\n      evs: extend(true, {}, this.evs),\n      boosts: extend(true, {}, this.boosts),\n      originalCurHP: this.originalCurHP,\n      status: this.status,\n      teraType: this.teraType,\n      toxicCounter: this.toxicCounter,\n      moves: this.moves.slice(),\n      overrides: this.species,\n    });\n  }\n\n  private calcStat(gen: I.Generation, stat: I.StatID) {\n    return Stats.calcStat(\n      gen,\n      stat,\n      this.species.baseStats[stat],\n      this.ivs[stat]!,\n      this.evs[stat]!,\n      this.level,\n      this.nature\n    );\n  }\n\n  static getForme(\n    gen: I.Generation,\n    speciesName: string,\n    item?: I.ItemName,\n    moveName?: I.MoveName\n  ) {\n    const species = gen.species.get(toID(speciesName));\n    if (!species?.otherFormes) {\n      return speciesName;\n    }\n\n    let i = 0;\n    if (\n      (item &&\n        ((item.includes('ite') && !item.includes('ite Y')) ||\n          (speciesName === 'Groudon' && item === 'Red Orb') ||\n          (speciesName === 'Kyogre' && item === 'Blue Orb'))) ||\n      (moveName && speciesName === 'Meloetta' && moveName === 'Relic Song') ||\n      (speciesName === 'Rayquaza' && moveName === 'Dragon Ascent')\n    ) {\n      i = 1;\n    } else if (item?.includes('ite Y')) {\n      i = 2;\n    }\n\n    return i ? species.otherFormes[i - 1] : species.name;\n  }\n\n  private static withDefault(\n    gen: I.Generation,\n    current: Partial<I.StatsTable> & {spc?: number} | undefined,\n    val: number,\n    match = true,\n  ) {\n    const cur: Partial<I.StatsTable> = {};\n    if (current) {\n      assignWithout(cur, current, SPC);\n      if (current.spc) {\n        cur.spa = current.spc;\n        cur.spd = current.spc;\n      }\n      if (match && gen.num <= 2 && current.spa !== current.spd) {\n        throw new Error('Special Attack and Special Defense must match before Gen 3');\n      }\n    }\n    return {hp: val, atk: val, def: val, spa: val, spd: val, spe: val, ...cur};\n  }\n}\n","import * as I from './data/interface';\nimport {State} from './state';\nimport {toID, extend} from './util';\n\nconst SPECIAL = ['Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon'];\n\nexport class Move implements State.Move {\n  gen: I.Generation;\n  name: I.MoveName;\n\n  originalName: string;\n  ability?: I.AbilityName;\n  item?: I.ItemName;\n  species?: I.SpeciesName;\n  useZ?: boolean;\n  useMax?: boolean;\n  overrides?: Partial<I.Move>;\n\n  hits: number;\n  timesUsed?: number;\n  timesUsedWithMetronome?: number;\n  bp: number;\n  type: I.TypeName;\n  category: I.MoveCategory;\n  flags: I.MoveFlags;\n  secondaries: any;\n  target: I.MoveTarget;\n  recoil?: [number, number];\n  hasCrashDamage: boolean;\n  mindBlownRecoil: boolean;\n  struggleRecoil: boolean;\n  isCrit: boolean;\n  drain?: [number, number];\n  priority: number;\n  dropsStats?: number;\n  ignoreDefensive: boolean;\n  overrideOffensiveStat?: I.StatIDExceptHP;\n  overrideDefensiveStat?: I.StatIDExceptHP;\n  overrideOffensivePokemon?: 'target' | 'source';\n  overrideDefensivePokemon?: 'target' | 'source';\n  breaksProtect: boolean;\n  isZ: boolean;\n  isMax: boolean;\n\n  constructor(\n    gen: I.Generation,\n    name: string,\n    options: Partial<State.Move> & {\n      ability?: I.AbilityName;\n      item?: I.ItemName;\n      species?: I.SpeciesName;\n    } = {}\n  ) {\n    name = options.name || name;\n    this.originalName = name;\n    let data: I.Move = extend(true, {name}, gen.moves.get(toID(name)), options.overrides);\n\n    this.hits = 1;\n    // If isZMove but there isn't a corresponding z-move, use the original move\n    if (options.useMax && data.maxMove) {\n      const maxMoveName: string = getMaxMoveName(\n        data.type,\n        options.species,\n        !!(data.category === 'Status'),\n        options.ability\n      );\n      const maxMove = gen.moves.get(toID(maxMoveName));\n      const maxPower = () => {\n        if (['G-Max Drum Solo', 'G-Max Fire Ball', 'G-Max Hydrosnipe'].includes(maxMoveName)) {\n          return 160;\n        }\n        // TODO: checking basePower === 10 is fragile (what if the maxMove's basePower is\n        // overridden?) and also fails for Max Flare, which is strangely 100 BP in the game data\n        if (maxMove!.basePower === 10 || maxMoveName === 'Max Flare') {\n          return data.maxMove!.basePower;\n        }\n        return maxMove!.basePower;\n      };\n      data = extend(true, {}, maxMove, {\n        name: maxMoveName,\n        basePower: maxPower(),\n        category: data.category,\n      });\n    }\n    if (options.useZ && data.zMove?.basePower) {\n      const zMoveName: string = getZMoveName(data.name, data.type, options.item);\n      const zMove = gen.moves.get(toID(zMoveName));\n      data = extend(true, {}, zMove, {\n        name: zMoveName,\n        basePower: zMove!.basePower === 1 ? data.zMove.basePower : zMove!.basePower,\n        category: data.category,\n      });\n    } else {\n      if (data.multihit) {\n        if (typeof data.multihit === 'number') {\n          this.hits = data.multihit;\n        } else if (options.hits) {\n          this.hits = options.hits;\n        } else {\n          this.hits = (options.ability === 'Skill Link')\n            ? data.multihit[1]\n            : data.multihit[0] + 1;\n        }\n      }\n      this.timesUsedWithMetronome = options.timesUsedWithMetronome;\n    }\n    this.gen = gen;\n    this.name = data.name;\n    this.ability = options.ability;\n    this.item = options.item;\n    this.useZ = options.useZ;\n    this.useMax = options.useMax;\n    this.overrides = options.overrides;\n    this.species = options.species;\n\n    this.bp = data.basePower;\n    // These moves have a type, but the damage they deal is typeless so we override it\n    const typelessDamage =\n      (gen.num >= 2 && data.id === 'struggle') ||\n      (gen.num <= 4 && ['futuresight', 'doomdesire'].includes(data.id));\n    this.type = typelessDamage ? '???' : data.type;\n    this.category = data.category ||\n      (gen.num < 4 ? (SPECIAL.includes(data.type) ? 'Special' : 'Physical') : 'Status');\n\n    const stat = this.category === 'Special' ? 'spa' : 'atk';\n    if (data.self?.boosts && data.self.boosts[stat] && data.self.boosts[stat]! < 0) {\n      this.dropsStats = Math.abs(data.self.boosts[stat]!);\n    }\n    this.timesUsed = (this.dropsStats && options.timesUsed) || 1;\n    this.secondaries = data.secondaries;\n    // For the purposes of the damage formula only 'allAdjacent' and 'allAdjacentFoes' matter, so we\n    // simply default to 'any' for the others even though they may not actually be 'any'-target\n    this.target = data.target || 'any';\n    this.recoil = data.recoil;\n    this.hasCrashDamage = !!data.hasCrashDamage;\n    this.mindBlownRecoil = !!data.mindBlownRecoil;\n    this.struggleRecoil = !!data.struggleRecoil;\n    this.isCrit = !!options.isCrit || !!data.willCrit ||\n      // These don't *always* crit (255/256 chance), but for the purposes of the calc they do\n      gen.num === 1 && ['crabhammer', 'razorleaf', 'slash', 'karate chop'].includes(data.id);\n    this.drain = data.drain;\n    this.flags = data.flags;\n    // The calc doesn't currently care about negative priority moves so we simply default to 0\n    this.priority = data.priority || 0;\n\n    this.ignoreDefensive = !!data.ignoreDefensive;\n    this.overrideOffensiveStat = data.overrideOffensiveStat;\n    this.overrideDefensiveStat = data.overrideDefensiveStat;\n    this.overrideOffensivePokemon = data.overrideOffensivePokemon;\n    this.overrideDefensivePokemon = data.overrideDefensivePokemon;\n    this.breaksProtect = !!data.breaksProtect;\n    this.isZ = !!data.isZ;\n    this.isMax = !!data.isMax;\n\n    if (!this.bp) {\n      // Assume max happiness for these moves because the calc doesn't support happiness\n      if (['return', 'frustration', 'pikapapow', 'veeveevolley'].includes(data.id)) {\n        this.bp = 102;\n      }\n    }\n  }\n\n  named(...names: string[]) {\n    return names.includes(this.name);\n  }\n\n  hasType(...types: Array<(I.TypeName | undefined)>) {\n    return types.includes(this.type);\n  }\n\n  clone() {\n    return new Move(this.gen, this.originalName, {\n      ability: this.ability,\n      item: this.item,\n      species: this.species,\n      useZ: this.useZ,\n      useMax: this.useMax,\n      isCrit: this.isCrit,\n      hits: this.hits,\n      timesUsed: this.timesUsed,\n      timesUsedWithMetronome: this.timesUsedWithMetronome,\n      overrides: this.overrides,\n    });\n  }\n}\n\nexport function getZMoveName(moveName: string, moveType: I.TypeName, item?: string) {\n  item = item || '';\n  if (moveName.includes('Hidden Power')) return 'Breakneck Blitz';\n  if (moveName === 'Clanging Scales' && item === 'Kommonium Z') return 'Clangorous Soulblaze';\n  if (moveName === 'Darkest Lariat' && item === 'Incinium Z') return 'Malicious Moonsault';\n  if (moveName === 'Giga Impact' && item === 'Snorlium Z') return 'Pulverizing Pancake';\n  if (moveName === 'Moongeist Beam' && item === 'Lunalium Z') return 'Menacing Moonraze Maelstrom';\n  if (moveName === 'Photon Geyser' && item === 'Ultranecrozium Z') {\n    return 'Light That Burns the Sky';\n  }\n  if (moveName === 'Play Rough' && item === 'Mimikium Z') return 'Let\\'s Snuggle Forever';\n  if (moveName === 'Psychic' && item === 'Mewnium Z') return 'Genesis Supernova';\n  if (moveName === 'Sparkling Aria' && item === 'Primarium Z') return 'Oceanic Operetta';\n  if (moveName === 'Spectral Thief' && item === 'Marshadium Z') {\n    return 'Soul-Stealing 7-Star Strike';\n  }\n  if (moveName === 'Spirit Shackle' && item === 'Decidium Z') return 'Sinister Arrow Raid';\n  if (moveName === 'Stone Edge' && item === 'Lycanium Z') return 'Splintered Stormshards';\n  if (moveName === 'Sunsteel Strike' && item === 'Solganium Z') return 'Searing Sunraze Smash';\n  if (moveName === 'Volt Tackle' && item === 'Pikanium Z') return 'Catastropika';\n  if (moveName === 'Nature\\'s Madness' && item === 'Tapunium Z') return 'Guardian of Alola';\n  if (moveName === 'Thunderbolt') {\n    if (item === 'Aloraichium Z') return 'Stoked Sparksurfer';\n    if (item === 'Pikashunium Z') return '10,000,000 Volt Thunderbolt';\n  }\n  return ZMOVES_TYPING[moveType]!;\n}\n\nconst ZMOVES_TYPING: {\n  [type in I.TypeName]?: string;\n} = {\n  Bug: 'Savage Spin-Out',\n  Dark: 'Black Hole Eclipse',\n  Dragon: 'Devastating Drake',\n  Electric: 'Gigavolt Havoc',\n  Fairy: 'Twinkle Tackle',\n  Fighting: 'All-Out Pummeling',\n  Fire: 'Inferno Overdrive',\n  Flying: 'Supersonic Skystrike',\n  Ghost: 'Never-Ending Nightmare',\n  Grass: 'Bloom Doom',\n  Ground: 'Tectonic Rage',\n  Ice: 'Subzero Slammer',\n  Normal: 'Breakneck Blitz',\n  Poison: 'Acid Downpour',\n  Psychic: 'Shattered Psyche',\n  Rock: 'Continental Crush',\n  Steel: 'Corkscrew Crash',\n  Water: 'Hydro Vortex',\n};\n\nexport function getMaxMoveName(\n  moveType: I.TypeName,\n  pokemonSpecies?: string,\n  isStatus?: boolean,\n  pokemonAbility?: string\n) {\n  if (isStatus) return 'Max Guard';\n  if (pokemonAbility === 'Normalize') return 'Max Strike';\n  if (moveType === 'Fire') {\n    if (pokemonSpecies === 'Charizard-Gmax') return 'G-Max Wildfire';\n    if (pokemonSpecies === 'Centiskorch-Gmax') return 'G-Max Centiferno';\n    if (pokemonSpecies === 'Cinderace-Gmax') return 'G-Max Fire Ball';\n  }\n  if (moveType === 'Normal') {\n    if (pokemonSpecies === 'Eevee-Gmax') return 'G-Max Cuddle';\n    if (pokemonSpecies === 'Meowth-Gmax') return 'G-Max Gold Rush';\n    if (pokemonSpecies === 'Snorlax-Gmax') return 'G-Max Replenish';\n    if (pokemonAbility === 'Pixilate') return 'Max Starfall';\n    if (pokemonAbility === 'Aerilate') return 'Max Airstream';\n    if (pokemonAbility === 'Refrigerate') return 'Max Hailstorm';\n    if (pokemonAbility === 'Galvanize') return 'Max Lightning';\n  }\n  if (moveType === 'Fairy') {\n    if (pokemonSpecies === 'Alcremie-Gmax') return 'G-Max Finale';\n    if (pokemonSpecies === 'Hatterene-Gmax') return 'G-Max Smite';\n  }\n  if (moveType === 'Steel') {\n    if (pokemonSpecies === 'Copperajah-Gmax') return 'G-Max Steelsurge';\n    if (pokemonSpecies === 'Melmetal-Gmax') return 'G-Max Meltdown';\n  }\n  if (moveType === 'Electric') {\n    if (pokemonSpecies === 'Pikachu-Gmax') return 'G-Max Volt Crash';\n    if (pokemonSpecies?.startsWith('Toxtricity') &&\n      pokemonSpecies?.endsWith('Gmax')) return 'G-Max Stun Shock';\n  }\n  if (moveType === 'Grass') {\n    if (pokemonSpecies === 'Appletun-Gmax') return 'G-Max Sweetness';\n    if (pokemonSpecies === 'Flapple-Gmax') return 'G-Max Tartness';\n    if (pokemonSpecies === 'Rillaboom-Gmax') return 'G-Max Drum Solo';\n    if (pokemonSpecies === 'Venusaur-Gmax') return 'G-Max Vine Lash';\n  }\n  if (moveType === 'Water') {\n    if (pokemonSpecies === 'Blastoise-Gmax') return 'G-Max Cannonade';\n    if (pokemonSpecies === 'Drednaw-Gmax') return 'G-Max Stonesurge';\n    if (pokemonSpecies === 'Inteleon-Gmax') return 'G-Max Hydrosnipe';\n    if (pokemonSpecies === 'Kingler-Gmax') return 'G-Max Foam Burst';\n    if (pokemonSpecies === 'Urshifu-Rapid-Strike-Gmax') return 'G-Max Rapid Flow';\n  }\n  if (moveType === 'Dark') {\n    if (pokemonSpecies === 'Grimmsnarl-Gmax') return 'G-Max Snooze';\n    if (pokemonSpecies === 'Urshifu-Gmax') return 'G-Max One Blow';\n  }\n  if (moveType === 'Poison' && pokemonSpecies === 'Garbodor-Gmax') return 'G-Max Malodor';\n  if (moveType === 'Fighting' && pokemonSpecies === 'Machamp-Gmax') return 'G-Max Chi Strike';\n  if (moveType === 'Ghost' && pokemonSpecies === 'Gengar-Gmax') return 'G-Max Terror';\n  if (moveType === 'Ice' && pokemonSpecies === 'Lapras-Gmax') return 'G-Max Resonance';\n  if (moveType === 'Flying' && pokemonSpecies === 'Corviknight-Gmax') return 'G-Max Wind Rage';\n  if (moveType === 'Dragon' && pokemonSpecies === 'Duraludon-Gmax') return 'G-Max Depletion';\n  if (moveType === 'Psychic' && pokemonSpecies === 'Orbeetle-Gmax') return 'G-Max Gravitas';\n  if (moveType === 'Rock' && pokemonSpecies === 'Coalossal-Gmax') return 'G-Max Volcalith';\n  if (moveType === 'Ground' && pokemonSpecies === 'Sandaconda-Gmax') return 'G-Max Sandblast';\n  if (moveType === 'Dark' && pokemonSpecies === 'Grimmsnarl-Gmax') return 'G-Max Snooze';\n  return 'Max ' + MAXMOVES_TYPING[moveType];\n}\n\nconst MAXMOVES_TYPING: {\n  [type in I.TypeName]?: string;\n} = {\n  Bug: 'Flutterby',\n  Dark: 'Darkness',\n  Dragon: 'Wyrmwind',\n  Electric: 'Lightning',\n  Fairy: 'Starfall',\n  Fighting: 'Knuckle',\n  Fire: 'Flare',\n  Flying: 'Airstream',\n  Ghost: 'Phantasm',\n  Grass: 'Overgrowth',\n  Ground: 'Quake',\n  Ice: 'Hailstorm',\n  Normal: 'Strike',\n  Poison: 'Ooze',\n  Psychic: 'Mindstorm',\n  Rock: 'Rockfall',\n  Steel: 'Steelspike',\n  Water: 'Geyser',\n};\n","import * as I from './data/interface';\n\nexport namespace State {\n  export interface Pokemon {\n    name: I.SpeciesName;\n    level?: number;\n    bossMultiplier?: number;\n    ability?: I.AbilityName;\n    abilityOn?: boolean;\n    isDynamaxed?: boolean;\n    dynamaxLevel?: number;\n    isSaltCure?: boolean;\n    alliesFainted?: number;\n    boostedStat?: I.StatIDExceptHP | 'auto';\n    item?: I.ItemName;\n    gender?: I.GenderName;\n    nature?: I.NatureName;\n    ivs?: Partial<I.StatsTable>;\n    evs?: Partial<I.StatsTable>;\n    boosts?: Partial<I.StatsTable>;\n    originalCurHP?: number;\n    status?: I.StatusName | '';\n    volatileStatus?: string[];\n    teraType?: I.TypeName;\n    toxicCounter?: number;\n    moves?: I.MoveName[];\n    overrides?: Partial<I.Specie>;\n  }\n\n  export interface Move {\n    name: I.MoveName;\n    useZ?: boolean;\n    useMax?: boolean;\n    isCrit?: boolean;\n    hits?: number;\n    timesUsed?: number;\n    timesUsedWithMetronome?: number;\n    overrides?: Partial<I.Move>;\n  }\n\n  export interface Field {\n    gameType: I.GameType;\n    weather?: I.Weather;\n    terrain?: I.Terrain;\n    isMagicRoom?: boolean;\n    isWonderRoom?: boolean;\n    isGravity?: boolean;\n    isAuraBreak?: boolean;\n    isFairyAura?: boolean;\n    isDarkAura?: boolean;\n    isBeadsOfRuin?: boolean;\n    isSwordOfRuin?: boolean;\n    isTabletsOfRuin?: boolean;\n    isVesselOfRuin?: boolean;\n    isTrickRoom?: boolean;\n    isCloudNine?: boolean;\n    attackerSide: Side;\n    defenderSide: Side;\n  }\n\n  export interface Side {\n    spikes?: number;\n    steelsurge?: boolean;\n    vinelash?: boolean;\n    wildfire?: boolean;\n    cannonade?: boolean;\n    volcalith?: boolean;\n    isSR?: boolean;\n    isReflect?: boolean;\n    isLightScreen?: boolean;\n    isDefCheered?: boolean;\n    isProtected?: boolean;\n    isSeeded?: boolean;\n    isForesight?: boolean;\n    isTailwind?: boolean;\n    isHelpingHand?: boolean;\n    isAtkCheered?: boolean;\n    isFlowerGift?: boolean;\n    isFriendGuard?: boolean;\n    friendGuards?: number;\n    isAuroraVeil?: boolean;\n    isBattery?: boolean;\n    isPowerSpot?: boolean;\n    powerSpots?: number;\n    steelySpirits?: number;\n    isSwitching?: 'out' | 'in';\n    isCharged?: boolean;\n    isMist?: boolean;\n    isSafeguard?: boolean;\n    isAromaVeil?: boolean;\n  }\n}\n","// When using this library in the browser, a bundler like Webpack should be\n// used to encapsulate the various interdependencies between internal packages.\n// However, if you are requiring contents of this package in HTML <script>\n// tags, the following loading order is required:\n//\n//   - util.js\n//   - stats.js\n//\n//   - data/species.js\n//   - data/types.js\n//   - data/natures.js\n//   - data/abilities.js\n//   - data/moves.js\n//   - data/items.js\n//   - data/index.js\n//\n//   - pokemon.js\n//   - field.js\n//   - move.js\n//   - items.js\n//\n//   - mechanics/util.js\n//   - mechanics/gen78.js\n//   - mechanics/gen56.js\n//   - mechanics/gen4.js\n//   - mechanics/gen3.js\n//   - mechanics/gen12.js\n//\n//   - calc.js\n//   - desc.js\n//   - result.ts\n//\n//   - adaptable.js\n//   - index.js\n//\n// Furthermore, before anything is loaded, the following is required:\n//\n// <script type=\"text/javascript\">\n//\t\tvar calc = exports = {};\n//\t\tfunction require() { return exports; };\n//\t</script>\n\n// If we're not being used as a module we're just going to rely on globals and\n// that the correct loading order being followed.\n\nimport {Generations} from './data';\nimport {State} from './state';\nimport * as I from './data/interface';\nimport * as A from './adaptable';\n\nexport function calculate(\n  gen: I.GenerationNum | I.Generation,\n  attacker: A.Pokemon,\n  defender: A.Pokemon,\n  move: A.Move,\n  field?: A.Field\n): A.Result {\n  return (A.calculate)(\n    typeof gen === 'number' ? Generations.get(gen) : gen,\n    attacker,\n    defender,\n    move,\n    field\n  );\n}\n\nexport class Move extends A.Move {\n  constructor(\n    gen: I.GenerationNum | I.Generation,\n    name: string,\n    options: Partial<Omit<State.Move, 'ability' | 'item' | 'species'>> & {\n      ability?: string;\n      item?: string;\n      species?: string;\n    } = {}\n  ) {\n    super(typeof gen === 'number' ? Generations.get(gen) : gen, name, options as any);\n  }\n}\n\nexport class Pokemon extends A.Pokemon {\n  constructor(\n    gen: I.GenerationNum | I.Generation,\n    name: string,\n    options: Partial<Omit<State.Pokemon, 'ability' | 'item' | 'nature' | 'moves'>> & {\n      ability?: string;\n      item?: string;\n      nature?: string;\n      moves?: string[];\n      curHP?: number;\n      ivs?: Partial<I.StatsTable> & {spc?: number};\n      evs?: Partial<I.StatsTable> & {spc?: number};\n      boosts?: Partial<I.StatsTable> & {spc?: number};\n    } = {}\n  ) {\n    super(typeof gen === 'number' ? Generations.get(gen) : gen, name, options as any);\n  }\n\n  static getForme(\n    gen: I.GenerationNum | I.Generation,\n    speciesName: string,\n    item?: string,\n    moveName?: string\n  ) {\n    return A.Pokemon.getForme(\n      typeof gen === 'number' ? Generations.get(gen) : gen,\n      speciesName,\n      item as I.ItemName,\n      moveName as I.MoveName\n    );\n  }\n}\n\nexport function calcStat(\n  gen: I.GenerationNum | I.Generation,\n  stat: I.StatID | 'spc',\n  base: number,\n  iv: number,\n  ev: number,\n  level: number,\n  nature?: string\n) {\n  return A.Stats.calcStat(\n    typeof gen === 'number' ? Generations.get(gen) : gen,\n    stat === 'spc' ? 'spa' : stat,\n    base,\n    iv,\n    ev,\n    level,\n    nature\n  );\n}\n\nexport {Field, Side} from './field';\nexport {Result} from './result';\nexport type {GenerationNum, StatsTable, StatID} from './data/interface';\nexport {Generations} from './data/index';\nexport {toID} from './util';\nexport {State} from './state';\n\nexport {ABILITIES} from './data/abilities';\nexport {ITEMS, MEGA_STONES} from './data/items';\nexport {MOVES} from './data/moves';\nexport {SPECIES} from './data/species';\nexport {NATURES} from './data/natures';\nexport {TYPE_CHART} from './data/types';\nexport {STATS, Stats} from './stats';\n","import { Move, Field, Pokemon, StatsTable, StatID, Generations, calculate} from \"../calc\";\nimport { getEndOfTurn } from \"../calc/desc\";\nimport { RaidState, Raider, AilmentName, MoveData, RaidMoveResult, RaidMoveOptions } from \"./interface\";\nimport { AbilityName, StatIDExceptHP, StatusName, Terrain, Weather } from \"../calc/data/interface\";\nimport { getMoveEffectiveness, getQPBoostedStat } from \"../calc/mechanics/util\";\n\n// next time I prepare the move data, I should eliminate the need for translation\nfunction ailmentToStatus(ailment: AilmentName): StatusName | \"\" {\n    if (ailment == \"paralysis\") { return \"par\"; }\n    if (ailment == \"poison\") { return \"psn\"; }\n    if (ailment == \"burn\") { return \"brn\"; }\n    if (ailment == \"freeze\") { return \"frz\"; }\n    if (ailment == \"sleep\") { return \"slp\"; }\n    if (ailment == \"toxic\") { return \"tox\"; }\n    return \"\"\n}\n\nfunction hasNoStatus(pokemon: Pokemon) {\n    return pokemon.status === \"\" || pokemon.status === undefined;\n}\n\n// See ../calc/mechanics/util.ts for the original\nfunction isSuperEffective(move: Move, field: Field, attacker: Pokemon, defender: Pokemon) {\n    const isGhostRevealed =\n    attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n    const isRingTarget =\n      defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n    const type1Effectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      defender.types[0],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n    const type2Effectiveness = defender.types[1]\n      ? getMoveEffectiveness(\n        gen,\n        move,\n        defender.types[1],\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      )\n      : 1;\n    let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n  \n    if (defender.teraType) {\n      typeEffectiveness = getMoveEffectiveness(\n        gen,\n        move,\n        defender.teraType,\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      );\n    }\n  \n    if (typeEffectiveness === 0 && move.hasType('Ground') &&\n      defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n      typeEffectiveness = 1;\n    }\n  \n    if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n      typeEffectiveness = 1;\n    }\n    return typeEffectiveness >= 2;\n}\n\n// we'll always use generation 9\nconst gen = Generations.get(9);\nconst dummyMove = new Move(gen, \"Splash\");\n\nexport class RaidMove {\n    move: Move;\n    moveData: MoveData;\n    raidState: RaidState;\n    userID: number;     // the id of the user of this move\n    targetID: number;   // the id of the target of this move\n    raiderID: number;   // the id of the raider who initiated this round\n    movesFirst: boolean;\n    options: RaidMoveOptions;\n\n    _raidState!: RaidState;\n    _raiders!: Raider[];\n    _user!: Raider;\n    _affectedIDs!: number[];\n    _fields!: Field[];\n\n    _boosts!: Partial<StatsTable>[];\n\n    _damage!: number[];\n    _healing!: number[];\n    _drain!: number[];\n    _eot!: ({damage: number, texts: string[]} | undefined)[];\n\n    _desc!: string[];\n    _flags!: string[][];\n\n    constructor(moveData: MoveData, move: Move, raidState: RaidState, userID: number, targetID: number, raiderID: number, movesFirst: boolean,  raidMoveOptions?: RaidMoveOptions) {\n        this.move = move;\n        this.moveData = moveData;\n        this.raidState = raidState;\n        this.userID = userID;\n        this.targetID = targetID;\n        this.raiderID = raiderID;\n        this.movesFirst = movesFirst;\n        this.options = raidMoveOptions || {};\n    }\n\n    public result(): RaidMoveResult {\n        this.setOutputRaidState();\n        this.setAffectedPokemon();\n        this.setDamage();\n        this.setDrain();\n        this.setHealing();\n        this.setSelfDamage();\n        this.applyStatChanges();\n        this.applyAilment();\n        this.applyFieldChanges();\n        this.applyDamage();\n        this.applyItemEffects();        \n        this.applyUniqueMoveEffects();\n        this.applyAbilityEffects();\n        this.setEndOfTurnDamage();\n        this.applyEndOfTurnDamage();\n        this.applyItemEffects();\n        this.setFlags();\n        this._user.lastMove = this.moveData;\n        this._user.lastTarget = this.moveData.target == \"user\" ? this.userID : this.targetID;\n        return {\n            state: this._raidState,\n            userID: this.userID,\n            targetID: this.targetID,\n            damage: this._damage,\n            drain: this._drain,\n            healing: this._healing,\n            eot: this._eot,\n            desc: this._desc,\n            flags: this._flags,\n        }\n    }\n\n    private setOutputRaidState() {\n        this._raidState = this.raidState.clone();\n        this._raiders = this._raidState.raiders;\n        this._fields = this._raidState.fields;\n        this._user = this._raiders[this.userID];\n        this._flags=[[],[],[],[],[]];\n    }\n\n    private setAffectedPokemon() {\n        const targetType = this.moveData.target;\n        if (targetType == \"user\") { this._affectedIDs = [this.userID]; }\n        else if (targetType == \"selected-pokemon\" || targetType == \"all-opponents\") { this._affectedIDs = [this.targetID]; }\n        else if (targetType == \"all-allies\") { this._affectedIDs = [1,2,3,4].splice(this.userID, 1); }\n        else if (targetType == \"user-and-allies\") { this._affectedIDs = [1,2,3,4]; }\n        else { this._affectedIDs = [this.targetID]; }\n    }\n\n    private getMoveField(atkID:number, defID: number) {\n        const moveField = this.raidState.fields[atkID].clone();\n        moveField.defenderSide = this.raidState.fields[defID].attackerSide.clone();\n        return moveField;\n    }\n\n    private getPokemon(id: number) {\n        return this._raiders[id];\n    }\n\n    private setDamage() {\n        this._damage = [0,0,0,0,0];\n        this._desc = ['','','','',''];\n        const moveUser = this.getPokemon(this.userID);\n        if ((this._fields[this.userID].terrain === \"Electric\" && moveUser.ability === \"Quark Drive\")  ||\n            (this._fields[this.userID].weather === \"Sun\" && moveUser.ability === \"Protosynthesis\")\n        ) {\n            moveUser.abilityOn = true;\n            const qpStat = getQPBoostedStat(moveUser) as StatIDExceptHP;\n            moveUser.boostedStat = qpStat;\n        }\n        for (let id of this._affectedIDs) {\n            const target = this.getPokemon(id);\n            const moveField = this.getMoveField(this.userID, id);\n            const hits = (this.moveData.maxHits || 1) > 1 ? this.options.hits : 1;\n            const crit = this.options.crit || false;\n            const calcMove = this.move.clone();\n            calcMove.hits = hits || 1;\n            calcMove.isCrit = crit;\n            const result = calculate(9, moveUser, target, calcMove, moveField);\n            const damageResult = result.damage;\n            let damage = 0;\n            const roll = this.options.roll || \"avg\";\n            if (typeof(damageResult) === \"number\") {\n                damage = damageResult;\n            } else {\n                //@ts-ignore\n                damage = roll === \"max\" ? damageResult[damageResult.length-1] : roll === \"min\" ? damageResult[0] : damageResult[Math.floor(damageResult.length/2)];\n            }\n            this._damage[id] = damage;\n            this._desc[id] = result.desc();\n        }\n        if (this.moveData.category?.includes(\"damage\")) {\n            this._fields[this.userID].attackerSide.isHelpingHand = false;\n        }\n    }\n\n    private setDrain() { // this also accounts for recoil\n        this._drain = [0,0,0,0,0]\n        const drainPercent = this.moveData.drain;\n        if (drainPercent) {\n            // draining moves should only ever hit a single target in raids\n            if (this._damage) {\n                this._drain[this.userID] = Math.floor(this._damage[this.userID] * drainPercent/100);\n            }\n            \n        }\n    }\n\n    private setHealing() {\n        this._healing = [0,0,0,0,0];\n        const healingPercent = this.moveData.healing;\n        for (let id of this._affectedIDs) {\n            const target = this.getPokemon(id);\n            const maxHP = target.maxHP();\n            if (this.move.name == \"Heal Cheer\") {\n                const roll = this.options.roll || \"avg\";\n                this._healing[id] = roll === \"min\" ? Math.floor(maxHP * 0.2) : roll === \"max\" ? maxHP : Math.floor(maxHP * 0.6);\n                const pokemon = this.getPokemon(id);\n                pokemon.status = \"\";\n            } else {\n                const healAmount = Math.floor(target.maxHP() * (healingPercent || 0)/100);\n                this._healing[id] = healAmount;\n            }\n        }\n    }\n\n    private applyStatChanges() {\n        this._boosts = [{},{},{},{},{}];\n        const category = this.moveData.category;\n        const affectedIDs = category == \"damage+raise\" ? [this.userID] : this._affectedIDs;\n        const statChanges = this.moveData.statChanges;\n        const chance = this.moveData.statChance || 100;\n        if (this.options.secondaryEffects || chance === 100 ) {\n            for (let id of affectedIDs) {\n                const pokemon = this.getPokemon(id);\n                const field = this._fields[id];\n                if (id !== this.userID && this.moveData.category?.includes(\"damage\") && pokemon.item === \"Covert Cloak\") { continue; }\n                // handle Contrary and Simple\n                const boostCoefficient = pokemon.ability == \"Contrary\" ? -1 : pokemon.ability == \"Simple\" ? 2 : 1;\n                for (let statChange of (statChanges || [])) {\n                    const stat = statChange.stat;\n                    let change = statChange.change * boostCoefficient;\n                    if (Number.isNaN(change)) {\n                        // apparently, I manually put some stat changes are stored under the \"value\" key rather than \"change\"\n                        // TODO: update the data files to fix this\n                        // @ts-ignore\n                        change = statChange.value * boostCoefficient;\n                    }\n                    if (Number.isNaN(change)) { console.log(\"Stat change info for \" + this.moveData.name + \" is missing.\"); continue; }\n                    if (change < 0 && (field.attackerSide.isProtected || (field.attackerSide.isMist && id !== this.userID))) {\n                        continue;\n                    }\n                    pokemon.boosts[stat] = (pokemon.boosts[statChange.stat] || 0) + change;\n                    if (Math.abs(pokemon.boosts[stat]) > 6) {\n                        pokemon.boosts[stat] = 6 * Math.sign(pokemon.boosts[stat]);\n                    }\n                    for (let stat in pokemon.boosts) {\n                        // @ts-ignore\n                        const diff = pokemon.boosts[stat] - this.raidState.raiders[id].boosts[stat]\n                        if (diff !== 0) {\n                            // @ts-ignore\n                            this._boosts[id][stat] = diff;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private applyAilment() {\n        const ailment = this.moveData.ailment;\n        const chance = this.moveData.ailmentChance || 100;\n        if (ailment && (chance == 100 || this.options.secondaryEffects)) {\n            for (let id of this._affectedIDs) {\n                const pokemon = this.getPokemon(id);\n                const field = this._fields[id];\n                const status = ailmentToStatus(ailment);\n                if (status === \"\") {\n                    // Aroma Veil\n                    if (field.attackerSide.isAromaVeil && [\"confusion\", \"taunt\", \"encore\", \"disable\", \"infatuation\"].includes(ailment)) {\n                        continue;\n                    // Own Tempo\n                    } else if (pokemon.ability === \"Own Tempo\" && ailment === \"confusion\") {\n                        continue;\n                    // Oblivious\n                    } else if (pokemon.ability === \"Oblivious\" && (ailment === \"taunt\" || ailment === \"infatuation\")) {\n                        continue;\n                    } else if (!pokemon.volatileStatus.includes(ailment)) {\n                        pokemon.volatileStatus.push!(ailment)\n                        this._flags[id].push(ailment + \" inflicted\")\n                    }\n                } else {\n                    if (id !== this.userID && this.moveData.category?.includes(\"damage\") && pokemon.item === \"Covert Cloak\") { continue; }\n                    // Type-based immunities (?)\n                    if (ailment === \"burn\" && pokemon.types.includes(\"Fire\")) { continue; }\n                    if (ailment === \"freeze\" && pokemon.types.includes(\"Ice\")) { continue; }\n                    if ((ailment === \"poison\" || ailment === \"toxic\") && (pokemon.types.includes(\"Poison\") || pokemon.types.includes(\"Steel\") || pokemon.ability === \"Immunity\")) { continue; }\n                    if ((ailment === \"paralysis\" && pokemon.ability === \"Limber\")) { continue; }\n                    if (ailment === \"sleep\" && [\"Insomnia\", \"Vital Spirit\"].includes(pokemon.ability as string)) { continue; }\n                    if (ailment === \"freeze\" && pokemon.ability === \"Magma Armor\") { continue; }\n\n                    if (!(field.attackerSide.isProtected || field.attackerSide.isSafeguard || field.hasTerrain(\"Misty\"))\n                        && (hasNoStatus(pokemon))) \n                    { \n                        pokemon.status = ailmentToStatus(ailment);\n                    }\n                }\n            }\n        }\n    }\n\n    private setSelfDamage() {\n        const selfDamage = Math.floor(this._user.maxHP() * (this.moveData.selfDamage || 0) / 100);\n        console.log(this.moveData.name, this.moveData.selfDamage, selfDamage)\n        if (selfDamage !== 0) {\n            const selfDamagePercent = this.moveData.selfDamage;\n            this._flags[this.userID].push!(selfDamagePercent + \"% self damage from \" + this.moveData.name + \".\")\n            this._damage[this.userID] = this._damage[this.userID] + selfDamage;\n        }\n    }\n\n    private applyFieldChanges() {\n        /// Whole-Field Effects\n        // Weather\n        let weather: (Weather | undefined) = undefined;\n        if (this.move.name == \"Rain Dance\") { weather = \"Rain\"; }\n        if (this.move.name == \"Sunny Day\") { weather = \"Sun\"; }\n        if (this.move.name == \"Sandstorm\") { weather = \"Sand\"; }\n        if (this.move.name == \"Snowscape\") { weather = \"Snow\"; }\n        // Terrain\n        let terrain: (Terrain | undefined) = undefined;\n        if (this.move.name == \"Electric Terrain\") { terrain = \"Electric\"; }\n        if (this.move.name == \"Grassy Terrain\") { terrain = \"Grassy\"; }\n        if (this.move.name == \"Misty Terrain\") { terrain = \"Misty\"; }\n        if (this.move.name == \"Psychic Terrain\") { terrain = \"Psychic\"; }\n        // Gravity\n        const gravity = this.move.name == \"Gravity\";\n        // Trick Room\n        const trickroom = this.move.name == \"Trick Room\";\n        // Magic Room\n        const magicroom = this.move.name == \"Magic Room\";\n        // Wonder Room\n        const wonderroom = this.move.name == \"Wonder Room\";\n        // apply effects\n        for (let field of this._fields) {\n            field.weather = weather || field.weather;\n            field.terrain = terrain || field.terrain;\n            field.isGravity = gravity || field.isGravity;\n            field.isTrickRoom = (trickroom ? !field.isTrickRoom : field.isTrickRoom);\n            field.isMagicRoom = (magicroom ? !field.isMagicRoom : field.isMagicRoom);\n            field.isWonderRoom = (wonderroom ? !field.isWonderRoom : field.isWonderRoom);\n        }\n        /// Side Effects\n        // Reflect\n        let reflect = this.move.name == \"Reflect\";\n        // Light Screen\n        let lightscreen = this.move.name == \"Light Screen\";\n        // Aurora Veil\n        let auroraveil = this.move.name == \"Aurora Veil\";\n        // Mist\n        let mist = this.move.name == \"Mist\";\n        // Safeguard\n        let safeguard = this.move.name == \"Safeguard\";\n        // Tailwind\n        let tailwind = this.move.name == \"Tailwind\";\n        // Attack Cheer\n        let attackcheer = this.move.name == \"Attack Cheer\";\n        // Defense Cheer\n        let defensecheer = this.move.name == \"Defense Cheer\";\n        // apply effects\n        const sideFieldIDs = this.userID == 0 ? [0] : [1,2,3,4];\n        for (let id of sideFieldIDs) {\n            const field = this._fields[id];\n            field.attackerSide.isReflect = reflect || field.attackerSide.isReflect;\n            field.attackerSide.isLightScreen = lightscreen || field.attackerSide.isLightScreen;\n            field.attackerSide.isAuroraVeil = auroraveil || field.attackerSide.isAuroraVeil;\n            field.attackerSide.isMist = mist || field.attackerSide.isMist;\n            field.attackerSide.isSafeguard = safeguard || field.attackerSide.isSafeguard;\n            field.attackerSide.isTailwind = tailwind || field.attackerSide.isTailwind;\n            field.attackerSide.isAtkCheered = attackcheer || field.attackerSide.isAtkCheered;\n            field.attackerSide.isDefCheered = defensecheer || field.attackerSide.isDefCheered;\n        }\n\n        // Helping Hand\n        const helpinghand = this.move.name == \"Helping Hand\";\n        if (helpinghand) {\n            this._fields[this.targetID].attackerSide.isHelpingHand = true;\n        }\n    }\n\n    private applyUniqueMoveEffects() {\n        /// Ability-affecting moves\n        switch (this.move.name) {\n            case \"Skill Swap\": \n                const ss_target = this.getPokemon(this.targetID);\n                const tempUserAbility = this._user.ability;\n                this._user.ability = ss_target.ability;\n                ss_target.ability = tempUserAbility;\n                break;\n            case \"Gastro Acid\":\n                const ga_target = this.getPokemon(this.targetID);\n                ga_target.ability = undefined;\n                break;\n            case \"Worry Seed\":\n                const ws_target = this.getPokemon(this.targetID);\n                ws_target.ability = \"Insomnia\" as AbilityName;\n                break;\n            case \"Role Play\":\n                const rp_target = this.getPokemon(this.targetID);\n                this._user.ability = rp_target.ability;\n                break;\n            case \"Simple Beam\":\n                const sb_target = this.getPokemon(this.targetID);\n                sb_target.ability = \"Simple\" as AbilityName;\n                break;\n        /// Item-affecting moves\n            case \"Knock Off\":\n                const ko_target = this.getPokemon(this.targetID);\n                ko_target.item = undefined;\n                break;\n            case \"Trick\":\n                const trick_target = this.getPokemon(this.targetID);\n                const tempUserItem = this._user.item;\n                this._user.item = trick_target.item;\n                trick_target.item = tempUserItem;\n                break;\n            case \"Fling\":\n                const fl_target = this.getPokemon(this.targetID);\n                const hasSimple = fl_target.ability === \"Simple\";\n                const hasContrary = fl_target.ability === \"Contrary\";\n                const boostCoefficient = hasSimple ? 2 : hasContrary ? -1 : 1;\n                const flingItem = this._user.item;\n                this._user.item = undefined;\n                switch (flingItem) {\n                    case \"Light Ball\":\n                        if (hasNoStatus(fl_target)) { fl_target.status = \"par\"; }\n                        break;\n                    case \"Flame Orb\":\n                        if (!fl_target.types.includes(\"Fire\") && hasNoStatus(fl_target)) { fl_target.status = \"brn\"; }\n                        break;\n                    case \"Toxic Orb\":\n                        if (!fl_target.types.includes(\"Poison\") && hasNoStatus(fl_target)) { fl_target.status = \"tox\"; }\n                        break\n                    case \"Poison Barb\":\n                        if (!fl_target.types.includes(\"Poison\") && hasNoStatus(fl_target)) { fl_target.status = \"psn\"; }\n                        break;\n                    case \"White Herb\":\n                        for (let stat in fl_target.boosts) {\n                            // @ts-ignore\n                            if (fl_target.boosts[stat] < 0) { fl_target.boosts[stat] = 0; }\n                        }\n                        break;\n                    // Status-Curing Berries\n                    case \"Cheri Berry\":\n                        if (fl_target.status === \"par\") { fl_target.status = \"\"; }\n                        break;\n                    case \"Chesto Berry\":\n                        if (fl_target.status === \"slp\") { fl_target.status = \"\"; }\n                        break;\n                    case \"Pecha Berry\":\n                        if (fl_target.status === \"psn\") { fl_target.status = \"\"; }\n                        break;\n                    case \"Rawst Berry\":\n                        if (fl_target.status === \"brn\") { fl_target.status = \"\"; }\n                        break;\n                    case \"Aspear Berry\":\n                        if (fl_target.status === \"frz\") { fl_target.status = \"\"; }\n                        break;\n                    case \"Lum Berry\":\n                        if (fl_target.status !== \"\") { fl_target.status = \"\"; }\n                        break;\n                    // Stat-Boosting Berries\n                    case \"Liechi Berry\":\n                        fl_target.boosts.atk = Math.max(-6, Math.min(6, fl_target.boosts.atk + boostCoefficient));\n                        break;\n                    case \"Ganlon Berry\":\n                        fl_target.boosts.def = Math.max(-6, Math.min(6, fl_target.boosts.atk + boostCoefficient));\n                        break;\n                    case \"Petaya Berry\":\n                        fl_target.boosts.spa = Math.max(-6, Math.min(6, fl_target.boosts.atk + boostCoefficient));\n                        break;\n                    case \"Apicot Berry\":\n                        fl_target.boosts.spd = Math.max(-6, Math.min(6, fl_target.boosts.atk + boostCoefficient));\n                        break;\n                    case \"Salac Berry\":\n                        fl_target.boosts.spe = Math.max(-6, Math.min(6, fl_target.boosts.atk + boostCoefficient));\n                        break;\n                    // Healing Berries\n                    case \"Sitrus Berry\":\n                        this._healing[this.targetID] += Math.floor(fl_target.maxHP() / 4);\n                        break;\n                    default: break;\n                    }\n                break;\n            // other\n            case \"Endure\":\n                this._user.isEndure = true;\n                break;\n            case \"Psych Up\":\n                const pu_target = this.getPokemon(this.targetID);\n                for (let stat in pu_target.boosts) {\n                    // @ts-ignore\n                    this._user.boosts[stat] = pu_target.boosts[stat];\n                    this._boosts[this.userID] = {...pu_target.boosts};\n                }\n                break;\n            case \"Power Swap\":\n                const ps_target = this.getPokemon(this.targetID);\n                const tempUserAtkBoosts = this._user.boosts;\n                this._user.boosts.atk = ps_target.boosts.atk;\n                this._user.boosts.spa = ps_target.boosts.spa;\n                ps_target.boosts.atk = tempUserAtkBoosts.atk;\n                ps_target.boosts.spa = tempUserAtkBoosts.spa;\n                break;\n            case \"Guard Swap\":\n                const gs_target = this.getPokemon(this.targetID);\n                const tempUserDefBoosts = this._user.boosts;\n                this._user.boosts.def = gs_target.boosts.def;\n                this._user.boosts.spd = gs_target.boosts.spd;\n                gs_target.boosts.def = tempUserDefBoosts.def;\n                gs_target.boosts.spd = tempUserDefBoosts.spd;\n                break;\n            case \"Power Trick\":\n                const tempAtk = this._user.stats.atk;\n                this._user.stats.atk = this._user.stats.def;\n                this._user.stats.def = tempAtk;\n                break;\n            default: break;\n            }\n    }\n\n    private applyAbilityEffects() {\n        /// Ability-related effects\n        // Anger Point\n        if (this.move.isCrit) {\n            for (let id of this._affectedIDs) {\n                const pokemon = this.getPokemon(id);\n                if (pokemon.ability === \"Anger Point\") { pokemon.boosts.atk = 6 };\n            }\n        }\n        // Justified\n        if (this.move.type === \"Dark\") {\n            for (let id of this._affectedIDs) {\n                const pokemon = this.getPokemon(id);\n                if (pokemon.ability === \"Justified\" && this._damage[id]>0) { \n                    pokemon.boosts.atk = Math.min(6, pokemon.boosts.atk + this.move.hits); \n                }\n            }\n        }    \n        // Unburden\n        if (this._user.ability === \"Unburden\" && \n            this._user.item === undefined && \n            this.raidState.raiders[this.userID].item !== undefined) \n        {\n            this._user.abilityOn = true;\n        }\n        // Weak Armor\n        for (let id of this._affectedIDs) {\n            const pokemon = this.getPokemon(id);\n            if (this._damage[id] > 0 && pokemon.ability === \"Weak Armor\") {\n                pokemon.boosts.def = Math.max(-6, pokemon.boosts.def - 1);\n                pokemon.boosts.spe = Math.min(6, pokemon.boosts.spe + 2);\n            }\n        }\n    }\n\n    private applyItemEffects() {\n        /// Item-related effects\n        // Focus Sash\n        for (let id of this._affectedIDs) {\n            const pokemon = this.getPokemon(id);\n            if (pokemon.item === \"Focus Sash\") {\n                if (this._damage[id] >= pokemon.maxHP() && this.raidState.raiders[id].originalCurHP === pokemon.maxHP()) { \n                    pokemon.item = undefined; \n                    pokemon.originalCurHP = 1;\n                }\n            }\n        }\n        // Mirror Herb\n        for (let pokemon of this._raiders.slice(1)) { // let's not worry about a Raid boss with an item\n            const bossBoosts = this._boosts[0];\n            if (pokemon.item === \"Mirror Herb\" && bossBoosts !== undefined) {\n                let changed = false;\n                for (let stat in bossBoosts) {\n                    // @ts-ignore\n                    if (bossBoosts[stat] !== 0) { \n                        changed = true;\n                        // @ts-ignore\n                        pokemon.boosts[stat] = Math.max(-6, Math.min(6, pokemon.boosts[stat] + bossBoosts[stat])); }\n                }\n                if (changed) { pokemon.item = undefined; } // the herb is consumed if a boost is copied.\n            }\n        }\n        // Weakness Policy and Super-Effective reducing Berries\n        //  TO DO - abilities that let users use berries more than once\n        for (let id of this._affectedIDs) {\n            const pokemon = this.getPokemon(id);\n            if (this._damage[id] > 0 && isSuperEffective(this.move, this._fields[id], this._user, pokemon)) {\n                switch (pokemon.item) {\n                    case \"Weakness Policy\":\n                        pokemon.boosts.atk = Math.min(6, pokemon.boosts.atk + 2);\n                        pokemon.boosts.spa = Math.min(6, pokemon.boosts.spa + 2);\n                        pokemon.item = undefined;\n                        break;\n                    case \"Occa Berry\":  // the calc alread takes the berry into account, so we can just remove it here\n                        if (this.move.type === \"Fire\") { pokemon.item = undefined; }\n                        break;\n                    case \"Passho Berry\":\n                        if (this.move.type === \"Water\") { pokemon.item = undefined; }\n                        break;\n                    case \"Wacan Berry\":\n                        if (this.move.type === \"Electric\") { pokemon.item = undefined; }\n                        break;\n                    case \"Rindo Berry\":\n                        if (this.move.type === \"Grass\") { pokemon.item = undefined; }\n                        break;\n                    case \"Yache Berry\":\n                        if (this.move.type === \"Ice\") { pokemon.item = undefined; }\n                        break;\n                    case \"Chople Berry\":\n                        if (this.move.type === \"Fighting\") { pokemon.item = undefined; }\n                        break;\n                    case \"Kebia Berry\":\n                        if (this.move.type === \"Poison\") { pokemon.item = undefined; }\n                        break;\n                    case \"Shuca Berry\":\n                        if (this.move.type === \"Ground\") { pokemon.item = undefined; }\n                        break;\n                    case \"Coba Berry\":\n                        if (this.move.type === \"Flying\") { pokemon.item = undefined; }\n                        break;\n                    case \"Payapa Berry\":\n                        if (this.move.type === \"Psychic\") { pokemon.item = undefined; }\n                        break;\n                    case \"Tanga Berry\":\n                        if (this.move.type === \"Bug\") { pokemon.item = undefined; }\n                        break;\n                    case \"Charti Berry\":\n                        if (this.move.type === \"Rock\") { pokemon.item = undefined; }\n                        break;\n                    case \"Kasib Berry\":\n                        if (this.move.type === \"Ghost\") { pokemon.item = undefined; }\n                        break;\n                    case \"Haban Berry\":\n                        if (this.move.type === \"Dragon\") { pokemon.item = undefined; }\n                        break;\n                    case \"Colbur Berry\":\n                        if (this.move.type === \"Dark\") { pokemon.item = undefined; }\n                        break;\n                    case \"Babiri Berry\":\n                        if (this.move.type === \"Steel\") { pokemon.item = undefined; }\n                        break;\n                    case \"Roseli Berry\":\n                        if (this.move.type === \"Fairy\") { pokemon.item = undefined; }\n                        break;\n                    default: break;\n                }\n            }\n        }\n        // Ailment-inducing Items\n        if (hasNoStatus(this._user)) {\n            switch (this._user.item) {\n                case \"Light Ball\":\n                    this._user.status = \"par\";\n                    break;\n                case \"Flame Orb\":\n                    if (!this._user.types.includes(\"Fire\")) { \n                        this._user.status = \"brn\"; \n                        this._user.item = undefined; \n                    }\n                    break;\n                case \"Toxic Orb\":\n                    if (!this._user.types.includes(\"Poison\")) { \n                        this._user.status = \"tox\"; \n                        this._user.item = undefined;\n                    }\n                    break;\n                case \"Poison Barb\":\n                    if (!this._user.types.includes(\"Poison\")) { \n                        this._user.status = \"psn\"; \n                        this._user.item = undefined;\n                    }\n                    break;\n                case \"White Herb\":\n                    for (let stat in this._user.boosts) {\n                        let changed = false;\n                        // @ts-ignore\n                        if (this._user.boosts[stat] < 0) { this._user.boosts[stat] = 0; changed = true; }\n                        if (changed) { this._user.item = undefined; }\n                    }\n                    break;\n                default: break\n            }\n        }\n        // Other Berry Consumption\n        for (let i=0; i<5; i++) {\n            if (this._damage[i] > 0) {\n                if (this._raiders[i].item === \"Sitrus Berry\" && this._raiders[i].originalCurHP <= Math.floor(this._raiders[i].maxHP() / 2)) {\n                    this._raiders[i].item = undefined;\n                    this._raiders[i].originalCurHP += Math.floor(this._raiders[i].maxHP() / 4);\n                }\n            }\n        }\n        // Booster Energy\n        if (this._user.item === \"Booster Energy\" && (this._user.ability === \"Protosynthesis\" || this._user.ability === \"Quark Drive\")) {\n            this._user.abilityOn = true;\n            const qpStat = getQPBoostedStat(this._user) as StatIDExceptHP;\n            this._user.boostedStat = qpStat;\n            this._user.item = undefined;\n        }\n        // ???\n    }\n\n    private setEndOfTurnDamage() {\n        this._eot = [undefined, undefined, undefined, undefined];\n        // getEndOfTurn() calculates damage for a defending pokemon. \n        // Here, we'll evaluate end-of-turn damage for both the user and boss only when the move does not go first\n        // positive eot indicates healing\n        if (!this.movesFirst) {\n            const atkID = this.userID;\n            const defID = this.userID == 0 ? this.raiderID : 0;\n            const attacker = this._user;\n            const defender = this.getPokemon(defID)\n            const atk_eot = getEndOfTurn(gen, attacker, defender, dummyMove, this.getMoveField(attacker.id, defender.id));\n            const def_eot = getEndOfTurn(gen, defender, attacker, dummyMove, this.getMoveField(defender.id, attacker.id));\n            this._eot[defID] = atk_eot;\n            this._eot[atkID] = def_eot;\n        }\n    }\n\n    private applyDamage() {\n        const roll = this.options.roll || \"avg\";\n        for (let id=0; id<5; id++) {\n            const pokemon = this.getPokemon(id);\n            const damage = this._damage[id];\n            const drain = this._drain[id];\n            const healing = this._healing[id];\n            pokemon.originalCurHP = Math.max(0, pokemon.originalCurHP - damage);\n            if (pokemon.isEndure && pokemon.originalCurHP <= 0) {\n                pokemon.originalCurHP = 1;\n            }\n            if (pokemon.originalCurHP !== 0) {\n                pokemon.originalCurHP = Math.min(pokemon.maxHP(), Math.max(0, pokemon.originalCurHP + drain));\n            }\n            if (pokemon.isEndure && pokemon.originalCurHP <= 0) {\n                pokemon.originalCurHP = 1;\n            }\n            if (pokemon.originalCurHP !== 0) {\n                pokemon.originalCurHP = Math.min(pokemon.maxHP(), pokemon.originalCurHP + healing);\n            }\n        }\n    }\n\n    private applyEndOfTurnDamage() {\n        for (let i=0; i<5; i++) {\n            const pokemon = this.getPokemon(i);\n            const damage = this._eot[i] ? -this._eot[i]!.damage : 0;\n            if (damage > 0 && pokemon.originalCurHP > 0) {\n                pokemon.originalCurHP = Math.max(0, pokemon.originalCurHP - damage);\n            } \n            if (pokemon.isEndure && pokemon.originalCurHP <= 0) {\n                pokemon.originalCurHP = 1;\n            }\n            if (damage < 0 && pokemon.originalCurHP > 0 && pokemon.originalCurHP < pokemon.maxHP()) {\n                pokemon.originalCurHP = Math.min(pokemon.maxHP(), pokemon.originalCurHP - damage);\n            }\n        }\n    }\n\n    private setFlags() {\n        // check for item changes\n        const initialItems = this.raidState.raiders.map(p => p.item);\n        const finalItems = this._raiders.map(p => p.item);\n        for (let i=0; i<5; i++) {\n            if (initialItems[i] !== finalItems[i]) {\n                if (finalItems[i] === undefined) {\n                    this._flags[i].push(initialItems[i] + \" lost\")\n                } else {\n                    this._flags[i].push(initialItems[i] + \" swapped for \" + finalItems[i])\n                }\n            }\n        }\n        // check for ability triggers\n        const initialAbilityOn = this.raidState.raiders.map(p => p.abilityOn);\n        const finalAbilityOn = this._raiders.map(p => p.abilityOn);\n        for (let i=0; i<5; i++) {\n            if (initialAbilityOn[i] !== finalAbilityOn[i]) {\n                if (finalAbilityOn[i]) {\n                    this._flags[i].push(this._raiders[i].ability + \" activated\");\n                } else {\n                    this._flags[i].push(this._raiders[i].ability + \" deactivated\");\n                }\n            }\n        }\n        // check for status changes\n        const initialStatus = this.raidState.raiders.map(p => p.status);\n        const finalStatus = this._raiders.map(p => p.status);\n        for (let i=0; i<5; i++) {\n            if (initialStatus[i] !== finalStatus[i]) {\n                if (finalStatus[i] === \"\" || finalStatus[i] === undefined) {\n                    this._flags[i].push(initialStatus[i] + \" cured\")\n                } else {\n                    this._flags[i].push(finalStatus[i] + \" inflicted\")\n                }\n            }\n        }\n        // check for stat changes\n        for (let i=0; i<5; i++) {\n            let boostStr = \"\";\n            for (let stat in this._boosts[i]) {\n                //@ts-ignore\n                const b = this._boosts[i][stat]\n                if (b !== 0) {\n                    boostStr += stat + \" \" + (b > 0 ? \"+\" : \"\") + b + \", \";\n                }\n            }\n            if (boostStr !== \"\") {\n                boostStr = \"Stat changes: (\" + boostStr.slice(0, -2) + \")\";\n                this._flags[i].push(boostStr);\n            }\n        }\n        // check for HP changes\n        for (let i=0; i<5; i++) {\n            const initialHP = this.raidState.raiders[i].originalCurHP;\n            const finalHP = this._raiders[i].originalCurHP;\n            console.log(finalHP)\n            if (initialHP !== finalHP) {\n                const initialPercent = Math.floor(initialHP / this.raidState.raiders[i].maxHP() * 100);\n                const finalPercent = Math.floor(finalHP / this._raiders[i].maxHP() * 1000)/10;\n                const hpStr = \"HP: \" + initialPercent + \"% -> \" + finalPercent + \"%\";\n                this._flags[i].push(hpStr);\n            }\n        }\n    }\n\n    // private handleFlags() {\n    //     //\n    // }\n}\n","import { State } from \"../calc/state\";\nimport { calculate, Field, Generations, Move, Pokemon } from \"../calc\";\nimport { MoveData, RaidMoveOptions, RaidState, RaidTurnResult, RaidMoveResult, RaidTurnInfo } from \"./interface\";\nimport { getModifiedStat } from \"../calc/mechanics/util\";\nimport { Raider } from \"./interface\";\nimport { RaidMove } from \"./RaidMove\";\n\nconst gen = Generations.get(9);\n\nexport class RaidTurn {\n    raidState:      RaidState;\n    raiderID:       number;\n    targetID:       number;\n    raiderMoveData!: MoveData;\n    bossMoveData!:   MoveData;\n    raiderOptions:  RaidMoveOptions;\n    bossOptions:    RaidMoveOptions;\n\n    //options should include crit, boosts/drops, status effect, min/max damage roll\n\n    _raiderMovesFirst!: boolean;\n    _raider!:         Raider;\n    _boss!:           Raider;  \n    _raiderMove!:     Move;\n    _bossMove!:       Move;\n\n    _result1!:        RaidMoveResult;\n    _result2!:        RaidMoveResult;\n    _raidState!:      RaidState;\n\n\n    constructor(raidState: RaidState, info: RaidTurnInfo) {\n        this.raidState = raidState;\n        this.raiderID = info.moveInfo.userID;\n        this.targetID = info.moveInfo.targetID;\n        this.raiderMoveData = info.moveInfo.moveData;\n        this.bossMoveData = info.bossMoveInfo.moveData;\n\n        this.raiderOptions = info.moveInfo.options || {};\n        this.bossOptions = info.bossMoveInfo.options || {};\n    }\n\n    public result(): RaidTurnResult {\n        // set up moves\n        this._raiderMove = new Move(9, this.raiderMoveData.name, this.raiderOptions);\n        if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n        if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        this._bossMove = new Move(9, this.bossMoveData.name, this.bossOptions);\n        if (this.bossOptions.crit) this._bossMove.isCrit = true;\n        if (this.bossOptions.hits !== undefined) this._bossMove.hits = this.bossOptions.hits;\n\n        // determine which move goes first\n        this.setTurnOrder();\n\n        // copy the raid state\n        this._raidState = this.raidState.clone();\n\n        let rID = this.raiderID;\n        let tID = this.targetID;\n        let rMoveData = this.raiderMoveData;\n        let bMoveData = this.bossMoveData;\n        // Moves that cause different moves to be carried out (Instruct and Copycat, let's not worry about Metronome)\n        if (this.raiderMoveData.name === \"Instruct\" && this.raidState.raiders[this.targetID].lastMove !== undefined) {\n            rID = this.targetID;\n            tID = this.raidState.raiders[rID].lastTarget!;\n            if (tID === this.targetID) { tID = rID; }\n            rMoveData = this.raidState.raiders[this.targetID].lastMove!\n            this._raiderMove = new Move(9, rMoveData.name, this.raiderOptions);\n            if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n            if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        } else if (this.raiderMoveData.name === \"Copycat\") {\n            tID = this.raidState.raiders[rID].lastTarget!;\n            if (tID === this.targetID) { tID = rID; }\n            bMoveData = this.raidState.raiders[this.targetID].lastMove!\n            this._raiderMove = new Move(9, bMoveData.name, this.raiderOptions);\n            if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n            if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        } \n        if (this._raiderMovesFirst) {\n            this._result1 = new RaidMove(\n                rMoveData,\n                this._raiderMove, \n                this._raidState, \n                rID, \n                tID,\n                rID,\n                this._raiderMovesFirst,\n                this.raiderOptions).result();\n            this._raidState = this._result1.state;\n            this._result2 = new RaidMove(\n                bMoveData,\n                this._bossMove, \n                this._raidState, \n                0, \n                this.raiderID,\n                this.raiderID,\n                !this._raiderMovesFirst,\n                this.bossOptions).result();\n            this._raidState = this._result2.state;\n        } else {\n            this._result1 = new RaidMove(\n                bMoveData, \n                this._bossMove, \n                this._raidState, \n                0, \n                this.raiderID,\n                this.raiderID,\n                !this._raiderMovesFirst,\n                this.raiderOptions).result();\n            this._raidState = this._result1.state;\n            this._result2 = new RaidMove(\n                rMoveData, \n                this._raiderMove, \n                this._raidState, \n                rID, \n                tID,\n                rID,\n                this._raiderMovesFirst,\n                this.bossOptions).result();\n            this._raidState = this._result2.state;\n        }\n        // Clear Endure (since side-attacks are not endured)\n        this._raidState.raiders[this.raiderID].isEndure = false;\n        this._raidState.raiders[0].isEndure = false; // I am unaware of any raid bosses that have endure\n        return {\n            state: this._raidState,\n            results: [this._result1, this._result2],\n            raiderMovesFirst: this._raiderMovesFirst\n        }\n\n    }\n\n    private setTurnOrder() {\n        this._raider = this.raidState.raiders[this.raiderID];\n        this._boss = this.raidState.raiders[0];\n        // first compare priority\n        const raiderPriority = this.raiderMoveData.priority || this._raiderMove.priority;\n        const bossPriority = this.bossMoveData.priority || this._bossMove.priority;\n        if (raiderPriority > bossPriority) {\n            this._raiderMovesFirst = true;\n        } else if (bossPriority < raiderPriority) {\n            this._raiderMovesFirst = false;\n        } else {\n            // if priority is the same, compare speed\n            let raiderSpeed = getModifiedStat(this._raider.stats.spe, this._raider.boosts.spe, gen);\n            let bossSpeed = getModifiedStat(this._boss.stats.spe, this._boss.boosts.spe, gen);\n            const bossField = this.raidState.fields[0];\n            const raiderField = this.raidState.fields[this.raiderID];\n            if (raiderField.attackerSide.isTailwind) { raiderSpeed *= 2 };\n            if (bossField.attackerSide.isTailwind) { bossSpeed *= 2 };\n            this._raiderMovesFirst = bossField.isTrickRoom ? (raiderSpeed < bossSpeed) : (raiderSpeed > bossSpeed);\n        }\n    }\n    \n}","import { StatIDExceptHP } from \"../calc/data/interface\";\nimport { getQPBoostedStat } from \"../calc/mechanics/util\";\nimport { RaidState, RaidBattleInfo, RaidTurnInfo, RaidTurnResult, RaidBattleResults } from \"./interface\";\nimport { RaidTurn } from \"./RaidTurn\";\n\nexport class RaidBattle {\n    startingState: RaidState;\n    turns: RaidTurnInfo[];\n\n    _state!: RaidState;\n    _turnResults!: RaidTurnResult[];\n\n    constructor(info: RaidBattleInfo) {\n        this.startingState = info.startingState;\n        this.turns = info.turns;\n    }\n\n    public result(): RaidBattleResults {\n        try {\n            this._state = this.startingState.clone();\n            this.calculateTurnZero();\n            this.calculateTurns();\n            return {\n                endState: this._state,\n                turnResults: this._turnResults\n            }\n        } catch (e) {\n            console.error(e);\n            return {\n                endState: this.startingState.clone(),\n                turnResults: []\n            }\n        }\n    }\n\n    private calculateTurns(){\n        this._turnResults = [];\n        for (let i = 0; i < this.turns.length; i++) {\n            const turn = this.turns[i];\n            const result = new RaidTurn(this._state, turn).result();\n            this._turnResults.push(result);\n            this._state = result.state;\n        }\n    }\n\n    private calculateTurnZero(){\n        // sort pokemon by speed to see what happens first\n        const speeds = this._state.raiders.map(raider => raider.stats.spe);\n        const speedOrder = speeds.map((speed, index) => [speed, index]).sort((a, b) => b[0] - a[0]).map(pair => pair[1]);\n        for (let id of speedOrder) {\n            const pokemon = this._state.raiders[id];\n            const ability = pokemon.ability;\n            //// Abilites That Take Effect at the start of the battle\n            /// Weather Abilities\n            if (ability === \"Drought\") {\n                for (let field of this._state.fields) {\n                    field.weather = \"Sun\";\n                }\n            } else if (ability === \"Drizzle\") {\n                for (let field of this._state.fields) {\n                    field.weather = \"Rain\";\n                }\n            } else if (ability === \"Sand Stream\") {\n                for (let field of this._state.fields) {\n                    field.weather = \"Sand\";\n                }\n            } else if (ability === \"Snow Warning\") {\n                for (let field of this._state.fields) {\n                    field.weather = \"Snow\";\n                }\n            } else if (ability === \"Orichalcum Pulse\") {\n                for (let field of this._state.fields) {\n                    field.weather = \"Sun\";\n                }\n            } else if (ability === \"Cloud Nine\" || ability === \"Air Lock\") {\n                for (let field of this._state.fields) {\n                    field.isCloudNine = true;\n                }\n            /// Terrain Abilities\n            } else if (ability === \"Grassy Surge\") {\n                for (let field of this._state.fields) {\n                    field.terrain = \"Grassy\";\n                }\n            } else if (ability === \"Electric Surge\") {\n                for (let field of this._state.fields) {\n                    field.terrain = \"Electric\";\n                }\n            } else if (ability === \"Misty Surge\") {\n                for (let field of this._state.fields) {\n                    field.terrain = \"Misty\";\n                }\n            } else if (ability === \"Psychic Surge\") {\n                for (let field of this._state.fields) {\n                    field.terrain = \"Psychic\";\n                }\n            } else if (ability === \"Hadron Engine\") {\n                for (let field of this._state.fields) {\n                    field.terrain = \"Electric\";\n                }\n            /// Ruin Abilities\n            } else if (ability === \"Sword of Ruin\") {\n                for (let field of this._state.fields) {\n                    field.isSwordOfRuin = true;\n                }\n            } else if (ability === \"Beads of Ruin\") {\n                for (let field of this._state.fields) {\n                    field.isBeadsOfRuin = true;\n                }\n            } else if (ability === \"Vessel of Ruin\") {\n                for (let field of this._state.fields) {\n                    field.isVesselOfRuin = true;\n                }\n            } else if (ability === \"Tablets of Ruin\") {\n                for (let field of this._state.fields) {\n                    field.isTabletsOfRuin = true;\n                }\n            /// Other Field-Related Abilities\n            // Steely Spirit\n            } else if (ability === \"Steely Spirit\") {\n                if (id === 0) {\n                    this._state.fields[0].attackerSide.steelySpirits += 1;\n                }\n                else {\n                    for (let field of this._state.fields.slice(1)) {\n                        field.attackerSide.steelySpirits += 1;\n                    }\n                }\n            // Aroma Veil\n            } else if (ability === \"Aroma Veil\") {\n                if (id === 0) {\n                    this._state.fields[0].attackerSide.isAromaVeil = true;\n                } else {\n                    for (let field of this._state.fields.slice(1)) {\n                        field.attackerSide.isAromaVeil = true;\n                    }\n                }\n            // Power Spot\n            } else if (ability === \"Power Spot\") {\n                if (id === 0) {\n                    this._state.fields[0].attackerSide.powerSpots += 1;\n                } else {\n                    for (let field of this._state.fields.slice(1)) {\n                        field.attackerSide.powerSpots += 1;\n                    }\n                }\n            // Friend Guard\n            } else if (ability === \"Friend Guard\") {\n                if (id !== 0) {\n                    for (let fid=1; fid<5; fid++) {\n                        if (id !== fid) {\n                            this._state.fields[fid].attackerSide.friendGuards += 1;\n                        }\n                    }\n                    this._state.fields[0].defenderSide.friendGuards += 1; // this shouldn't ever be used\n                }\n            // Protosynthesis and Quark Drive\n            } else if (ability === \"Protosynthesis\" || ability === \"Quark Drive\") {\n                if (pokemon.item === \"Booster Energy\") {\n                    console.log(\"Here in RaidBattle\")\n                    pokemon.abilityOn = true;\n                    const qpStat = getQPBoostedStat (pokemon) as StatIDExceptHP;\n                    pokemon.boostedStat = qpStat;\n                    pokemon.item = undefined;\n                }\n            // Intimidate\n            } else if (ability === \"Intimidate\") {\n                if (id === 0) {\n                    for (let pokemon of this._state.raiders.slice(1)) {\n                        if ([\"Oblivious\", \"Own Tempo\", \"Inner Focus\", \"Scrappy\"].includes(pokemon.ability || \"\")) {\n                            pokemon.boosts.atk = Math.max(-6, pokemon.boosts.atk - 1);\n                        }\n                    }\n                } else {\n                    if ([\"Oblivious\", \"Own Tempo\", \"Inner Focus\", \"Scrappy\"].includes(pokemon.ability || \"\")) {\n                        pokemon.boosts.atk = Math.max(-6, pokemon.boosts.atk - 1);\n                    }                }\n            // Intrepid Sword\n            } else if (ability === \"Intrepid Sword\") {\n                pokemon.boosts.atk += 1;\n            // Dauntless Shield\n            } else if (ability === \"Dauntless Shield\") {\n                pokemon.boosts.def += 1;\n            } else {\n                // \n            }\n        \n        }\n    }\n\n\n}","import { Pokemon, Field, StatID } from \"../calc\";\nimport { MoveName, TypeName } from \"../calc/data/interface\";\nimport {toID, extend, assignWithout} from '../calc/util';\n\n\nexport type MoveCategory =   \"net-good-stats\" |         // stat changes (e.g. Screech, Swords Dance)\n                             \"whole-field-effect\" |     // weather, terrain, gravity, etc.\n                             \"damage+ailment\" |         // (e.g. Fire Blast, Blizzard)\n                             \"damage\" |                 // (e.g. Tackle)\n                             \"unique\" |                 // lots of things that don't neatly fit into other categories\n                             \"damage+lower\" |           // damage + stat changes to target (e.g. Play Rough)\n                             \"ailment\" |                // status condition (e.g. Thunder Wave) \n                             \"damage+raise\" |           // damage + stat changes to user (e.g. Close Combat)\n                             \"heal\" |                   // restore HP (e.g. Recover, Heal Pulse)\n                             \"ohko\" |                   // not going to implement for Tera Raids\n                             \"field-effect\" |           // half-field effects (e.g. Reflect, Tailwind)\n                             \"damage+heal\" |            // damage + restore HP (e.g. Drain Punch)\n                             \"swagger\" |                // ailment and stat change for target (e.g. Swagger, Flatter)\n                             \"force-switch\";            // not going to implement for Tera Raids\n\nexport type MoveTarget = \"all-opponents\" |              // Target\n                         \"entire-field\" |               \n                         \"selected-pokemon\" |           // Target\n                         \"user\" |                       // Self\n                         \"random-opponent\" |            // Target\n                         \"all-other-pokemon\" |          // Target (Allies aren't affected in raids)\n                         \"all-pokemon\" |                \n                         \"selected-pokemon-me-first\" |  \n                         \"all-allies\" |                 \n                         \"users-field\" |    \n                         \"specific-move\" |\n                         \"opponents-field\" |\n                         \"user-and-allies\" |            // Some healing moves, Heal Cheer\n                         \"ally\" |\n                         \"user-or-ally\" |\n                         \"fainting-pokemon\";\n\nexport type AilmentName =   \"confusion\" |               // many of these are not implemented by smogon/calcs\n                            \"torment\" |                 \n                            \"poison\" |\n                            \"freeze\" |\n                            \"burn\" |\n                            \"paralysis\" |\n                            \"sleep\" |\n                            \"unknown\" |\n                            \"heal-block\" |\n                            \"trap\" |\n                            \"nightmare\" |\n                            \"disable\" |\n                            \"silence\" |\n                            \"yawn\" |\n                            \"leech-seed\" |\n                            \"no-type-immunity\" |\n                            \"perish-song\" |\n                            \"ingrain\" |\n                            \"tar-shot\" |\n                            \"embargo\" |\n                            \"infatuation\" |\n                            \"toxic\" |\n                            \"encore\" |\n                            \"taunt\";\n\nexport type MoveData = {\n    name:           MoveName\n    category?:      MoveCategory,\n    target?:        MoveTarget,\n    type?:          TypeName,\n    power?:         number,\n    accuracy?:      number,\n    priority?:      number,\n    drain?:         number,\n    healing?:       number,\n    selfDamage?:    number,\n    ailment?:       AilmentName,\n    statChanges?:   {stat: StatID, change: number}[],\n    flinchChance?:  number,\n    statChance?:    number,\n    ailmentChance?: number,\n    minHits?:       number,\n    maxHits?:       number,\n}\n\nexport class Raider extends Pokemon {\n    id: number;\n    role: string;\n    extraMoves?: MoveName[];// for special boss actions\n    isEndure?: boolean;     // store that a Pokemon can't faint until its next move\n    lastMove?: MoveData;    // stored for Instruct and Copycat\n    lastTarget?: number;    // stored for Instruct and Copycat\n\n    constructor(id: number, role: string, pokemon: Pokemon, extraMoves: MoveName[] = [], isEndure: boolean = false, lastMove: MoveData | undefined = undefined, lastTarget: number | undefined = undefined) {\n        super(pokemon.gen, pokemon.name, {...pokemon})\n        this.id = id;\n        this.role = role;\n        this.extraMoves = extraMoves;\n        this.isEndure = isEndure;\n        this.lastMove = lastMove;\n        this.lastTarget = lastTarget;\n    }\n\n    clone() {\n        return new Raider(\n            this.id, \n            this.role, \n            new Pokemon(this.gen, this.name, {\n                level: this.level,\n                bossMultiplier: this.bossMultiplier,\n                ability: this.ability,\n                abilityOn: this.abilityOn,\n                isDynamaxed: this.isDynamaxed,\n                dynamaxLevel: this.dynamaxLevel,\n                isSaltCure: this.isSaltCure,\n                alliesFainted: this.alliesFainted,\n                boostedStat: this.boostedStat,\n                item: this.item,\n                gender: this.gender,\n                nature: this.nature,\n                ivs: extend(true, {}, this.ivs),\n                evs: extend(true, {}, this.evs),\n                boosts: extend(true, {}, this.boosts),\n                originalCurHP: this.originalCurHP,\n                status: this.status,\n                teraType: this.teraType,\n                toxicCounter: this.toxicCounter,\n                moves: this.moves.slice(),\n                overrides: this.species,\n            }),\n            this.extraMoves,\n            this.isEndure,\n            this.lastMove,\n            this.lastTarget\n        )\n      }\n}\n\nexport class RaidState {\n    raiders: Raider[]; // raiders[0] is the boss, while raiders 1-5 are the players\n    fields: Field[];   // each pokemon gets its own field to deal with things like Friend Guard and Protosynthesis\n\n    constructor(raiders: Raider[], fields: Field[]) {\n        this.raiders = raiders;\n        this.fields = fields;\n    }\n\n    clone() {\n        return new RaidState(\n            this.raiders.map(raider => raider.clone()), \n            this.fields.map(field => field.clone()));\n    }\n}\n\nexport type RaidBattleInfo = {\n    startingState: RaidState;\n    turns: RaidTurnInfo[];\n    groups: number[][];\n}\n\nexport type RaidBattleResults = {\n    endState: RaidState;\n    turnResults: RaidTurnResult[]; \n}\n\nexport type RaidMoveOptions = {\n    crit?: boolean;\n    secondaryEffects?: boolean;\n    hits?: number;\n    roll?: \"max\" | \"min\" | \"avg\"\n}\n\nexport type RaidMoveInfo = {\n    userID: number;\n    targetID: number;\n    moveData: MoveData;\n    options?: RaidMoveOptions;\n}\n\nexport type RaidTurnInfo ={\n    id: number;\n    group?: number;\n    moveInfo: RaidMoveInfo;\n    bossMoveInfo: RaidMoveInfo;\n}\n\nexport type RaidMoveResult= {\n    state: RaidState;\n    userID: number;\n    targetID: number;\n    damage: number[];\n    drain: number[];\n    healing: number[];\n    eot: ({damage: number, texts: string[]} | undefined)[];\n    desc: string[];\n    flags: string[][];\n}\n\nexport type RaidTurnResult = {\n    state: RaidState;\n    results: [RaidMoveResult, RaidMoveResult];\n    raiderMovesFirst: boolean;\n}\n\nexport type BuildInfo = {\n    pokemon: Raider[],\n    turns: RaidTurnInfo[],\n    groups: number[][],\n}","import { RaidBattle } from \"../raidcalc/RaidBattle\";\nimport { RaidBattleInfo, Raider } from \"../raidcalc/interface\";\nimport { RaidState } from \"../raidcalc/interface\";\nimport { Field, Pokemon, Generations } from \"../calc\";\n\ndeclare var self: DedicatedWorkerGlobalScope;\nexport {};\n\nconst gen = Generations.get(9);\n\nself.onmessage = (event: MessageEvent<{info: RaidBattleInfo}>) => {\n    const raidersMessage = event.data.info.startingState.raiders;\n    const raiders = raidersMessage.map((r) => new Raider(r.id, r.role, new Pokemon(gen, r.name, {\n        level: r.level,\n        bossMultiplier: r.bossMultiplier,\n        ability: r.ability,\n        nature: r.nature,\n        evs: r.evs,\n        ivs: r.ivs,\n        item: r.item,\n        teraType: r.teraType,\n        moves: r.moves,\n    }), r.extraMoves))\n\n    const fieldsMessage = event.data.info.startingState.fields;\n    const fields = fieldsMessage.map((f) => new Field({...f}));\n\n    const state = new RaidState(raiders, fields);\n    const info: RaidBattleInfo = {\n        startingState: state,\n        turns: event.data.info.turns,\n    }\n\n    const battle = new RaidBattle(info);\n    const result = battle.result();\n    self.postMessage(result);    \n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [64], function() { return __webpack_require__(8901); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"67e0125d\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/tera-raid-builder/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t901: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunktera_raid_builder\"] = self[\"webpackChunktera_raid_builder\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(64).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["toID","text","toLowerCase","replace","error","err","msg","Error","console","log","assignWithout","a","b","exclude","key","Object","prototype","hasOwnProperty","call","has","class2Type","coreToString","toString","coreHasOwn","getType","obj","String","isPlainObject","nodeType","window","isWindow","constructor","e","extend","options","name","src","copy","copyIsArray","clone","target","arguments","length","undefined","i","deep","this","Array","isArray","HP_TYPES","HP","Bug","ivs","atk","def","spd","dvs","Dark","Dragon","Electric","spa","Fighting","spe","Fire","Flying","hp","Ghost","Grass","Ground","Ice","Poison","Psychic","Rock","Steel","Water","Stats","_class","_classCallCheck","_createClass","value","stat","concat","IVToDV","spc","iv","Math","floor","dv","DVToIV","gen","base","ev","level","nature","num","calcStatRBY","calcStatADV","natures","mods","nat","get","plus","minus","n","calcStatRBYFromDV","hpType","DVsToIVs","tr","bits","pow","atkDV","defDV","speDV","spcDV","type","power","hpTypeX","hpPowerX","s","EV_ITEMS","isGrounded","pokemon","field","isGravity","hasItem","hasType","hasAbility","getModifiedStat","mod","min","max","modernGenBoostTable","OF16","computeFinalStats","attacker","defender","sides","attackerSide","defenderSide","_len","stats","_key","_i","_sides","_step","_sides$_i","_slicedToArray","side","_iterator","_createForOfIteratorHelper","done","getFinalSpeed","rawStats","boosts","f","weather","terrain","speed","speedMods","isTailwind","push","abilityOn","includes","status","isQPActive","getQPBoostedStat","apply","named","OF32","pokeRound","chainMods","hasStatus","getMoveEffectiveness","move","isGhostRevealed","isRingTarget","types","effectiveness","checkAirLock","checkForecast","checkItem","magicRoomActive","item","checkWonderRoom","wonderRoomActive","_ref","checkIntimidate","source","blocked","checkDownload","_ref2","checkIntrepidSword","checkDauntlessShield","checkInfiltrator","affectedSide","isReflect","isLightScreen","isAuroraVeil","checkSeedBoost","terrainSeed","substring","indexOf","hasTerrain","checkMultihitBoost","desc","usedWhiteHerb","attackerItem","defenderAbility","ability","attackerAbility","defenderItem","simple","dropsStats","category","lowerBound","upperBound","_step2","M","_iterator2","getBaseDamage","basePower","attack","defense","boostedStat","bestStat","_i2","_arr","getFinalDamage","baseAmount","isBurned","stabMod","finalMod","protect","damageAmount","getShellSideArmCategory","getWeightFactor","countBoosts","sum","_i3","_STATS","boost","getEVDescriptionText","natureName","evs","displayStat","handleFixedDamageMoves","ceil","ADV","DPP","BW","XY","SM","SS","SV","ABILITIES","_Symbol$iterator","Symbol","iterator","Abilities","id","ABILITIES_BY_ID","_regeneratorRuntime","mark","_id","wrap","_context","prev","next","t0","keys","t1","stop","Ability","kind","_ABILITIES","abilities","map","GSC","GSC_ONLY","filter","MEGA_STONES","Absolite","Abomasite","Aerodactylite","Aggronite","Alakazite","Altarianite","Ampharosite","Audinite","Banettite","Beedrillite","Blastoisinite","Blazikenite","Cameruptite","Crucibellite","Diancite","Galladite","Garchompite","Gardevoirite","Gengarite","Glalitite","Gyaradosite","Heracronite","Houndoominite","Kangaskhanite","Latiasite","Latiosite","Lopunnite","Lucarionite","Manectite","Mawilite","Medichamite","Metagrossite","Pidgeotite","Pinsirite","Sablenite","Salamencite","Sceptilite","Scizorite","Sharpedonite","Slowbronite","Steelixite","Swampertite","Tyranitarite","Venusaurite","sort","BERRIES","t","p","Berry","ITEMS","Items","ITEMS_BY_ID","Item","megaEvolves","isBerry","naturalGift","berry","_ITEMS","items","RBY","bp","Absorb","drain","Acid","Amnesia","Barrage","multihit","Bide","Bind","Bite","Blizzard","Bonemerang","Bubble","Clamp","Constrict","Conversion","Counter","Crabhammer","Dig","Disable","recoil","Earthquake","Explosion","Fissure","Fly","Glare","Growth","Guillotine","Gust","Haze","hasCrashDamage","Metronome","Mimic","Minimize","Mist","Psywave","Rage","Recover","Reflect","Rest","Roar","Slash","Sludge","Stomp","Struggle","Submission","Substitute","Swift","Thrash","Thunder","Transform","Twineedle","Whirlwind","Wrap","Growl","Leer","Surf","Toxic","Flash","Hypnosis","Waterfall","Tackle","Barrier","Flamethrower","Lick","Screech","Sing","Smog","Spore","Supersonic","Thunderbolt","Kinesis","Meditate","Sharpen","Teleport","Agility","Confusion","Cut","Ember","Harden","Headbutt","Peck","Pound","Psybeam","priority","Scratch","Slam","Smokescreen","Splash","Strength","Withdraw","Aeroblast","Attract","Curse","Detect","Encore","Endure","Flail","Foresight","Moonlight","Nightmare","Outrage","Present","Protect","Pursuit","Reversal","Safeguard","Sandstorm","Sketch","Spikes","Spite","Swagger","Synthesis","Thief","Twister","Crunch","Whirlpool","Magnitude","Charm","Snore","Rollout","Frustration","Return","Megahorn","Octazooka","Spark","makesContact","isSound","Assist","Astonish","Block","Bounce","Camouflage","Charge","Covet","Dive","Extrasensory","Hail","Ingrain","Memento","Overheat","self","Revenge","Stockpile","Swallow","Taunt","Tickle","Trick","Uproar","Aromatherapy","Endeavor","Imprison","Recycle","Snatch","Torment","Wish","Facade","Howl","Refresh","Eruption","Flatter","Grudge","Superpower","Yawn","isPunch","struggleRecoil","isBite","Acupressure","Assurance","Avalanche","Chatter","Copycat","Defog","Embargo","Feint","breaksProtect","Fling","Gravity","Payback","Pluck","Roost","Switcheroo","Tailwind","Captivate","Judgment","Punishment","Brine","Discharge","secondaries","Autotomize","Bestow","Entrainment","willCrit","Hex","Hurricane","Incinerate","Round","ignoreDefensive","Scald","Snarl","Soak","Steamroller","Synchronoise","Telekinesis","Quash","Acrobatics","Bulldoze","Coil","Electroweb","overrideOffensivePokemon","Glaciate","Inferno","Psyshock","overrideDefensiveStat","Psystrike","Retaliate","Venoshock","isBullet","isPulse","Powder","Geomancy","Rototiller","Belch","Boomburst","Celebrate","Confide","Electrify","Infestation","Moonblast","Nuzzle","zp","isZ","Catastropika","Instruct","mindBlownRecoil","Spotlight","Accelerock","Leafage","Liquidation","Lunge","Purify","maxPower","overrideOffensiveStat","Decorate","Eternabeam","isMax","Obstruct","Octolock","Overdrive","Poltergeist","Teatime","_LGPE_MOVES","isSlicing","isWind","Comeuppance","Doodle","Pounce","Psyblade","Ruination","Shelter","Snowscape","Trailblaze","MOVES","Moves","MOVES_BY_ID","Move","data","flags","overrideDefensivePokemon","zMove","maxMove","contact","punch","bite","bullet","sound","pulse","slicing","wind","FLAGS","Set","_MOVES","moves","m","Arcanine","bs","at","df","sp","sl","weightkg","Articuno","Chansey","Charizard","Charmander","nfe","Charmeleon","Cloyster","Diglett","Ditto","Dragonair","Dragonite","Dratini","Drowzee","Dugtrio","Eevee","Electrode","Flareon","Gastly","Gengar","Golduck","Grimer","Growlithe","Gyarados","Haunter","Hypno","Jigglypuff","Jolteon","Magikarp","Magnemite","Magneton","Mankey","Meowth","Mew","Mewtwo","Moltres","Muk","Persian","Pikachu","Primeape","Psyduck","Raichu","Rapidash","Raticate","Rattata","Scyther","Shellder","Slowbro","Slowpoke","Tauros","Vaporeon","Venomoth","Venonat","Voltorb","Wigglytuff","Zapdos","sa","sd","gender","Ampharos","Azumarill","Blissey","Cyndaquil","Delibird","Donphan","Dunsparce","Espeon","Flaaffy","Forretress","Girafarig","Heracross","Hoppip","Houndoom","Houndour","Igglybuff","Jumpluff","Larvitar","Mareep","Marill","Misdreavus","Murkrow","Phanpy","Pichu","Pineco","Pupitar","Quagsire","Quilava","Qwilfish","Scizor","Skiploom","Slowking","Sneasel","Stantler","Sudowoodo","Sunflora","Sunkern","Teddiursa","Typhlosion","Tyranitar","Umbreon","Ursaring","Wooper","Altaria","Azurill","Bagon","Banette","Barboach","Breloom","Cacnea","Cacturne","Camerupt","Gardevoir","Glalie","Groudon","Grumpig","Gulpin","Hariyama","Kirlia","Kyogre","Luvdisc","Makuhita","Masquerain","Medicham","Meditite","Numel","Pelipper","Ralts","Rayquaza","Sableye","Salamence","Seviper","Shroomish","Shuppet","Slaking","Slakoth","Snorunt","Spoink","Surskit","Swablu","Swalot","Torkoal","Tropius","Vigoroth","Whiscash","Wingull","Zangoose","Abomasnow","Arceus","otherFormes","Azelf","Bonsly","Bronzong","Bronzor","Buizel","Combee","Cresselia","Croagunk","Dialga","Drifblim","Drifloon","Finneon","Floatzel","Froslass","Gabite","Gallade","Garchomp","Gastrodon","Gible","Giratina","baseSpecies","Glaceon","Happiny","Heatran","Hippopotas","Hippowdon","Honchkrow","Kricketot","Kricketune","Leafeon","Lucario","Lumineon","Luxio","Luxray","Magnezone","Mesprit","Mismagius","Pachirisu","Palkia","Phione","Regigigas","Riolu","Rotom","Shellos","Shinx","Skuntank","Snover","Spiritomb","Staraptor","Staravia","Starly","Stunky","Toxicroak","Uxie","Vespiquen","Weavile","Alomomola","Amoonguss","Axew","Basculin","Beartic","Bisharp","Braviary","Cryogonal","Cubchoo","Deerling","Deino","Dewott","Eelektrik","Eelektross","Foongus","Gothita","Gothitelle","Gothorita","Haxorus","Hydreigon","Krokorok","Krookodile","Landorus","Larvesta","Lilligant","Mandibuzz","Oshawott","Pawniard","Petilil","Rufflet","Samurott","Sandile","Sawsbuck","Thundurus","Tornadus","Tynamo","Volcarona","Zoroark","Zorua","Zweilous","Avalugg","Bergmite","Carbink","Chesnaught","Chespin","Clauncher","Clawitzer","Diancie","Dedenne","Delphox","Dragalge","Fennekin","Flabébé","Fletchinder","Fletchling","Floette","Florges","Froakie","Frogadier","Gogoat","Goodra","Goomy","Greninja","Hawlucha","Hoopa","Klefki","Litleo","Noibat","Noivern","Pyroar","Quilladin","Scatterbug","Skiddo","Skrelp","Sliggoo","Spewpa","Sylveon","Talonflame","Vivillon","Volcanion","Bruxish","Crabominable","Crabrawler","Decidueye","Fomantis","Gumshoos","Komala","Lurantis","Lycanroc","Magearna","Mareanie","Mimikyu","Mudbray","Mudsdale","Oranguru","Palossand","Passimian","Rockruff","Rowlet","Salandit","Salazzle","Sandygast","Toxapex","Tsareena","Yungoos","Appletun","Applin","Arrokuda","Barraskewda","Calyrex","Carkol","Chewtle","Cinderace","Coalossal","Copperajah","Corviknight","Corvisquire","Cufant","Dragapult","Drakloak","Drednaw","Dreepy","Eiscue","Eternatus","Falinks","Flapple","Frosmoth","Glastrier","Greedent","Grimmsnarl","Grookey","Hatenna","Hatterene","Hattrem","Impidimp","Inteleon","Morgrem","Perrserker","Pincurchin","Polteageist","Raboot","Regidrago","Regieleki","Rillaboom","Rolycoly","Rookidee","Sandaconda","Scorbunny","Silicobra","Sinistea","Skwovet","Snom","Sobble","Spectrier","Stonjourner","Thwackey","Toxel","Zacian","Zamazenta","Zarude","SPECIES","Annihilape","Arboliva","Arctibax","Armarouge","Baxcalibur","Bellibolt","Bombirdier","Brambleghast","Bramblin","Capsakid","Ceruledge","Cetitan","Cetoddle","Charcadet","Clodsire","Crocalor","Cyclizar","Dachsbun","Dolliv","Dondozo","Dudunsparce","Espathra","Farigiraf","Fidough","Finizen","Flamigo","Flittle","Floragato","Frigibax","Fuecoco","Garganacl","Gholdengo","Gimmighoul","Glimmet","Glimmora","Grafaiai","Greavard","Houndstone","Kilowattrel","Kingambit","Klawf","Koraidon","Lechonk","Lokix","Mabosstiff","Maschiff","Maushold","Meowscarada","Miraidon","Nacli","Naclstack","Nymble","Oinkologne","Orthworm","Palafin","Pawmi","Pawmo","Pawmot","Quaquaval","Quaxly","Quaxwell","Rabsca","Rellor","Revavroom","Scovillain","Shroodle","Skeledirge","Smoliv","Spidops","Sprigatito","Squawkabilly","Tadbulb","Tandemaus","Tarountula","Tatsugiri","Tinkatink","Tinkaton","Tinkatuff","Toedscool","Toedscruel","Varoom","Veluza","Wattrel","Wiglett","Wugtrio","Enamorus","Kleavor","Overqwil","Sneasler","Ursaluna","Wyrdeer","Species","SPECIES_BY_ID","Specie","baseStats","endsWith","_toConsumableArray","EXCLUDE","_SPECIES","species","specie","Normal","Fairy","TYPE_CHART","Types","TYPES_BY_ID","Type","_TYPE_CHART","typeChart","_objectSpread","NATURES","Adamant","Bashful","Bold","Brave","Calm","Careful","Docile","Gentle","Hardy","Hasty","Impish","Jolly","Lax","Lonely","Mild","Modest","Naive","Naughty","Quiet","Quirky","Rash","Relaxed","Sassy","Serious","Timid","Natures","NATURES_BY_ID","Nature","Generations","Generation","Field","gameType","isMagicRoom","isWonderRoom","isAuraBreak","isFairyAura","isDarkAura","isBeadsOfRuin","isSwordOfRuin","isTabletsOfRuin","isVesselOfRuin","isTrickRoom","isCloudNine","Side","weathers","_len2","terrains","_key2","spikes","steelsurge","vinelash","wildfire","cannonade","volcalith","isSR","isDefCheered","isProtected","isSeeded","isForesight","isHelpingHand","isAtkCheered","isFlowerGift","isFriendGuard","friendGuards","isBattery","isPowerSpot","powerSpots","steelySpirits","isSwitching","isCharged","isMist","isSafeguard","isAromaVeil","SEED_BOOSTED_STAT","getItemBoostType","getBerryResistType","FLING_120","FLING_100","FLING_90","FLING_85","FLING_80","FLING_70","FLING_60","FLING_30","FLING_10","getFlingPower","getNaturalGift","_gen$items$get","gift","getTechnoBlast","display","damage","rawDesc","notation","_damageRange","damageRange","_damageRange2","minDamage","maxDamage","hits","minDisplay","toDisplay","maxHP","maxDisplay","description","_getDescriptionLevels","elide","getDescriptionLevels","_getDescriptionLevels2","attackerLevel","defenderLevel","output","attackBoost","appendIfSet","attackEVs","rivalry","alliesFainted","attackerTera","attackerName","isDefCheeredBodyPress","isFlowerGiftAttacker","moveName","moveBP","moveType","moveTurns","defenseBoost","HPEVs","defenseEVs","isDefenderDynamaxed","defenderTera","defenderName","isFlowerGiftDefender","isCritical","buildDescription","damageText","bossMultiplier","dp","parseFloat","toFixed","getBossMultiplierDesc","koChanceText","getKOChance","getRecovery","_damageRange5","_damageRange6","minD","maxD","recovery","ignoresShellBell","round","percentHealed","range","j","drained","trunc","minHealthRecovered","maxHealthRecovered","getRecoil","_damageRange7","_damageRange8","damageOverflow","curHP","minRecoilDamage","maxRecoilDamage","genMultiplier","gen4CrashDamage","slice","d","combined","combine","isNaN","chance","timesUsed","timesUsedWithMetronome","hazards","texts","rockType","steelType","getHazards","eot","getEndOfTurn","toxicCounter","qualifier","r","val","squashMultihit","hazardsText","serializeText","afterText","computeKOChance","predictTotal","TRAPPING","hasWeather","loseItem","isSaltCure","isWaterOrSteel","teraType","toxicDamage","lastc","c","arr","str","toAppend","Result","fullDesc","_damageRange3","_damageRange4","recoveryText","recoilText","displayMove","calculateRBYGSC","result","fixedDamage","typeEffectivenessPrecedenceRules","firstDefenderType","secondDefenderType","type1Effectiveness","type2Effectiveness","typeEffectiveness","isCrit","isPhysical","attackStat","defenseStat","ignoreMods","lv","lookup","baseDamage","itemBoostType","getSimpleModifiedStat","simpleMod","calculateBWXY","_gen$species$get","isAerilate","isPixilate","isRefrigerate","isNormalize","noTypeChange","normal","resistedKnockOffDamage","turnOrder","switching","w","wr","bpMods","aura","isAttackerAura","isDefenderAura","isUserAuraBreak","isFieldAuraBreak","isFieldFairyAura","isFieldDarkAura","attackSource","atMods","startsWith","hitsPhysical","dfMods","isSpread","applyBurn","finalMods","childDamage","child","simpleMultiplier","hasWhiteHerb","dropCount","_loop","times","newAttack","damageMultiplier","affectedAmount","newFinalDamage","calculateSMSSSV","isDynamaxed","defenderIgnoresAbility","attackerIgnoresAbility","moveIgnoresAbility","holdingUmbrella","getMultiAttack","hasAteAbilityTypeChange","isGalvanize","isLiquidVoice","weightBasedMove","zLostHP","lostHP","_attacker$item","terrainMultiplier","auraBreak","powMod","calculateBPModsSMSSSV","calculateBasePowerSMSSSV","isTabletsOfRuinActive","isVesselOfRuinActive","calculateAtModsSMSSSV","calculateAttackSMSSSV","isSwordOfRuinActive","isBeadsOfRuinActive","calculateDfModsSMSSSV","calculateDefenseSMSSSV","hasOriginalType","calculateFinalModsSMSSSV","MECHANICS","screenMultiplier","rawAttack","rawDefense","filterMod","ebeltMod","tintedMod","berryMod","STATS","SPC","Pokemon","_this$species$abiliti","dynamaxLevel","isQP","originalCurHP","volatileStatus","overrides","withDefault","getHPDV","calcStat","_len3","statuses","_key3","_len4","_key4","_types","_len5","_key5","_types2","_len6","names","_key6","speciesName","current","match","cur","SPECIAL","_data$zMove","_data$self","originalName","useZ","useMax","maxMoveName","pokemonSpecies","isStatus","pokemonAbility","MAXMOVES_TYPING","getMaxMoveName","zMoveName","ZMOVES_TYPING","getZMoveName","typelessDamage","abs","State","calculate","A","_A$Move","_inherits","_super","_createSuper","_A$Pokemon","_super2","getForme","ailmentToStatus","ailment","hasNoStatus","isSuperEffective","dummyMove","RaidMove","moveData","raidState","userID","targetID","raiderID","movesFirst","raidMoveOptions","_raidState","_raiders","_user","_affectedIDs","_fields","_boosts","_damage","_healing","_drain","_eot","_desc","_flags","setOutputRaidState","setAffectedPokemon","setDamage","setDrain","setHealing","setSelfDamage","applyStatChanges","applyAilment","applyFieldChanges","applyDamage","applyItemEffects","applyUniqueMoveEffects","applyAbilityEffects","setEndOfTurnDamage","applyEndOfTurnDamage","setFlags","lastMove","lastTarget","state","healing","raiders","fields","targetType","splice","atkID","defID","moveField","_this$moveData$catego","moveUser","getPokemon","qpStat","getMoveField","maxHits","crit","calcMove","damageResult","roll","drainPercent","healingPercent","healAmount","affectedIDs","statChanges","statChance","secondaryEffects","_step3","_iterator3","_this$moveData$catego2","_step4","boostCoefficient","_iterator4","statChange","change","Number","sign","diff","ailmentChance","_step5","_iterator5","_this$moveData$catego3","selfDamage","selfDamagePercent","_step6","gravity","trickroom","magicroom","wonderroom","_iterator6","reflect","lightscreen","auroraveil","mist","safeguard","tailwind","attackcheer","defensecheer","_sideFieldIDs","ss_target","tempUserAbility","rp_target","trick_target","tempUserItem","fl_target","hasSimple","hasContrary","flingItem","isEndure","pu_target","ps_target","tempUserAtkBoosts","gs_target","tempUserDefBoosts","tempAtk","_step7","_iterator7","_step8","_iterator8","_step9","_iterator9","_step10","_iterator10","_step11","_iterator11","bossBoosts","changed","_step12","_iterator12","atk_eot","def_eot","initialItems","finalItems","initialAbilityOn","finalAbilityOn","initialStatus","finalStatus","boostStr","initialHP","finalHP","hpStr","RaidTurn","info","raiderMoveData","bossMoveData","raiderOptions","bossOptions","_raiderMovesFirst","_raider","_boss","_raiderMove","_bossMove","_result1","_result2","moveInfo","bossMoveInfo","setTurnOrder","rID","tID","rMoveData","bMoveData","results","raiderMovesFirst","raiderPriority","bossPriority","raiderSpeed","bossSpeed","bossField","RaidBattle","startingState","turns","_state","_turnResults","calculateTurnZero","calculateTurns","endState","turnResults","turn","speedOrder","raider","index","pair","_step13","_iterator13","_step14","_iterator14","_step15","_iterator15","_step16","_iterator16","_step17","_iterator17","_step18","_iterator18","_step19","_iterator19","fid","_step20","_iterator20","Raider","_Pokemon","role","_this","extraMoves","RaidState","onmessage","event","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","x","__webpack_exports__","O","deferred","chunkIds","fn","notFulfilled","Infinity","fulfilled","every","definition","o","defineProperty","enumerable","chunkId","Promise","all","reduce","promises","u","miniCssF","prop","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}